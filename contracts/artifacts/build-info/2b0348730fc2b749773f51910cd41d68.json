{
	"id": "2b0348730fc2b749773f51910cd41d68",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.9",
	"solcLongVersion": "0.8.9+commit.e5eed63a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/TimeERC721.sol": {
				"content": "//SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.9;\r\n\r\nimport \"../interfaces/IERC721.sol\";\r\nimport \"../interfaces/IERC721Receiver.sol\";\r\nimport \"../interfaces/IERC721Metadata.sol\";\r\nimport \"../libraries/Address.sol\";\r\nimport \"../libraries/Strings.sol\";\r\nimport \"./ERC165.sol\";\r\nimport \"./Context.sol\";\r\nimport \"./Ownable.sol\";\r\n\r\ncontract TimeERC721 is Context, ERC165, IERC721, IERC721Metadata, Ownable{\r\n    using Address for address;\r\n    using Strings for uint256;\r\n\r\n    // Token name\r\n    string private _name;\r\n\r\n    // Token symbol\r\n    string private _symbol;\r\n\r\n    // Mapping from token ID to owner address\r\n    mapping(uint256 => address) private _owners;\r\n\r\n    // Mapping owner address to token count\r\n    mapping(address => uint256) private _balances;\r\n\r\n    // Mapping from token ID to approved address\r\n    mapping(uint256 => address) private _tokenApprovals;\r\n\r\n    // Mapping from owner to operator approvals\r\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\r\n\r\n    /**\r\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\r\n     */\r\n    constructor(string memory name_, string memory symbol_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view override(ERC165, IERC165) returns (bool) {\r\n        return\r\n            interfaceId == type(IERC721).interfaceId ||\r\n            interfaceId == type(IERC721Metadata).interfaceId ||\r\n            super.supportsInterface(interfaceId);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-balanceOf}.\r\n     */\r\n    function balanceOf(address owner) public view override returns (uint256) {\r\n        require(owner != address(0), \"ERC721: address zero\");\r\n        return _balances[owner];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-ownerOf}.\r\n     */\r\n    function ownerOf(uint256 tokenId) public view  override returns (address) {\r\n        address owner = _ownerOf(tokenId);\r\n        require(owner != address(0), \"ERC721: invalid token ID\");\r\n        return owner;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-name}.\r\n     */\r\n    function name() public view override returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-symbol}.\r\n     */\r\n    function symbol() public view override returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-tokenURI}.\r\n     */\r\n    function tokenURI(uint256 tokenId) public view override returns (string memory) {\r\n        _requireMinted(tokenId);\r\n\r\n        string memory baseURI = _baseURI();\r\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\r\n    }\r\n\r\n    /**\r\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\r\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\r\n     * by default, can be overridden in child contracts.\r\n     */\r\n    function _baseURI() internal view returns (string memory) {\r\n        return \"\";\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-approve}.\r\n     */\r\n    function approve(address to, uint256 tokenId) public override {\r\n        address owner = TimeERC721.ownerOf(tokenId);\r\n        require(to != owner, \"ERC721: approval to current owner\");\r\n\r\n        require(\r\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\r\n            \"ERC721: approve caller is not token owner or approved for all\"\r\n        );\r\n\r\n        _approve(to, tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-getApproved}.\r\n     */\r\n    function getApproved(uint256 tokenId) public view override returns (address) {\r\n        _requireMinted(tokenId);\r\n\r\n        return _tokenApprovals[tokenId];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-setApprovalForAll}.\r\n     */\r\n    function setApprovalForAll(address operator, bool approved) public override {\r\n        _setApprovalForAll(_msgSender(), operator, approved);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-isApprovedForAll}.\r\n     */\r\n    function isApprovedForAll(address owner, address operator) public view override returns (bool) {\r\n        return _operatorApprovals[owner][operator];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-transferFrom}.\r\n     */\r\n    function transferFrom(address from, address to, uint256 tokenId) public override {\r\n        //solhint-disable-next-line max-line-length\r\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\r\n\r\n        _transfer(from, to, tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-safeTransferFrom}.\r\n     */\r\n    function safeTransferFrom(address from, address to, uint256 tokenId) public override {\r\n        safeTransferFrom(from, to, tokenId, \"\");\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-safeTransferFrom}.\r\n     */\r\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public override {\r\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\r\n        _safeTransfer(from, to, tokenId, data);\r\n    }\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\r\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\r\n     *\r\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\r\n     *\r\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\r\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal {\r\n        _transfer(from, to, tokenId);\r\n        require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\r\n     */\r\n    function _ownerOf(uint256 tokenId) internal view returns (address) {\r\n        return _owners[tokenId];\r\n    }\r\n\r\n    /**\r\n     * @dev Returns whether `tokenId` exists.\r\n     *\r\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\r\n     *\r\n     * Tokens start existing when they are minted (`_mint`),\r\n     * and stop existing when they are burned (`_burn`).\r\n     */\r\n    function _exists(uint256 tokenId) internal view returns (bool) {\r\n        return _ownerOf(tokenId) != address(0);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view returns (bool) {\r\n        address owner = TimeERC721.ownerOf(tokenId);\r\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\r\n    }\r\n\r\n    /**\r\n     * @dev Safely mints `tokenId` and transfers it to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must not exist.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _safeMint(address to, uint256 tokenId) internal {\r\n        _safeMint(to, tokenId, \"\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\r\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\r\n     */\r\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal {\r\n        _mint(to, tokenId);\r\n        require(\r\n            _checkOnERC721Received(address(0), to, tokenId, data),\r\n            \"ERC721: transfer to non ERC721Receiver implementer\"\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @dev Mints `tokenId` and transfers it to `to`.\r\n     *\r\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must not exist.\r\n     * - `to` cannot be the zero address.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _mint(address to, uint256 tokenId) internal {\r\n        require(to != address(0), \"ERC721: mint to the zero address\");\r\n        require(!_exists(tokenId), \"ERC721: token already minted\");\r\n\r\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\r\n\r\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\r\n        require(!_exists(tokenId), \"ERC721: token already minted\");\r\n\r\n        unchecked {\r\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\r\n            // Given that tokens are minted one by one, it is impossible in practice that\r\n            // this ever happens. Might change if we allow batch minting.\r\n            // The ERC fails to describe this case.\r\n            _balances[to] += 1;\r\n        }\r\n\r\n        _owners[tokenId] = to;\r\n\r\n        emit Transfer(address(0), to, tokenId);\r\n\r\n        _afterTokenTransfer(address(0), to, tokenId, 1);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `tokenId`.\r\n     * The approval is cleared when the token is burned.\r\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _burn(uint256 tokenId) internal {\r\n        address owner = TimeERC721.ownerOf(tokenId);\r\n\r\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\r\n\r\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\r\n        owner = TimeERC721.ownerOf(tokenId);\r\n\r\n        // Clear approvals\r\n        delete _tokenApprovals[tokenId];\r\n\r\n        unchecked {\r\n            // Cannot overflow, as that would require more tokens to be burned/transferred\r\n            // out than the owner initially received through minting and transferring in.\r\n            _balances[owner] -= 1;\r\n        }\r\n        delete _owners[tokenId];\r\n\r\n        emit Transfer(owner, address(0), tokenId);\r\n\r\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` from `from` to `to`.\r\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must be owned by `from`.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _transfer(address from, address to, uint256 tokenId) internal {\r\n        require(TimeERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\r\n        require(to != address(0), \"ERC721: transfer to the zero address\");\r\n\r\n        _beforeTokenTransfer(from, to, tokenId, 1);\r\n\r\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\r\n        require(TimeERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\r\n\r\n        // Clear approvals from the previous owner\r\n        delete _tokenApprovals[tokenId];\r\n\r\n        unchecked {\r\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\r\n            // `from`'s balance is the number of token held, which is at least one before the current\r\n            // transfer.\r\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\r\n            // all 2**256 token ids to be minted, which in practice is impossible.\r\n            _balances[from] -= 1;\r\n            _balances[to] += 1;\r\n        }\r\n        _owners[tokenId] = to;\r\n\r\n        emit Transfer(from, to, tokenId);\r\n\r\n        _afterTokenTransfer(from, to, tokenId, 1);\r\n    }\r\n\r\n    /**\r\n     * @dev Approve `to` to operate on `tokenId`\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function _approve(address to, uint256 tokenId) internal {\r\n        _tokenApprovals[tokenId] = to;\r\n        emit Approval(TimeERC721.ownerOf(tokenId), to, tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev Approve `operator` to operate on all of `owner` tokens\r\n     *\r\n     * Emits an {ApprovalForAll} event.\r\n     */\r\n    function _setApprovalForAll(address owner, address operator, bool approved) internal {\r\n        require(owner != operator, \"ERC721: approve to caller\");\r\n        _operatorApprovals[owner][operator] = approved;\r\n        emit ApprovalForAll(owner, operator, approved);\r\n    }\r\n\r\n    /**\r\n     * @dev Reverts if the `tokenId` has not been minted yet.\r\n     */\r\n    function _requireMinted(uint256 tokenId) internal view {\r\n        require(_exists(tokenId), \"ERC721: invalid token ID\");\r\n    }\r\n\r\n    /**\r\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\r\n     * The call is not executed if the target address is not a contract.\r\n     *\r\n     * @param from address representing the previous owner of the given token ID\r\n     * @param to target address that will receive the tokens\r\n     * @param tokenId uint256 ID of the token to be transferred\r\n     * @param data bytes optional data to send along with the call\r\n     * @return bool whether the call correctly returned the expected magic value\r\n     */\r\n    function _checkOnERC721Received(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes memory data\r\n    ) private returns (bool) {\r\n        if (to.isContract()) {\r\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\r\n                return retval == IERC721Receiver.onERC721Received.selector;\r\n            } catch (bytes memory reason) {\r\n                if (reason.length == 0) {\r\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\r\n                } else {\r\n                    /// @solidity memory-safe-assembly\r\n                    assembly {\r\n                        revert(add(32, reason), mload(reason))\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\r\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\r\n     * - When `from` is zero, the tokens will be minted for `to`.\r\n     * - When `to` is zero, ``from``'s tokens will be burned.\r\n     * - `from` and `to` are never both zero.\r\n     * - `batchSize` is non-zero.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _beforeTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal {}\r\n\r\n    /**\r\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\r\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\r\n     * - When `from` is zero, the tokens were minted for `to`.\r\n     * - When `to` is zero, ``from``'s tokens were burned.\r\n     * - `from` and `to` are never both zero.\r\n     * - `batchSize` is non-zero.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _afterTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal {}\r\n\r\n    /**\r\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\r\n     *\r\n     * WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\r\n     * being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\r\n     * that `ownerOf(tokenId)` is `a`.\r\n     */\r\n    // solhint-disable-next-line func-name-mixedcase\r\n    function __unsafe_increaseBalance(address account, uint256 amount) internal {\r\n        _balances[account] += amount;\r\n    }\r\n}"
			},
			"contracts/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\r\n\r\npragma solidity ^0.8.9;\r\n\r\nimport \"./Context.sol\";\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor() {\r\n        _transferOwnership(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        _checkOwner();\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if the sender is not the owner.\r\n     */\r\n    function _checkOwner() internal view virtual {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby disabling any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Internal function without access restriction.\r\n     */\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}"
			},
			"contracts/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\r\n\r\npragma solidity ^0.8.9;\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n\r\n    function _contextSuffixLength() internal view virtual returns (uint256) {\r\n        return 0;\r\n    }\r\n}"
			},
			"contracts/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\r\n\r\npragma solidity ^0.8.9;\r\n\r\nimport \"../interfaces/IERC165.sol\";\r\n\r\n/**\r\n * @dev Implementation of the {IERC165} interface.\r\n *\r\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\r\n * for the additional interface id that will be supported. For example:\r\n *\r\n * ```solidity\r\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\r\n * }\r\n * ```\r\n *\r\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\r\n */\r\nabstract contract ERC165 is IERC165 {\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r\n        return interfaceId == type(IERC165).interfaceId;\r\n    }\r\n}"
			},
			"libraries/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\r\n\r\npragma solidity ^0.8.9;\r\n\r\nimport \"./Math.sol\";\r\nimport \"./SignedMath.sol\";\r\n\r\n/**\r\n * @dev String operations.\r\n */\r\nlibrary Strings {\r\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\r\n    uint8 private constant _ADDRESS_LENGTH = 20;\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\r\n     */\r\n    function toString(uint256 value) internal pure returns (string memory) {\r\n        unchecked {\r\n            uint256 length = Math.log10(value) + 1;\r\n            string memory buffer = new string(length);\r\n            uint256 ptr;\r\n            /// @solidity memory-safe-assembly\r\n            assembly {\r\n                ptr := add(buffer, add(32, length))\r\n            }\r\n            while (true) {\r\n                ptr--;\r\n                /// @solidity memory-safe-assembly\r\n                assembly {\r\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\r\n                }\r\n                value /= 10;\r\n                if (value == 0) break;\r\n            }\r\n            return buffer;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\r\n     */\r\n    function toString(int256 value) internal pure returns (string memory) {\r\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\r\n     */\r\n    function toHexString(uint256 value) internal pure returns (string memory) {\r\n        unchecked {\r\n            return toHexString(value, Math.log256(value) + 1);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\r\n     */\r\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\r\n        bytes memory buffer = new bytes(2 * length + 2);\r\n        buffer[0] = \"0\";\r\n        buffer[1] = \"x\";\r\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\r\n            buffer[i] = _SYMBOLS[value & 0xf];\r\n            value >>= 4;\r\n        }\r\n        require(value == 0, \"Strings: hex length insufficient\");\r\n        return string(buffer);\r\n    }\r\n\r\n    /**\r\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\r\n     */\r\n    function toHexString(address addr) internal pure returns (string memory) {\r\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the two strings are equal.\r\n     */\r\n    function equal(string memory a, string memory b) internal pure returns (bool) {\r\n        return keccak256(bytes(a)) == keccak256(bytes(b));\r\n    }\r\n}"
			},
			"libraries/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\r\n\r\npragma solidity >=0.8.0;\r\n\r\n/**\r\n * @dev Collection of functions related to the address type\r\n */\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     *\r\n     * Furthermore, `isContract` will also return true if the target contract within\r\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\r\n     * which only has an effect at the end of a transaction.\r\n     * ====\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\r\n     *\r\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\r\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\r\n     * constructor.\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize/address.code.length, which returns 0\r\n        // for contracts in construction, since the code is only stored at the end\r\n        // of the constructor execution.\r\n\r\n        return account.code.length > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        (bool success, ) = recipient.call{value: amount}(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain `call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\r\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        (bool success, bytes memory returndata) = target.delegatecall(data);\r\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\r\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\r\n     *\r\n     * _Available since v4.8._\r\n     */\r\n    function verifyCallResultFromTarget(\r\n        address target,\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        if (success) {\r\n            if (returndata.length == 0) {\r\n                // only check isContract if the call was successful and the return data is empty\r\n                // otherwise we already know that it was a contract\r\n                require(isContract(target), \"Address: call to non-contract\");\r\n            }\r\n            return returndata;\r\n        } else {\r\n            _revert(returndata, errorMessage);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\r\n     * revert reason or using the provided one.\r\n     *\r\n     * _Available since v4.3._\r\n     */\r\n    function verifyCallResult(\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal pure returns (bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            _revert(returndata, errorMessage);\r\n        }\r\n    }\r\n\r\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\r\n        // Look for revert reason and bubble it up if present\r\n        if (returndata.length > 0) {\r\n            // The easiest way to bubble the revert reason is using memory via assembly\r\n            /// @solidity memory-safe-assembly\r\n            assembly {\r\n                let returndata_size := mload(returndata)\r\n                revert(add(32, returndata), returndata_size)\r\n            }\r\n        } else {\r\n            revert(errorMessage);\r\n        }\r\n    }\r\n}\r\n"
			},
			"interfaces/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\r\n\r\npragma solidity >=0.8.0;\r\n\r\nimport \"../interfaces/IERC721.sol\";\r\n\r\n/**\r\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\r\n * @dev See https://eips.ethereum.org/EIPS/eip-721\r\n */\r\ninterface IERC721Metadata is IERC721 {\r\n    /**\r\n     * @dev Returns the token collection name.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the token collection symbol.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\r\n     */\r\n    function tokenURI(uint256 tokenId) external view returns (string memory);\r\n}"
			},
			"interfaces/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\r\n\r\npragma solidity >=0.8.0;\r\n\r\n/**\r\n * @title ERC721 token receiver interface\r\n * @dev Interface for any contract that wants to support safeTransfers\r\n * from ERC721 asset contracts.\r\n */\r\ninterface IERC721Receiver {\r\n    /**\r\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\r\n     * by `operator` from `from`, this function is called.\r\n     *\r\n     * It must return its Solidity selector to confirm the token transfer.\r\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\r\n     *\r\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\r\n     */\r\n    function onERC721Received(\r\n        address operator,\r\n        address from,\r\n        uint256 tokenId,\r\n        bytes calldata data\r\n    ) external returns (bytes4);\r\n}"
			},
			"interfaces/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\r\n\r\npragma solidity >=0.8.0;\r\n\r\nimport {IERC165} from \"../interfaces/IERC165.sol\";\r\n\r\n/**\r\n * @dev Required interface of an ERC721 compliant contract.\r\n */\r\ninterface IERC721 is IERC165 {\r\n    /**\r\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\r\n     */\r\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\r\n     */\r\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\r\n\r\n    /**\r\n     * @dev Returns the number of tokens in ``owner``'s account.\r\n     */\r\n    function balanceOf(address owner) external view returns (uint256 balance);\r\n\r\n    /**\r\n     * @dev Returns the owner of the `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function ownerOf(uint256 tokenId) external view returns (address owner);\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\r\n     *   a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\r\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\r\n     *   {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\r\n     *   a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` token from `from` to `to`.\r\n     *\r\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\r\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\r\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address from, address to, uint256 tokenId) external;\r\n\r\n    /**\r\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\r\n     * The approval is cleared when the token is transferred.\r\n     *\r\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The caller must own the token or be an approved operator.\r\n     * - `tokenId` must exist.\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address to, uint256 tokenId) external;\r\n\r\n    /**\r\n     * @dev Approve or remove `operator` as an operator for the caller.\r\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The `operator` cannot be the address zero.\r\n     *\r\n     * Emits an {ApprovalForAll} event.\r\n     */\r\n    function setApprovalForAll(address operator, bool approved) external;\r\n\r\n    /**\r\n     * @dev Returns the account approved for `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function getApproved(uint256 tokenId) external view returns (address operator);\r\n\r\n    /**\r\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\r\n     *\r\n     * See {setApprovalForAll}\r\n     */\r\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\r\n}\r\n"
			},
			"libraries/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\r\n\r\npragma solidity ^0.8.9;\r\n\r\n/**\r\n * @dev Standard signed math utilities missing in the Solidity language.\r\n */\r\nlibrary SignedMath {\r\n    /**\r\n     * @dev Returns the largest of two signed numbers.\r\n     */\r\n    function max(int256 a, int256 b) internal pure returns (int256) {\r\n        return a > b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the smallest of two signed numbers.\r\n     */\r\n    function min(int256 a, int256 b) internal pure returns (int256) {\r\n        return a < b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the average of two signed numbers without overflow.\r\n     * The result is rounded towards zero.\r\n     */\r\n    function average(int256 a, int256 b) internal pure returns (int256) {\r\n        // Formula from the book \"Hacker's Delight\"\r\n        int256 x = (a & b) + ((a ^ b) >> 1);\r\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the absolute unsigned value of a signed value.\r\n     */\r\n    function abs(int256 n) internal pure returns (uint256) {\r\n        unchecked {\r\n            // must be unchecked in order to support `n = type(int256).min`\r\n            return uint256(n >= 0 ? n : -n);\r\n        }\r\n    }\r\n}"
			},
			"libraries/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\r\n\r\npragma solidity ^0.8.9;\r\n\r\n/**\r\n * @dev Standard math utilities missing in the Solidity language.\r\n */\r\nlibrary Math {\r\n    enum Rounding {\r\n        Down, // Toward negative infinity\r\n        Up, // Toward infinity\r\n        Zero // Toward zero\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the largest of two numbers.\r\n     */\r\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a > b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the smallest of two numbers.\r\n     */\r\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a < b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the average of two numbers. The result is rounded towards\r\n     * zero.\r\n     */\r\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // (a + b) / 2 can overflow.\r\n        return (a & b) + (a ^ b) / 2;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the ceiling of the division of two numbers.\r\n     *\r\n     * This differs from standard division with `/` in that it rounds up instead\r\n     * of rounding down.\r\n     */\r\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // (a + b - 1) / b can overflow on addition, so we distribute.\r\n        return a == 0 ? 0 : (a - 1) / b + 1;\r\n    }\r\n\r\n    /**\r\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\r\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\r\n     * with further edits by Uniswap Labs also under MIT license.\r\n     */\r\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\r\n        unchecked {\r\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\r\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\r\n            // variables such that product = prod1 * 2^256 + prod0.\r\n            uint256 prod0; // Least significant 256 bits of the product\r\n            uint256 prod1; // Most significant 256 bits of the product\r\n            assembly {\r\n                let mm := mulmod(x, y, not(0))\r\n                prod0 := mul(x, y)\r\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\r\n            }\r\n\r\n            // Handle non-overflow cases, 256 by 256 division.\r\n            if (prod1 == 0) {\r\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\r\n                // The surrounding unchecked block does not change this fact.\r\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\r\n                return prod0 / denominator;\r\n            }\r\n\r\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\r\n            require(denominator > prod1, \"Math: mulDiv overflow\");\r\n\r\n            ///////////////////////////////////////////////\r\n            // 512 by 256 division.\r\n            ///////////////////////////////////////////////\r\n\r\n            // Make division exact by subtracting the remainder from [prod1 prod0].\r\n            uint256 remainder;\r\n            assembly {\r\n                // Compute remainder using mulmod.\r\n                remainder := mulmod(x, y, denominator)\r\n\r\n                // Subtract 256 bit number from 512 bit number.\r\n                prod1 := sub(prod1, gt(remainder, prod0))\r\n                prod0 := sub(prod0, remainder)\r\n            }\r\n\r\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\r\n            // See https://cs.stackexchange.com/q/138556/92363.\r\n\r\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\r\n            uint256 twos = denominator & (~denominator + 1);\r\n            assembly {\r\n                // Divide denominator by twos.\r\n                denominator := div(denominator, twos)\r\n\r\n                // Divide [prod1 prod0] by twos.\r\n                prod0 := div(prod0, twos)\r\n\r\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\r\n                twos := add(div(sub(0, twos), twos), 1)\r\n            }\r\n\r\n            // Shift in bits from prod1 into prod0.\r\n            prod0 |= prod1 * twos;\r\n\r\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\r\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\r\n            // four bits. That is, denominator * inv = 1 mod 2^4.\r\n            uint256 inverse = (3 * denominator) ^ 2;\r\n\r\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\r\n            // in modular arithmetic, doubling the correct bits in each step.\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\r\n\r\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\r\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\r\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\r\n            // is no longer required.\r\n            result = prod0 * inverse;\r\n            return result;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\r\n     */\r\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\r\n        uint256 result = mulDiv(x, y, denominator);\r\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\r\n            result += 1;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\r\n     *\r\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\r\n     */\r\n    function sqrt(uint256 a) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\r\n        //\r\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\r\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\r\n        //\r\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\r\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\r\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\r\n        //\r\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\r\n        uint256 result = 1 << (log2(a) >> 1);\r\n\r\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\r\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\r\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\r\n        // into the expected uint128 result.\r\n        unchecked {\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            return min(result, a / result);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @notice Calculates sqrt(a), following the selected rounding direction.\r\n     */\r\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = sqrt(a);\r\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 2, rounded down, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log2(uint256 value) internal pure returns (uint256) {\r\n        uint256 result = 0;\r\n        unchecked {\r\n            if (value >> 128 > 0) {\r\n                value >>= 128;\r\n                result += 128;\r\n            }\r\n            if (value >> 64 > 0) {\r\n                value >>= 64;\r\n                result += 64;\r\n            }\r\n            if (value >> 32 > 0) {\r\n                value >>= 32;\r\n                result += 32;\r\n            }\r\n            if (value >> 16 > 0) {\r\n                value >>= 16;\r\n                result += 16;\r\n            }\r\n            if (value >> 8 > 0) {\r\n                value >>= 8;\r\n                result += 8;\r\n            }\r\n            if (value >> 4 > 0) {\r\n                value >>= 4;\r\n                result += 4;\r\n            }\r\n            if (value >> 2 > 0) {\r\n                value >>= 2;\r\n                result += 2;\r\n            }\r\n            if (value >> 1 > 0) {\r\n                result += 1;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = log2(value);\r\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 10, rounded down, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log10(uint256 value) internal pure returns (uint256) {\r\n        uint256 result = 0;\r\n        unchecked {\r\n            if (value >= 10 ** 64) {\r\n                value /= 10 ** 64;\r\n                result += 64;\r\n            }\r\n            if (value >= 10 ** 32) {\r\n                value /= 10 ** 32;\r\n                result += 32;\r\n            }\r\n            if (value >= 10 ** 16) {\r\n                value /= 10 ** 16;\r\n                result += 16;\r\n            }\r\n            if (value >= 10 ** 8) {\r\n                value /= 10 ** 8;\r\n                result += 8;\r\n            }\r\n            if (value >= 10 ** 4) {\r\n                value /= 10 ** 4;\r\n                result += 4;\r\n            }\r\n            if (value >= 10 ** 2) {\r\n                value /= 10 ** 2;\r\n                result += 2;\r\n            }\r\n            if (value >= 10 ** 1) {\r\n                result += 1;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = log10(value);\r\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 256, rounded down, of a positive value.\r\n     * Returns 0 if given 0.\r\n     *\r\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\r\n     */\r\n    function log256(uint256 value) internal pure returns (uint256) {\r\n        uint256 result = 0;\r\n        unchecked {\r\n            if (value >> 128 > 0) {\r\n                value >>= 128;\r\n                result += 16;\r\n            }\r\n            if (value >> 64 > 0) {\r\n                value >>= 64;\r\n                result += 8;\r\n            }\r\n            if (value >> 32 > 0) {\r\n                value >>= 32;\r\n                result += 4;\r\n            }\r\n            if (value >> 16 > 0) {\r\n                value >>= 16;\r\n                result += 2;\r\n            }\r\n            if (value >> 8 > 0) {\r\n                result += 1;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = log256(value);\r\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\r\n        }\r\n    }\r\n}"
			},
			"interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\r\n\r\npragma solidity >=0.8.0;\r\n\r\n/**\r\n * @dev Interface of the ERC165 standard, as defined in the\r\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\r\n *\r\n * Implementers can declare support of contract interfaces, which can then be\r\n * queried by others ({ERC165Checker}).\r\n *\r\n * For an implementation, see {ERC165}.\r\n */\r\ninterface IERC165 {\r\n    /**\r\n     * @dev Returns true if this contract implements the interface defined by\r\n     * `interfaceId`. See the corresponding\r\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\r\n     * to learn more about how these ids are created.\r\n     *\r\n     * This function call must use less than 30 000 gas.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Context.sol\":{\"keccak256\":\"0x5c1036c412bf0d922989a2dda6f47dfa3abf62c0a7acfe2c3b6aef9dacd7d1d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16ada029b695de1ebc91f2be39c2e64b7d61dc9d619708511e2d2316d0617f20\",\"dweb:/ipfs/QmX2WeFsgQu4FfBzbhtqCsQGtqjB5R7Enyfg8qDG3dJUP2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC165.sol\":{\"keccak256\":\"0x4615ca265b636fd23ad2948acd2682e54b4084e9cc199e4680b07c9029c3a391\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://31048e93acc6fc656a8fc6e8868df865fa23e42227412fecf26bb8b4d6490f04\",\"dweb:/ipfs/QmbaRsivtFWmdakce6mGoUaBfJyPxTELQ5tP3SoNMbX6KP\"]},\"interfaces/IERC165.sol\":{\"keccak256\":\"0x7d622aae953af8cc0c42b642ea6bfefc4851d9da99ebf0c11c8a99e1b97dc7ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef936c54bf126d59024eaf04e4a15aa3527c52a27e160d5f93185cf2e47db5e8\",\"dweb:/ipfs/QmQS5yZTHRPGXyJbj1RX9JajLueqN3MTQ6SSvAG9iJQ4cV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Context.sol\":{\"keccak256\":\"0x5c1036c412bf0d922989a2dda6f47dfa3abf62c0a7acfe2c3b6aef9dacd7d1d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16ada029b695de1ebc91f2be39c2e64b7d61dc9d619708511e2d2316d0617f20\",\"dweb:/ipfs/QmX2WeFsgQu4FfBzbhtqCsQGtqjB5R7Enyfg8qDG3dJUP2\"]},\"contracts/Ownable.sol\":{\"keccak256\":\"0x31e94a47c0d562565cdb206e71fcd1d6bdaf29e4e6eeef983bf49325c8cf9161\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ead9bd6dc98dee246c8deb676eb81ee609fa72a19553902fc596c2f3348135e4\",\"dweb:/ipfs/QmauDEeAtCVxUpQafLUPoaPePzcAdvrY9yMi4B7FhLfpDF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 61,
								"contract": "contracts/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/TimeERC721.sol": {
				"TimeERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/TimeERC721.sol\":334:16954  contract TimeERC721 is Context, ERC165, IERC721, IERC721Metadata, Ownable{... */\n  mstore(0x40, 0x80)\n    /* \"contracts/TimeERC721.sol\":1133:1249  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/Ownable.sol\":957:989  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"contracts/Ownable.sol\":976:988  _msgSender() */\n  tag_8\n    /* \"contracts/Ownable.sol\":976:986  _msgSender */\n  shl(0x20, tag_9)\n    /* \"contracts/Ownable.sol\":976:988  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"contracts/Ownable.sol\":957:975  _transferOwnership */\n  shl(0x20, tag_10)\n    /* \"contracts/Ownable.sol\":957:989  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"contracts/TimeERC721.sol\":1208:1213  name_ */\n  dup2\n    /* \"contracts/TimeERC721.sol\":1200:1205  _name */\n  0x01\n    /* \"contracts/TimeERC721.sol\":1200:1213  _name = name_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_12\n  swap3\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  pop\n    /* \"contracts/TimeERC721.sol\":1234:1241  symbol_ */\n  dup1\n    /* \"contracts/TimeERC721.sol\":1224:1231  _symbol */\n  0x02\n    /* \"contracts/TimeERC721.sol\":1224:1241  _symbol = symbol_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_14\n  swap3\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_14:\n  pop\n    /* \"contracts/TimeERC721.sol\":1133:1249  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/TimeERC721.sol\":334:16954  contract TimeERC721 is Context, ERC165, IERC721, IERC721Metadata, Ownable{... */\n  jump(tag_15)\n    /* \"contracts/Context.sol\":671:769  function _msgSender() internal view virtual returns (address) {... */\ntag_9:\n    /* \"contracts/Context.sol\":724:731  address */\n  0x00\n    /* \"contracts/Context.sol\":751:761  msg.sender */\n  caller\n    /* \"contracts/Context.sol\":744:761  return msg.sender */\n  swap1\n  pop\n    /* \"contracts/Context.sol\":671:769  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"contracts/Ownable.sol\":2496:2687  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"contracts/Ownable.sol\":2570:2586  address oldOwner */\n  0x00\n    /* \"contracts/Ownable.sol\":2589:2595  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Ownable.sol\":2570:2595  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"contracts/Ownable.sol\":2615:2623  newOwner */\n  dup2\n    /* \"contracts/Ownable.sol\":2606:2612  _owner */\n  0x00\n  dup1\n    /* \"contracts/Ownable.sol\":2606:2623  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Ownable.sol\":2670:2678  newOwner */\n  dup2\n    /* \"contracts/Ownable.sol\":2639:2679  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Ownable.sol\":2660:2668  oldOwner */\n  dup2\n    /* \"contracts/Ownable.sol\":2639:2679  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/Ownable.sol\":2559:2687  {... */\n  pop\n    /* \"contracts/Ownable.sol\":2496:2687  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/TimeERC721.sol\":334:16954  contract TimeERC721 is Context, ERC165, IERC721, IERC721Metadata, Ownable{... */\ntag_13:\n  dup3\n  dup1\n  sload\n  tag_18\n  swap1\n  tag_19\n  jump\t// in\ntag_18:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_21\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_20)\ntag_21:\n  dup3\n  0x1f\n  lt\n  tag_22\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_20)\ntag_22:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_20\n  jumpi\n  swap2\n  dup3\n  add\ntag_23:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_24\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_23)\ntag_24:\ntag_20:\n  pop\n  swap1\n  pop\n  tag_25\n  swap2\n  swap1\n  tag_26\n  jump\t// in\ntag_25:\n  pop\n  swap1\n  jump\t// out\ntag_26:\ntag_27:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_28\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_27)\ntag_28:\n  pop\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_29:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_30:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_31:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_32:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_33:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_34:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_35:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_36:\n    /* \"#utility.yul\":957:984   */\n  tag_52\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_34\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_53\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_54\n  tag_35\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":1030:1118   */\ntag_53:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_37:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_56\n  tag_29\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_57\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_36\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_38:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_59\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_60\n  tag_35\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1434:1490   */\ntag_59:\n    /* \"#utility.yul\":1508:1537   */\n  tag_61\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_34\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1917   */\ntag_39:\n    /* \"#utility.yul\":1678:1679   */\n  0x00\n    /* \"#utility.yul\":1688:1801   */\ntag_63:\n    /* \"#utility.yul\":1702:1708   */\n  dup4\n    /* \"#utility.yul\":1699:1700   */\n  dup2\n    /* \"#utility.yul\":1696:1709   */\n  lt\n    /* \"#utility.yul\":1688:1801   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":1787:1788   */\n  dup1\n    /* \"#utility.yul\":1782:1785   */\n  dup3\n    /* \"#utility.yul\":1778:1789   */\n  add\n    /* \"#utility.yul\":1772:1790   */\n  mload\n    /* \"#utility.yul\":1768:1769   */\n  dup2\n    /* \"#utility.yul\":1763:1766   */\n  dup5\n    /* \"#utility.yul\":1759:1770   */\n  add\n    /* \"#utility.yul\":1752:1791   */\n  mstore\n    /* \"#utility.yul\":1724:1726   */\n  0x20\n    /* \"#utility.yul\":1721:1722   */\n  dup2\n    /* \"#utility.yul\":1717:1727   */\n  add\n    /* \"#utility.yul\":1712:1727   */\n  swap1\n  pop\n    /* \"#utility.yul\":1688:1801   */\n  jump(tag_63)\ntag_65:\n    /* \"#utility.yul\":1819:1825   */\n  dup4\n    /* \"#utility.yul\":1816:1817   */\n  dup2\n    /* \"#utility.yul\":1813:1826   */\n  gt\n    /* \"#utility.yul\":1810:1911   */\n  iszero\n  tag_66\n  jumpi\n    /* \"#utility.yul\":1899:1900   */\n  0x00\n    /* \"#utility.yul\":1890:1896   */\n  dup5\n    /* \"#utility.yul\":1885:1888   */\n  dup5\n    /* \"#utility.yul\":1881:1897   */\n  add\n    /* \"#utility.yul\":1874:1901   */\n  mstore\n    /* \"#utility.yul\":1810:1911   */\ntag_66:\n    /* \"#utility.yul\":1659:1917   */\n  pop\n    /* \"#utility.yul\":1610:1917   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1923:2344   */\ntag_40:\n    /* \"#utility.yul\":2012:2017   */\n  0x00\n    /* \"#utility.yul\":2037:2103   */\n  tag_68\n    /* \"#utility.yul\":2053:2102   */\n  tag_69\n    /* \"#utility.yul\":2095:2101   */\n  dup5\n    /* \"#utility.yul\":2053:2102   */\n  tag_38\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2037:2103   */\n  tag_37\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":2028:2103   */\n  swap1\n  pop\n    /* \"#utility.yul\":2126:2132   */\n  dup3\n    /* \"#utility.yul\":2119:2124   */\n  dup2\n    /* \"#utility.yul\":2112:2133   */\n  mstore\n    /* \"#utility.yul\":2164:2168   */\n  0x20\n    /* \"#utility.yul\":2157:2162   */\n  dup2\n    /* \"#utility.yul\":2153:2169   */\n  add\n    /* \"#utility.yul\":2202:2205   */\n  dup5\n    /* \"#utility.yul\":2193:2199   */\n  dup5\n    /* \"#utility.yul\":2188:2191   */\n  dup5\n    /* \"#utility.yul\":2184:2200   */\n  add\n    /* \"#utility.yul\":2181:2206   */\n  gt\n    /* \"#utility.yul\":2178:2290   */\n  iszero\n  tag_70\n  jumpi\n    /* \"#utility.yul\":2209:2288   */\n  tag_71\n  tag_33\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":2178:2290   */\ntag_70:\n    /* \"#utility.yul\":2299:2338   */\n  tag_72\n    /* \"#utility.yul\":2331:2337   */\n  dup5\n    /* \"#utility.yul\":2326:2329   */\n  dup3\n    /* \"#utility.yul\":2321:2324   */\n  dup6\n    /* \"#utility.yul\":2299:2338   */\n  tag_39\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":2018:2344   */\n  pop\n    /* \"#utility.yul\":1923:2344   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2364:2719   */\ntag_41:\n    /* \"#utility.yul\":2431:2436   */\n  0x00\n    /* \"#utility.yul\":2480:2483   */\n  dup3\n    /* \"#utility.yul\":2473:2477   */\n  0x1f\n    /* \"#utility.yul\":2465:2471   */\n  dup4\n    /* \"#utility.yul\":2461:2478   */\n  add\n    /* \"#utility.yul\":2457:2484   */\n  slt\n    /* \"#utility.yul\":2447:2569   */\n  tag_74\n  jumpi\n    /* \"#utility.yul\":2488:2567   */\n  tag_75\n  tag_32\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":2447:2569   */\ntag_74:\n    /* \"#utility.yul\":2598:2604   */\n  dup2\n    /* \"#utility.yul\":2592:2605   */\n  mload\n    /* \"#utility.yul\":2623:2713   */\n  tag_76\n    /* \"#utility.yul\":2709:2712   */\n  dup5\n    /* \"#utility.yul\":2701:2707   */\n  dup3\n    /* \"#utility.yul\":2694:2698   */\n  0x20\n    /* \"#utility.yul\":2686:2692   */\n  dup7\n    /* \"#utility.yul\":2682:2699   */\n  add\n    /* \"#utility.yul\":2623:2713   */\n  tag_40\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2614:2713   */\n  swap2\n  pop\n    /* \"#utility.yul\":2437:2719   */\n  pop\n    /* \"#utility.yul\":2364:2719   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2725:3578   */\ntag_3:\n    /* \"#utility.yul\":2824:2830   */\n  0x00\n    /* \"#utility.yul\":2832:2838   */\n  dup1\n    /* \"#utility.yul\":2881:2883   */\n  0x40\n    /* \"#utility.yul\":2869:2878   */\n  dup4\n    /* \"#utility.yul\":2860:2867   */\n  dup6\n    /* \"#utility.yul\":2856:2879   */\n  sub\n    /* \"#utility.yul\":2852:2884   */\n  slt\n    /* \"#utility.yul\":2849:2968   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":2887:2966   */\n  tag_79\n  tag_30\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":2849:2968   */\ntag_78:\n    /* \"#utility.yul\":3028:3029   */\n  0x00\n    /* \"#utility.yul\":3017:3026   */\n  dup4\n    /* \"#utility.yul\":3013:3030   */\n  add\n    /* \"#utility.yul\":3007:3031   */\n  mload\n    /* \"#utility.yul\":3058:3076   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3050:3056   */\n  dup2\n    /* \"#utility.yul\":3047:3077   */\n  gt\n    /* \"#utility.yul\":3044:3161   */\n  iszero\n  tag_80\n  jumpi\n    /* \"#utility.yul\":3080:3159   */\n  tag_81\n  tag_31\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":3044:3161   */\ntag_80:\n    /* \"#utility.yul\":3185:3259   */\n  tag_82\n    /* \"#utility.yul\":3251:3258   */\n  dup6\n    /* \"#utility.yul\":3242:3248   */\n  dup3\n    /* \"#utility.yul\":3231:3240   */\n  dup7\n    /* \"#utility.yul\":3227:3249   */\n  add\n    /* \"#utility.yul\":3185:3259   */\n  tag_41\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":3175:3259   */\n  swap3\n  pop\n    /* \"#utility.yul\":2978:3269   */\n  pop\n    /* \"#utility.yul\":3329:3331   */\n  0x20\n    /* \"#utility.yul\":3318:3327   */\n  dup4\n    /* \"#utility.yul\":3314:3332   */\n  add\n    /* \"#utility.yul\":3308:3333   */\n  mload\n    /* \"#utility.yul\":3360:3378   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3352:3358   */\n  dup2\n    /* \"#utility.yul\":3349:3379   */\n  gt\n    /* \"#utility.yul\":3346:3463   */\n  iszero\n  tag_83\n  jumpi\n    /* \"#utility.yul\":3382:3461   */\n  tag_84\n  tag_31\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":3346:3463   */\ntag_83:\n    /* \"#utility.yul\":3487:3561   */\n  tag_85\n    /* \"#utility.yul\":3553:3560   */\n  dup6\n    /* \"#utility.yul\":3544:3550   */\n  dup3\n    /* \"#utility.yul\":3533:3542   */\n  dup7\n    /* \"#utility.yul\":3529:3551   */\n  add\n    /* \"#utility.yul\":3487:3561   */\n  tag_41\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":3477:3561   */\n  swap2\n  pop\n    /* \"#utility.yul\":3279:3571   */\n  pop\n    /* \"#utility.yul\":2725:3578   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3584:3764   */\ntag_42:\n    /* \"#utility.yul\":3632:3709   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3629:3630   */\n  0x00\n    /* \"#utility.yul\":3622:3710   */\n  mstore\n    /* \"#utility.yul\":3729:3733   */\n  0x22\n    /* \"#utility.yul\":3726:3727   */\n  0x04\n    /* \"#utility.yul\":3719:3734   */\n  mstore\n    /* \"#utility.yul\":3753:3757   */\n  0x24\n    /* \"#utility.yul\":3750:3751   */\n  0x00\n    /* \"#utility.yul\":3743:3758   */\n  revert\n    /* \"#utility.yul\":3770:4090   */\ntag_19:\n    /* \"#utility.yul\":3814:3820   */\n  0x00\n    /* \"#utility.yul\":3851:3852   */\n  0x02\n    /* \"#utility.yul\":3845:3849   */\n  dup3\n    /* \"#utility.yul\":3841:3853   */\n  div\n    /* \"#utility.yul\":3831:3853   */\n  swap1\n  pop\n    /* \"#utility.yul\":3898:3899   */\n  0x01\n    /* \"#utility.yul\":3892:3896   */\n  dup3\n    /* \"#utility.yul\":3888:3900   */\n  and\n    /* \"#utility.yul\":3919:3937   */\n  dup1\n    /* \"#utility.yul\":3909:3990   */\n  tag_88\n  jumpi\n    /* \"#utility.yul\":3975:3979   */\n  0x7f\n    /* \"#utility.yul\":3967:3973   */\n  dup3\n    /* \"#utility.yul\":3963:3980   */\n  and\n    /* \"#utility.yul\":3953:3980   */\n  swap2\n  pop\n    /* \"#utility.yul\":3909:3990   */\ntag_88:\n    /* \"#utility.yul\":4037:4039   */\n  0x20\n    /* \"#utility.yul\":4029:4035   */\n  dup3\n    /* \"#utility.yul\":4026:4040   */\n  lt\n    /* \"#utility.yul\":4006:4024   */\n  dup2\n    /* \"#utility.yul\":4003:4041   */\n  eq\n    /* \"#utility.yul\":4000:4084   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":4056:4074   */\n  tag_90\n  tag_42\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":4000:4084   */\ntag_89:\n    /* \"#utility.yul\":3821:4090   */\n  pop\n    /* \"#utility.yul\":3770:4090   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/TimeERC721.sol\":334:16954  contract TimeERC721 is Context, ERC165, IERC721, IERC721Metadata, Ownable{... */\ntag_15:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/TimeERC721.sol\":334:16954  contract TimeERC721 is Context, ERC165, IERC721, IERC721Metadata, Ownable{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xb88d4fde\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x23b872dd\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/TimeERC721.sol\":1321:1618  function supportsInterface(bytes4 interfaceId) public view override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TimeERC721.sol\":2205:2297  function name() public view override returns (string memory) {... */\n    tag_4:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TimeERC721.sol\":3681:3844  function getApproved(uint256 tokenId) public view override returns (address) {... */\n    tag_5:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TimeERC721.sol\":3203:3615  function approve(address to, uint256 tokenId) public override {... */\n    tag_6:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      stop\n        /* \"contracts/TimeERC721.sol\":4357:4650  function transferFrom(address from, address to, uint256 tokenId) public override {... */\n    tag_7:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      stop\n        /* \"contracts/TimeERC721.sol\":4721:4864  function safeTransferFrom(address from, address to, uint256 tokenId) public override {... */\n    tag_8:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_47:\n      tag_48\n      jump\t// in\n    tag_46:\n      stop\n        /* \"contracts/TimeERC721.sol\":1922:2138  function ownerOf(uint256 tokenId) public view  override returns (address) {... */\n    tag_9:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_50:\n      tag_51\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TimeERC721.sol\":1682:1860  function balanceOf(address owner) public view override returns (uint256) {... */\n    tag_10:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ownable.sol\":1877:1980  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      stop\n        /* \"contracts/Ownable.sol\":1236:1323  function owner() public view virtual returns (address) {... */\n    tag_12:\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TimeERC721.sol\":2366:2462  function symbol() public view override returns (string memory) {... */\n    tag_13:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TimeERC721.sol\":3916:4063  function setApprovalForAll(address operator, bool approved) public override {... */\n    tag_14:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      tag_70\n      jump\t// in\n    tag_67:\n      stop\n        /* \"contracts/TimeERC721.sol\":4935:5206  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public override {... */\n    tag_15:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      tag_74\n      jump\t// in\n    tag_71:\n      stop\n        /* \"contracts/TimeERC721.sol\":2533:2806  function tokenURI(uint256 tokenId) public view override returns (string memory) {... */\n    tag_16:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TimeERC721.sol\":4134:4290  function isApprovedForAll(address owner, address operator) public view override returns (bool) {... */\n    tag_17:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      tag_82\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ownable.sol\":2135:2336  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_18:\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_85:\n      tag_86\n      jump\t// in\n    tag_84:\n      stop\n        /* \"contracts/TimeERC721.sol\":1321:1618  function supportsInterface(bytes4 interfaceId) public view override(ERC165, IERC165) returns (bool) {... */\n    tag_25:\n        /* \"contracts/TimeERC721.sol\":1415:1419  bool */\n      0x00\n        /* \"contracts/TimeERC721.sol\":1467:1492  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"contracts/TimeERC721.sol\":1452:1492  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/TimeERC721.sol\":1452:1463  interfaceId */\n      dup3\n        /* \"contracts/TimeERC721.sol\":1452:1492  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/TimeERC721.sol\":1452:1557  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_88\n      jumpi\n      pop\n        /* \"contracts/TimeERC721.sol\":1524:1557  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"contracts/TimeERC721.sol\":1509:1557  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/TimeERC721.sol\":1509:1520  interfaceId */\n      dup3\n        /* \"contracts/TimeERC721.sol\":1509:1557  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/TimeERC721.sol\":1452:1557  interfaceId == type(IERC721).interfaceId ||... */\n    tag_88:\n        /* \"contracts/TimeERC721.sol\":1452:1610  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_89\n      jumpi\n      pop\n        /* \"contracts/TimeERC721.sol\":1574:1610  super.supportsInterface(interfaceId) */\n      tag_90\n        /* \"contracts/TimeERC721.sol\":1598:1609  interfaceId */\n      dup3\n        /* \"contracts/TimeERC721.sol\":1574:1597  super.supportsInterface */\n      tag_91\n        /* \"contracts/TimeERC721.sol\":1574:1610  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_90:\n        /* \"contracts/TimeERC721.sol\":1452:1610  interfaceId == type(IERC721).interfaceId ||... */\n    tag_89:\n        /* \"contracts/TimeERC721.sol\":1432:1610  return... */\n      swap1\n      pop\n        /* \"contracts/TimeERC721.sol\":1321:1618  function supportsInterface(bytes4 interfaceId) public view override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/TimeERC721.sol\":2205:2297  function name() public view override returns (string memory) {... */\n    tag_29:\n        /* \"contracts/TimeERC721.sol\":2251:2264  string memory */\n      0x60\n        /* \"contracts/TimeERC721.sol\":2284:2289  _name */\n      0x01\n        /* \"contracts/TimeERC721.sol\":2277:2289  return _name */\n      dup1\n      sload\n      tag_93\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_95\n      swap1\n      tag_94\n      jump\t// in\n    tag_95:\n      dup1\n      iszero\n      tag_96\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_97\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_96)\n    tag_97:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_98:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_98\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_96:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/TimeERC721.sol\":2205:2297  function name() public view override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/TimeERC721.sol\":3681:3844  function getApproved(uint256 tokenId) public view override returns (address) {... */\n    tag_35:\n        /* \"contracts/TimeERC721.sol\":3749:3756  address */\n      0x00\n        /* \"contracts/TimeERC721.sol\":3769:3792  _requireMinted(tokenId) */\n      tag_100\n        /* \"contracts/TimeERC721.sol\":3784:3791  tokenId */\n      dup3\n        /* \"contracts/TimeERC721.sol\":3769:3783  _requireMinted */\n      tag_101\n        /* \"contracts/TimeERC721.sol\":3769:3792  _requireMinted(tokenId) */\n      jump\t// in\n    tag_100:\n        /* \"contracts/TimeERC721.sol\":3812:3827  _tokenApprovals */\n      0x05\n        /* \"contracts/TimeERC721.sol\":3812:3836  _tokenApprovals[tokenId] */\n      0x00\n        /* \"contracts/TimeERC721.sol\":3828:3835  tokenId */\n      dup4\n        /* \"contracts/TimeERC721.sol\":3812:3836  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TimeERC721.sol\":3805:3836  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"contracts/TimeERC721.sol\":3681:3844  function getApproved(uint256 tokenId) public view override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/TimeERC721.sol\":3203:3615  function approve(address to, uint256 tokenId) public override {... */\n    tag_41:\n        /* \"contracts/TimeERC721.sol\":3276:3289  address owner */\n      0x00\n        /* \"contracts/TimeERC721.sol\":3292:3319  TimeERC721.ownerOf(tokenId) */\n      tag_103\n        /* \"contracts/TimeERC721.sol\":3311:3318  tokenId */\n      dup3\n        /* \"contracts/TimeERC721.sol\":3292:3310  TimeERC721.ownerOf */\n      tag_51\n        /* \"contracts/TimeERC721.sol\":3292:3319  TimeERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_103:\n        /* \"contracts/TimeERC721.sol\":3276:3319  address owner = TimeERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"contracts/TimeERC721.sol\":3344:3349  owner */\n      dup1\n        /* \"contracts/TimeERC721.sol\":3338:3349  to != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TimeERC721.sol\":3338:3340  to */\n      dup4\n        /* \"contracts/TimeERC721.sol\":3338:3349  to != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/TimeERC721.sol\":3330:3387  require(to != owner, \"ERC721: approval to current owner\") */\n      tag_104\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_104:\n        /* \"contracts/TimeERC721.sol\":3438:3443  owner */\n      dup1\n        /* \"contracts/TimeERC721.sol\":3422:3443  _msgSender() == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TimeERC721.sol\":3422:3434  _msgSender() */\n      tag_107\n        /* \"contracts/TimeERC721.sol\":3422:3432  _msgSender */\n      tag_108\n        /* \"contracts/TimeERC721.sol\":3422:3434  _msgSender() */\n      jump\t// in\n    tag_107:\n        /* \"contracts/TimeERC721.sol\":3422:3443  _msgSender() == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/TimeERC721.sol\":3422:3484  _msgSender() == owner || isApprovedForAll(owner, _msgSender()) */\n      dup1\n      tag_109\n      jumpi\n      pop\n        /* \"contracts/TimeERC721.sol\":3447:3484  isApprovedForAll(owner, _msgSender()) */\n      tag_110\n        /* \"contracts/TimeERC721.sol\":3464:3469  owner */\n      dup2\n        /* \"contracts/TimeERC721.sol\":3471:3483  _msgSender() */\n      tag_111\n        /* \"contracts/TimeERC721.sol\":3471:3481  _msgSender */\n      tag_108\n        /* \"contracts/TimeERC721.sol\":3471:3483  _msgSender() */\n      jump\t// in\n    tag_111:\n        /* \"contracts/TimeERC721.sol\":3447:3463  isApprovedForAll */\n      tag_82\n        /* \"contracts/TimeERC721.sol\":3447:3484  isApprovedForAll(owner, _msgSender()) */\n      jump\t// in\n    tag_110:\n        /* \"contracts/TimeERC721.sol\":3422:3484  _msgSender() == owner || isApprovedForAll(owner, _msgSender()) */\n    tag_109:\n        /* \"contracts/TimeERC721.sol\":3400:3573  require(... */\n      tag_112\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_112:\n        /* \"contracts/TimeERC721.sol\":3586:3607  _approve(to, tokenId) */\n      tag_115\n        /* \"contracts/TimeERC721.sol\":3595:3597  to */\n      dup4\n        /* \"contracts/TimeERC721.sol\":3599:3606  tokenId */\n      dup4\n        /* \"contracts/TimeERC721.sol\":3586:3594  _approve */\n      tag_116\n        /* \"contracts/TimeERC721.sol\":3586:3607  _approve(to, tokenId) */\n      jump\t// in\n    tag_115:\n        /* \"contracts/TimeERC721.sol\":3265:3615  {... */\n      pop\n        /* \"contracts/TimeERC721.sol\":3203:3615  function approve(address to, uint256 tokenId) public override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TimeERC721.sol\":4357:4650  function transferFrom(address from, address to, uint256 tokenId) public override {... */\n    tag_45:\n        /* \"contracts/TimeERC721.sol\":4510:4551  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_118\n        /* \"contracts/TimeERC721.sol\":4529:4541  _msgSender() */\n      tag_119\n        /* \"contracts/TimeERC721.sol\":4529:4539  _msgSender */\n      tag_108\n        /* \"contracts/TimeERC721.sol\":4529:4541  _msgSender() */\n      jump\t// in\n    tag_119:\n        /* \"contracts/TimeERC721.sol\":4543:4550  tokenId */\n      dup3\n        /* \"contracts/TimeERC721.sol\":4510:4528  _isApprovedOrOwner */\n      tag_120\n        /* \"contracts/TimeERC721.sol\":4510:4551  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_118:\n        /* \"contracts/TimeERC721.sol\":4502:4601  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\") */\n      tag_121\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_122\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_121:\n        /* \"contracts/TimeERC721.sol\":4614:4642  _transfer(from, to, tokenId) */\n      tag_124\n        /* \"contracts/TimeERC721.sol\":4624:4628  from */\n      dup4\n        /* \"contracts/TimeERC721.sol\":4630:4632  to */\n      dup4\n        /* \"contracts/TimeERC721.sol\":4634:4641  tokenId */\n      dup4\n        /* \"contracts/TimeERC721.sol\":4614:4623  _transfer */\n      tag_125\n        /* \"contracts/TimeERC721.sol\":4614:4642  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_124:\n        /* \"contracts/TimeERC721.sol\":4357:4650  function transferFrom(address from, address to, uint256 tokenId) public override {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TimeERC721.sol\":4721:4864  function safeTransferFrom(address from, address to, uint256 tokenId) public override {... */\n    tag_48:\n        /* \"contracts/TimeERC721.sol\":4817:4856  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_127\n        /* \"contracts/TimeERC721.sol\":4834:4838  from */\n      dup4\n        /* \"contracts/TimeERC721.sol\":4840:4842  to */\n      dup4\n        /* \"contracts/TimeERC721.sol\":4844:4851  tokenId */\n      dup4\n        /* \"contracts/TimeERC721.sol\":4817:4856  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"contracts/TimeERC721.sol\":4817:4833  safeTransferFrom */\n      tag_74\n        /* \"contracts/TimeERC721.sol\":4817:4856  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_127:\n        /* \"contracts/TimeERC721.sol\":4721:4864  function safeTransferFrom(address from, address to, uint256 tokenId) public override {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TimeERC721.sol\":1922:2138  function ownerOf(uint256 tokenId) public view  override returns (address) {... */\n    tag_51:\n        /* \"contracts/TimeERC721.sol\":1987:1994  address */\n      0x00\n        /* \"contracts/TimeERC721.sol\":2007:2020  address owner */\n      dup1\n        /* \"contracts/TimeERC721.sol\":2023:2040  _ownerOf(tokenId) */\n      tag_129\n        /* \"contracts/TimeERC721.sol\":2032:2039  tokenId */\n      dup4\n        /* \"contracts/TimeERC721.sol\":2023:2031  _ownerOf */\n      tag_130\n        /* \"contracts/TimeERC721.sol\":2023:2040  _ownerOf(tokenId) */\n      jump\t// in\n    tag_129:\n        /* \"contracts/TimeERC721.sol\":2007:2040  address owner = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"contracts/TimeERC721.sol\":2076:2077  0 */\n      0x00\n        /* \"contracts/TimeERC721.sol\":2059:2078  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TimeERC721.sol\":2059:2064  owner */\n      dup2\n        /* \"contracts/TimeERC721.sol\":2059:2078  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/TimeERC721.sol\":2051:2107  require(owner != address(0), \"ERC721: invalid token ID\") */\n      tag_131\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_132\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_131:\n        /* \"contracts/TimeERC721.sol\":2125:2130  owner */\n      dup1\n        /* \"contracts/TimeERC721.sol\":2118:2130  return owner */\n      swap2\n      pop\n      pop\n        /* \"contracts/TimeERC721.sol\":1922:2138  function ownerOf(uint256 tokenId) public view  override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/TimeERC721.sol\":1682:1860  function balanceOf(address owner) public view override returns (uint256) {... */\n    tag_56:\n        /* \"contracts/TimeERC721.sol\":1746:1753  uint256 */\n      0x00\n        /* \"contracts/TimeERC721.sol\":1791:1792  0 */\n      dup1\n        /* \"contracts/TimeERC721.sol\":1774:1793  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TimeERC721.sol\":1774:1779  owner */\n      dup3\n        /* \"contracts/TimeERC721.sol\":1774:1793  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/TimeERC721.sol\":1766:1818  require(owner != address(0), \"ERC721: address zero\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_135:\n        /* \"contracts/TimeERC721.sol\":1836:1845  _balances */\n      0x04\n        /* \"contracts/TimeERC721.sol\":1836:1852  _balances[owner] */\n      0x00\n        /* \"contracts/TimeERC721.sol\":1846:1851  owner */\n      dup4\n        /* \"contracts/TimeERC721.sol\":1836:1852  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/TimeERC721.sol\":1829:1852  return _balances[owner] */\n      swap1\n      pop\n        /* \"contracts/TimeERC721.sol\":1682:1860  function balanceOf(address owner) public view override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Ownable.sol\":1877:1980  function renounceOwnership() public virtual onlyOwner {... */\n    tag_60:\n        /* \"contracts/Ownable.sol\":1122:1135  _checkOwner() */\n      tag_139\n        /* \"contracts/Ownable.sol\":1122:1133  _checkOwner */\n      tag_140\n        /* \"contracts/Ownable.sol\":1122:1135  _checkOwner() */\n      jump\t// in\n    tag_139:\n        /* \"contracts/Ownable.sol\":1942:1972  _transferOwnership(address(0)) */\n      tag_142\n        /* \"contracts/Ownable.sol\":1969:1970  0 */\n      0x00\n        /* \"contracts/Ownable.sol\":1942:1960  _transferOwnership */\n      tag_143\n        /* \"contracts/Ownable.sol\":1942:1972  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_142:\n        /* \"contracts/Ownable.sol\":1877:1980  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Ownable.sol\":1236:1323  function owner() public view virtual returns (address) {... */\n    tag_62:\n        /* \"contracts/Ownable.sol\":1282:1289  address */\n      0x00\n        /* \"contracts/Ownable.sol\":1309:1315  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1302:1315  return _owner */\n      swap1\n      pop\n        /* \"contracts/Ownable.sol\":1236:1323  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/TimeERC721.sol\":2366:2462  function symbol() public view override returns (string memory) {... */\n    tag_65:\n        /* \"contracts/TimeERC721.sol\":2414:2427  string memory */\n      0x60\n        /* \"contracts/TimeERC721.sol\":2447:2454  _symbol */\n      0x02\n        /* \"contracts/TimeERC721.sol\":2440:2454  return _symbol */\n      dup1\n      sload\n      tag_146\n      swap1\n      tag_94\n      jump\t// in\n    tag_146:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_147\n      swap1\n      tag_94\n      jump\t// in\n    tag_147:\n      dup1\n      iszero\n      tag_148\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_149\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_148)\n    tag_149:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_150:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_150\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_148:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/TimeERC721.sol\":2366:2462  function symbol() public view override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/TimeERC721.sol\":3916:4063  function setApprovalForAll(address operator, bool approved) public override {... */\n    tag_70:\n        /* \"contracts/TimeERC721.sol\":4003:4055  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_152\n        /* \"contracts/TimeERC721.sol\":4022:4034  _msgSender() */\n      tag_153\n        /* \"contracts/TimeERC721.sol\":4022:4032  _msgSender */\n      tag_108\n        /* \"contracts/TimeERC721.sol\":4022:4034  _msgSender() */\n      jump\t// in\n    tag_153:\n        /* \"contracts/TimeERC721.sol\":4036:4044  operator */\n      dup4\n        /* \"contracts/TimeERC721.sol\":4046:4054  approved */\n      dup4\n        /* \"contracts/TimeERC721.sol\":4003:4021  _setApprovalForAll */\n      tag_154\n        /* \"contracts/TimeERC721.sol\":4003:4055  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_152:\n        /* \"contracts/TimeERC721.sol\":3916:4063  function setApprovalForAll(address operator, bool approved) public override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TimeERC721.sol\":4935:5206  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public override {... */\n    tag_74:\n        /* \"contracts/TimeERC721.sol\":5058:5099  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_156\n        /* \"contracts/TimeERC721.sol\":5077:5089  _msgSender() */\n      tag_157\n        /* \"contracts/TimeERC721.sol\":5077:5087  _msgSender */\n      tag_108\n        /* \"contracts/TimeERC721.sol\":5077:5089  _msgSender() */\n      jump\t// in\n    tag_157:\n        /* \"contracts/TimeERC721.sol\":5091:5098  tokenId */\n      dup4\n        /* \"contracts/TimeERC721.sol\":5058:5076  _isApprovedOrOwner */\n      tag_120\n        /* \"contracts/TimeERC721.sol\":5058:5099  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_156:\n        /* \"contracts/TimeERC721.sol\":5050:5149  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\") */\n      tag_158\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_159\n      swap1\n      tag_123\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_158:\n        /* \"contracts/TimeERC721.sol\":5160:5198  _safeTransfer(from, to, tokenId, data) */\n      tag_160\n        /* \"contracts/TimeERC721.sol\":5174:5178  from */\n      dup5\n        /* \"contracts/TimeERC721.sol\":5180:5182  to */\n      dup5\n        /* \"contracts/TimeERC721.sol\":5184:5191  tokenId */\n      dup5\n        /* \"contracts/TimeERC721.sol\":5193:5197  data */\n      dup5\n        /* \"contracts/TimeERC721.sol\":5160:5173  _safeTransfer */\n      tag_161\n        /* \"contracts/TimeERC721.sol\":5160:5198  _safeTransfer(from, to, tokenId, data) */\n      jump\t// in\n    tag_160:\n        /* \"contracts/TimeERC721.sol\":4935:5206  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public override {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TimeERC721.sol\":2533:2806  function tokenURI(uint256 tokenId) public view override returns (string memory) {... */\n    tag_77:\n        /* \"contracts/TimeERC721.sol\":2598:2611  string memory */\n      0x60\n        /* \"contracts/TimeERC721.sol\":2624:2647  _requireMinted(tokenId) */\n      tag_163\n        /* \"contracts/TimeERC721.sol\":2639:2646  tokenId */\n      dup3\n        /* \"contracts/TimeERC721.sol\":2624:2638  _requireMinted */\n      tag_101\n        /* \"contracts/TimeERC721.sol\":2624:2647  _requireMinted(tokenId) */\n      jump\t// in\n    tag_163:\n        /* \"contracts/TimeERC721.sol\":2660:2681  string memory baseURI */\n      0x00\n        /* \"contracts/TimeERC721.sol\":2684:2694  _baseURI() */\n      tag_164\n        /* \"contracts/TimeERC721.sol\":2684:2692  _baseURI */\n      tag_165\n        /* \"contracts/TimeERC721.sol\":2684:2694  _baseURI() */\n      jump\t// in\n    tag_164:\n        /* \"contracts/TimeERC721.sol\":2660:2694  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"contracts/TimeERC721.sol\":2736:2737  0 */\n      0x00\n        /* \"contracts/TimeERC721.sol\":2718:2725  baseURI */\n      dup2\n        /* \"contracts/TimeERC721.sol\":2712:2733  bytes(baseURI).length */\n      mload\n        /* \"contracts/TimeERC721.sol\":2712:2737  bytes(baseURI).length > 0 */\n      gt\n        /* \"contracts/TimeERC721.sol\":2712:2798  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      tag_166\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_167)\n    tag_166:\n        /* \"contracts/TimeERC721.sol\":2764:2771  baseURI */\n      dup1\n        /* \"contracts/TimeERC721.sol\":2773:2791  tokenId.toString() */\n      tag_168\n        /* \"contracts/TimeERC721.sol\":2773:2780  tokenId */\n      dup5\n        /* \"contracts/TimeERC721.sol\":2773:2789  tokenId.toString */\n      tag_169\n        /* \"contracts/TimeERC721.sol\":2773:2791  tokenId.toString() */\n      jump\t// in\n    tag_168:\n        /* \"contracts/TimeERC721.sol\":2747:2792  abi.encodePacked(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_170\n      swap3\n      swap2\n      swap1\n      tag_171\n      jump\t// in\n    tag_170:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/TimeERC721.sol\":2712:2798  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n    tag_167:\n        /* \"contracts/TimeERC721.sol\":2705:2798  return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      swap2\n      pop\n      pop\n        /* \"contracts/TimeERC721.sol\":2533:2806  function tokenURI(uint256 tokenId) public view override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/TimeERC721.sol\":4134:4290  function isApprovedForAll(address owner, address operator) public view override returns (bool) {... */\n    tag_82:\n        /* \"contracts/TimeERC721.sol\":4223:4227  bool */\n      0x00\n        /* \"contracts/TimeERC721.sol\":4247:4265  _operatorApprovals */\n      0x06\n        /* \"contracts/TimeERC721.sol\":4247:4272  _operatorApprovals[owner] */\n      0x00\n        /* \"contracts/TimeERC721.sol\":4266:4271  owner */\n      dup5\n        /* \"contracts/TimeERC721.sol\":4247:4272  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeERC721.sol\":4247:4282  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"contracts/TimeERC721.sol\":4273:4281  operator */\n      dup4\n        /* \"contracts/TimeERC721.sol\":4247:4282  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/TimeERC721.sol\":4240:4282  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"contracts/TimeERC721.sol\":4134:4290  function isApprovedForAll(address owner, address operator) public view override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Ownable.sol\":2135:2336  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_86:\n        /* \"contracts/Ownable.sol\":1122:1135  _checkOwner() */\n      tag_174\n        /* \"contracts/Ownable.sol\":1122:1133  _checkOwner */\n      tag_140\n        /* \"contracts/Ownable.sol\":1122:1135  _checkOwner() */\n      jump\t// in\n    tag_174:\n        /* \"contracts/Ownable.sol\":2244:2245  0 */\n      0x00\n        /* \"contracts/Ownable.sol\":2224:2246  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":2224:2232  newOwner */\n      dup2\n        /* \"contracts/Ownable.sol\":2224:2246  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/Ownable.sol\":2216:2289  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_176\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_177\n      swap1\n      tag_178\n      jump\t// in\n    tag_177:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_176:\n        /* \"contracts/Ownable.sol\":2300:2328  _transferOwnership(newOwner) */\n      tag_179\n        /* \"contracts/Ownable.sol\":2319:2327  newOwner */\n      dup2\n        /* \"contracts/Ownable.sol\":2300:2318  _transferOwnership */\n      tag_143\n        /* \"contracts/Ownable.sol\":2300:2328  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_179:\n        /* \"contracts/Ownable.sol\":2135:2336  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/ERC165.sol\":866:1023  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_91:\n        /* \"contracts/ERC165.sol\":951:955  bool */\n      0x00\n        /* \"contracts/ERC165.sol\":990:1015  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"contracts/ERC165.sol\":975:1015  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/ERC165.sol\":975:986  interfaceId */\n      dup3\n        /* \"contracts/ERC165.sol\":975:1015  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/ERC165.sol\":968:1015  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"contracts/ERC165.sol\":866:1023  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/TimeERC721.sol\":13132:13259  function _requireMinted(uint256 tokenId) internal view {... */\n    tag_101:\n        /* \"contracts/TimeERC721.sol\":13206:13222  _exists(tokenId) */\n      tag_182\n        /* \"contracts/TimeERC721.sol\":13214:13221  tokenId */\n      dup2\n        /* \"contracts/TimeERC721.sol\":13206:13213  _exists */\n      tag_183\n        /* \"contracts/TimeERC721.sol\":13206:13222  _exists(tokenId) */\n      jump\t// in\n    tag_182:\n        /* \"contracts/TimeERC721.sol\":13198:13251  require(_exists(tokenId), \"ERC721: invalid token ID\") */\n      tag_184\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap1\n      tag_133\n      jump\t// in\n    tag_185:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_184:\n        /* \"contracts/TimeERC721.sol\":13132:13259  function _requireMinted(uint256 tokenId) internal view {... */\n      pop\n      jump\t// out\n        /* \"contracts/Context.sol\":671:769  function _msgSender() internal view virtual returns (address) {... */\n    tag_108:\n        /* \"contracts/Context.sol\":724:731  address */\n      0x00\n        /* \"contracts/Context.sol\":751:761  msg.sender */\n      caller\n        /* \"contracts/Context.sol\":744:761  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/Context.sol\":671:769  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/TimeERC721.sol\":12457:12627  function _approve(address to, uint256 tokenId) internal {... */\n    tag_116:\n        /* \"contracts/TimeERC721.sol\":12551:12553  to */\n      dup2\n        /* \"contracts/TimeERC721.sol\":12524:12539  _tokenApprovals */\n      0x05\n        /* \"contracts/TimeERC721.sol\":12524:12548  _tokenApprovals[tokenId] */\n      0x00\n        /* \"contracts/TimeERC721.sol\":12540:12547  tokenId */\n      dup4\n        /* \"contracts/TimeERC721.sol\":12524:12548  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/TimeERC721.sol\":12524:12553  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/TimeERC721.sol\":12611:12618  tokenId */\n      dup1\n        /* \"contracts/TimeERC721.sol\":12607:12609  to */\n      dup3\n        /* \"contracts/TimeERC721.sol\":12569:12619  Approval(TimeERC721.ownerOf(tokenId), to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TimeERC721.sol\":12578:12605  TimeERC721.ownerOf(tokenId) */\n      tag_188\n        /* \"contracts/TimeERC721.sol\":12597:12604  tokenId */\n      dup4\n        /* \"contracts/TimeERC721.sol\":12578:12596  TimeERC721.ownerOf */\n      tag_51\n        /* \"contracts/TimeERC721.sol\":12578:12605  TimeERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_188:\n        /* \"contracts/TimeERC721.sol\":12569:12619  Approval(TimeERC721.ownerOf(tokenId), to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/TimeERC721.sol\":12457:12627  function _approve(address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TimeERC721.sol\":7172:7432  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view returns (bool) {... */\n    tag_120:\n        /* \"contracts/TimeERC721.sol\":7257:7261  bool */\n      0x00\n        /* \"contracts/TimeERC721.sol\":7274:7287  address owner */\n      dup1\n        /* \"contracts/TimeERC721.sol\":7290:7317  TimeERC721.ownerOf(tokenId) */\n      tag_190\n        /* \"contracts/TimeERC721.sol\":7309:7316  tokenId */\n      dup4\n        /* \"contracts/TimeERC721.sol\":7290:7308  TimeERC721.ownerOf */\n      tag_51\n        /* \"contracts/TimeERC721.sol\":7290:7317  TimeERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_190:\n        /* \"contracts/TimeERC721.sol\":7274:7317  address owner = TimeERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"contracts/TimeERC721.sol\":7347:7352  owner */\n      dup1\n        /* \"contracts/TimeERC721.sol\":7336:7352  spender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TimeERC721.sol\":7336:7343  spender */\n      dup5\n        /* \"contracts/TimeERC721.sol\":7336:7352  spender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/TimeERC721.sol\":7336:7388  spender == owner || isApprovedForAll(owner, spender) */\n      dup1\n      tag_191\n      jumpi\n      pop\n        /* \"contracts/TimeERC721.sol\":7356:7388  isApprovedForAll(owner, spender) */\n      tag_192\n        /* \"contracts/TimeERC721.sol\":7373:7378  owner */\n      dup2\n        /* \"contracts/TimeERC721.sol\":7380:7387  spender */\n      dup6\n        /* \"contracts/TimeERC721.sol\":7356:7372  isApprovedForAll */\n      tag_82\n        /* \"contracts/TimeERC721.sol\":7356:7388  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_192:\n        /* \"contracts/TimeERC721.sol\":7336:7388  spender == owner || isApprovedForAll(owner, spender) */\n    tag_191:\n        /* \"contracts/TimeERC721.sol\":7336:7423  spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender */\n      dup1\n      tag_193\n      jumpi\n      pop\n        /* \"contracts/TimeERC721.sol\":7416:7423  spender */\n      dup4\n        /* \"contracts/TimeERC721.sol\":7392:7423  getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TimeERC721.sol\":7392:7412  getApproved(tokenId) */\n      tag_194\n        /* \"contracts/TimeERC721.sol\":7404:7411  tokenId */\n      dup5\n        /* \"contracts/TimeERC721.sol\":7392:7403  getApproved */\n      tag_35\n        /* \"contracts/TimeERC721.sol\":7392:7412  getApproved(tokenId) */\n      jump\t// in\n    tag_194:\n        /* \"contracts/TimeERC721.sol\":7392:7423  getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/TimeERC721.sol\":7336:7423  spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender */\n    tag_193:\n        /* \"contracts/TimeERC721.sol\":7328:7424  return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender) */\n      swap2\n      pop\n      pop\n        /* \"contracts/TimeERC721.sol\":7172:7432  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TimeERC721.sol\":11109:12338  function _transfer(address from, address to, uint256 tokenId) internal {... */\n    tag_125:\n        /* \"contracts/TimeERC721.sol\":11230:11234  from */\n      dup3\n        /* \"contracts/TimeERC721.sol\":11199:11234  TimeERC721.ownerOf(tokenId) == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TimeERC721.sol\":11199:11226  TimeERC721.ownerOf(tokenId) */\n      tag_196\n        /* \"contracts/TimeERC721.sol\":11218:11225  tokenId */\n      dup3\n        /* \"contracts/TimeERC721.sol\":11199:11217  TimeERC721.ownerOf */\n      tag_51\n        /* \"contracts/TimeERC721.sol\":11199:11226  TimeERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_196:\n        /* \"contracts/TimeERC721.sol\":11199:11234  TimeERC721.ownerOf(tokenId) == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/TimeERC721.sol\":11191:11276  require(TimeERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      tag_197\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_198\n      swap1\n      tag_199\n      jump\t// in\n    tag_198:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_197:\n        /* \"contracts/TimeERC721.sol\":11309:11310  0 */\n      0x00\n        /* \"contracts/TimeERC721.sol\":11295:11311  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TimeERC721.sol\":11295:11297  to */\n      dup3\n        /* \"contracts/TimeERC721.sol\":11295:11311  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/TimeERC721.sol\":11287:11352  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      tag_200\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap1\n      tag_202\n      jump\t// in\n    tag_201:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_200:\n        /* \"contracts/TimeERC721.sol\":11365:11407  _beforeTokenTransfer(from, to, tokenId, 1) */\n      tag_203\n        /* \"contracts/TimeERC721.sol\":11386:11390  from */\n      dup4\n        /* \"contracts/TimeERC721.sol\":11392:11394  to */\n      dup4\n        /* \"contracts/TimeERC721.sol\":11396:11403  tokenId */\n      dup4\n        /* \"contracts/TimeERC721.sol\":11405:11406  1 */\n      0x01\n        /* \"contracts/TimeERC721.sol\":11365:11385  _beforeTokenTransfer */\n      tag_204\n        /* \"contracts/TimeERC721.sol\":11365:11407  _beforeTokenTransfer(from, to, tokenId, 1) */\n      jump\t// in\n    tag_203:\n        /* \"contracts/TimeERC721.sol\":11541:11545  from */\n      dup3\n        /* \"contracts/TimeERC721.sol\":11510:11545  TimeERC721.ownerOf(tokenId) == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TimeERC721.sol\":11510:11537  TimeERC721.ownerOf(tokenId) */\n      tag_205\n        /* \"contracts/TimeERC721.sol\":11529:11536  tokenId */\n      dup3\n        /* \"contracts/TimeERC721.sol\":11510:11528  TimeERC721.ownerOf */\n      tag_51\n        /* \"contracts/TimeERC721.sol\":11510:11537  TimeERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_205:\n        /* \"contracts/TimeERC721.sol\":11510:11545  TimeERC721.ownerOf(tokenId) == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/TimeERC721.sol\":11502:11587  require(TimeERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      tag_206\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_207\n      swap1\n      tag_199\n      jump\t// in\n    tag_207:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_206:\n        /* \"contracts/TimeERC721.sol\":11659:11674  _tokenApprovals */\n      0x05\n        /* \"contracts/TimeERC721.sol\":11659:11683  _tokenApprovals[tokenId] */\n      0x00\n        /* \"contracts/TimeERC721.sol\":11675:11682  tokenId */\n      dup3\n        /* \"contracts/TimeERC721.sol\":11659:11683  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/TimeERC721.sol\":11652:11683  delete _tokenApprovals[tokenId] */\n      0x0100\n      exp\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n        /* \"contracts/TimeERC721.sol\":12154:12155  1 */\n      0x01\n        /* \"contracts/TimeERC721.sol\":12135:12144  _balances */\n      0x04\n        /* \"contracts/TimeERC721.sol\":12135:12150  _balances[from] */\n      0x00\n        /* \"contracts/TimeERC721.sol\":12145:12149  from */\n      dup6\n        /* \"contracts/TimeERC721.sol\":12135:12150  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/TimeERC721.sol\":12135:12155  _balances[from] -= 1 */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TimeERC721.sol\":12187:12188  1 */\n      0x01\n        /* \"contracts/TimeERC721.sol\":12170:12179  _balances */\n      0x04\n        /* \"contracts/TimeERC721.sol\":12170:12183  _balances[to] */\n      0x00\n        /* \"contracts/TimeERC721.sol\":12180:12182  to */\n      dup5\n        /* \"contracts/TimeERC721.sol\":12170:12183  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/TimeERC721.sol\":12170:12188  _balances[to] += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TimeERC721.sol\":12229:12231  to */\n      dup2\n        /* \"contracts/TimeERC721.sol\":12210:12217  _owners */\n      0x03\n        /* \"contracts/TimeERC721.sol\":12210:12226  _owners[tokenId] */\n      0x00\n        /* \"contracts/TimeERC721.sol\":12218:12225  tokenId */\n      dup4\n        /* \"contracts/TimeERC721.sol\":12210:12226  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/TimeERC721.sol\":12210:12231  _owners[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/TimeERC721.sol\":12268:12275  tokenId */\n      dup1\n        /* \"contracts/TimeERC721.sol\":12264:12266  to */\n      dup3\n        /* \"contracts/TimeERC721.sol\":12249:12276  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TimeERC721.sol\":12258:12262  from */\n      dup5\n        /* \"contracts/TimeERC721.sol\":12249:12276  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/TimeERC721.sol\":12289:12330  _afterTokenTransfer(from, to, tokenId, 1) */\n      tag_208\n        /* \"contracts/TimeERC721.sol\":12309:12313  from */\n      dup4\n        /* \"contracts/TimeERC721.sol\":12315:12317  to */\n      dup4\n        /* \"contracts/TimeERC721.sol\":12319:12326  tokenId */\n      dup4\n        /* \"contracts/TimeERC721.sol\":12328:12329  1 */\n      0x01\n        /* \"contracts/TimeERC721.sol\":12289:12308  _afterTokenTransfer */\n      tag_209\n        /* \"contracts/TimeERC721.sol\":12289:12330  _afterTokenTransfer(from, to, tokenId, 1) */\n      jump\t// in\n    tag_208:\n        /* \"contracts/TimeERC721.sol\":11109:12338  function _transfer(address from, address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TimeERC721.sol\":6463:6572  function _ownerOf(uint256 tokenId) internal view returns (address) {... */\n    tag_130:\n        /* \"contracts/TimeERC721.sol\":6521:6528  address */\n      0x00\n        /* \"contracts/TimeERC721.sol\":6548:6555  _owners */\n      0x03\n        /* \"contracts/TimeERC721.sol\":6548:6564  _owners[tokenId] */\n      0x00\n        /* \"contracts/TimeERC721.sol\":6556:6563  tokenId */\n      dup4\n        /* \"contracts/TimeERC721.sol\":6548:6564  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TimeERC721.sol\":6541:6564  return _owners[tokenId] */\n      swap1\n      pop\n        /* \"contracts/TimeERC721.sol\":6463:6572  function _ownerOf(uint256 tokenId) internal view returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Ownable.sol\":1401:1533  function _checkOwner() internal view virtual {... */\n    tag_140:\n        /* \"contracts/Ownable.sol\":1476:1488  _msgSender() */\n      tag_212\n        /* \"contracts/Ownable.sol\":1476:1486  _msgSender */\n      tag_108\n        /* \"contracts/Ownable.sol\":1476:1488  _msgSender() */\n      jump\t// in\n    tag_212:\n        /* \"contracts/Ownable.sol\":1465:1488  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1465:1472  owner() */\n      tag_213\n        /* \"contracts/Ownable.sol\":1465:1470  owner */\n      tag_62\n        /* \"contracts/Ownable.sol\":1465:1472  owner() */\n      jump\t// in\n    tag_213:\n        /* \"contracts/Ownable.sol\":1465:1488  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ownable.sol\":1457:1525  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_214\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_215\n      swap1\n      tag_216\n      jump\t// in\n    tag_215:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_214:\n        /* \"contracts/Ownable.sol\":1401:1533  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"contracts/Ownable.sol\":2496:2687  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_143:\n        /* \"contracts/Ownable.sol\":2570:2586  address oldOwner */\n      0x00\n        /* \"contracts/Ownable.sol\":2589:2595  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":2570:2595  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"contracts/Ownable.sol\":2615:2623  newOwner */\n      dup2\n        /* \"contracts/Ownable.sol\":2606:2612  _owner */\n      0x00\n      dup1\n        /* \"contracts/Ownable.sol\":2606:2623  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ownable.sol\":2670:2678  newOwner */\n      dup2\n        /* \"contracts/Ownable.sol\":2639:2679  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":2660:2668  oldOwner */\n      dup2\n        /* \"contracts/Ownable.sol\":2639:2679  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Ownable.sol\":2559:2687  {... */\n      pop\n        /* \"contracts/Ownable.sol\":2496:2687  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/TimeERC721.sol\":12770:13043  function _setApprovalForAll(address owner, address operator, bool approved) internal {... */\n    tag_154:\n        /* \"contracts/TimeERC721.sol\":12883:12891  operator */\n      dup2\n        /* \"contracts/TimeERC721.sol\":12874:12891  owner != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TimeERC721.sol\":12874:12879  owner */\n      dup4\n        /* \"contracts/TimeERC721.sol\":12874:12891  owner != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/TimeERC721.sol\":12866:12921  require(owner != operator, \"ERC721: approve to caller\") */\n      tag_219\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap1\n      tag_221\n      jump\t// in\n    tag_220:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_219:\n        /* \"contracts/TimeERC721.sol\":12970:12978  approved */\n      dup1\n        /* \"contracts/TimeERC721.sol\":12932:12950  _operatorApprovals */\n      0x06\n        /* \"contracts/TimeERC721.sol\":12932:12957  _operatorApprovals[owner] */\n      0x00\n        /* \"contracts/TimeERC721.sol\":12951:12956  owner */\n      dup6\n        /* \"contracts/TimeERC721.sol\":12932:12957  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeERC721.sol\":12932:12967  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"contracts/TimeERC721.sol\":12958:12966  operator */\n      dup5\n        /* \"contracts/TimeERC721.sol\":12932:12967  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/TimeERC721.sol\":12932:12978  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/TimeERC721.sol\":13016:13024  operator */\n      dup2\n        /* \"contracts/TimeERC721.sol\":12994:13035  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TimeERC721.sol\":13009:13014  owner */\n      dup4\n        /* \"contracts/TimeERC721.sol\":12994:13035  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"contracts/TimeERC721.sol\":13026:13034  approved */\n      dup4\n        /* \"contracts/TimeERC721.sol\":12994:13035  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_222\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_222:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/TimeERC721.sol\":12770:13043  function _setApprovalForAll(address owner, address operator, bool approved) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TimeERC721.sol\":6087:6349  function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal {... */\n    tag_161:\n        /* \"contracts/TimeERC721.sol\":6192:6220  _transfer(from, to, tokenId) */\n      tag_224\n        /* \"contracts/TimeERC721.sol\":6202:6206  from */\n      dup5\n        /* \"contracts/TimeERC721.sol\":6208:6210  to */\n      dup5\n        /* \"contracts/TimeERC721.sol\":6212:6219  tokenId */\n      dup5\n        /* \"contracts/TimeERC721.sol\":6192:6201  _transfer */\n      tag_125\n        /* \"contracts/TimeERC721.sol\":6192:6220  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_224:\n        /* \"contracts/TimeERC721.sol\":6239:6286  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_225\n        /* \"contracts/TimeERC721.sol\":6262:6266  from */\n      dup5\n        /* \"contracts/TimeERC721.sol\":6268:6270  to */\n      dup5\n        /* \"contracts/TimeERC721.sol\":6272:6279  tokenId */\n      dup5\n        /* \"contracts/TimeERC721.sol\":6281:6285  data */\n      dup5\n        /* \"contracts/TimeERC721.sol\":6239:6261  _checkOnERC721Received */\n      tag_226\n        /* \"contracts/TimeERC721.sol\":6239:6286  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_225:\n        /* \"contracts/TimeERC721.sol\":6231:6341  require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\") */\n      tag_227\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_228\n      swap1\n      tag_229\n      jump\t// in\n    tag_228:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_227:\n        /* \"contracts/TimeERC721.sol\":6087:6349  function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TimeERC721.sol\":3055:3141  function _baseURI() internal view returns (string memory) {... */\n    tag_165:\n        /* \"contracts/TimeERC721.sol\":3098:3111  string memory */\n      0x60\n        /* \"contracts/TimeERC721.sol\":3124:3133  return \"\" */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"contracts/TimeERC721.sol\":3055:3141  function _baseURI() internal view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"libraries/Strings.sol\":455:1171  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_169:\n        /* \"libraries/Strings.sol\":511:524  string memory */\n      0x60\n        /* \"libraries/Strings.sol\":562:576  uint256 length */\n      0x00\n        /* \"libraries/Strings.sol\":599:600  1 */\n      0x01\n        /* \"libraries/Strings.sol\":579:596  Math.log10(value) */\n      tag_232\n        /* \"libraries/Strings.sol\":590:595  value */\n      dup5\n        /* \"libraries/Strings.sol\":579:589  Math.log10 */\n      tag_233\n        /* \"libraries/Strings.sol\":579:596  Math.log10(value) */\n      jump\t// in\n    tag_232:\n        /* \"libraries/Strings.sol\":579:600  Math.log10(value) + 1 */\n      add\n        /* \"libraries/Strings.sol\":562:600  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"libraries/Strings.sol\":615:635  string memory buffer */\n      0x00\n        /* \"libraries/Strings.sol\":649:655  length */\n      dup2\n        /* \"libraries/Strings.sol\":638:656  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_234\n      jumpi\n      tag_235\n      tag_236\n      jump\t// in\n    tag_235:\n    tag_234:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_237\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_237:\n      pop\n        /* \"libraries/Strings.sol\":615:656  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"libraries/Strings.sol\":671:682  uint256 ptr */\n      0x00\n        /* \"libraries/Strings.sol\":800:806  length */\n      dup3\n        /* \"libraries/Strings.sol\":796:798  32 */\n      0x20\n        /* \"libraries/Strings.sol\":792:807  add(32, length) */\n      add\n        /* \"libraries/Strings.sol\":784:790  buffer */\n      dup3\n        /* \"libraries/Strings.sol\":780:808  add(buffer, add(32, length)) */\n      add\n        /* \"libraries/Strings.sol\":773:808  ptr := add(buffer, add(32, length)) */\n      swap1\n      pop\n        /* \"libraries/Strings.sol\":837:1125  while (true) {... */\n    tag_238:\n        /* \"libraries/Strings.sol\":844:848  true */\n      0x01\n        /* \"libraries/Strings.sol\":837:1125  while (true) {... */\n      iszero\n      tag_239\n      jumpi\n        /* \"libraries/Strings.sol\":869:874  ptr-- */\n      dup1\n      dup1\n      0x01\n      swap1\n      sub\n      swap2\n      pop\n      pop\n        /* \"libraries/Strings.sol\":1011:1019  _SYMBOLS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"libraries/Strings.sol\":1006:1008  10 */\n      0x0a\n        /* \"libraries/Strings.sol\":999:1004  value */\n      dup7\n        /* \"libraries/Strings.sol\":995:1009  mod(value, 10) */\n      mod\n        /* \"libraries/Strings.sol\":990:1020  byte(mod(value, 10), _SYMBOLS) */\n      byte\n        /* \"libraries/Strings.sol\":985:988  ptr */\n      dup2\n        /* \"libraries/Strings.sol\":977:1021  mstore8(ptr, byte(mod(value, 10), _SYMBOLS)) */\n      mstore8\n        /* \"libraries/Strings.sol\":1067:1069  10 */\n      0x0a\n        /* \"libraries/Strings.sol\":1058:1069  value /= 10 */\n      dup6\n      dup2\n      tag_240\n      jumpi\n      tag_241\n      tag_242\n      jump\t// in\n    tag_241:\n    tag_240:\n      div\n      swap5\n      pop\n        /* \"libraries/Strings.sol\":1101:1102  0 */\n      0x00\n        /* \"libraries/Strings.sol\":1092:1097  value */\n      dup6\n        /* \"libraries/Strings.sol\":1092:1102  value == 0 */\n      eq\n        /* \"libraries/Strings.sol\":1088:1109  if (value == 0) break */\n      iszero\n      tag_243\n      jumpi\n        /* \"libraries/Strings.sol\":1104:1109  break */\n      jump(tag_239)\n        /* \"libraries/Strings.sol\":1088:1109  if (value == 0) break */\n    tag_243:\n        /* \"libraries/Strings.sol\":837:1125  while (true) {... */\n      jump(tag_238)\n    tag_239:\n        /* \"libraries/Strings.sol\":1146:1152  buffer */\n      dup2\n        /* \"libraries/Strings.sol\":1139:1152  return buffer */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"libraries/Strings.sol\":455:1171  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/TimeERC721.sol\":6885:7005  function _exists(uint256 tokenId) internal view returns (bool) {... */\n    tag_183:\n        /* \"contracts/TimeERC721.sol\":6942:6946  bool */\n      0x00\n        /* \"contracts/TimeERC721.sol\":6995:6996  0 */\n      dup1\n        /* \"contracts/TimeERC721.sol\":6966:6997  _ownerOf(tokenId) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TimeERC721.sol\":6966:6983  _ownerOf(tokenId) */\n      tag_245\n        /* \"contracts/TimeERC721.sol\":6975:6982  tokenId */\n      dup4\n        /* \"contracts/TimeERC721.sol\":6966:6974  _ownerOf */\n      tag_130\n        /* \"contracts/TimeERC721.sol\":6966:6983  _ownerOf(tokenId) */\n      jump\t// in\n    tag_245:\n        /* \"contracts/TimeERC721.sol\":6966:6997  _ownerOf(tokenId) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/TimeERC721.sol\":6959:6997  return _ownerOf(tokenId) != address(0) */\n      swap1\n      pop\n        /* \"contracts/TimeERC721.sol\":6885:7005  function _exists(uint256 tokenId) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/TimeERC721.sol\":15408:15516  function _beforeTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal {} */\n    tag_204:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TimeERC721.sol\":16238:16345  function _afterTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal {} */\n    tag_209:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TimeERC721.sol\":13823:14676  function _checkOnERC721Received(... */\n    tag_226:\n        /* \"contracts/TimeERC721.sol\":13977:13981  bool */\n      0x00\n        /* \"contracts/TimeERC721.sol\":13998:14013  to.isContract() */\n      tag_249\n        /* \"contracts/TimeERC721.sol\":13998:14000  to */\n      dup5\n        /* \"contracts/TimeERC721.sol\":13998:14011  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_250\n        /* \"contracts/TimeERC721.sol\":13998:14013  to.isContract() */\n      jump\t// in\n    tag_249:\n        /* \"contracts/TimeERC721.sol\":13994:14669  if (to.isContract()) {... */\n      iszero\n      tag_251\n      jumpi\n        /* \"contracts/TimeERC721.sol\":14050:14052  to */\n      dup4\n        /* \"contracts/TimeERC721.sol\":14034:14070  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"contracts/TimeERC721.sol\":14071:14083  _msgSender() */\n      tag_252\n        /* \"contracts/TimeERC721.sol\":14071:14081  _msgSender */\n      tag_108\n        /* \"contracts/TimeERC721.sol\":14071:14083  _msgSender() */\n      jump\t// in\n    tag_252:\n        /* \"contracts/TimeERC721.sol\":14085:14089  from */\n      dup8\n        /* \"contracts/TimeERC721.sol\":14091:14098  tokenId */\n      dup7\n        /* \"contracts/TimeERC721.sol\":14100:14104  data */\n      dup7\n        /* \"contracts/TimeERC721.sol\":14034:14105  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_253\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_254\n      jump\t// in\n    tag_253:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_255\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_255:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_256\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_257\n      swap2\n      swap1\n      tag_258\n      jump\t// in\n    tag_257:\n      0x01\n    tag_256:\n        /* \"contracts/TimeERC721.sol\":14030:14614  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_259\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_264\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_263)\n    tag_264:\n      0x60\n      swap2\n      pop\n    tag_263:\n      pop\n        /* \"contracts/TimeERC721.sol\":14292:14293  0 */\n      0x00\n        /* \"contracts/TimeERC721.sol\":14275:14281  reason */\n      dup2\n        /* \"contracts/TimeERC721.sol\":14275:14288  reason.length */\n      mload\n        /* \"contracts/TimeERC721.sol\":14275:14293  reason.length == 0 */\n      eq\n        /* \"contracts/TimeERC721.sol\":14271:14599  if (reason.length == 0) {... */\n      iszero\n      tag_265\n      jumpi\n        /* \"contracts/TimeERC721.sol\":14318:14378  revert(\"ERC721: transfer to non ERC721Receiver implementer\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_266\n      swap1\n      tag_229\n      jump\t// in\n    tag_266:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/TimeERC721.sol\":14271:14599  if (reason.length == 0) {... */\n    tag_265:\n        /* \"contracts/TimeERC721.sol\":14549:14555  reason */\n      dup1\n        /* \"contracts/TimeERC721.sol\":14543:14556  mload(reason) */\n      mload\n        /* \"contracts/TimeERC721.sol\":14534:14540  reason */\n      dup2\n        /* \"contracts/TimeERC721.sol\":14530:14532  32 */\n      0x20\n        /* \"contracts/TimeERC721.sol\":14526:14541  add(32, reason) */\n      add\n        /* \"contracts/TimeERC721.sol\":14519:14557  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"contracts/TimeERC721.sol\":14030:14614  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_259:\n        /* \"contracts/TimeERC721.sol\":14166:14207  IERC721Receiver.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"contracts/TimeERC721.sol\":14156:14207  retval == IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/TimeERC721.sol\":14156:14162  retval */\n      dup2\n        /* \"contracts/TimeERC721.sol\":14156:14207  retval == IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/TimeERC721.sol\":14149:14207  return retval == IERC721Receiver.onERC721Received.selector */\n      swap2\n      pop\n      pop\n      jump(tag_248)\n        /* \"contracts/TimeERC721.sol\":13994:14669  if (to.isContract()) {... */\n    tag_251:\n        /* \"contracts/TimeERC721.sol\":14653:14657  true */\n      0x01\n        /* \"contracts/TimeERC721.sol\":14646:14657  return true */\n      swap1\n      pop\n        /* \"contracts/TimeERC721.sol\":13823:14676  function _checkOnERC721Received(... */\n    tag_248:\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"libraries/Math.sol\":10390:11338  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_233:\n        /* \"libraries/Math.sol\":10443:10450  uint256 */\n      0x00\n        /* \"libraries/Math.sol\":10463:10477  uint256 result */\n      dup1\n        /* \"libraries/Math.sol\":10480:10481  0 */\n      0x00\n        /* \"libraries/Math.sol\":10463:10481  uint256 result = 0 */\n      swap1\n      pop\n        /* \"libraries/Math.sol\":10530:10538  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"libraries/Math.sol\":10521:10526  value */\n      dup4\n        /* \"libraries/Math.sol\":10521:10538  value >= 10 ** 64 */\n      lt\n        /* \"libraries/Math.sol\":10517:10623  if (value >= 10 ** 64) {... */\n      tag_271\n      jumpi\n        /* \"libraries/Math.sol\":10568:10576  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"libraries/Math.sol\":10559:10576  value /= 10 ** 64 */\n      dup4\n      dup2\n      tag_272\n      jumpi\n      tag_273\n      tag_242\n      jump\t// in\n    tag_273:\n    tag_272:\n      div\n      swap3\n      pop\n        /* \"libraries/Math.sol\":10605:10607  64 */\n      0x40\n        /* \"libraries/Math.sol\":10595:10607  result += 64 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"libraries/Math.sol\":10517:10623  if (value >= 10 ** 64) {... */\n    tag_271:\n        /* \"libraries/Math.sol\":10650:10658  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"libraries/Math.sol\":10641:10646  value */\n      dup4\n        /* \"libraries/Math.sol\":10641:10658  value >= 10 ** 32 */\n      lt\n        /* \"libraries/Math.sol\":10637:10743  if (value >= 10 ** 32) {... */\n      tag_274\n      jumpi\n        /* \"libraries/Math.sol\":10688:10696  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"libraries/Math.sol\":10679:10696  value /= 10 ** 32 */\n      dup4\n      dup2\n      tag_275\n      jumpi\n      tag_276\n      tag_242\n      jump\t// in\n    tag_276:\n    tag_275:\n      div\n      swap3\n      pop\n        /* \"libraries/Math.sol\":10725:10727  32 */\n      0x20\n        /* \"libraries/Math.sol\":10715:10727  result += 32 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"libraries/Math.sol\":10637:10743  if (value >= 10 ** 32) {... */\n    tag_274:\n        /* \"libraries/Math.sol\":10770:10778  10 ** 16 */\n      0x2386f26fc10000\n        /* \"libraries/Math.sol\":10761:10766  value */\n      dup4\n        /* \"libraries/Math.sol\":10761:10778  value >= 10 ** 16 */\n      lt\n        /* \"libraries/Math.sol\":10757:10863  if (value >= 10 ** 16) {... */\n      tag_277\n      jumpi\n        /* \"libraries/Math.sol\":10808:10816  10 ** 16 */\n      0x2386f26fc10000\n        /* \"libraries/Math.sol\":10799:10816  value /= 10 ** 16 */\n      dup4\n      dup2\n      tag_278\n      jumpi\n      tag_279\n      tag_242\n      jump\t// in\n    tag_279:\n    tag_278:\n      div\n      swap3\n      pop\n        /* \"libraries/Math.sol\":10845:10847  16 */\n      0x10\n        /* \"libraries/Math.sol\":10835:10847  result += 16 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"libraries/Math.sol\":10757:10863  if (value >= 10 ** 16) {... */\n    tag_277:\n        /* \"libraries/Math.sol\":10890:10897  10 ** 8 */\n      0x05f5e100\n        /* \"libraries/Math.sol\":10881:10886  value */\n      dup4\n        /* \"libraries/Math.sol\":10881:10897  value >= 10 ** 8 */\n      lt\n        /* \"libraries/Math.sol\":10877:10980  if (value >= 10 ** 8) {... */\n      tag_280\n      jumpi\n        /* \"libraries/Math.sol\":10927:10934  10 ** 8 */\n      0x05f5e100\n        /* \"libraries/Math.sol\":10918:10934  value /= 10 ** 8 */\n      dup4\n      dup2\n      tag_281\n      jumpi\n      tag_282\n      tag_242\n      jump\t// in\n    tag_282:\n    tag_281:\n      div\n      swap3\n      pop\n        /* \"libraries/Math.sol\":10963:10964  8 */\n      0x08\n        /* \"libraries/Math.sol\":10953:10964  result += 8 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"libraries/Math.sol\":10877:10980  if (value >= 10 ** 8) {... */\n    tag_280:\n        /* \"libraries/Math.sol\":11007:11014  10 ** 4 */\n      0x2710\n        /* \"libraries/Math.sol\":10998:11003  value */\n      dup4\n        /* \"libraries/Math.sol\":10998:11014  value >= 10 ** 4 */\n      lt\n        /* \"libraries/Math.sol\":10994:11097  if (value >= 10 ** 4) {... */\n      tag_283\n      jumpi\n        /* \"libraries/Math.sol\":11044:11051  10 ** 4 */\n      0x2710\n        /* \"libraries/Math.sol\":11035:11051  value /= 10 ** 4 */\n      dup4\n      dup2\n      tag_284\n      jumpi\n      tag_285\n      tag_242\n      jump\t// in\n    tag_285:\n    tag_284:\n      div\n      swap3\n      pop\n        /* \"libraries/Math.sol\":11080:11081  4 */\n      0x04\n        /* \"libraries/Math.sol\":11070:11081  result += 4 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"libraries/Math.sol\":10994:11097  if (value >= 10 ** 4) {... */\n    tag_283:\n        /* \"libraries/Math.sol\":11124:11131  10 ** 2 */\n      0x64\n        /* \"libraries/Math.sol\":11115:11120  value */\n      dup4\n        /* \"libraries/Math.sol\":11115:11131  value >= 10 ** 2 */\n      lt\n        /* \"libraries/Math.sol\":11111:11214  if (value >= 10 ** 2) {... */\n      tag_286\n      jumpi\n        /* \"libraries/Math.sol\":11161:11168  10 ** 2 */\n      0x64\n        /* \"libraries/Math.sol\":11152:11168  value /= 10 ** 2 */\n      dup4\n      dup2\n      tag_287\n      jumpi\n      tag_288\n      tag_242\n      jump\t// in\n    tag_288:\n    tag_287:\n      div\n      swap3\n      pop\n        /* \"libraries/Math.sol\":11197:11198  2 */\n      0x02\n        /* \"libraries/Math.sol\":11187:11198  result += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"libraries/Math.sol\":11111:11214  if (value >= 10 ** 2) {... */\n    tag_286:\n        /* \"libraries/Math.sol\":11241:11248  10 ** 1 */\n      0x0a\n        /* \"libraries/Math.sol\":11232:11237  value */\n      dup4\n        /* \"libraries/Math.sol\":11232:11248  value >= 10 ** 1 */\n      lt\n        /* \"libraries/Math.sol\":11228:11296  if (value >= 10 ** 1) {... */\n      tag_289\n      jumpi\n        /* \"libraries/Math.sol\":11279:11280  1 */\n      0x01\n        /* \"libraries/Math.sol\":11269:11280  result += 1 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"libraries/Math.sol\":11228:11296  if (value >= 10 ** 1) {... */\n    tag_289:\n        /* \"libraries/Math.sol\":11324:11330  result */\n      dup1\n        /* \"libraries/Math.sol\":11317:11330  return result */\n      swap2\n      pop\n      pop\n        /* \"libraries/Math.sol\":10390:11338  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"libraries/Address.sol\":1452:1778  function isContract(address account) internal view returns (bool) {... */\n    tag_250:\n        /* \"libraries/Address.sol\":1512:1516  bool */\n      0x00\n        /* \"libraries/Address.sol\":1769:1770  0 */\n      dup1\n        /* \"libraries/Address.sol\":1747:1754  account */\n      dup3\n        /* \"libraries/Address.sol\":1747:1766  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"libraries/Address.sol\":1747:1770  account.code.length > 0 */\n      gt\n        /* \"libraries/Address.sol\":1740:1770  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"libraries/Address.sol\":1452:1778  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_291:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_292:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_293:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_294:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_295:\n        /* \"#utility.yul\":561:584   */\n      tag_358\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_294\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_359\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_359:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_296:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_361\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_295\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_24:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_363\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_364\n      tag_292\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":833:952   */\n    tag_363:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_365\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_296\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_297:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_298:\n        /* \"#utility.yul\":1268:1289   */\n      tag_368\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_297\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_27:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_370\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_298\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_299:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_300:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:2105   */\n    tag_301:\n        /* \"#utility.yul\":1866:1867   */\n      0x00\n        /* \"#utility.yul\":1876:1989   */\n    tag_374:\n        /* \"#utility.yul\":1890:1896   */\n      dup4\n        /* \"#utility.yul\":1887:1888   */\n      dup2\n        /* \"#utility.yul\":1884:1897   */\n      lt\n        /* \"#utility.yul\":1876:1989   */\n      iszero\n      tag_376\n      jumpi\n        /* \"#utility.yul\":1975:1976   */\n      dup1\n        /* \"#utility.yul\":1970:1973   */\n      dup3\n        /* \"#utility.yul\":1966:1977   */\n      add\n        /* \"#utility.yul\":1960:1978   */\n      mload\n        /* \"#utility.yul\":1956:1957   */\n      dup2\n        /* \"#utility.yul\":1951:1954   */\n      dup5\n        /* \"#utility.yul\":1947:1958   */\n      add\n        /* \"#utility.yul\":1940:1979   */\n      mstore\n        /* \"#utility.yul\":1912:1914   */\n      0x20\n        /* \"#utility.yul\":1909:1910   */\n      dup2\n        /* \"#utility.yul\":1905:1915   */\n      add\n        /* \"#utility.yul\":1900:1915   */\n      swap1\n      pop\n        /* \"#utility.yul\":1876:1989   */\n      jump(tag_374)\n    tag_376:\n        /* \"#utility.yul\":2007:2013   */\n      dup4\n        /* \"#utility.yul\":2004:2005   */\n      dup2\n        /* \"#utility.yul\":2001:2014   */\n      gt\n        /* \"#utility.yul\":1998:2099   */\n      iszero\n      tag_377\n      jumpi\n        /* \"#utility.yul\":2087:2088   */\n      0x00\n        /* \"#utility.yul\":2078:2084   */\n      dup5\n        /* \"#utility.yul\":2073:2076   */\n      dup5\n        /* \"#utility.yul\":2069:2085   */\n      add\n        /* \"#utility.yul\":2062:2089   */\n      mstore\n        /* \"#utility.yul\":1998:2099   */\n    tag_377:\n        /* \"#utility.yul\":1847:2105   */\n      pop\n        /* \"#utility.yul\":1798:2105   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2111:2213   */\n    tag_302:\n        /* \"#utility.yul\":2152:2158   */\n      0x00\n        /* \"#utility.yul\":2203:2205   */\n      0x1f\n        /* \"#utility.yul\":2199:2206   */\n      not\n        /* \"#utility.yul\":2194:2196   */\n      0x1f\n        /* \"#utility.yul\":2187:2192   */\n      dup4\n        /* \"#utility.yul\":2183:2197   */\n      add\n        /* \"#utility.yul\":2179:2207   */\n      and\n        /* \"#utility.yul\":2169:2207   */\n      swap1\n      pop\n        /* \"#utility.yul\":2111:2213   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2219:2583   */\n    tag_303:\n        /* \"#utility.yul\":2307:2310   */\n      0x00\n        /* \"#utility.yul\":2335:2374   */\n      tag_380\n        /* \"#utility.yul\":2368:2373   */\n      dup3\n        /* \"#utility.yul\":2335:2374   */\n      tag_299\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":2390:2461   */\n      tag_381\n        /* \"#utility.yul\":2454:2460   */\n      dup2\n        /* \"#utility.yul\":2449:2452   */\n      dup6\n        /* \"#utility.yul\":2390:2461   */\n      tag_300\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":2383:2461   */\n      swap4\n      pop\n        /* \"#utility.yul\":2470:2522   */\n      tag_382\n        /* \"#utility.yul\":2515:2521   */\n      dup2\n        /* \"#utility.yul\":2510:2513   */\n      dup6\n        /* \"#utility.yul\":2503:2507   */\n      0x20\n        /* \"#utility.yul\":2496:2501   */\n      dup7\n        /* \"#utility.yul\":2492:2508   */\n      add\n        /* \"#utility.yul\":2470:2522   */\n      tag_301\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":2547:2576   */\n      tag_383\n        /* \"#utility.yul\":2569:2575   */\n      dup2\n        /* \"#utility.yul\":2547:2576   */\n      tag_302\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":2542:2545   */\n      dup5\n        /* \"#utility.yul\":2538:2577   */\n      add\n        /* \"#utility.yul\":2531:2577   */\n      swap2\n      pop\n        /* \"#utility.yul\":2311:2583   */\n      pop\n        /* \"#utility.yul\":2219:2583   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2589:2902   */\n    tag_31:\n        /* \"#utility.yul\":2702:2706   */\n      0x00\n        /* \"#utility.yul\":2740:2742   */\n      0x20\n        /* \"#utility.yul\":2729:2738   */\n      dup3\n        /* \"#utility.yul\":2725:2743   */\n      add\n        /* \"#utility.yul\":2717:2743   */\n      swap1\n      pop\n        /* \"#utility.yul\":2789:2798   */\n      dup2\n        /* \"#utility.yul\":2783:2787   */\n      dup2\n        /* \"#utility.yul\":2779:2799   */\n      sub\n        /* \"#utility.yul\":2775:2776   */\n      0x00\n        /* \"#utility.yul\":2764:2773   */\n      dup4\n        /* \"#utility.yul\":2760:2777   */\n      add\n        /* \"#utility.yul\":2753:2800   */\n      mstore\n        /* \"#utility.yul\":2817:2895   */\n      tag_385\n        /* \"#utility.yul\":2890:2894   */\n      dup2\n        /* \"#utility.yul\":2881:2887   */\n      dup5\n        /* \"#utility.yul\":2817:2895   */\n      tag_303\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":2809:2895   */\n      swap1\n      pop\n        /* \"#utility.yul\":2589:2902   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2908:2985   */\n    tag_304:\n        /* \"#utility.yul\":2945:2952   */\n      0x00\n        /* \"#utility.yul\":2974:2979   */\n      dup2\n        /* \"#utility.yul\":2963:2979   */\n      swap1\n      pop\n        /* \"#utility.yul\":2908:2985   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2991:3113   */\n    tag_305:\n        /* \"#utility.yul\":3064:3088   */\n      tag_388\n        /* \"#utility.yul\":3082:3087   */\n      dup2\n        /* \"#utility.yul\":3064:3088   */\n      tag_304\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":3057:3062   */\n      dup2\n        /* \"#utility.yul\":3054:3089   */\n      eq\n        /* \"#utility.yul\":3044:3107   */\n      tag_389\n      jumpi\n        /* \"#utility.yul\":3103:3104   */\n      0x00\n        /* \"#utility.yul\":3100:3101   */\n      dup1\n        /* \"#utility.yul\":3093:3105   */\n      revert\n        /* \"#utility.yul\":3044:3107   */\n    tag_389:\n        /* \"#utility.yul\":2991:3113   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3119:3258   */\n    tag_306:\n        /* \"#utility.yul\":3165:3170   */\n      0x00\n        /* \"#utility.yul\":3203:3209   */\n      dup2\n        /* \"#utility.yul\":3190:3210   */\n      calldataload\n        /* \"#utility.yul\":3181:3210   */\n      swap1\n      pop\n        /* \"#utility.yul\":3219:3252   */\n      tag_391\n        /* \"#utility.yul\":3246:3251   */\n      dup2\n        /* \"#utility.yul\":3219:3252   */\n      tag_305\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":3119:3258   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3264:3593   */\n    tag_34:\n        /* \"#utility.yul\":3323:3329   */\n      0x00\n        /* \"#utility.yul\":3372:3374   */\n      0x20\n        /* \"#utility.yul\":3360:3369   */\n      dup3\n        /* \"#utility.yul\":3351:3358   */\n      dup5\n        /* \"#utility.yul\":3347:3370   */\n      sub\n        /* \"#utility.yul\":3343:3375   */\n      slt\n        /* \"#utility.yul\":3340:3459   */\n      iszero\n      tag_393\n      jumpi\n        /* \"#utility.yul\":3378:3457   */\n      tag_394\n      tag_292\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":3340:3459   */\n    tag_393:\n        /* \"#utility.yul\":3498:3499   */\n      0x00\n        /* \"#utility.yul\":3523:3576   */\n      tag_395\n        /* \"#utility.yul\":3568:3575   */\n      dup5\n        /* \"#utility.yul\":3559:3565   */\n      dup3\n        /* \"#utility.yul\":3548:3557   */\n      dup6\n        /* \"#utility.yul\":3544:3566   */\n      add\n        /* \"#utility.yul\":3523:3576   */\n      tag_306\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":3513:3576   */\n      swap2\n      pop\n        /* \"#utility.yul\":3469:3586   */\n      pop\n        /* \"#utility.yul\":3264:3593   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3599:3725   */\n    tag_307:\n        /* \"#utility.yul\":3636:3643   */\n      0x00\n        /* \"#utility.yul\":3676:3718   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3669:3674   */\n      dup3\n        /* \"#utility.yul\":3665:3719   */\n      and\n        /* \"#utility.yul\":3654:3719   */\n      swap1\n      pop\n        /* \"#utility.yul\":3599:3725   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3731:3827   */\n    tag_308:\n        /* \"#utility.yul\":3768:3775   */\n      0x00\n        /* \"#utility.yul\":3797:3821   */\n      tag_398\n        /* \"#utility.yul\":3815:3820   */\n      dup3\n        /* \"#utility.yul\":3797:3821   */\n      tag_307\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":3786:3821   */\n      swap1\n      pop\n        /* \"#utility.yul\":3731:3827   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3833:3951   */\n    tag_309:\n        /* \"#utility.yul\":3920:3944   */\n      tag_400\n        /* \"#utility.yul\":3938:3943   */\n      dup2\n        /* \"#utility.yul\":3920:3944   */\n      tag_308\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":3915:3918   */\n      dup3\n        /* \"#utility.yul\":3908:3945   */\n      mstore\n        /* \"#utility.yul\":3833:3951   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3957:4179   */\n    tag_37:\n        /* \"#utility.yul\":4050:4054   */\n      0x00\n        /* \"#utility.yul\":4088:4090   */\n      0x20\n        /* \"#utility.yul\":4077:4086   */\n      dup3\n        /* \"#utility.yul\":4073:4091   */\n      add\n        /* \"#utility.yul\":4065:4091   */\n      swap1\n      pop\n        /* \"#utility.yul\":4101:4172   */\n      tag_402\n        /* \"#utility.yul\":4169:4170   */\n      0x00\n        /* \"#utility.yul\":4158:4167   */\n      dup4\n        /* \"#utility.yul\":4154:4171   */\n      add\n        /* \"#utility.yul\":4145:4151   */\n      dup5\n        /* \"#utility.yul\":4101:4172   */\n      tag_309\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":3957:4179   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4185:4307   */\n    tag_310:\n        /* \"#utility.yul\":4258:4282   */\n      tag_404\n        /* \"#utility.yul\":4276:4281   */\n      dup2\n        /* \"#utility.yul\":4258:4282   */\n      tag_308\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":4251:4256   */\n      dup2\n        /* \"#utility.yul\":4248:4283   */\n      eq\n        /* \"#utility.yul\":4238:4301   */\n      tag_405\n      jumpi\n        /* \"#utility.yul\":4297:4298   */\n      0x00\n        /* \"#utility.yul\":4294:4295   */\n      dup1\n        /* \"#utility.yul\":4287:4299   */\n      revert\n        /* \"#utility.yul\":4238:4301   */\n    tag_405:\n        /* \"#utility.yul\":4185:4307   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4313:4452   */\n    tag_311:\n        /* \"#utility.yul\":4359:4364   */\n      0x00\n        /* \"#utility.yul\":4397:4403   */\n      dup2\n        /* \"#utility.yul\":4384:4404   */\n      calldataload\n        /* \"#utility.yul\":4375:4404   */\n      swap1\n      pop\n        /* \"#utility.yul\":4413:4446   */\n      tag_407\n        /* \"#utility.yul\":4440:4445   */\n      dup2\n        /* \"#utility.yul\":4413:4446   */\n      tag_310\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":4313:4452   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4458:4932   */\n    tag_40:\n        /* \"#utility.yul\":4526:4532   */\n      0x00\n        /* \"#utility.yul\":4534:4540   */\n      dup1\n        /* \"#utility.yul\":4583:4585   */\n      0x40\n        /* \"#utility.yul\":4571:4580   */\n      dup4\n        /* \"#utility.yul\":4562:4569   */\n      dup6\n        /* \"#utility.yul\":4558:4581   */\n      sub\n        /* \"#utility.yul\":4554:4586   */\n      slt\n        /* \"#utility.yul\":4551:4670   */\n      iszero\n      tag_409\n      jumpi\n        /* \"#utility.yul\":4589:4668   */\n      tag_410\n      tag_292\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":4551:4670   */\n    tag_409:\n        /* \"#utility.yul\":4709:4710   */\n      0x00\n        /* \"#utility.yul\":4734:4787   */\n      tag_411\n        /* \"#utility.yul\":4779:4786   */\n      dup6\n        /* \"#utility.yul\":4770:4776   */\n      dup3\n        /* \"#utility.yul\":4759:4768   */\n      dup7\n        /* \"#utility.yul\":4755:4777   */\n      add\n        /* \"#utility.yul\":4734:4787   */\n      tag_311\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":4724:4787   */\n      swap3\n      pop\n        /* \"#utility.yul\":4680:4797   */\n      pop\n        /* \"#utility.yul\":4836:4838   */\n      0x20\n        /* \"#utility.yul\":4862:4915   */\n      tag_412\n        /* \"#utility.yul\":4907:4914   */\n      dup6\n        /* \"#utility.yul\":4898:4904   */\n      dup3\n        /* \"#utility.yul\":4887:4896   */\n      dup7\n        /* \"#utility.yul\":4883:4905   */\n      add\n        /* \"#utility.yul\":4862:4915   */\n      tag_306\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":4852:4915   */\n      swap2\n      pop\n        /* \"#utility.yul\":4807:4925   */\n      pop\n        /* \"#utility.yul\":4458:4932   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4938:5557   */\n    tag_44:\n        /* \"#utility.yul\":5015:5021   */\n      0x00\n        /* \"#utility.yul\":5023:5029   */\n      dup1\n        /* \"#utility.yul\":5031:5037   */\n      0x00\n        /* \"#utility.yul\":5080:5082   */\n      0x60\n        /* \"#utility.yul\":5068:5077   */\n      dup5\n        /* \"#utility.yul\":5059:5066   */\n      dup7\n        /* \"#utility.yul\":5055:5078   */\n      sub\n        /* \"#utility.yul\":5051:5083   */\n      slt\n        /* \"#utility.yul\":5048:5167   */\n      iszero\n      tag_414\n      jumpi\n        /* \"#utility.yul\":5086:5165   */\n      tag_415\n      tag_292\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":5048:5167   */\n    tag_414:\n        /* \"#utility.yul\":5206:5207   */\n      0x00\n        /* \"#utility.yul\":5231:5284   */\n      tag_416\n        /* \"#utility.yul\":5276:5283   */\n      dup7\n        /* \"#utility.yul\":5267:5273   */\n      dup3\n        /* \"#utility.yul\":5256:5265   */\n      dup8\n        /* \"#utility.yul\":5252:5274   */\n      add\n        /* \"#utility.yul\":5231:5284   */\n      tag_311\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":5221:5284   */\n      swap4\n      pop\n        /* \"#utility.yul\":5177:5294   */\n      pop\n        /* \"#utility.yul\":5333:5335   */\n      0x20\n        /* \"#utility.yul\":5359:5412   */\n      tag_417\n        /* \"#utility.yul\":5404:5411   */\n      dup7\n        /* \"#utility.yul\":5395:5401   */\n      dup3\n        /* \"#utility.yul\":5384:5393   */\n      dup8\n        /* \"#utility.yul\":5380:5402   */\n      add\n        /* \"#utility.yul\":5359:5412   */\n      tag_311\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":5349:5412   */\n      swap3\n      pop\n        /* \"#utility.yul\":5304:5422   */\n      pop\n        /* \"#utility.yul\":5461:5463   */\n      0x40\n        /* \"#utility.yul\":5487:5540   */\n      tag_418\n        /* \"#utility.yul\":5532:5539   */\n      dup7\n        /* \"#utility.yul\":5523:5529   */\n      dup3\n        /* \"#utility.yul\":5512:5521   */\n      dup8\n        /* \"#utility.yul\":5508:5530   */\n      add\n        /* \"#utility.yul\":5487:5540   */\n      tag_306\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":5477:5540   */\n      swap2\n      pop\n        /* \"#utility.yul\":5432:5550   */\n      pop\n        /* \"#utility.yul\":4938:5557   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5563:5892   */\n    tag_55:\n        /* \"#utility.yul\":5622:5628   */\n      0x00\n        /* \"#utility.yul\":5671:5673   */\n      0x20\n        /* \"#utility.yul\":5659:5668   */\n      dup3\n        /* \"#utility.yul\":5650:5657   */\n      dup5\n        /* \"#utility.yul\":5646:5669   */\n      sub\n        /* \"#utility.yul\":5642:5674   */\n      slt\n        /* \"#utility.yul\":5639:5758   */\n      iszero\n      tag_420\n      jumpi\n        /* \"#utility.yul\":5677:5756   */\n      tag_421\n      tag_292\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":5639:5758   */\n    tag_420:\n        /* \"#utility.yul\":5797:5798   */\n      0x00\n        /* \"#utility.yul\":5822:5875   */\n      tag_422\n        /* \"#utility.yul\":5867:5874   */\n      dup5\n        /* \"#utility.yul\":5858:5864   */\n      dup3\n        /* \"#utility.yul\":5847:5856   */\n      dup6\n        /* \"#utility.yul\":5843:5865   */\n      add\n        /* \"#utility.yul\":5822:5875   */\n      tag_311\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":5812:5875   */\n      swap2\n      pop\n        /* \"#utility.yul\":5768:5885   */\n      pop\n        /* \"#utility.yul\":5563:5892   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5898:6016   */\n    tag_312:\n        /* \"#utility.yul\":5985:6009   */\n      tag_424\n        /* \"#utility.yul\":6003:6008   */\n      dup2\n        /* \"#utility.yul\":5985:6009   */\n      tag_304\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":5980:5983   */\n      dup3\n        /* \"#utility.yul\":5973:6010   */\n      mstore\n        /* \"#utility.yul\":5898:6016   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6022:6244   */\n    tag_58:\n        /* \"#utility.yul\":6115:6119   */\n      0x00\n        /* \"#utility.yul\":6153:6155   */\n      0x20\n        /* \"#utility.yul\":6142:6151   */\n      dup3\n        /* \"#utility.yul\":6138:6156   */\n      add\n        /* \"#utility.yul\":6130:6156   */\n      swap1\n      pop\n        /* \"#utility.yul\":6166:6237   */\n      tag_426\n        /* \"#utility.yul\":6234:6235   */\n      0x00\n        /* \"#utility.yul\":6223:6232   */\n      dup4\n        /* \"#utility.yul\":6219:6236   */\n      add\n        /* \"#utility.yul\":6210:6216   */\n      dup5\n        /* \"#utility.yul\":6166:6237   */\n      tag_312\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":6022:6244   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6250:6366   */\n    tag_313:\n        /* \"#utility.yul\":6320:6341   */\n      tag_428\n        /* \"#utility.yul\":6335:6340   */\n      dup2\n        /* \"#utility.yul\":6320:6341   */\n      tag_297\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":6313:6318   */\n      dup2\n        /* \"#utility.yul\":6310:6342   */\n      eq\n        /* \"#utility.yul\":6300:6360   */\n      tag_429\n      jumpi\n        /* \"#utility.yul\":6356:6357   */\n      0x00\n        /* \"#utility.yul\":6353:6354   */\n      dup1\n        /* \"#utility.yul\":6346:6358   */\n      revert\n        /* \"#utility.yul\":6300:6360   */\n    tag_429:\n        /* \"#utility.yul\":6250:6366   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6372:6505   */\n    tag_314:\n        /* \"#utility.yul\":6415:6420   */\n      0x00\n        /* \"#utility.yul\":6453:6459   */\n      dup2\n        /* \"#utility.yul\":6440:6460   */\n      calldataload\n        /* \"#utility.yul\":6431:6460   */\n      swap1\n      pop\n        /* \"#utility.yul\":6469:6499   */\n      tag_431\n        /* \"#utility.yul\":6493:6498   */\n      dup2\n        /* \"#utility.yul\":6469:6499   */\n      tag_313\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":6372:6505   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6511:6979   */\n    tag_69:\n        /* \"#utility.yul\":6576:6582   */\n      0x00\n        /* \"#utility.yul\":6584:6590   */\n      dup1\n        /* \"#utility.yul\":6633:6635   */\n      0x40\n        /* \"#utility.yul\":6621:6630   */\n      dup4\n        /* \"#utility.yul\":6612:6619   */\n      dup6\n        /* \"#utility.yul\":6608:6631   */\n      sub\n        /* \"#utility.yul\":6604:6636   */\n      slt\n        /* \"#utility.yul\":6601:6720   */\n      iszero\n      tag_433\n      jumpi\n        /* \"#utility.yul\":6639:6718   */\n      tag_434\n      tag_292\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":6601:6720   */\n    tag_433:\n        /* \"#utility.yul\":6759:6760   */\n      0x00\n        /* \"#utility.yul\":6784:6837   */\n      tag_435\n        /* \"#utility.yul\":6829:6836   */\n      dup6\n        /* \"#utility.yul\":6820:6826   */\n      dup3\n        /* \"#utility.yul\":6809:6818   */\n      dup7\n        /* \"#utility.yul\":6805:6827   */\n      add\n        /* \"#utility.yul\":6784:6837   */\n      tag_311\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":6774:6837   */\n      swap3\n      pop\n        /* \"#utility.yul\":6730:6847   */\n      pop\n        /* \"#utility.yul\":6886:6888   */\n      0x20\n        /* \"#utility.yul\":6912:6962   */\n      tag_436\n        /* \"#utility.yul\":6954:6961   */\n      dup6\n        /* \"#utility.yul\":6945:6951   */\n      dup3\n        /* \"#utility.yul\":6934:6943   */\n      dup7\n        /* \"#utility.yul\":6930:6952   */\n      add\n        /* \"#utility.yul\":6912:6962   */\n      tag_314\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":6902:6962   */\n      swap2\n      pop\n        /* \"#utility.yul\":6857:6972   */\n      pop\n        /* \"#utility.yul\":6511:6979   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6985:7102   */\n    tag_315:\n        /* \"#utility.yul\":7094:7095   */\n      0x00\n        /* \"#utility.yul\":7091:7092   */\n      dup1\n        /* \"#utility.yul\":7084:7096   */\n      revert\n        /* \"#utility.yul\":7108:7225   */\n    tag_316:\n        /* \"#utility.yul\":7217:7218   */\n      0x00\n        /* \"#utility.yul\":7214:7215   */\n      dup1\n        /* \"#utility.yul\":7207:7219   */\n      revert\n        /* \"#utility.yul\":7231:7411   */\n    tag_236:\n        /* \"#utility.yul\":7279:7356   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7276:7277   */\n      0x00\n        /* \"#utility.yul\":7269:7357   */\n      mstore\n        /* \"#utility.yul\":7376:7380   */\n      0x41\n        /* \"#utility.yul\":7373:7374   */\n      0x04\n        /* \"#utility.yul\":7366:7381   */\n      mstore\n        /* \"#utility.yul\":7400:7404   */\n      0x24\n        /* \"#utility.yul\":7397:7398   */\n      0x00\n        /* \"#utility.yul\":7390:7405   */\n      revert\n        /* \"#utility.yul\":7417:7698   */\n    tag_317:\n        /* \"#utility.yul\":7500:7527   */\n      tag_441\n        /* \"#utility.yul\":7522:7526   */\n      dup3\n        /* \"#utility.yul\":7500:7527   */\n      tag_302\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":7492:7498   */\n      dup2\n        /* \"#utility.yul\":7488:7528   */\n      add\n        /* \"#utility.yul\":7630:7636   */\n      dup2\n        /* \"#utility.yul\":7618:7628   */\n      dup2\n        /* \"#utility.yul\":7615:7637   */\n      lt\n        /* \"#utility.yul\":7594:7612   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7582:7592   */\n      dup3\n        /* \"#utility.yul\":7579:7613   */\n      gt\n        /* \"#utility.yul\":7576:7638   */\n      or\n        /* \"#utility.yul\":7573:7661   */\n      iszero\n      tag_442\n      jumpi\n        /* \"#utility.yul\":7641:7659   */\n      tag_443\n      tag_236\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":7573:7661   */\n    tag_442:\n        /* \"#utility.yul\":7681:7691   */\n      dup1\n        /* \"#utility.yul\":7677:7679   */\n      0x40\n        /* \"#utility.yul\":7670:7692   */\n      mstore\n        /* \"#utility.yul\":7460:7698   */\n      pop\n        /* \"#utility.yul\":7417:7698   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7704:7833   */\n    tag_318:\n        /* \"#utility.yul\":7738:7744   */\n      0x00\n        /* \"#utility.yul\":7765:7785   */\n      tag_445\n      tag_291\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":7755:7785   */\n      swap1\n      pop\n        /* \"#utility.yul\":7794:7827   */\n      tag_446\n        /* \"#utility.yul\":7822:7826   */\n      dup3\n        /* \"#utility.yul\":7814:7820   */\n      dup3\n        /* \"#utility.yul\":7794:7827   */\n      tag_317\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":7704:7833   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7839:8146   */\n    tag_319:\n        /* \"#utility.yul\":7900:7904   */\n      0x00\n        /* \"#utility.yul\":7990:8008   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7982:7988   */\n      dup3\n        /* \"#utility.yul\":7979:8009   */\n      gt\n        /* \"#utility.yul\":7976:8032   */\n      iszero\n      tag_448\n      jumpi\n        /* \"#utility.yul\":8012:8030   */\n      tag_449\n      tag_236\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":7976:8032   */\n    tag_448:\n        /* \"#utility.yul\":8050:8079   */\n      tag_450\n        /* \"#utility.yul\":8072:8078   */\n      dup3\n        /* \"#utility.yul\":8050:8079   */\n      tag_302\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":8042:8079   */\n      swap1\n      pop\n        /* \"#utility.yul\":8134:8138   */\n      0x20\n        /* \"#utility.yul\":8128:8132   */\n      dup2\n        /* \"#utility.yul\":8124:8139   */\n      add\n        /* \"#utility.yul\":8116:8139   */\n      swap1\n      pop\n        /* \"#utility.yul\":7839:8146   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8152:8306   */\n    tag_320:\n        /* \"#utility.yul\":8236:8242   */\n      dup3\n        /* \"#utility.yul\":8231:8234   */\n      dup2\n        /* \"#utility.yul\":8226:8229   */\n      dup4\n        /* \"#utility.yul\":8213:8243   */\n      calldatacopy\n        /* \"#utility.yul\":8298:8299   */\n      0x00\n        /* \"#utility.yul\":8289:8295   */\n      dup4\n        /* \"#utility.yul\":8284:8287   */\n      dup4\n        /* \"#utility.yul\":8280:8296   */\n      add\n        /* \"#utility.yul\":8273:8300   */\n      mstore\n        /* \"#utility.yul\":8152:8306   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8312:8722   */\n    tag_321:\n        /* \"#utility.yul\":8389:8394   */\n      0x00\n        /* \"#utility.yul\":8414:8479   */\n      tag_453\n        /* \"#utility.yul\":8430:8478   */\n      tag_454\n        /* \"#utility.yul\":8471:8477   */\n      dup5\n        /* \"#utility.yul\":8430:8478   */\n      tag_319\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":8414:8479   */\n      tag_318\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":8405:8479   */\n      swap1\n      pop\n        /* \"#utility.yul\":8502:8508   */\n      dup3\n        /* \"#utility.yul\":8495:8500   */\n      dup2\n        /* \"#utility.yul\":8488:8509   */\n      mstore\n        /* \"#utility.yul\":8540:8544   */\n      0x20\n        /* \"#utility.yul\":8533:8538   */\n      dup2\n        /* \"#utility.yul\":8529:8545   */\n      add\n        /* \"#utility.yul\":8578:8581   */\n      dup5\n        /* \"#utility.yul\":8569:8575   */\n      dup5\n        /* \"#utility.yul\":8564:8567   */\n      dup5\n        /* \"#utility.yul\":8560:8576   */\n      add\n        /* \"#utility.yul\":8557:8582   */\n      gt\n        /* \"#utility.yul\":8554:8666   */\n      iszero\n      tag_455\n      jumpi\n        /* \"#utility.yul\":8585:8664   */\n      tag_456\n      tag_316\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":8554:8666   */\n    tag_455:\n        /* \"#utility.yul\":8675:8716   */\n      tag_457\n        /* \"#utility.yul\":8709:8715   */\n      dup5\n        /* \"#utility.yul\":8704:8707   */\n      dup3\n        /* \"#utility.yul\":8699:8702   */\n      dup6\n        /* \"#utility.yul\":8675:8716   */\n      tag_320\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":8395:8722   */\n      pop\n        /* \"#utility.yul\":8312:8722   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8741:9079   */\n    tag_322:\n        /* \"#utility.yul\":8796:8801   */\n      0x00\n        /* \"#utility.yul\":8845:8848   */\n      dup3\n        /* \"#utility.yul\":8838:8842   */\n      0x1f\n        /* \"#utility.yul\":8830:8836   */\n      dup4\n        /* \"#utility.yul\":8826:8843   */\n      add\n        /* \"#utility.yul\":8822:8849   */\n      slt\n        /* \"#utility.yul\":8812:8934   */\n      tag_459\n      jumpi\n        /* \"#utility.yul\":8853:8932   */\n      tag_460\n      tag_315\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":8812:8934   */\n    tag_459:\n        /* \"#utility.yul\":8970:8976   */\n      dup2\n        /* \"#utility.yul\":8957:8977   */\n      calldataload\n        /* \"#utility.yul\":8995:9073   */\n      tag_461\n        /* \"#utility.yul\":9069:9072   */\n      dup5\n        /* \"#utility.yul\":9061:9067   */\n      dup3\n        /* \"#utility.yul\":9054:9058   */\n      0x20\n        /* \"#utility.yul\":9046:9052   */\n      dup7\n        /* \"#utility.yul\":9042:9059   */\n      add\n        /* \"#utility.yul\":8995:9073   */\n      tag_321\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":8986:9073   */\n      swap2\n      pop\n        /* \"#utility.yul\":8802:9079   */\n      pop\n        /* \"#utility.yul\":8741:9079   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9085:10028   */\n    tag_73:\n        /* \"#utility.yul\":9180:9186   */\n      0x00\n        /* \"#utility.yul\":9188:9194   */\n      dup1\n        /* \"#utility.yul\":9196:9202   */\n      0x00\n        /* \"#utility.yul\":9204:9210   */\n      dup1\n        /* \"#utility.yul\":9253:9256   */\n      0x80\n        /* \"#utility.yul\":9241:9250   */\n      dup6\n        /* \"#utility.yul\":9232:9239   */\n      dup8\n        /* \"#utility.yul\":9228:9251   */\n      sub\n        /* \"#utility.yul\":9224:9257   */\n      slt\n        /* \"#utility.yul\":9221:9341   */\n      iszero\n      tag_463\n      jumpi\n        /* \"#utility.yul\":9260:9339   */\n      tag_464\n      tag_292\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":9221:9341   */\n    tag_463:\n        /* \"#utility.yul\":9380:9381   */\n      0x00\n        /* \"#utility.yul\":9405:9458   */\n      tag_465\n        /* \"#utility.yul\":9450:9457   */\n      dup8\n        /* \"#utility.yul\":9441:9447   */\n      dup3\n        /* \"#utility.yul\":9430:9439   */\n      dup9\n        /* \"#utility.yul\":9426:9448   */\n      add\n        /* \"#utility.yul\":9405:9458   */\n      tag_311\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":9395:9458   */\n      swap5\n      pop\n        /* \"#utility.yul\":9351:9468   */\n      pop\n        /* \"#utility.yul\":9507:9509   */\n      0x20\n        /* \"#utility.yul\":9533:9586   */\n      tag_466\n        /* \"#utility.yul\":9578:9585   */\n      dup8\n        /* \"#utility.yul\":9569:9575   */\n      dup3\n        /* \"#utility.yul\":9558:9567   */\n      dup9\n        /* \"#utility.yul\":9554:9576   */\n      add\n        /* \"#utility.yul\":9533:9586   */\n      tag_311\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":9523:9586   */\n      swap4\n      pop\n        /* \"#utility.yul\":9478:9596   */\n      pop\n        /* \"#utility.yul\":9635:9637   */\n      0x40\n        /* \"#utility.yul\":9661:9714   */\n      tag_467\n        /* \"#utility.yul\":9706:9713   */\n      dup8\n        /* \"#utility.yul\":9697:9703   */\n      dup3\n        /* \"#utility.yul\":9686:9695   */\n      dup9\n        /* \"#utility.yul\":9682:9704   */\n      add\n        /* \"#utility.yul\":9661:9714   */\n      tag_306\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":9651:9714   */\n      swap3\n      pop\n        /* \"#utility.yul\":9606:9724   */\n      pop\n        /* \"#utility.yul\":9791:9793   */\n      0x60\n        /* \"#utility.yul\":9780:9789   */\n      dup6\n        /* \"#utility.yul\":9776:9794   */\n      add\n        /* \"#utility.yul\":9763:9795   */\n      calldataload\n        /* \"#utility.yul\":9822:9840   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9814:9820   */\n      dup2\n        /* \"#utility.yul\":9811:9841   */\n      gt\n        /* \"#utility.yul\":9808:9925   */\n      iszero\n      tag_468\n      jumpi\n        /* \"#utility.yul\":9844:9923   */\n      tag_469\n      tag_293\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":9808:9925   */\n    tag_468:\n        /* \"#utility.yul\":9949:10011   */\n      tag_470\n        /* \"#utility.yul\":10003:10010   */\n      dup8\n        /* \"#utility.yul\":9994:10000   */\n      dup3\n        /* \"#utility.yul\":9983:9992   */\n      dup9\n        /* \"#utility.yul\":9979:10001   */\n      add\n        /* \"#utility.yul\":9949:10011   */\n      tag_322\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":9939:10011   */\n      swap2\n      pop\n        /* \"#utility.yul\":9734:10021   */\n      pop\n        /* \"#utility.yul\":9085:10028   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10034:10508   */\n    tag_81:\n        /* \"#utility.yul\":10102:10108   */\n      0x00\n        /* \"#utility.yul\":10110:10116   */\n      dup1\n        /* \"#utility.yul\":10159:10161   */\n      0x40\n        /* \"#utility.yul\":10147:10156   */\n      dup4\n        /* \"#utility.yul\":10138:10145   */\n      dup6\n        /* \"#utility.yul\":10134:10157   */\n      sub\n        /* \"#utility.yul\":10130:10162   */\n      slt\n        /* \"#utility.yul\":10127:10246   */\n      iszero\n      tag_472\n      jumpi\n        /* \"#utility.yul\":10165:10244   */\n      tag_473\n      tag_292\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":10127:10246   */\n    tag_472:\n        /* \"#utility.yul\":10285:10286   */\n      0x00\n        /* \"#utility.yul\":10310:10363   */\n      tag_474\n        /* \"#utility.yul\":10355:10362   */\n      dup6\n        /* \"#utility.yul\":10346:10352   */\n      dup3\n        /* \"#utility.yul\":10335:10344   */\n      dup7\n        /* \"#utility.yul\":10331:10353   */\n      add\n        /* \"#utility.yul\":10310:10363   */\n      tag_311\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":10300:10363   */\n      swap3\n      pop\n        /* \"#utility.yul\":10256:10373   */\n      pop\n        /* \"#utility.yul\":10412:10414   */\n      0x20\n        /* \"#utility.yul\":10438:10491   */\n      tag_475\n        /* \"#utility.yul\":10483:10490   */\n      dup6\n        /* \"#utility.yul\":10474:10480   */\n      dup3\n        /* \"#utility.yul\":10463:10472   */\n      dup7\n        /* \"#utility.yul\":10459:10481   */\n      add\n        /* \"#utility.yul\":10438:10491   */\n      tag_311\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":10428:10491   */\n      swap2\n      pop\n        /* \"#utility.yul\":10383:10501   */\n      pop\n        /* \"#utility.yul\":10034:10508   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10514:10694   */\n    tag_323:\n        /* \"#utility.yul\":10562:10639   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10559:10560   */\n      0x00\n        /* \"#utility.yul\":10552:10640   */\n      mstore\n        /* \"#utility.yul\":10659:10663   */\n      0x22\n        /* \"#utility.yul\":10656:10657   */\n      0x04\n        /* \"#utility.yul\":10649:10664   */\n      mstore\n        /* \"#utility.yul\":10683:10687   */\n      0x24\n        /* \"#utility.yul\":10680:10681   */\n      0x00\n        /* \"#utility.yul\":10673:10688   */\n      revert\n        /* \"#utility.yul\":10700:11020   */\n    tag_94:\n        /* \"#utility.yul\":10744:10750   */\n      0x00\n        /* \"#utility.yul\":10781:10782   */\n      0x02\n        /* \"#utility.yul\":10775:10779   */\n      dup3\n        /* \"#utility.yul\":10771:10783   */\n      div\n        /* \"#utility.yul\":10761:10783   */\n      swap1\n      pop\n        /* \"#utility.yul\":10828:10829   */\n      0x01\n        /* \"#utility.yul\":10822:10826   */\n      dup3\n        /* \"#utility.yul\":10818:10830   */\n      and\n        /* \"#utility.yul\":10849:10867   */\n      dup1\n        /* \"#utility.yul\":10839:10920   */\n      tag_478\n      jumpi\n        /* \"#utility.yul\":10905:10909   */\n      0x7f\n        /* \"#utility.yul\":10897:10903   */\n      dup3\n        /* \"#utility.yul\":10893:10910   */\n      and\n        /* \"#utility.yul\":10883:10910   */\n      swap2\n      pop\n        /* \"#utility.yul\":10839:10920   */\n    tag_478:\n        /* \"#utility.yul\":10967:10969   */\n      0x20\n        /* \"#utility.yul\":10959:10965   */\n      dup3\n        /* \"#utility.yul\":10956:10970   */\n      lt\n        /* \"#utility.yul\":10936:10954   */\n      dup2\n        /* \"#utility.yul\":10933:10971   */\n      eq\n        /* \"#utility.yul\":10930:11014   */\n      iszero\n      tag_479\n      jumpi\n        /* \"#utility.yul\":10986:11004   */\n      tag_480\n      tag_323\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":10930:11014   */\n    tag_479:\n        /* \"#utility.yul\":10751:11020   */\n      pop\n        /* \"#utility.yul\":10700:11020   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11026:11246   */\n    tag_324:\n        /* \"#utility.yul\":11166:11200   */\n      0x4552433732313a20617070726f76616c20746f2063757272656e74206f776e65\n        /* \"#utility.yul\":11162:11163   */\n      0x00\n        /* \"#utility.yul\":11154:11160   */\n      dup3\n        /* \"#utility.yul\":11150:11164   */\n      add\n        /* \"#utility.yul\":11143:11201   */\n      mstore\n        /* \"#utility.yul\":11235:11238   */\n      0x7200000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11230:11232   */\n      0x20\n        /* \"#utility.yul\":11222:11228   */\n      dup3\n        /* \"#utility.yul\":11218:11233   */\n      add\n        /* \"#utility.yul\":11211:11239   */\n      mstore\n        /* \"#utility.yul\":11026:11246   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11252:11618   */\n    tag_325:\n        /* \"#utility.yul\":11394:11397   */\n      0x00\n        /* \"#utility.yul\":11415:11482   */\n      tag_483\n        /* \"#utility.yul\":11479:11481   */\n      0x21\n        /* \"#utility.yul\":11474:11477   */\n      dup4\n        /* \"#utility.yul\":11415:11482   */\n      tag_300\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":11408:11482   */\n      swap2\n      pop\n        /* \"#utility.yul\":11491:11584   */\n      tag_484\n        /* \"#utility.yul\":11580:11583   */\n      dup3\n        /* \"#utility.yul\":11491:11584   */\n      tag_324\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":11609:11611   */\n      0x40\n        /* \"#utility.yul\":11604:11607   */\n      dup3\n        /* \"#utility.yul\":11600:11612   */\n      add\n        /* \"#utility.yul\":11593:11612   */\n      swap1\n      pop\n        /* \"#utility.yul\":11252:11618   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11624:12043   */\n    tag_106:\n        /* \"#utility.yul\":11790:11794   */\n      0x00\n        /* \"#utility.yul\":11828:11830   */\n      0x20\n        /* \"#utility.yul\":11817:11826   */\n      dup3\n        /* \"#utility.yul\":11813:11831   */\n      add\n        /* \"#utility.yul\":11805:11831   */\n      swap1\n      pop\n        /* \"#utility.yul\":11877:11886   */\n      dup2\n        /* \"#utility.yul\":11871:11875   */\n      dup2\n        /* \"#utility.yul\":11867:11887   */\n      sub\n        /* \"#utility.yul\":11863:11864   */\n      0x00\n        /* \"#utility.yul\":11852:11861   */\n      dup4\n        /* \"#utility.yul\":11848:11865   */\n      add\n        /* \"#utility.yul\":11841:11888   */\n      mstore\n        /* \"#utility.yul\":11905:12036   */\n      tag_486\n        /* \"#utility.yul\":12031:12035   */\n      dup2\n        /* \"#utility.yul\":11905:12036   */\n      tag_325\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":11897:12036   */\n      swap1\n      pop\n        /* \"#utility.yul\":11624:12043   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12049:12297   */\n    tag_326:\n        /* \"#utility.yul\":12189:12223   */\n      0x4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f\n        /* \"#utility.yul\":12185:12186   */\n      0x00\n        /* \"#utility.yul\":12177:12183   */\n      dup3\n        /* \"#utility.yul\":12173:12187   */\n      add\n        /* \"#utility.yul\":12166:12224   */\n      mstore\n        /* \"#utility.yul\":12258:12289   */\n      0x6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000\n        /* \"#utility.yul\":12253:12255   */\n      0x20\n        /* \"#utility.yul\":12245:12251   */\n      dup3\n        /* \"#utility.yul\":12241:12256   */\n      add\n        /* \"#utility.yul\":12234:12290   */\n      mstore\n        /* \"#utility.yul\":12049:12297   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12303:12669   */\n    tag_327:\n        /* \"#utility.yul\":12445:12448   */\n      0x00\n        /* \"#utility.yul\":12466:12533   */\n      tag_489\n        /* \"#utility.yul\":12530:12532   */\n      0x3d\n        /* \"#utility.yul\":12525:12528   */\n      dup4\n        /* \"#utility.yul\":12466:12533   */\n      tag_300\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":12459:12533   */\n      swap2\n      pop\n        /* \"#utility.yul\":12542:12635   */\n      tag_490\n        /* \"#utility.yul\":12631:12634   */\n      dup3\n        /* \"#utility.yul\":12542:12635   */\n      tag_326\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":12660:12662   */\n      0x40\n        /* \"#utility.yul\":12655:12658   */\n      dup3\n        /* \"#utility.yul\":12651:12663   */\n      add\n        /* \"#utility.yul\":12644:12663   */\n      swap1\n      pop\n        /* \"#utility.yul\":12303:12669   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12675:13094   */\n    tag_114:\n        /* \"#utility.yul\":12841:12845   */\n      0x00\n        /* \"#utility.yul\":12879:12881   */\n      0x20\n        /* \"#utility.yul\":12868:12877   */\n      dup3\n        /* \"#utility.yul\":12864:12882   */\n      add\n        /* \"#utility.yul\":12856:12882   */\n      swap1\n      pop\n        /* \"#utility.yul\":12928:12937   */\n      dup2\n        /* \"#utility.yul\":12922:12926   */\n      dup2\n        /* \"#utility.yul\":12918:12938   */\n      sub\n        /* \"#utility.yul\":12914:12915   */\n      0x00\n        /* \"#utility.yul\":12903:12912   */\n      dup4\n        /* \"#utility.yul\":12899:12916   */\n      add\n        /* \"#utility.yul\":12892:12939   */\n      mstore\n        /* \"#utility.yul\":12956:13087   */\n      tag_492\n        /* \"#utility.yul\":13082:13086   */\n      dup2\n        /* \"#utility.yul\":12956:13087   */\n      tag_327\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":12948:13087   */\n      swap1\n      pop\n        /* \"#utility.yul\":12675:13094   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13100:13332   */\n    tag_328:\n        /* \"#utility.yul\":13240:13274   */\n      0x4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65\n        /* \"#utility.yul\":13236:13237   */\n      0x00\n        /* \"#utility.yul\":13228:13234   */\n      dup3\n        /* \"#utility.yul\":13224:13238   */\n      add\n        /* \"#utility.yul\":13217:13275   */\n      mstore\n        /* \"#utility.yul\":13309:13324   */\n      0x72206f7220617070726f76656400000000000000000000000000000000000000\n        /* \"#utility.yul\":13304:13306   */\n      0x20\n        /* \"#utility.yul\":13296:13302   */\n      dup3\n        /* \"#utility.yul\":13292:13307   */\n      add\n        /* \"#utility.yul\":13285:13325   */\n      mstore\n        /* \"#utility.yul\":13100:13332   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13338:13704   */\n    tag_329:\n        /* \"#utility.yul\":13480:13483   */\n      0x00\n        /* \"#utility.yul\":13501:13568   */\n      tag_495\n        /* \"#utility.yul\":13565:13567   */\n      0x2d\n        /* \"#utility.yul\":13560:13563   */\n      dup4\n        /* \"#utility.yul\":13501:13568   */\n      tag_300\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":13494:13568   */\n      swap2\n      pop\n        /* \"#utility.yul\":13577:13670   */\n      tag_496\n        /* \"#utility.yul\":13666:13669   */\n      dup3\n        /* \"#utility.yul\":13577:13670   */\n      tag_328\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":13695:13697   */\n      0x40\n        /* \"#utility.yul\":13690:13693   */\n      dup3\n        /* \"#utility.yul\":13686:13698   */\n      add\n        /* \"#utility.yul\":13679:13698   */\n      swap1\n      pop\n        /* \"#utility.yul\":13338:13704   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13710:14129   */\n    tag_123:\n        /* \"#utility.yul\":13876:13880   */\n      0x00\n        /* \"#utility.yul\":13914:13916   */\n      0x20\n        /* \"#utility.yul\":13903:13912   */\n      dup3\n        /* \"#utility.yul\":13899:13917   */\n      add\n        /* \"#utility.yul\":13891:13917   */\n      swap1\n      pop\n        /* \"#utility.yul\":13963:13972   */\n      dup2\n        /* \"#utility.yul\":13957:13961   */\n      dup2\n        /* \"#utility.yul\":13953:13973   */\n      sub\n        /* \"#utility.yul\":13949:13950   */\n      0x00\n        /* \"#utility.yul\":13938:13947   */\n      dup4\n        /* \"#utility.yul\":13934:13951   */\n      add\n        /* \"#utility.yul\":13927:13974   */\n      mstore\n        /* \"#utility.yul\":13991:14122   */\n      tag_498\n        /* \"#utility.yul\":14117:14121   */\n      dup2\n        /* \"#utility.yul\":13991:14122   */\n      tag_329\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":13983:14122   */\n      swap1\n      pop\n        /* \"#utility.yul\":13710:14129   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14135:14309   */\n    tag_330:\n        /* \"#utility.yul\":14275:14301   */\n      0x4552433732313a20696e76616c696420746f6b656e2049440000000000000000\n        /* \"#utility.yul\":14271:14272   */\n      0x00\n        /* \"#utility.yul\":14263:14269   */\n      dup3\n        /* \"#utility.yul\":14259:14273   */\n      add\n        /* \"#utility.yul\":14252:14302   */\n      mstore\n        /* \"#utility.yul\":14135:14309   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14315:14681   */\n    tag_331:\n        /* \"#utility.yul\":14457:14460   */\n      0x00\n        /* \"#utility.yul\":14478:14545   */\n      tag_501\n        /* \"#utility.yul\":14542:14544   */\n      0x18\n        /* \"#utility.yul\":14537:14540   */\n      dup4\n        /* \"#utility.yul\":14478:14545   */\n      tag_300\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":14471:14545   */\n      swap2\n      pop\n        /* \"#utility.yul\":14554:14647   */\n      tag_502\n        /* \"#utility.yul\":14643:14646   */\n      dup3\n        /* \"#utility.yul\":14554:14647   */\n      tag_330\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":14672:14674   */\n      0x20\n        /* \"#utility.yul\":14667:14670   */\n      dup3\n        /* \"#utility.yul\":14663:14675   */\n      add\n        /* \"#utility.yul\":14656:14675   */\n      swap1\n      pop\n        /* \"#utility.yul\":14315:14681   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14687:15106   */\n    tag_133:\n        /* \"#utility.yul\":14853:14857   */\n      0x00\n        /* \"#utility.yul\":14891:14893   */\n      0x20\n        /* \"#utility.yul\":14880:14889   */\n      dup3\n        /* \"#utility.yul\":14876:14894   */\n      add\n        /* \"#utility.yul\":14868:14894   */\n      swap1\n      pop\n        /* \"#utility.yul\":14940:14949   */\n      dup2\n        /* \"#utility.yul\":14934:14938   */\n      dup2\n        /* \"#utility.yul\":14930:14950   */\n      sub\n        /* \"#utility.yul\":14926:14927   */\n      0x00\n        /* \"#utility.yul\":14915:14924   */\n      dup4\n        /* \"#utility.yul\":14911:14928   */\n      add\n        /* \"#utility.yul\":14904:14951   */\n      mstore\n        /* \"#utility.yul\":14968:15099   */\n      tag_504\n        /* \"#utility.yul\":15094:15098   */\n      dup2\n        /* \"#utility.yul\":14968:15099   */\n      tag_331\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":14960:15099   */\n      swap1\n      pop\n        /* \"#utility.yul\":14687:15106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15112:15282   */\n    tag_332:\n        /* \"#utility.yul\":15252:15274   */\n      0x4552433732313a2061646472657373207a65726f000000000000000000000000\n        /* \"#utility.yul\":15248:15249   */\n      0x00\n        /* \"#utility.yul\":15240:15246   */\n      dup3\n        /* \"#utility.yul\":15236:15250   */\n      add\n        /* \"#utility.yul\":15229:15275   */\n      mstore\n        /* \"#utility.yul\":15112:15282   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15288:15654   */\n    tag_333:\n        /* \"#utility.yul\":15430:15433   */\n      0x00\n        /* \"#utility.yul\":15451:15518   */\n      tag_507\n        /* \"#utility.yul\":15515:15517   */\n      0x14\n        /* \"#utility.yul\":15510:15513   */\n      dup4\n        /* \"#utility.yul\":15451:15518   */\n      tag_300\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":15444:15518   */\n      swap2\n      pop\n        /* \"#utility.yul\":15527:15620   */\n      tag_508\n        /* \"#utility.yul\":15616:15619   */\n      dup3\n        /* \"#utility.yul\":15527:15620   */\n      tag_332\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":15645:15647   */\n      0x20\n        /* \"#utility.yul\":15640:15643   */\n      dup3\n        /* \"#utility.yul\":15636:15648   */\n      add\n        /* \"#utility.yul\":15629:15648   */\n      swap1\n      pop\n        /* \"#utility.yul\":15288:15654   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15660:16079   */\n    tag_137:\n        /* \"#utility.yul\":15826:15830   */\n      0x00\n        /* \"#utility.yul\":15864:15866   */\n      0x20\n        /* \"#utility.yul\":15853:15862   */\n      dup3\n        /* \"#utility.yul\":15849:15867   */\n      add\n        /* \"#utility.yul\":15841:15867   */\n      swap1\n      pop\n        /* \"#utility.yul\":15913:15922   */\n      dup2\n        /* \"#utility.yul\":15907:15911   */\n      dup2\n        /* \"#utility.yul\":15903:15923   */\n      sub\n        /* \"#utility.yul\":15899:15900   */\n      0x00\n        /* \"#utility.yul\":15888:15897   */\n      dup4\n        /* \"#utility.yul\":15884:15901   */\n      add\n        /* \"#utility.yul\":15877:15924   */\n      mstore\n        /* \"#utility.yul\":15941:16072   */\n      tag_510\n        /* \"#utility.yul\":16067:16071   */\n      dup2\n        /* \"#utility.yul\":15941:16072   */\n      tag_333\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":15933:16072   */\n      swap1\n      pop\n        /* \"#utility.yul\":15660:16079   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16085:16233   */\n    tag_334:\n        /* \"#utility.yul\":16187:16198   */\n      0x00\n        /* \"#utility.yul\":16224:16227   */\n      dup2\n        /* \"#utility.yul\":16209:16227   */\n      swap1\n      pop\n        /* \"#utility.yul\":16085:16233   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16239:16616   */\n    tag_335:\n        /* \"#utility.yul\":16345:16348   */\n      0x00\n        /* \"#utility.yul\":16373:16412   */\n      tag_513\n        /* \"#utility.yul\":16406:16411   */\n      dup3\n        /* \"#utility.yul\":16373:16412   */\n      tag_299\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":16428:16517   */\n      tag_514\n        /* \"#utility.yul\":16510:16516   */\n      dup2\n        /* \"#utility.yul\":16505:16508   */\n      dup6\n        /* \"#utility.yul\":16428:16517   */\n      tag_334\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":16421:16517   */\n      swap4\n      pop\n        /* \"#utility.yul\":16526:16578   */\n      tag_515\n        /* \"#utility.yul\":16571:16577   */\n      dup2\n        /* \"#utility.yul\":16566:16569   */\n      dup6\n        /* \"#utility.yul\":16559:16563   */\n      0x20\n        /* \"#utility.yul\":16552:16557   */\n      dup7\n        /* \"#utility.yul\":16548:16564   */\n      add\n        /* \"#utility.yul\":16526:16578   */\n      tag_301\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":16603:16609   */\n      dup1\n        /* \"#utility.yul\":16598:16601   */\n      dup5\n        /* \"#utility.yul\":16594:16610   */\n      add\n        /* \"#utility.yul\":16587:16610   */\n      swap2\n      pop\n        /* \"#utility.yul\":16349:16616   */\n      pop\n        /* \"#utility.yul\":16239:16616   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16622:17057   */\n    tag_171:\n        /* \"#utility.yul\":16802:16805   */\n      0x00\n        /* \"#utility.yul\":16824:16919   */\n      tag_517\n        /* \"#utility.yul\":16915:16918   */\n      dup3\n        /* \"#utility.yul\":16906:16912   */\n      dup6\n        /* \"#utility.yul\":16824:16919   */\n      tag_335\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":16817:16919   */\n      swap2\n      pop\n        /* \"#utility.yul\":16936:17031   */\n      tag_518\n        /* \"#utility.yul\":17027:17030   */\n      dup3\n        /* \"#utility.yul\":17018:17024   */\n      dup5\n        /* \"#utility.yul\":16936:17031   */\n      tag_335\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":16929:17031   */\n      swap2\n      pop\n        /* \"#utility.yul\":17048:17051   */\n      dup2\n        /* \"#utility.yul\":17041:17051   */\n      swap1\n      pop\n        /* \"#utility.yul\":16622:17057   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17063:17288   */\n    tag_336:\n        /* \"#utility.yul\":17203:17237   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":17199:17200   */\n      0x00\n        /* \"#utility.yul\":17191:17197   */\n      dup3\n        /* \"#utility.yul\":17187:17201   */\n      add\n        /* \"#utility.yul\":17180:17238   */\n      mstore\n        /* \"#utility.yul\":17272:17280   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17267:17269   */\n      0x20\n        /* \"#utility.yul\":17259:17265   */\n      dup3\n        /* \"#utility.yul\":17255:17270   */\n      add\n        /* \"#utility.yul\":17248:17281   */\n      mstore\n        /* \"#utility.yul\":17063:17288   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17294:17660   */\n    tag_337:\n        /* \"#utility.yul\":17436:17439   */\n      0x00\n        /* \"#utility.yul\":17457:17524   */\n      tag_521\n        /* \"#utility.yul\":17521:17523   */\n      0x26\n        /* \"#utility.yul\":17516:17519   */\n      dup4\n        /* \"#utility.yul\":17457:17524   */\n      tag_300\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":17450:17524   */\n      swap2\n      pop\n        /* \"#utility.yul\":17533:17626   */\n      tag_522\n        /* \"#utility.yul\":17622:17625   */\n      dup3\n        /* \"#utility.yul\":17533:17626   */\n      tag_336\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":17651:17653   */\n      0x40\n        /* \"#utility.yul\":17646:17649   */\n      dup3\n        /* \"#utility.yul\":17642:17654   */\n      add\n        /* \"#utility.yul\":17635:17654   */\n      swap1\n      pop\n        /* \"#utility.yul\":17294:17660   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17666:18085   */\n    tag_178:\n        /* \"#utility.yul\":17832:17836   */\n      0x00\n        /* \"#utility.yul\":17870:17872   */\n      0x20\n        /* \"#utility.yul\":17859:17868   */\n      dup3\n        /* \"#utility.yul\":17855:17873   */\n      add\n        /* \"#utility.yul\":17847:17873   */\n      swap1\n      pop\n        /* \"#utility.yul\":17919:17928   */\n      dup2\n        /* \"#utility.yul\":17913:17917   */\n      dup2\n        /* \"#utility.yul\":17909:17929   */\n      sub\n        /* \"#utility.yul\":17905:17906   */\n      0x00\n        /* \"#utility.yul\":17894:17903   */\n      dup4\n        /* \"#utility.yul\":17890:17907   */\n      add\n        /* \"#utility.yul\":17883:17930   */\n      mstore\n        /* \"#utility.yul\":17947:18078   */\n      tag_524\n        /* \"#utility.yul\":18073:18077   */\n      dup2\n        /* \"#utility.yul\":17947:18078   */\n      tag_337\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":17939:18078   */\n      swap1\n      pop\n        /* \"#utility.yul\":17666:18085   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18091:18315   */\n    tag_338:\n        /* \"#utility.yul\":18231:18265   */\n      0x4552433732313a207472616e736665722066726f6d20696e636f727265637420\n        /* \"#utility.yul\":18227:18228   */\n      0x00\n        /* \"#utility.yul\":18219:18225   */\n      dup3\n        /* \"#utility.yul\":18215:18229   */\n      add\n        /* \"#utility.yul\":18208:18266   */\n      mstore\n        /* \"#utility.yul\":18300:18307   */\n      0x6f776e6572000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18295:18297   */\n      0x20\n        /* \"#utility.yul\":18287:18293   */\n      dup3\n        /* \"#utility.yul\":18283:18298   */\n      add\n        /* \"#utility.yul\":18276:18308   */\n      mstore\n        /* \"#utility.yul\":18091:18315   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18321:18687   */\n    tag_339:\n        /* \"#utility.yul\":18463:18466   */\n      0x00\n        /* \"#utility.yul\":18484:18551   */\n      tag_527\n        /* \"#utility.yul\":18548:18550   */\n      0x25\n        /* \"#utility.yul\":18543:18546   */\n      dup4\n        /* \"#utility.yul\":18484:18551   */\n      tag_300\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":18477:18551   */\n      swap2\n      pop\n        /* \"#utility.yul\":18560:18653   */\n      tag_528\n        /* \"#utility.yul\":18649:18652   */\n      dup3\n        /* \"#utility.yul\":18560:18653   */\n      tag_338\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":18678:18680   */\n      0x40\n        /* \"#utility.yul\":18673:18676   */\n      dup3\n        /* \"#utility.yul\":18669:18681   */\n      add\n        /* \"#utility.yul\":18662:18681   */\n      swap1\n      pop\n        /* \"#utility.yul\":18321:18687   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18693:19112   */\n    tag_199:\n        /* \"#utility.yul\":18859:18863   */\n      0x00\n        /* \"#utility.yul\":18897:18899   */\n      0x20\n        /* \"#utility.yul\":18886:18895   */\n      dup3\n        /* \"#utility.yul\":18882:18900   */\n      add\n        /* \"#utility.yul\":18874:18900   */\n      swap1\n      pop\n        /* \"#utility.yul\":18946:18955   */\n      dup2\n        /* \"#utility.yul\":18940:18944   */\n      dup2\n        /* \"#utility.yul\":18936:18956   */\n      sub\n        /* \"#utility.yul\":18932:18933   */\n      0x00\n        /* \"#utility.yul\":18921:18930   */\n      dup4\n        /* \"#utility.yul\":18917:18934   */\n      add\n        /* \"#utility.yul\":18910:18957   */\n      mstore\n        /* \"#utility.yul\":18974:19105   */\n      tag_530\n        /* \"#utility.yul\":19100:19104   */\n      dup2\n        /* \"#utility.yul\":18974:19105   */\n      tag_339\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":18966:19105   */\n      swap1\n      pop\n        /* \"#utility.yul\":18693:19112   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19118:19341   */\n    tag_340:\n        /* \"#utility.yul\":19258:19292   */\n      0x4552433732313a207472616e7366657220746f20746865207a65726f20616464\n        /* \"#utility.yul\":19254:19255   */\n      0x00\n        /* \"#utility.yul\":19246:19252   */\n      dup3\n        /* \"#utility.yul\":19242:19256   */\n      add\n        /* \"#utility.yul\":19235:19293   */\n      mstore\n        /* \"#utility.yul\":19327:19333   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19322:19324   */\n      0x20\n        /* \"#utility.yul\":19314:19320   */\n      dup3\n        /* \"#utility.yul\":19310:19325   */\n      add\n        /* \"#utility.yul\":19303:19334   */\n      mstore\n        /* \"#utility.yul\":19118:19341   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19347:19713   */\n    tag_341:\n        /* \"#utility.yul\":19489:19492   */\n      0x00\n        /* \"#utility.yul\":19510:19577   */\n      tag_533\n        /* \"#utility.yul\":19574:19576   */\n      0x24\n        /* \"#utility.yul\":19569:19572   */\n      dup4\n        /* \"#utility.yul\":19510:19577   */\n      tag_300\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":19503:19577   */\n      swap2\n      pop\n        /* \"#utility.yul\":19586:19679   */\n      tag_534\n        /* \"#utility.yul\":19675:19678   */\n      dup3\n        /* \"#utility.yul\":19586:19679   */\n      tag_340\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":19704:19706   */\n      0x40\n        /* \"#utility.yul\":19699:19702   */\n      dup3\n        /* \"#utility.yul\":19695:19707   */\n      add\n        /* \"#utility.yul\":19688:19707   */\n      swap1\n      pop\n        /* \"#utility.yul\":19347:19713   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19719:20138   */\n    tag_202:\n        /* \"#utility.yul\":19885:19889   */\n      0x00\n        /* \"#utility.yul\":19923:19925   */\n      0x20\n        /* \"#utility.yul\":19912:19921   */\n      dup3\n        /* \"#utility.yul\":19908:19926   */\n      add\n        /* \"#utility.yul\":19900:19926   */\n      swap1\n      pop\n        /* \"#utility.yul\":19972:19981   */\n      dup2\n        /* \"#utility.yul\":19966:19970   */\n      dup2\n        /* \"#utility.yul\":19962:19982   */\n      sub\n        /* \"#utility.yul\":19958:19959   */\n      0x00\n        /* \"#utility.yul\":19947:19956   */\n      dup4\n        /* \"#utility.yul\":19943:19960   */\n      add\n        /* \"#utility.yul\":19936:19983   */\n      mstore\n        /* \"#utility.yul\":20000:20131   */\n      tag_536\n        /* \"#utility.yul\":20126:20130   */\n      dup2\n        /* \"#utility.yul\":20000:20131   */\n      tag_341\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":19992:20131   */\n      swap1\n      pop\n        /* \"#utility.yul\":19719:20138   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20144:20326   */\n    tag_342:\n        /* \"#utility.yul\":20284:20318   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":20280:20281   */\n      0x00\n        /* \"#utility.yul\":20272:20278   */\n      dup3\n        /* \"#utility.yul\":20268:20282   */\n      add\n        /* \"#utility.yul\":20261:20319   */\n      mstore\n        /* \"#utility.yul\":20144:20326   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20332:20698   */\n    tag_343:\n        /* \"#utility.yul\":20474:20477   */\n      0x00\n        /* \"#utility.yul\":20495:20562   */\n      tag_539\n        /* \"#utility.yul\":20559:20561   */\n      0x20\n        /* \"#utility.yul\":20554:20557   */\n      dup4\n        /* \"#utility.yul\":20495:20562   */\n      tag_300\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":20488:20562   */\n      swap2\n      pop\n        /* \"#utility.yul\":20571:20664   */\n      tag_540\n        /* \"#utility.yul\":20660:20663   */\n      dup3\n        /* \"#utility.yul\":20571:20664   */\n      tag_342\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":20689:20691   */\n      0x20\n        /* \"#utility.yul\":20684:20687   */\n      dup3\n        /* \"#utility.yul\":20680:20692   */\n      add\n        /* \"#utility.yul\":20673:20692   */\n      swap1\n      pop\n        /* \"#utility.yul\":20332:20698   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20704:21123   */\n    tag_216:\n        /* \"#utility.yul\":20870:20874   */\n      0x00\n        /* \"#utility.yul\":20908:20910   */\n      0x20\n        /* \"#utility.yul\":20897:20906   */\n      dup3\n        /* \"#utility.yul\":20893:20911   */\n      add\n        /* \"#utility.yul\":20885:20911   */\n      swap1\n      pop\n        /* \"#utility.yul\":20957:20966   */\n      dup2\n        /* \"#utility.yul\":20951:20955   */\n      dup2\n        /* \"#utility.yul\":20947:20967   */\n      sub\n        /* \"#utility.yul\":20943:20944   */\n      0x00\n        /* \"#utility.yul\":20932:20941   */\n      dup4\n        /* \"#utility.yul\":20928:20945   */\n      add\n        /* \"#utility.yul\":20921:20968   */\n      mstore\n        /* \"#utility.yul\":20985:21116   */\n      tag_542\n        /* \"#utility.yul\":21111:21115   */\n      dup2\n        /* \"#utility.yul\":20985:21116   */\n      tag_343\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":20977:21116   */\n      swap1\n      pop\n        /* \"#utility.yul\":20704:21123   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21129:21304   */\n    tag_344:\n        /* \"#utility.yul\":21269:21296   */\n      0x4552433732313a20617070726f766520746f2063616c6c657200000000000000\n        /* \"#utility.yul\":21265:21266   */\n      0x00\n        /* \"#utility.yul\":21257:21263   */\n      dup3\n        /* \"#utility.yul\":21253:21267   */\n      add\n        /* \"#utility.yul\":21246:21297   */\n      mstore\n        /* \"#utility.yul\":21129:21304   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21310:21676   */\n    tag_345:\n        /* \"#utility.yul\":21452:21455   */\n      0x00\n        /* \"#utility.yul\":21473:21540   */\n      tag_545\n        /* \"#utility.yul\":21537:21539   */\n      0x19\n        /* \"#utility.yul\":21532:21535   */\n      dup4\n        /* \"#utility.yul\":21473:21540   */\n      tag_300\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":21466:21540   */\n      swap2\n      pop\n        /* \"#utility.yul\":21549:21642   */\n      tag_546\n        /* \"#utility.yul\":21638:21641   */\n      dup3\n        /* \"#utility.yul\":21549:21642   */\n      tag_344\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":21667:21669   */\n      0x20\n        /* \"#utility.yul\":21662:21665   */\n      dup3\n        /* \"#utility.yul\":21658:21670   */\n      add\n        /* \"#utility.yul\":21651:21670   */\n      swap1\n      pop\n        /* \"#utility.yul\":21310:21676   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21682:22101   */\n    tag_221:\n        /* \"#utility.yul\":21848:21852   */\n      0x00\n        /* \"#utility.yul\":21886:21888   */\n      0x20\n        /* \"#utility.yul\":21875:21884   */\n      dup3\n        /* \"#utility.yul\":21871:21889   */\n      add\n        /* \"#utility.yul\":21863:21889   */\n      swap1\n      pop\n        /* \"#utility.yul\":21935:21944   */\n      dup2\n        /* \"#utility.yul\":21929:21933   */\n      dup2\n        /* \"#utility.yul\":21925:21945   */\n      sub\n        /* \"#utility.yul\":21921:21922   */\n      0x00\n        /* \"#utility.yul\":21910:21919   */\n      dup4\n        /* \"#utility.yul\":21906:21923   */\n      add\n        /* \"#utility.yul\":21899:21946   */\n      mstore\n        /* \"#utility.yul\":21963:22094   */\n      tag_548\n        /* \"#utility.yul\":22089:22093   */\n      dup2\n        /* \"#utility.yul\":21963:22094   */\n      tag_345\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":21955:22094   */\n      swap1\n      pop\n        /* \"#utility.yul\":21682:22101   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22107:22344   */\n    tag_346:\n        /* \"#utility.yul\":22247:22281   */\n      0x4552433732313a207472616e7366657220746f206e6f6e204552433732315265\n        /* \"#utility.yul\":22243:22244   */\n      0x00\n        /* \"#utility.yul\":22235:22241   */\n      dup3\n        /* \"#utility.yul\":22231:22245   */\n      add\n        /* \"#utility.yul\":22224:22282   */\n      mstore\n        /* \"#utility.yul\":22316:22336   */\n      0x63656976657220696d706c656d656e7465720000000000000000000000000000\n        /* \"#utility.yul\":22311:22313   */\n      0x20\n        /* \"#utility.yul\":22303:22309   */\n      dup3\n        /* \"#utility.yul\":22299:22314   */\n      add\n        /* \"#utility.yul\":22292:22337   */\n      mstore\n        /* \"#utility.yul\":22107:22344   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22350:22716   */\n    tag_347:\n        /* \"#utility.yul\":22492:22495   */\n      0x00\n        /* \"#utility.yul\":22513:22580   */\n      tag_551\n        /* \"#utility.yul\":22577:22579   */\n      0x32\n        /* \"#utility.yul\":22572:22575   */\n      dup4\n        /* \"#utility.yul\":22513:22580   */\n      tag_300\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":22506:22580   */\n      swap2\n      pop\n        /* \"#utility.yul\":22589:22682   */\n      tag_552\n        /* \"#utility.yul\":22678:22681   */\n      dup3\n        /* \"#utility.yul\":22589:22682   */\n      tag_346\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":22707:22709   */\n      0x40\n        /* \"#utility.yul\":22702:22705   */\n      dup3\n        /* \"#utility.yul\":22698:22710   */\n      add\n        /* \"#utility.yul\":22691:22710   */\n      swap1\n      pop\n        /* \"#utility.yul\":22350:22716   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22722:23141   */\n    tag_229:\n        /* \"#utility.yul\":22888:22892   */\n      0x00\n        /* \"#utility.yul\":22926:22928   */\n      0x20\n        /* \"#utility.yul\":22915:22924   */\n      dup3\n        /* \"#utility.yul\":22911:22929   */\n      add\n        /* \"#utility.yul\":22903:22929   */\n      swap1\n      pop\n        /* \"#utility.yul\":22975:22984   */\n      dup2\n        /* \"#utility.yul\":22969:22973   */\n      dup2\n        /* \"#utility.yul\":22965:22985   */\n      sub\n        /* \"#utility.yul\":22961:22962   */\n      0x00\n        /* \"#utility.yul\":22950:22959   */\n      dup4\n        /* \"#utility.yul\":22946:22963   */\n      add\n        /* \"#utility.yul\":22939:22986   */\n      mstore\n        /* \"#utility.yul\":23003:23134   */\n      tag_554\n        /* \"#utility.yul\":23129:23133   */\n      dup2\n        /* \"#utility.yul\":23003:23134   */\n      tag_347\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":22995:23134   */\n      swap1\n      pop\n        /* \"#utility.yul\":22722:23141   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23147:23327   */\n    tag_242:\n        /* \"#utility.yul\":23195:23272   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":23192:23193   */\n      0x00\n        /* \"#utility.yul\":23185:23273   */\n      mstore\n        /* \"#utility.yul\":23292:23296   */\n      0x12\n        /* \"#utility.yul\":23289:23290   */\n      0x04\n        /* \"#utility.yul\":23282:23297   */\n      mstore\n        /* \"#utility.yul\":23316:23320   */\n      0x24\n        /* \"#utility.yul\":23313:23314   */\n      0x00\n        /* \"#utility.yul\":23306:23321   */\n      revert\n        /* \"#utility.yul\":23333:23431   */\n    tag_348:\n        /* \"#utility.yul\":23384:23390   */\n      0x00\n        /* \"#utility.yul\":23418:23423   */\n      dup2\n        /* \"#utility.yul\":23412:23424   */\n      mload\n        /* \"#utility.yul\":23402:23424   */\n      swap1\n      pop\n        /* \"#utility.yul\":23333:23431   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23437:23605   */\n    tag_349:\n        /* \"#utility.yul\":23520:23531   */\n      0x00\n        /* \"#utility.yul\":23554:23560   */\n      dup3\n        /* \"#utility.yul\":23549:23552   */\n      dup3\n        /* \"#utility.yul\":23542:23561   */\n      mstore\n        /* \"#utility.yul\":23594:23598   */\n      0x20\n        /* \"#utility.yul\":23589:23592   */\n      dup3\n        /* \"#utility.yul\":23585:23599   */\n      add\n        /* \"#utility.yul\":23570:23599   */\n      swap1\n      pop\n        /* \"#utility.yul\":23437:23605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23611:23971   */\n    tag_350:\n        /* \"#utility.yul\":23697:23700   */\n      0x00\n        /* \"#utility.yul\":23725:23763   */\n      tag_559\n        /* \"#utility.yul\":23757:23762   */\n      dup3\n        /* \"#utility.yul\":23725:23763   */\n      tag_348\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":23779:23849   */\n      tag_560\n        /* \"#utility.yul\":23842:23848   */\n      dup2\n        /* \"#utility.yul\":23837:23840   */\n      dup6\n        /* \"#utility.yul\":23779:23849   */\n      tag_349\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":23772:23849   */\n      swap4\n      pop\n        /* \"#utility.yul\":23858:23910   */\n      tag_561\n        /* \"#utility.yul\":23903:23909   */\n      dup2\n        /* \"#utility.yul\":23898:23901   */\n      dup6\n        /* \"#utility.yul\":23891:23895   */\n      0x20\n        /* \"#utility.yul\":23884:23889   */\n      dup7\n        /* \"#utility.yul\":23880:23896   */\n      add\n        /* \"#utility.yul\":23858:23910   */\n      tag_301\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":23935:23964   */\n      tag_562\n        /* \"#utility.yul\":23957:23963   */\n      dup2\n        /* \"#utility.yul\":23935:23964   */\n      tag_302\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":23930:23933   */\n      dup5\n        /* \"#utility.yul\":23926:23965   */\n      add\n        /* \"#utility.yul\":23919:23965   */\n      swap2\n      pop\n        /* \"#utility.yul\":23701:23971   */\n      pop\n        /* \"#utility.yul\":23611:23971   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23977:24617   */\n    tag_254:\n        /* \"#utility.yul\":24172:24176   */\n      0x00\n        /* \"#utility.yul\":24210:24213   */\n      0x80\n        /* \"#utility.yul\":24199:24208   */\n      dup3\n        /* \"#utility.yul\":24195:24214   */\n      add\n        /* \"#utility.yul\":24187:24214   */\n      swap1\n      pop\n        /* \"#utility.yul\":24224:24295   */\n      tag_564\n        /* \"#utility.yul\":24292:24293   */\n      0x00\n        /* \"#utility.yul\":24281:24290   */\n      dup4\n        /* \"#utility.yul\":24277:24294   */\n      add\n        /* \"#utility.yul\":24268:24274   */\n      dup8\n        /* \"#utility.yul\":24224:24295   */\n      tag_309\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":24305:24377   */\n      tag_565\n        /* \"#utility.yul\":24373:24375   */\n      0x20\n        /* \"#utility.yul\":24362:24371   */\n      dup4\n        /* \"#utility.yul\":24358:24376   */\n      add\n        /* \"#utility.yul\":24349:24355   */\n      dup7\n        /* \"#utility.yul\":24305:24377   */\n      tag_309\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":24387:24459   */\n      tag_566\n        /* \"#utility.yul\":24455:24457   */\n      0x40\n        /* \"#utility.yul\":24444:24453   */\n      dup4\n        /* \"#utility.yul\":24440:24458   */\n      add\n        /* \"#utility.yul\":24431:24437   */\n      dup6\n        /* \"#utility.yul\":24387:24459   */\n      tag_312\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":24506:24515   */\n      dup2\n        /* \"#utility.yul\":24500:24504   */\n      dup2\n        /* \"#utility.yul\":24496:24516   */\n      sub\n        /* \"#utility.yul\":24491:24493   */\n      0x60\n        /* \"#utility.yul\":24480:24489   */\n      dup4\n        /* \"#utility.yul\":24476:24494   */\n      add\n        /* \"#utility.yul\":24469:24517   */\n      mstore\n        /* \"#utility.yul\":24534:24610   */\n      tag_567\n        /* \"#utility.yul\":24605:24609   */\n      dup2\n        /* \"#utility.yul\":24596:24602   */\n      dup5\n        /* \"#utility.yul\":24534:24610   */\n      tag_350\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":24526:24610   */\n      swap1\n      pop\n        /* \"#utility.yul\":23977:24617   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24623:24764   */\n    tag_351:\n        /* \"#utility.yul\":24679:24684   */\n      0x00\n        /* \"#utility.yul\":24710:24716   */\n      dup2\n        /* \"#utility.yul\":24704:24717   */\n      mload\n        /* \"#utility.yul\":24695:24717   */\n      swap1\n      pop\n        /* \"#utility.yul\":24726:24758   */\n      tag_569\n        /* \"#utility.yul\":24752:24757   */\n      dup2\n        /* \"#utility.yul\":24726:24758   */\n      tag_295\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":24623:24764   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24770:25119   */\n    tag_258:\n        /* \"#utility.yul\":24839:24845   */\n      0x00\n        /* \"#utility.yul\":24888:24890   */\n      0x20\n        /* \"#utility.yul\":24876:24885   */\n      dup3\n        /* \"#utility.yul\":24867:24874   */\n      dup5\n        /* \"#utility.yul\":24863:24886   */\n      sub\n        /* \"#utility.yul\":24859:24891   */\n      slt\n        /* \"#utility.yul\":24856:24975   */\n      iszero\n      tag_571\n      jumpi\n        /* \"#utility.yul\":24894:24973   */\n      tag_572\n      tag_292\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":24856:24975   */\n    tag_571:\n        /* \"#utility.yul\":25014:25015   */\n      0x00\n        /* \"#utility.yul\":25039:25102   */\n      tag_573\n        /* \"#utility.yul\":25094:25101   */\n      dup5\n        /* \"#utility.yul\":25085:25091   */\n      dup3\n        /* \"#utility.yul\":25074:25083   */\n      dup6\n        /* \"#utility.yul\":25070:25092   */\n      add\n        /* \"#utility.yul\":25039:25102   */\n      tag_351\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":25029:25102   */\n      swap2\n      pop\n        /* \"#utility.yul\":24985:25112   */\n      pop\n        /* \"#utility.yul\":24770:25119   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f086b1de4397bf00eb6648755a030c368b50ab9b2ac5421b65e56bb20ce0f57d64736f6c63430008090033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_231": {
									"entryPoint": null,
									"id": 231,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_77": {
									"entryPoint": null,
									"id": 77,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_11": {
									"entryPoint": 145,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_165": {
									"entryPoint": 153,
									"id": 165,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 812,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 887,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 938,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_memory": {
									"entryPoint": 673,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 525,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 704,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 758,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 1118,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 619,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1071,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 572,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 545,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 550,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 540,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 535,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 555,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4093:12",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "423:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:12:12"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "563:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "566:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "556:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "556:12:12"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "628:54:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "638:38:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "663:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "672:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:28:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:12"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "611:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "621:6:12",
														"type": ""
													}
												],
												"src": "580:102:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "716:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "733:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "736:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "726:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "830:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "833:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "823:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "823:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "854:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "857:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "847:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "847:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:238:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "945:40:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "931:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1096:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1033:62:12"
															},
															"nodeType": "YulIf",
															"src": "1030:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1127:22:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:12"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "903:6:12",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "911:4:12",
														"type": ""
													}
												],
												"src": "874:281:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1202:88:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1212:30:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:20:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:12"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:12"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:12"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1186:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1195:6:12",
														"type": ""
													}
												],
												"src": "1161:129:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1363:241:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1468:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1437:30:12"
															},
															"nodeType": "YulIf",
															"src": "1434:56:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1500:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:12"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1508:29:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1574:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:15:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:12"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1347:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1358:4:12",
														"type": ""
													}
												],
												"src": "1296:308:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1659:258:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1669:10:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1678:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1673:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1738:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1763:3:12"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1768:1:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1759:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1759:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1782:3:12"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1787:1:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1778:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1778:11:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1772:5:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1772:18:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1752:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1752:39:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1752:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1699:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1702:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1696:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1696:13:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1710:19:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1712:15:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1721:1:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1724:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1717:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1717:10:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1712:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1692:3:12",
																"statements": []
															},
															"src": "1688:113:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1835:76:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1885:3:12"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "1890:6:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1881:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1881:16:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1899:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1874:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1874:27:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1874:27:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1816:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1819:6:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1813:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1813:13:12"
															},
															"nodeType": "YulIf",
															"src": "1810:101:12"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1641:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1646:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1651:6:12",
														"type": ""
													}
												],
												"src": "1610:307:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2018:326:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2028:75:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2095:6:12"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "2053:41:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2053:49:12"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2037:15:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2037:66:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2028:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2119:5:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2126:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2112:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2112:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2112:21:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2142:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2157:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2164:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2153:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2153:16:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2146:3:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2207:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "2209:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2209:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2209:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2188:3:12"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2193:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2184:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2184:16:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2202:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2181:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2181:25:12"
															},
															"nodeType": "YulIf",
															"src": "2178:112:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2321:3:12"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2326:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2331:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2299:21:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2299:39:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2299:39:12"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1991:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1996:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2004:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2012:5:12",
														"type": ""
													}
												],
												"src": "1923:421:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2437:282:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2486:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2488:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2488:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2488:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2465:6:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2473:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2461:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2461:17:12"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2480:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2457:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2457:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2450:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2450:35:12"
															},
															"nodeType": "YulIf",
															"src": "2447:122:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2578:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2598:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2592:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2592:13:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2582:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2614:99:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2686:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2694:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2682:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2682:17:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2701:6:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2709:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2623:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2623:90:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2614:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2415:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2423:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2431:5:12",
														"type": ""
													}
												],
												"src": "2364:355:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2839:739:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2885:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2887:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2887:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2887:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2869:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2856:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2856:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2881:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2852:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2852:32:12"
															},
															"nodeType": "YulIf",
															"src": "2849:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "2978:291:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2993:38:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3017:9:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3028:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3013:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3013:17:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3007:5:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3007:24:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2997:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3078:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3080:77:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3080:79:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3080:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3050:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3058:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3047:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3047:30:12"
																	},
																	"nodeType": "YulIf",
																	"src": "3044:117:12"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3175:84:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3231:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3242:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3227:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3227:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3251:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3185:41:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3185:74:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3175:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3279:292:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3294:39:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3318:9:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3329:2:12",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3314:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3314:18:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3308:5:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3308:25:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3298:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3380:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3382:77:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3382:79:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3382:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3352:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3360:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3349:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3349:30:12"
																	},
																	"nodeType": "YulIf",
																	"src": "3346:117:12"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3477:84:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3533:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3544:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3529:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3529:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3553:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3487:41:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3487:74:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3477:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2801:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2812:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2824:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2832:6:12",
														"type": ""
													}
												],
												"src": "2725:853:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3612:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3629:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3632:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3622:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3622:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3622:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3726:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3729:4:12",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3719:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3719:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3719:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3750:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3753:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3743:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3743:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3743:15:12"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "3584:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3821:269:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3831:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3845:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3851:1:12",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3841:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3841:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3831:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3862:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3892:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3898:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3888:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3888:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "3866:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3939:51:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3953:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "3967:6:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3975:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "3963:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3963:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3953:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3919:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3912:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3912:26:12"
															},
															"nodeType": "YulIf",
															"src": "3909:81:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4042:42:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "4056:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4056:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4056:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4006:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4029:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4037:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4026:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4026:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4003:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4003:38:12"
															},
															"nodeType": "YulIf",
															"src": "4000:84:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3805:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3814:6:12",
														"type": ""
													}
												],
												"src": "3770:320:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040516200293d3803806200293d8339818101604052810190620000379190620003aa565b620000576200004b6200009160201b60201c565b6200009960201b60201c565b81600190805190602001906200006f9291906200015d565b508060029080519060200190620000889291906200015d565b50505062000494565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b8280546200016b906200045e565b90600052602060002090601f0160209004810192826200018f5760008555620001db565b82601f10620001aa57805160ff1916838001178555620001db565b82800160010185558215620001db579182015b82811115620001da578251825591602001919060010190620001bd565b5b509050620001ea9190620001ee565b5090565b5b8082111562000209576000816000905550600101620001ef565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b62000276826200022b565b810181811067ffffffffffffffff821117156200029857620002976200023c565b5b80604052505050565b6000620002ad6200020d565b9050620002bb82826200026b565b919050565b600067ffffffffffffffff821115620002de57620002dd6200023c565b5b620002e9826200022b565b9050602081019050919050565b60005b8381101562000316578082015181840152602081019050620002f9565b8381111562000326576000848401525b50505050565b6000620003436200033d84620002c0565b620002a1565b90508281526020810184848401111562000362576200036162000226565b5b6200036f848285620002f6565b509392505050565b600082601f8301126200038f576200038e62000221565b5b8151620003a18482602086016200032c565b91505092915050565b60008060408385031215620003c457620003c362000217565b5b600083015167ffffffffffffffff811115620003e557620003e46200021c565b5b620003f38582860162000377565b925050602083015167ffffffffffffffff8111156200041757620004166200021c565b5b620004258582860162000377565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200047757607f821691505b602082108114156200048e576200048d6200042f565b5b50919050565b61249980620004a46000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063715018a611610097578063b88d4fde11610066578063b88d4fde14610299578063c87b56dd146102b5578063e985e9c5146102e5578063f2fde38b1461031557610100565b8063715018a6146102375780638da5cb5b1461024157806395d89b411461025f578063a22cb4651461027d57610100565b806323b872dd116100d357806323b872dd1461019f57806342842e0e146101bb5780636352211e146101d757806370a082311461020757610100565b806301ffc9a71461010557806306fdde0314610135578063081812fc14610153578063095ea7b314610183575b600080fd5b61011f600480360381019061011a919061178b565b610331565b60405161012c91906117d3565b60405180910390f35b61013d610413565b60405161014a9190611887565b60405180910390f35b61016d600480360381019061016891906118df565b6104a5565b60405161017a919061194d565b60405180910390f35b61019d60048036038101906101989190611994565b6104eb565b005b6101b960048036038101906101b491906119d4565b610603565b005b6101d560048036038101906101d091906119d4565b610663565b005b6101f160048036038101906101ec91906118df565b610683565b6040516101fe919061194d565b60405180910390f35b610221600480360381019061021c9190611a27565b61070a565b60405161022e9190611a63565b60405180910390f35b61023f6107c2565b005b6102496107d6565b604051610256919061194d565b60405180910390f35b6102676107ff565b6040516102749190611887565b60405180910390f35b61029760048036038101906102929190611aaa565b610891565b005b6102b360048036038101906102ae9190611c1f565b6108a7565b005b6102cf60048036038101906102ca91906118df565b610909565b6040516102dc9190611887565b60405180910390f35b6102ff60048036038101906102fa9190611ca2565b610971565b60405161030c91906117d3565b60405180910390f35b61032f600480360381019061032a9190611a27565b610a05565b005b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103fc57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061040c575061040b82610a89565b5b9050919050565b60606001805461042290611d11565b80601f016020809104026020016040519081016040528092919081815260200182805461044e90611d11565b801561049b5780601f106104705761010080835404028352916020019161049b565b820191906000526020600020905b81548152906001019060200180831161047e57829003601f168201915b5050505050905090565b60006104b082610af3565b6005600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104f682610683565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610567576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055e90611db5565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610586610b3e565b73ffffffffffffffffffffffffffffffffffffffff1614806105b557506105b4816105af610b3e565b610971565b5b6105f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105eb90611e47565b60405180910390fd5b6105fe8383610b46565b505050565b61061461060e610b3e565b82610bff565b610653576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064a90611ed9565b60405180910390fd5b61065e838383610c94565b505050565b61067e838383604051806020016040528060008152506108a7565b505050565b60008061068f83610f8e565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610701576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f890611f45565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561077b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077290611fb1565b60405180910390fd5b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6107ca610fcb565b6107d46000611049565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606002805461080e90611d11565b80601f016020809104026020016040519081016040528092919081815260200182805461083a90611d11565b80156108875780601f1061085c57610100808354040283529160200191610887565b820191906000526020600020905b81548152906001019060200180831161086a57829003601f168201915b5050505050905090565b6108a361089c610b3e565b838361110d565b5050565b6108b86108b2610b3e565b83610bff565b6108f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ee90611ed9565b60405180910390fd5b6109038484848461127a565b50505050565b606061091482610af3565b600061091e6112d6565b9050600081511161093e5760405180602001604052806000815250610969565b80610948846112ed565b60405160200161095992919061200d565b6040516020818303038152906040525b915050919050565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b610a0d610fcb565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610a7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a74906120a3565b60405180910390fd5b610a8681611049565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610afc816113c5565b610b3b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b3290611f45565b60405180910390fd5b50565b600033905090565b816005600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610bb983610683565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610c0b83610683565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610c4d5750610c4c8185610971565b5b80610c8b57508373ffffffffffffffffffffffffffffffffffffffff16610c73846104a5565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610cb482610683565b73ffffffffffffffffffffffffffffffffffffffff1614610d0a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0190612135565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d7a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d71906121c7565b60405180910390fd5b610d878383836001611406565b8273ffffffffffffffffffffffffffffffffffffffff16610da782610683565b73ffffffffffffffffffffffffffffffffffffffff1614610dfd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610df490612135565b60405180910390fd5b6005600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506001600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610f89838383600161140c565b505050565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b610fd3610b3e565b73ffffffffffffffffffffffffffffffffffffffff16610ff16107d6565b73ffffffffffffffffffffffffffffffffffffffff1614611047576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161103e90612233565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561117c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111739061229f565b60405180910390fd5b80600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161126d91906117d3565b60405180910390a3505050565b611285848484610c94565b61129184848484611412565b6112d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112c790612331565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b6060600060016112fc846115a9565b01905060008167ffffffffffffffff81111561131b5761131a611af4565b5b6040519080825280601f01601f19166020018201604052801561134d5781602001600182028036833780820191505090505b509050600082602001820190505b6001156113ba578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816113a4576113a3612351565b5b04945060008514156113b5576113ba565b61135b565b819350505050919050565b60008073ffffffffffffffffffffffffffffffffffffffff166113e783610f8e565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b50505050565b50505050565b60006114338473ffffffffffffffffffffffffffffffffffffffff166116fc565b1561159c578373ffffffffffffffffffffffffffffffffffffffff1663150b7a0261145c610b3e565b8786866040518563ffffffff1660e01b815260040161147e94939291906123d5565b602060405180830381600087803b15801561149857600080fd5b505af19250505080156114c957506040513d601f19601f820116820180604052508101906114c69190612436565b60015b61154c573d80600081146114f9576040519150601f19603f3d011682016040523d82523d6000602084013e6114fe565b606091505b50600081511415611544576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161153b90612331565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150506115a1565b600190505b949350505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611607577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816115fd576115fc612351565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611644576d04ee2d6d415b85acef8100000000838161163a57611639612351565b5b0492506020810190505b662386f26fc10000831061167357662386f26fc10000838161166957611668612351565b5b0492506010810190505b6305f5e100831061169c576305f5e100838161169257611691612351565b5b0492506008810190505b61271083106116c15761271083816116b7576116b6612351565b5b0492506004810190505b606483106116e457606483816116da576116d9612351565b5b0492506002810190505b600a83106116f3576001810190505b80915050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61176881611733565b811461177357600080fd5b50565b6000813590506117858161175f565b92915050565b6000602082840312156117a1576117a0611729565b5b60006117af84828501611776565b91505092915050565b60008115159050919050565b6117cd816117b8565b82525050565b60006020820190506117e860008301846117c4565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561182857808201518184015260208101905061180d565b83811115611837576000848401525b50505050565b6000601f19601f8301169050919050565b6000611859826117ee565b61186381856117f9565b935061187381856020860161180a565b61187c8161183d565b840191505092915050565b600060208201905081810360008301526118a1818461184e565b905092915050565b6000819050919050565b6118bc816118a9565b81146118c757600080fd5b50565b6000813590506118d9816118b3565b92915050565b6000602082840312156118f5576118f4611729565b5b6000611903848285016118ca565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006119378261190c565b9050919050565b6119478161192c565b82525050565b6000602082019050611962600083018461193e565b92915050565b6119718161192c565b811461197c57600080fd5b50565b60008135905061198e81611968565b92915050565b600080604083850312156119ab576119aa611729565b5b60006119b98582860161197f565b92505060206119ca858286016118ca565b9150509250929050565b6000806000606084860312156119ed576119ec611729565b5b60006119fb8682870161197f565b9350506020611a0c8682870161197f565b9250506040611a1d868287016118ca565b9150509250925092565b600060208284031215611a3d57611a3c611729565b5b6000611a4b8482850161197f565b91505092915050565b611a5d816118a9565b82525050565b6000602082019050611a786000830184611a54565b92915050565b611a87816117b8565b8114611a9257600080fd5b50565b600081359050611aa481611a7e565b92915050565b60008060408385031215611ac157611ac0611729565b5b6000611acf8582860161197f565b9250506020611ae085828601611a95565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611b2c8261183d565b810181811067ffffffffffffffff82111715611b4b57611b4a611af4565b5b80604052505050565b6000611b5e61171f565b9050611b6a8282611b23565b919050565b600067ffffffffffffffff821115611b8a57611b89611af4565b5b611b938261183d565b9050602081019050919050565b82818337600083830152505050565b6000611bc2611bbd84611b6f565b611b54565b905082815260208101848484011115611bde57611bdd611aef565b5b611be9848285611ba0565b509392505050565b600082601f830112611c0657611c05611aea565b5b8135611c16848260208601611baf565b91505092915050565b60008060008060808587031215611c3957611c38611729565b5b6000611c478782880161197f565b9450506020611c588782880161197f565b9350506040611c69878288016118ca565b925050606085013567ffffffffffffffff811115611c8a57611c8961172e565b5b611c9687828801611bf1565b91505092959194509250565b60008060408385031215611cb957611cb8611729565b5b6000611cc78582860161197f565b9250506020611cd88582860161197f565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611d2957607f821691505b60208210811415611d3d57611d3c611ce2565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b6000611d9f6021836117f9565b9150611daa82611d43565b604082019050919050565b60006020820190508181036000830152611dce81611d92565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b6000611e31603d836117f9565b9150611e3c82611dd5565b604082019050919050565b60006020820190508181036000830152611e6081611e24565b9050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b6000611ec3602d836117f9565b9150611ece82611e67565b604082019050919050565b60006020820190508181036000830152611ef281611eb6565b9050919050565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b6000611f2f6018836117f9565b9150611f3a82611ef9565b602082019050919050565b60006020820190508181036000830152611f5e81611f22565b9050919050565b7f4552433732313a2061646472657373207a65726f000000000000000000000000600082015250565b6000611f9b6014836117f9565b9150611fa682611f65565b602082019050919050565b60006020820190508181036000830152611fca81611f8e565b9050919050565b600081905092915050565b6000611fe7826117ee565b611ff18185611fd1565b935061200181856020860161180a565b80840191505092915050565b60006120198285611fdc565b91506120258284611fdc565b91508190509392505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061208d6026836117f9565b915061209882612031565b604082019050919050565b600060208201905081810360008301526120bc81612080565b9050919050565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b600061211f6025836117f9565b915061212a826120c3565b604082019050919050565b6000602082019050818103600083015261214e81612112565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006121b16024836117f9565b91506121bc82612155565b604082019050919050565b600060208201905081810360008301526121e0816121a4565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061221d6020836117f9565b9150612228826121e7565b602082019050919050565b6000602082019050818103600083015261224c81612210565b9050919050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b60006122896019836117f9565b915061229482612253565b602082019050919050565b600060208201905081810360008301526122b88161227c565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b600061231b6032836117f9565b9150612326826122bf565b604082019050919050565b6000602082019050818103600083015261234a8161230e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600081519050919050565b600082825260208201905092915050565b60006123a782612380565b6123b1818561238b565b93506123c181856020860161180a565b6123ca8161183d565b840191505092915050565b60006080820190506123ea600083018761193e565b6123f7602083018661193e565b6124046040830185611a54565b8181036060830152612416818461239c565b905095945050505050565b6000815190506124308161175f565b92915050565b60006020828403121561244c5761244b611729565b5b600061245a84828501612421565b9150509291505056fea2646970667358221220f086b1de4397bf00eb6648755a030c368b50ab9b2ac5421b65e56bb20ce0f57d64736f6c63430008090033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x293D CODESIZE SUB DUP1 PUSH3 0x293D DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x3AA JUMP JUMPDEST PUSH3 0x57 PUSH3 0x4B PUSH3 0x91 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x99 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP2 PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x6F SWAP3 SWAP2 SWAP1 PUSH3 0x15D JUMP JUMPDEST POP DUP1 PUSH1 0x2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x88 SWAP3 SWAP2 SWAP1 PUSH3 0x15D JUMP JUMPDEST POP POP POP PUSH3 0x494 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x16B SWAP1 PUSH3 0x45E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x18F JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x1DB JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x1AA JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x1DB JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x1DB JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x1DA JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x1BD JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x1EA SWAP2 SWAP1 PUSH3 0x1EE JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x209 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x1EF JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x276 DUP3 PUSH3 0x22B JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x298 JUMPI PUSH3 0x297 PUSH3 0x23C JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2AD PUSH3 0x20D JUMP JUMPDEST SWAP1 POP PUSH3 0x2BB DUP3 DUP3 PUSH3 0x26B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x2DE JUMPI PUSH3 0x2DD PUSH3 0x23C JUMP JUMPDEST JUMPDEST PUSH3 0x2E9 DUP3 PUSH3 0x22B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x316 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x2F9 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x326 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x343 PUSH3 0x33D DUP5 PUSH3 0x2C0 JUMP JUMPDEST PUSH3 0x2A1 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x362 JUMPI PUSH3 0x361 PUSH3 0x226 JUMP JUMPDEST JUMPDEST PUSH3 0x36F DUP5 DUP3 DUP6 PUSH3 0x2F6 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x38F JUMPI PUSH3 0x38E PUSH3 0x221 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x3A1 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x32C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x3C4 JUMPI PUSH3 0x3C3 PUSH3 0x217 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x3E5 JUMPI PUSH3 0x3E4 PUSH3 0x21C JUMP JUMPDEST JUMPDEST PUSH3 0x3F3 DUP6 DUP3 DUP7 ADD PUSH3 0x377 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x417 JUMPI PUSH3 0x416 PUSH3 0x21C JUMP JUMPDEST JUMPDEST PUSH3 0x425 DUP6 DUP3 DUP7 ADD PUSH3 0x377 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x477 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x48E JUMPI PUSH3 0x48D PUSH3 0x42F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2499 DUP1 PUSH3 0x4A4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2E5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x315 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x27D JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x207 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x183 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x178B JUMP JUMPDEST PUSH2 0x331 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x17D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH2 0x413 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x1887 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x18DF JUMP JUMPDEST PUSH2 0x4A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x194D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x1994 JUMP JUMPDEST PUSH2 0x4EB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0x19D4 JUMP JUMPDEST PUSH2 0x603 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x19D4 JUMP JUMPDEST PUSH2 0x663 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0x18DF JUMP JUMPDEST PUSH2 0x683 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0x194D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x221 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21C SWAP2 SWAP1 PUSH2 0x1A27 JUMP JUMPDEST PUSH2 0x70A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22E SWAP2 SWAP1 PUSH2 0x1A63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH2 0x7C2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x249 PUSH2 0x7D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x194D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x267 PUSH2 0x7FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x274 SWAP2 SWAP1 PUSH2 0x1887 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x297 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x292 SWAP2 SWAP1 PUSH2 0x1AAA JUMP JUMPDEST PUSH2 0x891 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AE SWAP2 SWAP1 PUSH2 0x1C1F JUMP JUMPDEST PUSH2 0x8A7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0x18DF JUMP JUMPDEST PUSH2 0x909 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DC SWAP2 SWAP1 PUSH2 0x1887 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FA SWAP2 SWAP1 PUSH2 0x1CA2 JUMP JUMPDEST PUSH2 0x971 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30C SWAP2 SWAP1 PUSH2 0x17D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32A SWAP2 SWAP1 PUSH2 0x1A27 JUMP JUMPDEST PUSH2 0xA05 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3FC JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x40C JUMPI POP PUSH2 0x40B DUP3 PUSH2 0xA89 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x422 SWAP1 PUSH2 0x1D11 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x44E SWAP1 PUSH2 0x1D11 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x49B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x470 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x49B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x47E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B0 DUP3 PUSH2 0xAF3 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F6 DUP3 PUSH2 0x683 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x567 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55E SWAP1 PUSH2 0x1DB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x586 PUSH2 0xB3E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x5B5 JUMPI POP PUSH2 0x5B4 DUP2 PUSH2 0x5AF PUSH2 0xB3E JUMP JUMPDEST PUSH2 0x971 JUMP JUMPDEST JUMPDEST PUSH2 0x5F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5EB SWAP1 PUSH2 0x1E47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5FE DUP4 DUP4 PUSH2 0xB46 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x614 PUSH2 0x60E PUSH2 0xB3E JUMP JUMPDEST DUP3 PUSH2 0xBFF JUMP JUMPDEST PUSH2 0x653 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64A SWAP1 PUSH2 0x1ED9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x65E DUP4 DUP4 DUP4 PUSH2 0xC94 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x67E DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8A7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x68F DUP4 PUSH2 0xF8E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x701 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F8 SWAP1 PUSH2 0x1F45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x77B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x772 SWAP1 PUSH2 0x1FB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7CA PUSH2 0xFCB JUMP JUMPDEST PUSH2 0x7D4 PUSH1 0x0 PUSH2 0x1049 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x80E SWAP1 PUSH2 0x1D11 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x83A SWAP1 PUSH2 0x1D11 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x887 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x85C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x887 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x86A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x8A3 PUSH2 0x89C PUSH2 0xB3E JUMP JUMPDEST DUP4 DUP4 PUSH2 0x110D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x8B8 PUSH2 0x8B2 PUSH2 0xB3E JUMP JUMPDEST DUP4 PUSH2 0xBFF JUMP JUMPDEST PUSH2 0x8F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8EE SWAP1 PUSH2 0x1ED9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x903 DUP5 DUP5 DUP5 DUP5 PUSH2 0x127A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x914 DUP3 PUSH2 0xAF3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x91E PUSH2 0x12D6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x93E JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x969 JUMP JUMPDEST DUP1 PUSH2 0x948 DUP5 PUSH2 0x12ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x959 SWAP3 SWAP2 SWAP1 PUSH2 0x200D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA0D PUSH2 0xFCB JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA7D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA74 SWAP1 PUSH2 0x20A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA86 DUP2 PUSH2 0x1049 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAFC DUP2 PUSH2 0x13C5 JUMP JUMPDEST PUSH2 0xB3B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB32 SWAP1 PUSH2 0x1F45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBB9 DUP4 PUSH2 0x683 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xC0B DUP4 PUSH2 0x683 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xC4D JUMPI POP PUSH2 0xC4C DUP2 DUP6 PUSH2 0x971 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xC8B JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC73 DUP5 PUSH2 0x4A5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCB4 DUP3 PUSH2 0x683 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD0A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD01 SWAP1 PUSH2 0x2135 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD7A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD71 SWAP1 PUSH2 0x21C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD87 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1406 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDA7 DUP3 PUSH2 0x683 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDFD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF4 SWAP1 PUSH2 0x2135 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xF89 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x140C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFD3 PUSH2 0xB3E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFF1 PUSH2 0x7D6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1047 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x103E SWAP1 PUSH2 0x2233 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x117C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1173 SWAP1 PUSH2 0x229F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x126D SWAP2 SWAP1 PUSH2 0x17D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1285 DUP5 DUP5 DUP5 PUSH2 0xC94 JUMP JUMPDEST PUSH2 0x1291 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1412 JUMP JUMPDEST PUSH2 0x12D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12C7 SWAP1 PUSH2 0x2331 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x12FC DUP5 PUSH2 0x15A9 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x131B JUMPI PUSH2 0x131A PUSH2 0x1AF4 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x134D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x13BA JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x13A4 JUMPI PUSH2 0x13A3 PUSH2 0x2351 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 EQ ISZERO PUSH2 0x13B5 JUMPI PUSH2 0x13BA JUMP JUMPDEST PUSH2 0x135B JUMP JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13E7 DUP4 PUSH2 0xF8E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1433 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x16FC JUMP JUMPDEST ISZERO PUSH2 0x159C JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x145C PUSH2 0xB3E JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x147E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x23D5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1498 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x14C9 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14C6 SWAP2 SWAP1 PUSH2 0x2436 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x154C JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x14F9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x14FE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x1544 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x153B SWAP1 PUSH2 0x2331 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x15A1 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1607 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x15FD JUMPI PUSH2 0x15FC PUSH2 0x2351 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1644 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x163A JUMPI PUSH2 0x1639 PUSH2 0x2351 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1673 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1669 JUMPI PUSH2 0x1668 PUSH2 0x2351 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x169C JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1692 JUMPI PUSH2 0x1691 PUSH2 0x2351 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x16C1 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x16B7 JUMPI PUSH2 0x16B6 PUSH2 0x2351 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x16E4 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x16DA JUMPI PUSH2 0x16D9 PUSH2 0x2351 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x16F3 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1768 DUP2 PUSH2 0x1733 JUMP JUMPDEST DUP2 EQ PUSH2 0x1773 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1785 DUP2 PUSH2 0x175F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17A1 JUMPI PUSH2 0x17A0 PUSH2 0x1729 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17AF DUP5 DUP3 DUP6 ADD PUSH2 0x1776 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17CD DUP2 PUSH2 0x17B8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17E8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x17C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1828 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x180D JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1837 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1859 DUP3 PUSH2 0x17EE JUMP JUMPDEST PUSH2 0x1863 DUP2 DUP6 PUSH2 0x17F9 JUMP JUMPDEST SWAP4 POP PUSH2 0x1873 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x180A JUMP JUMPDEST PUSH2 0x187C DUP2 PUSH2 0x183D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x18A1 DUP2 DUP5 PUSH2 0x184E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18BC DUP2 PUSH2 0x18A9 JUMP JUMPDEST DUP2 EQ PUSH2 0x18C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x18D9 DUP2 PUSH2 0x18B3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18F5 JUMPI PUSH2 0x18F4 PUSH2 0x1729 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1903 DUP5 DUP3 DUP6 ADD PUSH2 0x18CA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1937 DUP3 PUSH2 0x190C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1947 DUP2 PUSH2 0x192C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1962 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x193E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1971 DUP2 PUSH2 0x192C JUMP JUMPDEST DUP2 EQ PUSH2 0x197C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x198E DUP2 PUSH2 0x1968 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19AB JUMPI PUSH2 0x19AA PUSH2 0x1729 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19B9 DUP6 DUP3 DUP7 ADD PUSH2 0x197F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x19CA DUP6 DUP3 DUP7 ADD PUSH2 0x18CA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x19ED JUMPI PUSH2 0x19EC PUSH2 0x1729 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19FB DUP7 DUP3 DUP8 ADD PUSH2 0x197F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1A0C DUP7 DUP3 DUP8 ADD PUSH2 0x197F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1A1D DUP7 DUP3 DUP8 ADD PUSH2 0x18CA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A3D JUMPI PUSH2 0x1A3C PUSH2 0x1729 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A4B DUP5 DUP3 DUP6 ADD PUSH2 0x197F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A5D DUP2 PUSH2 0x18A9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A78 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A54 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A87 DUP2 PUSH2 0x17B8 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AA4 DUP2 PUSH2 0x1A7E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AC1 JUMPI PUSH2 0x1AC0 PUSH2 0x1729 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1ACF DUP6 DUP3 DUP7 ADD PUSH2 0x197F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1AE0 DUP6 DUP3 DUP7 ADD PUSH2 0x1A95 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1B2C DUP3 PUSH2 0x183D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1B4B JUMPI PUSH2 0x1B4A PUSH2 0x1AF4 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B5E PUSH2 0x171F JUMP JUMPDEST SWAP1 POP PUSH2 0x1B6A DUP3 DUP3 PUSH2 0x1B23 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1B8A JUMPI PUSH2 0x1B89 PUSH2 0x1AF4 JUMP JUMPDEST JUMPDEST PUSH2 0x1B93 DUP3 PUSH2 0x183D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BC2 PUSH2 0x1BBD DUP5 PUSH2 0x1B6F JUMP JUMPDEST PUSH2 0x1B54 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1BDE JUMPI PUSH2 0x1BDD PUSH2 0x1AEF JUMP JUMPDEST JUMPDEST PUSH2 0x1BE9 DUP5 DUP3 DUP6 PUSH2 0x1BA0 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1C06 JUMPI PUSH2 0x1C05 PUSH2 0x1AEA JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1C16 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1BAF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1C39 JUMPI PUSH2 0x1C38 PUSH2 0x1729 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C47 DUP8 DUP3 DUP9 ADD PUSH2 0x197F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1C58 DUP8 DUP3 DUP9 ADD PUSH2 0x197F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1C69 DUP8 DUP3 DUP9 ADD PUSH2 0x18CA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C8A JUMPI PUSH2 0x1C89 PUSH2 0x172E JUMP JUMPDEST JUMPDEST PUSH2 0x1C96 DUP8 DUP3 DUP9 ADD PUSH2 0x1BF1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CB9 JUMPI PUSH2 0x1CB8 PUSH2 0x1729 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CC7 DUP6 DUP3 DUP7 ADD PUSH2 0x197F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1CD8 DUP6 DUP3 DUP7 ADD PUSH2 0x197F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1D29 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1D3D JUMPI PUSH2 0x1D3C PUSH2 0x1CE2 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D9F PUSH1 0x21 DUP4 PUSH2 0x17F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DAA DUP3 PUSH2 0x1D43 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DCE DUP2 PUSH2 0x1D92 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E31 PUSH1 0x3D DUP4 PUSH2 0x17F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E3C DUP3 PUSH2 0x1DD5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E60 DUP2 PUSH2 0x1E24 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EC3 PUSH1 0x2D DUP4 PUSH2 0x17F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x1ECE DUP3 PUSH2 0x1E67 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EF2 DUP2 PUSH2 0x1EB6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F2F PUSH1 0x18 DUP4 PUSH2 0x17F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F3A DUP3 PUSH2 0x1EF9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F5E DUP2 PUSH2 0x1F22 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F9B PUSH1 0x14 DUP4 PUSH2 0x17F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FA6 DUP3 PUSH2 0x1F65 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FCA DUP2 PUSH2 0x1F8E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FE7 DUP3 PUSH2 0x17EE JUMP JUMPDEST PUSH2 0x1FF1 DUP2 DUP6 PUSH2 0x1FD1 JUMP JUMPDEST SWAP4 POP PUSH2 0x2001 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x180A JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2019 DUP3 DUP6 PUSH2 0x1FDC JUMP JUMPDEST SWAP2 POP PUSH2 0x2025 DUP3 DUP5 PUSH2 0x1FDC JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x208D PUSH1 0x26 DUP4 PUSH2 0x17F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x2098 DUP3 PUSH2 0x2031 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20BC DUP2 PUSH2 0x2080 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x211F PUSH1 0x25 DUP4 PUSH2 0x17F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x212A DUP3 PUSH2 0x20C3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x214E DUP2 PUSH2 0x2112 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21B1 PUSH1 0x24 DUP4 PUSH2 0x17F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x21BC DUP3 PUSH2 0x2155 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21E0 DUP2 PUSH2 0x21A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x221D PUSH1 0x20 DUP4 PUSH2 0x17F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x2228 DUP3 PUSH2 0x21E7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x224C DUP2 PUSH2 0x2210 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2289 PUSH1 0x19 DUP4 PUSH2 0x17F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x2294 DUP3 PUSH2 0x2253 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22B8 DUP2 PUSH2 0x227C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x231B PUSH1 0x32 DUP4 PUSH2 0x17F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x2326 DUP3 PUSH2 0x22BF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x234A DUP2 PUSH2 0x230E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23A7 DUP3 PUSH2 0x2380 JUMP JUMPDEST PUSH2 0x23B1 DUP2 DUP6 PUSH2 0x238B JUMP JUMPDEST SWAP4 POP PUSH2 0x23C1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x180A JUMP JUMPDEST PUSH2 0x23CA DUP2 PUSH2 0x183D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x23EA PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x193E JUMP JUMPDEST PUSH2 0x23F7 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x193E JUMP JUMPDEST PUSH2 0x2404 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1A54 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2416 DUP2 DUP5 PUSH2 0x239C JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2430 DUP2 PUSH2 0x175F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x244C JUMPI PUSH2 0x244B PUSH2 0x1729 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x245A DUP5 DUP3 DUP6 ADD PUSH2 0x2421 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE DUP7 0xB1 0xDE NUMBER SWAP8 0xBF STOP 0xEB PUSH7 0x48755A030C368B POP 0xAB SWAP12 0x2A 0xC5 TIMESTAMP SHL PUSH6 0xE56BB20CE0F5 PUSH30 0x64736F6C6343000809003300000000000000000000000000000000000000 ",
							"sourceMap": "334:16620:3:-:0;;;1133:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;957:32:2;976:12;:10;;;:12;;:::i;:::-;957:18;;;:32;;:::i;:::-;1208:5:3;1200;:13;;;;;;;;;;;;:::i;:::-;;1234:7;1224;:17;;;;;;;;;;;;:::i;:::-;;1133:116;;334:16620;;671:98:0;724:7;751:10;744:17;;671:98;:::o;2496:191:2:-;2570:16;2589:6;;;;;;;;;;;2570:25;;2615:8;2606:6;;:17;;;;;;;;;;;;;;;;;;2670:8;2639:40;;2660:8;2639:40;;;;;;;;;;;;2559:128;2496:191;:::o;334:16620:3:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:12:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:307::-;1678:1;1688:113;1702:6;1699:1;1696:13;1688:113;;;1787:1;1782:3;1778:11;1772:18;1768:1;1763:3;1759:11;1752:39;1724:2;1721:1;1717:10;1712:15;;1688:113;;;1819:6;1816:1;1813:13;1810:101;;;1899:1;1890:6;1885:3;1881:16;1874:27;1810:101;1659:258;1610:307;;;:::o;1923:421::-;2012:5;2037:66;2053:49;2095:6;2053:49;:::i;:::-;2037:66;:::i;:::-;2028:75;;2126:6;2119:5;2112:21;2164:4;2157:5;2153:16;2202:3;2193:6;2188:3;2184:16;2181:25;2178:112;;;2209:79;;:::i;:::-;2178:112;2299:39;2331:6;2326:3;2321;2299:39;:::i;:::-;2018:326;1923:421;;;;;:::o;2364:355::-;2431:5;2480:3;2473:4;2465:6;2461:17;2457:27;2447:122;;2488:79;;:::i;:::-;2447:122;2598:6;2592:13;2623:90;2709:3;2701:6;2694:4;2686:6;2682:17;2623:90;:::i;:::-;2614:99;;2437:282;2364:355;;;;:::o;2725:853::-;2824:6;2832;2881:2;2869:9;2860:7;2856:23;2852:32;2849:119;;;2887:79;;:::i;:::-;2849:119;3028:1;3017:9;3013:17;3007:24;3058:18;3050:6;3047:30;3044:117;;;3080:79;;:::i;:::-;3044:117;3185:74;3251:7;3242:6;3231:9;3227:22;3185:74;:::i;:::-;3175:84;;2978:291;3329:2;3318:9;3314:18;3308:25;3360:18;3352:6;3349:30;3346:117;;;3382:79;;:::i;:::-;3346:117;3487:74;3553:7;3544:6;3533:9;3529:22;3487:74;:::i;:::-;3477:84;;3279:292;2725:853;;;;;:::o;3584:180::-;3632:77;3629:1;3622:88;3729:4;3726:1;3719:15;3753:4;3750:1;3743:15;3770:320;3814:6;3851:1;3845:4;3841:12;3831:22;;3898:1;3892:4;3888:12;3919:18;3909:81;;3975:4;3967:6;3963:17;3953:27;;3909:81;4037:2;4029:6;4026:14;4006:18;4003:38;4000:84;;;4056:18;;:::i;:::-;4000:84;3821:269;3770:320;;;:::o;334:16620:3:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_1079": {
									"entryPoint": 5132,
									"id": 1079,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_945": {
									"entryPoint": 2886,
									"id": 945,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_baseURI_382": {
									"entryPoint": 4822,
									"id": 382,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_1066": {
									"entryPoint": 5126,
									"id": 1066,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1053": {
									"entryPoint": 5138,
									"id": 1053,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_checkOwner_108": {
									"entryPoint": 4043,
									"id": 108,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_exists_614": {
									"entryPoint": 5061,
									"id": 614,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isApprovedOrOwner_648": {
									"entryPoint": 3071,
									"id": 648,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_11": {
									"entryPoint": 2878,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_596": {
									"entryPoint": 3982,
									"id": 596,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireMinted_991": {
									"entryPoint": 2803,
									"id": 991,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_safeTransfer_583": {
									"entryPoint": 4730,
									"id": 583,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_setApprovalForAll_977": {
									"entryPoint": 4365,
									"id": 977,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_165": {
									"entryPoint": 4169,
									"id": 165,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_921": {
									"entryPoint": 3220,
									"id": 921,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@approve_425": {
									"entryPoint": 1259,
									"id": 425,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_286": {
									"entryPoint": 1802,
									"id": 286,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_443": {
									"entryPoint": 1189,
									"id": 443,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_478": {
									"entryPoint": 2417,
									"id": 478,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_1287": {
									"entryPoint": 5884,
									"id": 1287,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@log10_2302": {
									"entryPoint": 5545,
									"id": 2302,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_324": {
									"entryPoint": 1043,
									"id": 324,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_314": {
									"entryPoint": 1667,
									"id": 314,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_94": {
									"entryPoint": 2006,
									"id": 94,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_122": {
									"entryPoint": 1986,
									"id": 122,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_524": {
									"entryPoint": 1635,
									"id": 524,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_554": {
									"entryPoint": 2215,
									"id": 554,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_460": {
									"entryPoint": 2193,
									"id": 460,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_262": {
									"entryPoint": 817,
									"id": 262,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_52": {
									"entryPoint": 2697,
									"id": 52,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_334": {
									"entryPoint": 2047,
									"id": 334,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_2629": {
									"entryPoint": 4845,
									"id": 2629,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_373": {
									"entryPoint": 2313,
									"id": 373,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_505": {
									"entryPoint": 1539,
									"id": 505,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_145": {
									"entryPoint": 2565,
									"id": 145,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 7087,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 6527,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 6805,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 6006,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 9249,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 7153,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6346,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6695,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7330,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6612,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 7199,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 6826,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6548,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 6027,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 9270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6367,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6462,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6084,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 9116,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6222,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8156,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7862,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8974,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8320,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8466,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_36ef143da8b2347d8f62e4cb6f029f7ea3f89998523a3fa935d79bb869ff4cc2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8078,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8612,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8828,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8720,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7970,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7570,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7716,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6740,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 8205,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6477,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 9173,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6099,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6279,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7897,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9009,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8355,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8501,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_36ef143da8b2347d8f62e4cb6f029f7ea3f89998523a3fa935d79bb869ff4cc2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8113,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8647,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8863,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8755,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8005,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7605,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7751,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6755,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 6996,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 5919,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 7023,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 9088,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6126,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 9099,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6137,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8145,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6444,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6072,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 5939,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6412,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6313,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 7072,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory": {
									"entryPoint": 6154,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 7441,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 6947,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 9041,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 7394,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6900,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 6890,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 6895,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 5934,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5929,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6205,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af": {
									"entryPoint": 7783,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e": {
									"entryPoint": 8895,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 8241,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48": {
									"entryPoint": 8387,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_36ef143da8b2347d8f62e4cb6f029f7ea3f89998523a3fa935d79bb869ff4cc2": {
									"entryPoint": 8037,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4": {
									"entryPoint": 8533,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05": {
									"entryPoint": 8787,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 8679,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f": {
									"entryPoint": 7929,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942": {
									"entryPoint": 7491,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83": {
									"entryPoint": 7637,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6504,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6782,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 5983,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6323,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:25122:12",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:105:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "388:89:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "410:66:12",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:78:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "360:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "370:7:12",
														"type": ""
													}
												],
												"src": "334:149:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "531:78:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "587:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "596:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "599:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:42:12"
															},
															"nodeType": "YulIf",
															"src": "541:62:12"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "524:5:12",
														"type": ""
													}
												],
												"src": "489:120:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "666:86:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "676:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "685:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "714:32:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "714:32:12"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "652:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "660:5:12",
														"type": ""
													}
												],
												"src": "615:137:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "823:262:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "865:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "836:32:12"
															},
															"nodeType": "YulIf",
															"src": "833:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "962:116:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "991:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "981:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1006:62:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "793:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "804:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "816:6:12",
														"type": ""
													}
												],
												"src": "758:327:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1133:48:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1143:32:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1154:21:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1115:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1125:7:12",
														"type": ""
													}
												],
												"src": "1091:90:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1246:50:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:12"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1234:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1241:3:12",
														"type": ""
													}
												],
												"src": "1187:109:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1394:118:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1404:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1412:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:65:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1366:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1378:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1389:4:12",
														"type": ""
													}
												],
												"src": "1302:210:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1577:40:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1588:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1598:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1560:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1570:6:12",
														"type": ""
													}
												],
												"src": "1518:99:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1719:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1729:19:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1757:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1772:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1691:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1696:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1707:11:12",
														"type": ""
													}
												],
												"src": "1623:169:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1847:258:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1857:10:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1866:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1861:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1926:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1951:3:12"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1956:1:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1947:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1947:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1970:3:12"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1975:1:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1966:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1966:11:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1960:5:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1960:18:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1940:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1940:39:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1940:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1887:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1890:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1884:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1884:13:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1898:19:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1900:15:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1909:1:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1912:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1905:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1905:10:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1900:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1880:3:12",
																"statements": []
															},
															"src": "1876:113:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2023:76:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2073:3:12"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "2078:6:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2069:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2069:16:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2087:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2062:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2062:27:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2062:27:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2004:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2007:6:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2001:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2001:13:12"
															},
															"nodeType": "YulIf",
															"src": "1998:101:12"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1829:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1834:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1839:6:12",
														"type": ""
													}
												],
												"src": "1798:307:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2159:54:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2169:38:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2187:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2194:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2183:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2183:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2203:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2199:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2199:7:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2179:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2179:28:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2169:6:12"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2142:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2152:6:12",
														"type": ""
													}
												],
												"src": "2111:102:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2311:272:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2321:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2368:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2335:32:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2335:39:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2325:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2383:78:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2449:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2454:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2390:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2390:71:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2383:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2496:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2503:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2492:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2492:16:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2510:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2515:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2470:21:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2470:52:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2470:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2531:46:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2542:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2569:6:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2547:21:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2547:29:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2538:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2538:39:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2531:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2292:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2299:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2307:3:12",
														"type": ""
													}
												],
												"src": "2219:364:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2707:195:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2717:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2729:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2740:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2725:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2725:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2717:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2764:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2775:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2760:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2760:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2783:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2789:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2779:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2779:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2753:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2753:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2753:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2809:86:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2881:6:12"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2890:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2817:63:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2817:78:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2809:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2679:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2691:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2702:4:12",
														"type": ""
													}
												],
												"src": "2589:313:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2953:32:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2963:16:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2974:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2963:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2935:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2945:7:12",
														"type": ""
													}
												],
												"src": "2908:77:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3034:79:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3091:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3100:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3103:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3093:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3093:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3093:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3057:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3082:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3064:17:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3064:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3054:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3054:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3047:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3047:43:12"
															},
															"nodeType": "YulIf",
															"src": "3044:63:12"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3027:5:12",
														"type": ""
													}
												],
												"src": "2991:122:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3171:87:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3181:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3203:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3190:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3190:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3181:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3246:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3219:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3219:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3219:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3149:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3157:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3165:5:12",
														"type": ""
													}
												],
												"src": "3119:139:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3330:263:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3376:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3378:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3378:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3378:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3351:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3360:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3347:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3347:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3372:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3343:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3343:32:12"
															},
															"nodeType": "YulIf",
															"src": "3340:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "3469:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3484:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3498:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3488:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3513:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3548:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3559:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3544:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3544:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3568:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3523:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3523:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3513:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3300:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3311:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3323:6:12",
														"type": ""
													}
												],
												"src": "3264:329:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3644:81:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3654:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3669:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3676:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3665:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3665:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3654:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3626:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3636:7:12",
														"type": ""
													}
												],
												"src": "3599:126:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3776:51:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3786:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3815:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3797:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3797:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3786:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3758:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3768:7:12",
														"type": ""
													}
												],
												"src": "3731:96:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3898:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3915:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3938:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3920:17:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3920:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3908:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3908:37:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3908:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3886:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3893:3:12",
														"type": ""
													}
												],
												"src": "3833:118:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4055:124:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4065:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4077:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4088:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4073:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4073:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4065:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4145:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4158:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4169:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4154:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4154:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4101:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4101:71:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4101:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4027:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4039:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4050:4:12",
														"type": ""
													}
												],
												"src": "3957:222:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4228:79:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4285:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4294:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4297:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4287:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4287:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4287:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4251:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4276:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "4258:17:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4258:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4248:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4248:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4241:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4241:43:12"
															},
															"nodeType": "YulIf",
															"src": "4238:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4221:5:12",
														"type": ""
													}
												],
												"src": "4185:122:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4365:87:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4375:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4397:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4384:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4384:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4375:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4440:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4413:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4413:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4413:33:12"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4343:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4351:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4359:5:12",
														"type": ""
													}
												],
												"src": "4313:139:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4541:391:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4587:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4589:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4589:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4589:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4562:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4571:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4558:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4558:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4583:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4554:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4554:32:12"
															},
															"nodeType": "YulIf",
															"src": "4551:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "4680:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4695:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4709:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4699:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4724:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4759:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4770:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4755:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4755:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4779:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4734:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4734:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4724:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4807:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4822:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4836:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4826:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4852:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4887:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4898:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4883:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4883:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4907:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4862:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4862:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4852:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4503:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4514:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4526:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4534:6:12",
														"type": ""
													}
												],
												"src": "4458:474:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5038:519:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5084:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5086:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5086:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5086:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5059:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5068:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5055:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5055:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5080:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5051:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5051:32:12"
															},
															"nodeType": "YulIf",
															"src": "5048:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "5177:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5192:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5206:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5196:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5221:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5256:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5267:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5252:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5252:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5276:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5231:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5231:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5221:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5304:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5319:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5333:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5323:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5349:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5384:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5395:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5380:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5380:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5404:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5359:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5359:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5349:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5432:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5447:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5461:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5451:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5477:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5512:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5523:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5508:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5508:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5532:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5487:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5487:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "5477:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4992:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5003:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5015:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5023:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5031:6:12",
														"type": ""
													}
												],
												"src": "4938:619:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5629:263:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5675:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5677:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5677:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5677:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5650:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5659:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5646:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5646:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5671:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5642:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5642:32:12"
															},
															"nodeType": "YulIf",
															"src": "5639:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "5768:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5783:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5797:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5787:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5812:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5847:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5858:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5843:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5843:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5867:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5822:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5822:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5812:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5599:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5610:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5622:6:12",
														"type": ""
													}
												],
												"src": "5563:329:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5963:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5980:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6003:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5985:17:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5985:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5973:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5973:37:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5973:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5951:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5958:3:12",
														"type": ""
													}
												],
												"src": "5898:118:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6120:124:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6130:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6142:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6153:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6138:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6138:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6130:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6210:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6223:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6234:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6219:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6219:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6166:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6166:71:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6166:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6092:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6104:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6115:4:12",
														"type": ""
													}
												],
												"src": "6022:222:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6290:76:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6344:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6353:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6356:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6346:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6346:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6346:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6313:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6335:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "6320:14:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6320:21:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6310:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6310:32:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6303:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6303:40:12"
															},
															"nodeType": "YulIf",
															"src": "6300:60:12"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6283:5:12",
														"type": ""
													}
												],
												"src": "6250:116:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6421:84:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6431:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6453:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6440:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6440:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6431:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6493:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "6469:23:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6469:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6469:30:12"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6399:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6407:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6415:5:12",
														"type": ""
													}
												],
												"src": "6372:133:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6591:388:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6637:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6639:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6639:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6639:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6612:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6621:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6608:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6608:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6633:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6604:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6604:32:12"
															},
															"nodeType": "YulIf",
															"src": "6601:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "6730:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6745:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6759:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6749:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6774:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6809:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6820:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6805:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6805:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6829:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6784:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6784:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6774:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6857:115:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6872:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6886:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6876:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6902:60:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6934:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6945:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6930:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6930:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6954:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "6912:17:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6912:50:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6902:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6553:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6564:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6576:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6584:6:12",
														"type": ""
													}
												],
												"src": "6511:468:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7074:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7091:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7094:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7084:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7084:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7084:12:12"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "6985:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7197:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7214:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7217:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7207:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7207:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7207:12:12"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "7108:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7259:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7276:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7279:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7269:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7269:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7269:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7373:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7376:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7366:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7366:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7366:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7397:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7400:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7390:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7390:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7390:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "7231:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7460:238:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7470:58:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7492:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "7522:4:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "7500:21:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7500:27:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7488:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7488:40:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "7474:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7639:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7641:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7641:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7641:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7582:10:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7594:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7579:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7579:34:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7618:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7630:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "7615:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7615:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7576:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7576:62:12"
															},
															"nodeType": "YulIf",
															"src": "7573:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7677:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "7681:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7670:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7670:22:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7670:22:12"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7446:6:12",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7454:4:12",
														"type": ""
													}
												],
												"src": "7417:281:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7745:88:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7755:30:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "7765:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7765:20:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "7755:6:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7814:6:12"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "7822:4:12"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "7794:19:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7794:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7794:33:12"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7729:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7738:6:12",
														"type": ""
													}
												],
												"src": "7704:129:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7905:241:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8010:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "8012:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8012:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8012:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7982:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7990:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7979:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7979:30:12"
															},
															"nodeType": "YulIf",
															"src": "7976:56:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8042:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8072:6:12"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "8050:21:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8050:29:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "8042:4:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8116:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "8128:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8134:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8124:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8124:15:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "8116:4:12"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7889:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7900:4:12",
														"type": ""
													}
												],
												"src": "7839:307:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8203:103:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8226:3:12"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8231:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8236:6:12"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "8213:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8213:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8213:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "8284:3:12"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8289:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8280:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8280:16:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8298:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8273:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8273:27:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8273:27:12"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8185:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "8190:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8195:6:12",
														"type": ""
													}
												],
												"src": "8152:154:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8395:327:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8405:74:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8471:6:12"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "8430:40:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8430:48:12"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "8414:15:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8414:65:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8405:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8495:5:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8502:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8488:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8488:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8488:21:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8518:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8533:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8540:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8529:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8529:16:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "8522:3:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8583:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "8585:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8585:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8585:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "8564:3:12"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8569:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8560:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8560:16:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "8578:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8557:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8557:25:12"
															},
															"nodeType": "YulIf",
															"src": "8554:112:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8699:3:12"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8704:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8709:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "8675:23:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8675:41:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8675:41:12"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8368:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8373:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8381:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8389:5:12",
														"type": ""
													}
												],
												"src": "8312:410:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8802:277:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8851:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "8853:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8853:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8853:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8830:6:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8838:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8826:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8826:17:12"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "8845:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "8822:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8822:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8815:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8815:35:12"
															},
															"nodeType": "YulIf",
															"src": "8812:122:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8943:34:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8970:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8957:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8957:20:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8947:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8986:87:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9046:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9054:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9042:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9042:17:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9061:6:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "9069:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "8995:46:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8995:78:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8986:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8780:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8788:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8796:5:12",
														"type": ""
													}
												],
												"src": "8741:338:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9211:817:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9258:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9260:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9260:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9260:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9232:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9241:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9228:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9228:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9253:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9224:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9224:33:12"
															},
															"nodeType": "YulIf",
															"src": "9221:120:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "9351:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9366:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9380:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9370:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9395:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9430:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9441:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9426:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9426:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9450:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9405:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9405:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9395:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9478:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9493:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9507:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9497:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9523:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9558:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9569:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9554:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9554:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9578:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9533:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9533:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "9523:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9606:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9621:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9635:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9625:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9651:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9686:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9697:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9682:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9682:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9706:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9661:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9661:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "9651:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9734:287:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9749:46:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9780:9:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9791:2:12",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9776:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9776:18:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9763:12:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9763:32:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9753:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9842:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9844:77:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9844:79:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9844:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9814:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9822:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9811:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9811:30:12"
																	},
																	"nodeType": "YulIf",
																	"src": "9808:117:12"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9939:72:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9983:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9994:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9979:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9979:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10003:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9949:29:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9949:62:12"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "9939:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9157:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9168:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9180:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9188:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9196:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9204:6:12",
														"type": ""
													}
												],
												"src": "9085:943:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10117:391:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10163:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "10165:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10165:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10165:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10138:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10147:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10134:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10134:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10159:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10130:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10130:32:12"
															},
															"nodeType": "YulIf",
															"src": "10127:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "10256:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10271:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10285:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10275:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10300:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10335:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10346:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10331:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10331:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10355:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10310:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10310:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "10300:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10383:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10398:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10412:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10402:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10428:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10463:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10474:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10459:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10459:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10483:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10438:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10438:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "10428:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10079:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10090:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10102:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10110:6:12",
														"type": ""
													}
												],
												"src": "10034:474:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10542:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10559:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10562:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10552:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10552:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10552:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10656:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10659:4:12",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10649:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10649:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10649:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10680:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10683:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10673:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10673:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10673:15:12"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "10514:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10751:269:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10761:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "10775:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10781:1:12",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "10771:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10771:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "10761:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10792:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "10822:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10828:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10818:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10818:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "10796:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10869:51:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10883:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "10897:6:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10905:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "10893:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10893:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10883:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "10849:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10842:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10842:26:12"
															},
															"nodeType": "YulIf",
															"src": "10839:81:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10972:42:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "10986:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10986:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10986:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "10936:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10959:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10967:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "10956:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10956:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10933:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10933:38:12"
															},
															"nodeType": "YulIf",
															"src": "10930:84:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "10735:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10744:6:12",
														"type": ""
													}
												],
												"src": "10700:320:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11132:114:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11154:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11162:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11150:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11150:14:12"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11166:34:12",
																		"type": "",
																		"value": "ERC721: approval to current owne"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11143:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11143:58:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11143:58:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11222:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11230:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11218:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11218:15:12"
																	},
																	{
																		"hexValue": "72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11235:3:12",
																		"type": "",
																		"value": "r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11211:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11211:28:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11211:28:12"
														}
													]
												},
												"name": "store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11124:6:12",
														"type": ""
													}
												],
												"src": "11026:220:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11398:220:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11408:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11474:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11479:2:12",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11415:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11415:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11408:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11580:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
																	"nodeType": "YulIdentifier",
																	"src": "11491:88:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11491:93:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11491:93:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11593:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11604:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11609:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11600:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11600:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11593:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11386:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11394:3:12",
														"type": ""
													}
												],
												"src": "11252:366:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11795:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11805:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11817:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11828:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11813:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11813:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11805:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11852:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11863:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11848:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11848:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11871:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11877:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11867:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11867:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11841:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11841:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11841:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11897:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12031:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11905:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11905:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11897:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11775:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11790:4:12",
														"type": ""
													}
												],
												"src": "11624:419:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12155:142:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12177:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12185:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12173:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12173:14:12"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12189:34:12",
																		"type": "",
																		"value": "ERC721: approve caller is not to"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12166:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12166:58:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12166:58:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12245:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12253:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12241:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12241:15:12"
																	},
																	{
																		"hexValue": "6b656e206f776e6572206f7220617070726f76656420666f7220616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12258:31:12",
																		"type": "",
																		"value": "ken owner or approved for all"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12234:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12234:56:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12234:56:12"
														}
													]
												},
												"name": "store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12147:6:12",
														"type": ""
													}
												],
												"src": "12049:248:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12449:220:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12459:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12525:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12530:2:12",
																		"type": "",
																		"value": "61"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12466:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12466:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12459:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12631:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83",
																	"nodeType": "YulIdentifier",
																	"src": "12542:88:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12542:93:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12542:93:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12644:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12655:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12660:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12651:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12651:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12644:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12437:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12445:3:12",
														"type": ""
													}
												],
												"src": "12303:366:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12846:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12856:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12868:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12879:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12864:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12864:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12856:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12903:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12914:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12899:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12899:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12922:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12928:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12918:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12918:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12892:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12892:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12892:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12948:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13082:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12956:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12956:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12948:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12826:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12841:4:12",
														"type": ""
													}
												],
												"src": "12675:419:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13206:126:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13228:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13236:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13224:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13224:14:12"
																	},
																	{
																		"hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13240:34:12",
																		"type": "",
																		"value": "ERC721: caller is not token owne"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13217:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13217:58:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13217:58:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13296:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13304:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13292:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13292:15:12"
																	},
																	{
																		"hexValue": "72206f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13309:15:12",
																		"type": "",
																		"value": "r or approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13285:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13285:40:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13285:40:12"
														}
													]
												},
												"name": "store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13198:6:12",
														"type": ""
													}
												],
												"src": "13100:232:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13484:220:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13494:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13560:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13565:2:12",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13501:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13501:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13494:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13666:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																	"nodeType": "YulIdentifier",
																	"src": "13577:88:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13577:93:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13577:93:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13679:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13690:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13695:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13686:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13686:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13679:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13472:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13480:3:12",
														"type": ""
													}
												],
												"src": "13338:366:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13881:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13891:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13903:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13914:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13899:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13899:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13891:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13938:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13949:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13934:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13934:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13957:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13963:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13953:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13953:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13927:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13927:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13927:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13983:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14117:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13991:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13991:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13983:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13861:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13876:4:12",
														"type": ""
													}
												],
												"src": "13710:419:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14241:68:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14263:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14271:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14259:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14259:14:12"
																	},
																	{
																		"hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14275:26:12",
																		"type": "",
																		"value": "ERC721: invalid token ID"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14252:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14252:50:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14252:50:12"
														}
													]
												},
												"name": "store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14233:6:12",
														"type": ""
													}
												],
												"src": "14135:174:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14461:220:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14471:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14537:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14542:2:12",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14478:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14478:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14471:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14643:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																	"nodeType": "YulIdentifier",
																	"src": "14554:88:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14554:93:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14554:93:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14656:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14667:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14672:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14663:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14663:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14656:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14449:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14457:3:12",
														"type": ""
													}
												],
												"src": "14315:366:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14858:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14868:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14880:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14891:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14876:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14876:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14868:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14915:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14926:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14911:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14911:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14934:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14940:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14930:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14930:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14904:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14904:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14904:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14960:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15094:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14968:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14968:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14960:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14838:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14853:4:12",
														"type": ""
													}
												],
												"src": "14687:419:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15218:64:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15240:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15248:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15236:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15236:14:12"
																	},
																	{
																		"hexValue": "4552433732313a2061646472657373207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15252:22:12",
																		"type": "",
																		"value": "ERC721: address zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15229:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15229:46:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15229:46:12"
														}
													]
												},
												"name": "store_literal_in_memory_36ef143da8b2347d8f62e4cb6f029f7ea3f89998523a3fa935d79bb869ff4cc2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15210:6:12",
														"type": ""
													}
												],
												"src": "15112:170:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15434:220:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15444:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15510:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15515:2:12",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15451:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15451:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15444:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15616:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_36ef143da8b2347d8f62e4cb6f029f7ea3f89998523a3fa935d79bb869ff4cc2",
																	"nodeType": "YulIdentifier",
																	"src": "15527:88:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15527:93:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15527:93:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15629:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15640:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15645:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15636:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15636:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15629:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_36ef143da8b2347d8f62e4cb6f029f7ea3f89998523a3fa935d79bb869ff4cc2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15422:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15430:3:12",
														"type": ""
													}
												],
												"src": "15288:366:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15831:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15841:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15853:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15864:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15849:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15849:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15841:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15888:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15899:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15884:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15884:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15907:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15913:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15903:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15903:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15877:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15877:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15877:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15933:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16067:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_36ef143da8b2347d8f62e4cb6f029f7ea3f89998523a3fa935d79bb869ff4cc2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15941:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15941:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15933:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_36ef143da8b2347d8f62e4cb6f029f7ea3f89998523a3fa935d79bb869ff4cc2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15811:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15826:4:12",
														"type": ""
													}
												],
												"src": "15660:419:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16199:34:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16209:18:12",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "16224:3:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "16209:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16171:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "16176:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "16187:11:12",
														"type": ""
													}
												],
												"src": "16085:148:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16349:267:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16359:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16406:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "16373:32:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16373:39:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "16363:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16421:96:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16505:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16510:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16428:76:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16428:89:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16421:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "16552:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16559:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16548:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16548:16:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16566:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16571:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "16526:21:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16526:52:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16526:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16587:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16598:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16603:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16594:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16594:16:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16587:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16330:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16337:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16345:3:12",
														"type": ""
													}
												],
												"src": "16239:377:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16806:251:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16817:102:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16906:6:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16915:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16824:81:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16824:95:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16817:3:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16929:102:12",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "17018:6:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17027:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16936:81:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16936:95:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16929:3:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17041:10:12",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "17048:3:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17041:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16777:3:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "16783:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16791:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16802:3:12",
														"type": ""
													}
												],
												"src": "16622:435:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17169:119:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17191:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17199:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17187:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17187:14:12"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17203:34:12",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17180:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17180:58:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17180:58:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17259:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17267:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17255:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17255:15:12"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17272:8:12",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17248:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17248:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17248:33:12"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17161:6:12",
														"type": ""
													}
												],
												"src": "17063:225:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17440:220:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17450:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17516:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17521:2:12",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17457:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17457:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17450:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17622:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "17533:88:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17533:93:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17533:93:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17635:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17646:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17651:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17642:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17642:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17635:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17428:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17436:3:12",
														"type": ""
													}
												],
												"src": "17294:366:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17837:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17847:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17859:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17870:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17855:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17855:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17847:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17894:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17905:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17890:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17890:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17913:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17919:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17909:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17909:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17883:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17883:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17883:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17939:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18073:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17947:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17947:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17939:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17817:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17832:4:12",
														"type": ""
													}
												],
												"src": "17666:419:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18197:118:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18219:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18227:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18215:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18215:14:12"
																	},
																	{
																		"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f727265637420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18231:34:12",
																		"type": "",
																		"value": "ERC721: transfer from incorrect "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18208:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18208:58:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18208:58:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18287:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18295:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18283:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18283:15:12"
																	},
																	{
																		"hexValue": "6f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18300:7:12",
																		"type": "",
																		"value": "owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18276:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18276:32:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18276:32:12"
														}
													]
												},
												"name": "store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18189:6:12",
														"type": ""
													}
												],
												"src": "18091:224:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18467:220:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18477:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18543:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18548:2:12",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18484:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18484:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18477:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18649:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																	"nodeType": "YulIdentifier",
																	"src": "18560:88:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18560:93:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18560:93:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18662:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18673:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18678:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18669:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18669:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18662:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18455:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18463:3:12",
														"type": ""
													}
												],
												"src": "18321:366:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18864:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18874:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18886:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18897:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18882:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18882:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18874:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18921:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18932:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18917:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18917:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18940:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18946:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18936:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18936:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18910:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18910:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18910:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18966:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19100:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18974:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18974:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18966:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18844:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18859:4:12",
														"type": ""
													}
												],
												"src": "18693:419:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19224:117:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19246:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19254:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19242:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19242:14:12"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19258:34:12",
																		"type": "",
																		"value": "ERC721: transfer to the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19235:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19235:58:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19235:58:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19314:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19322:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19310:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19310:15:12"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19327:6:12",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19303:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19303:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19303:31:12"
														}
													]
												},
												"name": "store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "19216:6:12",
														"type": ""
													}
												],
												"src": "19118:223:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19493:220:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19503:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19569:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19574:2:12",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19510:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19510:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "19503:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19675:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
																	"nodeType": "YulIdentifier",
																	"src": "19586:88:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19586:93:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19586:93:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19688:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19699:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19704:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19695:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19695:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "19688:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19481:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19489:3:12",
														"type": ""
													}
												],
												"src": "19347:366:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19890:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19900:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19912:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19923:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19908:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19908:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19900:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19947:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19958:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19943:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19943:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19966:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19972:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19962:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19962:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19936:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19936:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19936:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19992:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20126:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20000:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20000:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19992:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19870:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19885:4:12",
														"type": ""
													}
												],
												"src": "19719:419:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20250:76:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20272:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20280:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20268:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20268:14:12"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20284:34:12",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20261:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20261:58:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20261:58:12"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "20242:6:12",
														"type": ""
													}
												],
												"src": "20144:182:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20478:220:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20488:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20554:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20559:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20495:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20495:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "20488:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20660:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "20571:88:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20571:93:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20571:93:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20673:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20684:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20689:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20680:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20680:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "20673:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "20466:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "20474:3:12",
														"type": ""
													}
												],
												"src": "20332:366:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20875:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20885:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20897:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20908:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20893:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20893:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20885:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20932:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20943:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20928:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20928:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20951:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20957:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20947:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20947:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20921:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20921:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20921:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20977:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "21111:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20985:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20985:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20977:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20855:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20870:4:12",
														"type": ""
													}
												],
												"src": "20704:419:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21235:69:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21257:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21265:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21253:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21253:14:12"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21269:27:12",
																		"type": "",
																		"value": "ERC721: approve to caller"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21246:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21246:51:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21246:51:12"
														}
													]
												},
												"name": "store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "21227:6:12",
														"type": ""
													}
												],
												"src": "21129:175:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21456:220:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21466:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21532:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21537:2:12",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21473:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21473:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "21466:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21638:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
																	"nodeType": "YulIdentifier",
																	"src": "21549:88:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21549:93:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21549:93:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21651:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21662:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21667:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21658:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21658:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "21651:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21444:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21452:3:12",
														"type": ""
													}
												],
												"src": "21310:366:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21853:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21863:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21875:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21886:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21871:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21871:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21863:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21910:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21921:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21906:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21906:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "21929:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21935:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21925:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21925:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21899:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21899:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21899:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21955:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "22089:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21963:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21963:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21955:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21833:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21848:4:12",
														"type": ""
													}
												],
												"src": "21682:419:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22213:131:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22235:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22243:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22231:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22231:14:12"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f206e6f6e204552433732315265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22247:34:12",
																		"type": "",
																		"value": "ERC721: transfer to non ERC721Re"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22224:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22224:58:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22224:58:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22303:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22311:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22299:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22299:15:12"
																	},
																	{
																		"hexValue": "63656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22316:20:12",
																		"type": "",
																		"value": "ceiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22292:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22292:45:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22292:45:12"
														}
													]
												},
												"name": "store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22205:6:12",
														"type": ""
													}
												],
												"src": "22107:237:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22496:220:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22506:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22572:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22577:2:12",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22513:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22513:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "22506:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22678:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																	"nodeType": "YulIdentifier",
																	"src": "22589:88:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22589:93:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22589:93:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22691:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22702:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22707:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22698:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22698:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "22691:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22484:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "22492:3:12",
														"type": ""
													}
												],
												"src": "22350:366:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22893:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22903:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22915:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22926:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22911:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22911:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22903:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22950:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22961:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22946:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22946:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22969:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22975:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22965:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22965:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22939:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22939:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22939:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22995:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "23129:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23003:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "23003:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22995:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22873:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22888:4:12",
														"type": ""
													}
												],
												"src": "22722:419:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23175:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23192:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23195:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23185:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "23185:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23185:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23289:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23292:4:12",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23282:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "23282:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23282:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23313:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23316:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "23306:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "23306:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23306:15:12"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "23147:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23391:40:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23402:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23418:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "23412:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "23412:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "23402:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23374:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "23384:6:12",
														"type": ""
													}
												],
												"src": "23333:98:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23532:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23549:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "23554:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23542:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "23542:19:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23542:19:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23570:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23589:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23594:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23585:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "23585:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "23570:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "23504:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "23509:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "23520:11:12",
														"type": ""
													}
												],
												"src": "23437:168:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23701:270:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "23711:52:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23757:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "23725:31:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "23725:38:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "23715:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "23772:77:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23837:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "23842:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23779:57:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "23779:70:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "23772:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "23884:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23891:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23880:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23880:16:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23898:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "23903:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "23858:21:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "23858:52:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23858:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23919:46:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23930:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "23957:6:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "23935:21:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23935:29:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23926:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "23926:39:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "23919:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23682:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "23689:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "23697:3:12",
														"type": ""
													}
												],
												"src": "23611:360:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24177:440:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24187:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24199:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24210:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24195:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "24195:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24187:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "24268:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24281:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24292:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24277:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24277:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24224:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "24224:71:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24224:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "24349:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24362:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24373:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24358:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24358:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24305:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "24305:72:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24305:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "24431:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24444:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24455:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24440:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24440:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24387:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "24387:72:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24387:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24480:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24491:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24476:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24476:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "24500:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24506:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "24496:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24496:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24469:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "24469:48:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24469:48:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24526:84:12",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "24596:6:12"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "24605:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24534:61:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "24534:76:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24526:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24125:9:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "24137:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "24145:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "24153:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "24161:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24172:4:12",
														"type": ""
													}
												],
												"src": "23977:640:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24685:79:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24695:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "24710:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "24704:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "24704:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "24695:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "24752:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "24726:25:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "24726:32:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24726:32:12"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "24663:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "24671:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "24679:5:12",
														"type": ""
													}
												],
												"src": "24623:141:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24846:273:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "24892:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "24894:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24894:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "24894:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "24867:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24876:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "24863:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24863:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24888:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "24859:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "24859:32:12"
															},
															"nodeType": "YulIf",
															"src": "24856:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "24985:127:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "25000:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25014:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "25004:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "25029:73:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "25074:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "25085:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "25070:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "25070:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "25094:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "25039:30:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25039:63:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "25029:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24816:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "24827:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "24839:6:12",
														"type": ""
													}
												],
												"src": "24770:349:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approval to current owne\")\n\n        mstore(add(memPtr, 32), \"r\")\n\n    }\n\n    function abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve caller is not to\")\n\n        mstore(add(memPtr, 32), \"ken owner or approved for all\")\n\n    }\n\n    function abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 61)\n        store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: caller is not token owne\")\n\n        mstore(add(memPtr, 32), \"r or approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: invalid token ID\")\n\n    }\n\n    function abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_36ef143da8b2347d8f62e4cb6f029f7ea3f89998523a3fa935d79bb869ff4cc2(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: address zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_36ef143da8b2347d8f62e4cb6f029f7ea3f89998523a3fa935d79bb869ff4cc2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_36ef143da8b2347d8f62e4cb6f029f7ea3f89998523a3fa935d79bb869ff4cc2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_36ef143da8b2347d8f62e4cb6f029f7ea3f89998523a3fa935d79bb869ff4cc2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_36ef143da8b2347d8f62e4cb6f029f7ea3f89998523a3fa935d79bb869ff4cc2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer from incorrect \")\n\n        mstore(add(memPtr, 32), \"owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve to caller\")\n\n    }\n\n    function abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to non ERC721Re\")\n\n        mstore(add(memPtr, 32), \"ceiver implementer\")\n\n    }\n\n    function abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101005760003560e01c8063715018a611610097578063b88d4fde11610066578063b88d4fde14610299578063c87b56dd146102b5578063e985e9c5146102e5578063f2fde38b1461031557610100565b8063715018a6146102375780638da5cb5b1461024157806395d89b411461025f578063a22cb4651461027d57610100565b806323b872dd116100d357806323b872dd1461019f57806342842e0e146101bb5780636352211e146101d757806370a082311461020757610100565b806301ffc9a71461010557806306fdde0314610135578063081812fc14610153578063095ea7b314610183575b600080fd5b61011f600480360381019061011a919061178b565b610331565b60405161012c91906117d3565b60405180910390f35b61013d610413565b60405161014a9190611887565b60405180910390f35b61016d600480360381019061016891906118df565b6104a5565b60405161017a919061194d565b60405180910390f35b61019d60048036038101906101989190611994565b6104eb565b005b6101b960048036038101906101b491906119d4565b610603565b005b6101d560048036038101906101d091906119d4565b610663565b005b6101f160048036038101906101ec91906118df565b610683565b6040516101fe919061194d565b60405180910390f35b610221600480360381019061021c9190611a27565b61070a565b60405161022e9190611a63565b60405180910390f35b61023f6107c2565b005b6102496107d6565b604051610256919061194d565b60405180910390f35b6102676107ff565b6040516102749190611887565b60405180910390f35b61029760048036038101906102929190611aaa565b610891565b005b6102b360048036038101906102ae9190611c1f565b6108a7565b005b6102cf60048036038101906102ca91906118df565b610909565b6040516102dc9190611887565b60405180910390f35b6102ff60048036038101906102fa9190611ca2565b610971565b60405161030c91906117d3565b60405180910390f35b61032f600480360381019061032a9190611a27565b610a05565b005b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103fc57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061040c575061040b82610a89565b5b9050919050565b60606001805461042290611d11565b80601f016020809104026020016040519081016040528092919081815260200182805461044e90611d11565b801561049b5780601f106104705761010080835404028352916020019161049b565b820191906000526020600020905b81548152906001019060200180831161047e57829003601f168201915b5050505050905090565b60006104b082610af3565b6005600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104f682610683565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610567576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055e90611db5565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610586610b3e565b73ffffffffffffffffffffffffffffffffffffffff1614806105b557506105b4816105af610b3e565b610971565b5b6105f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105eb90611e47565b60405180910390fd5b6105fe8383610b46565b505050565b61061461060e610b3e565b82610bff565b610653576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064a90611ed9565b60405180910390fd5b61065e838383610c94565b505050565b61067e838383604051806020016040528060008152506108a7565b505050565b60008061068f83610f8e565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610701576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f890611f45565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561077b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077290611fb1565b60405180910390fd5b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6107ca610fcb565b6107d46000611049565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606002805461080e90611d11565b80601f016020809104026020016040519081016040528092919081815260200182805461083a90611d11565b80156108875780601f1061085c57610100808354040283529160200191610887565b820191906000526020600020905b81548152906001019060200180831161086a57829003601f168201915b5050505050905090565b6108a361089c610b3e565b838361110d565b5050565b6108b86108b2610b3e565b83610bff565b6108f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ee90611ed9565b60405180910390fd5b6109038484848461127a565b50505050565b606061091482610af3565b600061091e6112d6565b9050600081511161093e5760405180602001604052806000815250610969565b80610948846112ed565b60405160200161095992919061200d565b6040516020818303038152906040525b915050919050565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b610a0d610fcb565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610a7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a74906120a3565b60405180910390fd5b610a8681611049565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610afc816113c5565b610b3b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b3290611f45565b60405180910390fd5b50565b600033905090565b816005600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610bb983610683565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610c0b83610683565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610c4d5750610c4c8185610971565b5b80610c8b57508373ffffffffffffffffffffffffffffffffffffffff16610c73846104a5565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610cb482610683565b73ffffffffffffffffffffffffffffffffffffffff1614610d0a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0190612135565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d7a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d71906121c7565b60405180910390fd5b610d878383836001611406565b8273ffffffffffffffffffffffffffffffffffffffff16610da782610683565b73ffffffffffffffffffffffffffffffffffffffff1614610dfd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610df490612135565b60405180910390fd5b6005600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506001600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610f89838383600161140c565b505050565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b610fd3610b3e565b73ffffffffffffffffffffffffffffffffffffffff16610ff16107d6565b73ffffffffffffffffffffffffffffffffffffffff1614611047576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161103e90612233565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561117c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111739061229f565b60405180910390fd5b80600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161126d91906117d3565b60405180910390a3505050565b611285848484610c94565b61129184848484611412565b6112d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112c790612331565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b6060600060016112fc846115a9565b01905060008167ffffffffffffffff81111561131b5761131a611af4565b5b6040519080825280601f01601f19166020018201604052801561134d5781602001600182028036833780820191505090505b509050600082602001820190505b6001156113ba578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816113a4576113a3612351565b5b04945060008514156113b5576113ba565b61135b565b819350505050919050565b60008073ffffffffffffffffffffffffffffffffffffffff166113e783610f8e565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b50505050565b50505050565b60006114338473ffffffffffffffffffffffffffffffffffffffff166116fc565b1561159c578373ffffffffffffffffffffffffffffffffffffffff1663150b7a0261145c610b3e565b8786866040518563ffffffff1660e01b815260040161147e94939291906123d5565b602060405180830381600087803b15801561149857600080fd5b505af19250505080156114c957506040513d601f19601f820116820180604052508101906114c69190612436565b60015b61154c573d80600081146114f9576040519150601f19603f3d011682016040523d82523d6000602084013e6114fe565b606091505b50600081511415611544576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161153b90612331565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150506115a1565b600190505b949350505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611607577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816115fd576115fc612351565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611644576d04ee2d6d415b85acef8100000000838161163a57611639612351565b5b0492506020810190505b662386f26fc10000831061167357662386f26fc10000838161166957611668612351565b5b0492506010810190505b6305f5e100831061169c576305f5e100838161169257611691612351565b5b0492506008810190505b61271083106116c15761271083816116b7576116b6612351565b5b0492506004810190505b606483106116e457606483816116da576116d9612351565b5b0492506002810190505b600a83106116f3576001810190505b80915050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61176881611733565b811461177357600080fd5b50565b6000813590506117858161175f565b92915050565b6000602082840312156117a1576117a0611729565b5b60006117af84828501611776565b91505092915050565b60008115159050919050565b6117cd816117b8565b82525050565b60006020820190506117e860008301846117c4565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561182857808201518184015260208101905061180d565b83811115611837576000848401525b50505050565b6000601f19601f8301169050919050565b6000611859826117ee565b61186381856117f9565b935061187381856020860161180a565b61187c8161183d565b840191505092915050565b600060208201905081810360008301526118a1818461184e565b905092915050565b6000819050919050565b6118bc816118a9565b81146118c757600080fd5b50565b6000813590506118d9816118b3565b92915050565b6000602082840312156118f5576118f4611729565b5b6000611903848285016118ca565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006119378261190c565b9050919050565b6119478161192c565b82525050565b6000602082019050611962600083018461193e565b92915050565b6119718161192c565b811461197c57600080fd5b50565b60008135905061198e81611968565b92915050565b600080604083850312156119ab576119aa611729565b5b60006119b98582860161197f565b92505060206119ca858286016118ca565b9150509250929050565b6000806000606084860312156119ed576119ec611729565b5b60006119fb8682870161197f565b9350506020611a0c8682870161197f565b9250506040611a1d868287016118ca565b9150509250925092565b600060208284031215611a3d57611a3c611729565b5b6000611a4b8482850161197f565b91505092915050565b611a5d816118a9565b82525050565b6000602082019050611a786000830184611a54565b92915050565b611a87816117b8565b8114611a9257600080fd5b50565b600081359050611aa481611a7e565b92915050565b60008060408385031215611ac157611ac0611729565b5b6000611acf8582860161197f565b9250506020611ae085828601611a95565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611b2c8261183d565b810181811067ffffffffffffffff82111715611b4b57611b4a611af4565b5b80604052505050565b6000611b5e61171f565b9050611b6a8282611b23565b919050565b600067ffffffffffffffff821115611b8a57611b89611af4565b5b611b938261183d565b9050602081019050919050565b82818337600083830152505050565b6000611bc2611bbd84611b6f565b611b54565b905082815260208101848484011115611bde57611bdd611aef565b5b611be9848285611ba0565b509392505050565b600082601f830112611c0657611c05611aea565b5b8135611c16848260208601611baf565b91505092915050565b60008060008060808587031215611c3957611c38611729565b5b6000611c478782880161197f565b9450506020611c588782880161197f565b9350506040611c69878288016118ca565b925050606085013567ffffffffffffffff811115611c8a57611c8961172e565b5b611c9687828801611bf1565b91505092959194509250565b60008060408385031215611cb957611cb8611729565b5b6000611cc78582860161197f565b9250506020611cd88582860161197f565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611d2957607f821691505b60208210811415611d3d57611d3c611ce2565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b6000611d9f6021836117f9565b9150611daa82611d43565b604082019050919050565b60006020820190508181036000830152611dce81611d92565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b6000611e31603d836117f9565b9150611e3c82611dd5565b604082019050919050565b60006020820190508181036000830152611e6081611e24565b9050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b6000611ec3602d836117f9565b9150611ece82611e67565b604082019050919050565b60006020820190508181036000830152611ef281611eb6565b9050919050565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b6000611f2f6018836117f9565b9150611f3a82611ef9565b602082019050919050565b60006020820190508181036000830152611f5e81611f22565b9050919050565b7f4552433732313a2061646472657373207a65726f000000000000000000000000600082015250565b6000611f9b6014836117f9565b9150611fa682611f65565b602082019050919050565b60006020820190508181036000830152611fca81611f8e565b9050919050565b600081905092915050565b6000611fe7826117ee565b611ff18185611fd1565b935061200181856020860161180a565b80840191505092915050565b60006120198285611fdc565b91506120258284611fdc565b91508190509392505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061208d6026836117f9565b915061209882612031565b604082019050919050565b600060208201905081810360008301526120bc81612080565b9050919050565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b600061211f6025836117f9565b915061212a826120c3565b604082019050919050565b6000602082019050818103600083015261214e81612112565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006121b16024836117f9565b91506121bc82612155565b604082019050919050565b600060208201905081810360008301526121e0816121a4565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061221d6020836117f9565b9150612228826121e7565b602082019050919050565b6000602082019050818103600083015261224c81612210565b9050919050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b60006122896019836117f9565b915061229482612253565b602082019050919050565b600060208201905081810360008301526122b88161227c565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b600061231b6032836117f9565b9150612326826122bf565b604082019050919050565b6000602082019050818103600083015261234a8161230e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600081519050919050565b600082825260208201905092915050565b60006123a782612380565b6123b1818561238b565b93506123c181856020860161180a565b6123ca8161183d565b840191505092915050565b60006080820190506123ea600083018761193e565b6123f7602083018661193e565b6124046040830185611a54565b8181036060830152612416818461239c565b905095945050505050565b6000815190506124308161175f565b92915050565b60006020828403121561244c5761244b611729565b5b600061245a84828501612421565b9150509291505056fea2646970667358221220f086b1de4397bf00eb6648755a030c368b50ab9b2ac5421b65e56bb20ce0f57d64736f6c63430008090033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2E5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x315 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x27D JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x207 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x183 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x178B JUMP JUMPDEST PUSH2 0x331 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x17D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH2 0x413 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x1887 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x18DF JUMP JUMPDEST PUSH2 0x4A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x194D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x1994 JUMP JUMPDEST PUSH2 0x4EB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0x19D4 JUMP JUMPDEST PUSH2 0x603 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x19D4 JUMP JUMPDEST PUSH2 0x663 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0x18DF JUMP JUMPDEST PUSH2 0x683 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0x194D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x221 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21C SWAP2 SWAP1 PUSH2 0x1A27 JUMP JUMPDEST PUSH2 0x70A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22E SWAP2 SWAP1 PUSH2 0x1A63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH2 0x7C2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x249 PUSH2 0x7D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x194D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x267 PUSH2 0x7FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x274 SWAP2 SWAP1 PUSH2 0x1887 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x297 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x292 SWAP2 SWAP1 PUSH2 0x1AAA JUMP JUMPDEST PUSH2 0x891 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AE SWAP2 SWAP1 PUSH2 0x1C1F JUMP JUMPDEST PUSH2 0x8A7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0x18DF JUMP JUMPDEST PUSH2 0x909 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DC SWAP2 SWAP1 PUSH2 0x1887 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FA SWAP2 SWAP1 PUSH2 0x1CA2 JUMP JUMPDEST PUSH2 0x971 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30C SWAP2 SWAP1 PUSH2 0x17D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32A SWAP2 SWAP1 PUSH2 0x1A27 JUMP JUMPDEST PUSH2 0xA05 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3FC JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x40C JUMPI POP PUSH2 0x40B DUP3 PUSH2 0xA89 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x422 SWAP1 PUSH2 0x1D11 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x44E SWAP1 PUSH2 0x1D11 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x49B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x470 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x49B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x47E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B0 DUP3 PUSH2 0xAF3 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F6 DUP3 PUSH2 0x683 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x567 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55E SWAP1 PUSH2 0x1DB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x586 PUSH2 0xB3E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x5B5 JUMPI POP PUSH2 0x5B4 DUP2 PUSH2 0x5AF PUSH2 0xB3E JUMP JUMPDEST PUSH2 0x971 JUMP JUMPDEST JUMPDEST PUSH2 0x5F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5EB SWAP1 PUSH2 0x1E47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5FE DUP4 DUP4 PUSH2 0xB46 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x614 PUSH2 0x60E PUSH2 0xB3E JUMP JUMPDEST DUP3 PUSH2 0xBFF JUMP JUMPDEST PUSH2 0x653 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64A SWAP1 PUSH2 0x1ED9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x65E DUP4 DUP4 DUP4 PUSH2 0xC94 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x67E DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8A7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x68F DUP4 PUSH2 0xF8E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x701 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F8 SWAP1 PUSH2 0x1F45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x77B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x772 SWAP1 PUSH2 0x1FB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7CA PUSH2 0xFCB JUMP JUMPDEST PUSH2 0x7D4 PUSH1 0x0 PUSH2 0x1049 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x80E SWAP1 PUSH2 0x1D11 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x83A SWAP1 PUSH2 0x1D11 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x887 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x85C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x887 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x86A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x8A3 PUSH2 0x89C PUSH2 0xB3E JUMP JUMPDEST DUP4 DUP4 PUSH2 0x110D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x8B8 PUSH2 0x8B2 PUSH2 0xB3E JUMP JUMPDEST DUP4 PUSH2 0xBFF JUMP JUMPDEST PUSH2 0x8F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8EE SWAP1 PUSH2 0x1ED9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x903 DUP5 DUP5 DUP5 DUP5 PUSH2 0x127A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x914 DUP3 PUSH2 0xAF3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x91E PUSH2 0x12D6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x93E JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x969 JUMP JUMPDEST DUP1 PUSH2 0x948 DUP5 PUSH2 0x12ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x959 SWAP3 SWAP2 SWAP1 PUSH2 0x200D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA0D PUSH2 0xFCB JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA7D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA74 SWAP1 PUSH2 0x20A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA86 DUP2 PUSH2 0x1049 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAFC DUP2 PUSH2 0x13C5 JUMP JUMPDEST PUSH2 0xB3B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB32 SWAP1 PUSH2 0x1F45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBB9 DUP4 PUSH2 0x683 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xC0B DUP4 PUSH2 0x683 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xC4D JUMPI POP PUSH2 0xC4C DUP2 DUP6 PUSH2 0x971 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xC8B JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC73 DUP5 PUSH2 0x4A5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCB4 DUP3 PUSH2 0x683 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD0A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD01 SWAP1 PUSH2 0x2135 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD7A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD71 SWAP1 PUSH2 0x21C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD87 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1406 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDA7 DUP3 PUSH2 0x683 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDFD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF4 SWAP1 PUSH2 0x2135 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xF89 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x140C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFD3 PUSH2 0xB3E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFF1 PUSH2 0x7D6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1047 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x103E SWAP1 PUSH2 0x2233 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x117C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1173 SWAP1 PUSH2 0x229F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x126D SWAP2 SWAP1 PUSH2 0x17D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1285 DUP5 DUP5 DUP5 PUSH2 0xC94 JUMP JUMPDEST PUSH2 0x1291 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1412 JUMP JUMPDEST PUSH2 0x12D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12C7 SWAP1 PUSH2 0x2331 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x12FC DUP5 PUSH2 0x15A9 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x131B JUMPI PUSH2 0x131A PUSH2 0x1AF4 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x134D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x13BA JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x13A4 JUMPI PUSH2 0x13A3 PUSH2 0x2351 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 EQ ISZERO PUSH2 0x13B5 JUMPI PUSH2 0x13BA JUMP JUMPDEST PUSH2 0x135B JUMP JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13E7 DUP4 PUSH2 0xF8E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1433 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x16FC JUMP JUMPDEST ISZERO PUSH2 0x159C JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x145C PUSH2 0xB3E JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x147E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x23D5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1498 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x14C9 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14C6 SWAP2 SWAP1 PUSH2 0x2436 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x154C JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x14F9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x14FE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x1544 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x153B SWAP1 PUSH2 0x2331 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x15A1 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1607 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x15FD JUMPI PUSH2 0x15FC PUSH2 0x2351 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1644 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x163A JUMPI PUSH2 0x1639 PUSH2 0x2351 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1673 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1669 JUMPI PUSH2 0x1668 PUSH2 0x2351 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x169C JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1692 JUMPI PUSH2 0x1691 PUSH2 0x2351 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x16C1 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x16B7 JUMPI PUSH2 0x16B6 PUSH2 0x2351 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x16E4 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x16DA JUMPI PUSH2 0x16D9 PUSH2 0x2351 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x16F3 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1768 DUP2 PUSH2 0x1733 JUMP JUMPDEST DUP2 EQ PUSH2 0x1773 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1785 DUP2 PUSH2 0x175F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17A1 JUMPI PUSH2 0x17A0 PUSH2 0x1729 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17AF DUP5 DUP3 DUP6 ADD PUSH2 0x1776 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17CD DUP2 PUSH2 0x17B8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17E8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x17C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1828 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x180D JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1837 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1859 DUP3 PUSH2 0x17EE JUMP JUMPDEST PUSH2 0x1863 DUP2 DUP6 PUSH2 0x17F9 JUMP JUMPDEST SWAP4 POP PUSH2 0x1873 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x180A JUMP JUMPDEST PUSH2 0x187C DUP2 PUSH2 0x183D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x18A1 DUP2 DUP5 PUSH2 0x184E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18BC DUP2 PUSH2 0x18A9 JUMP JUMPDEST DUP2 EQ PUSH2 0x18C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x18D9 DUP2 PUSH2 0x18B3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18F5 JUMPI PUSH2 0x18F4 PUSH2 0x1729 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1903 DUP5 DUP3 DUP6 ADD PUSH2 0x18CA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1937 DUP3 PUSH2 0x190C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1947 DUP2 PUSH2 0x192C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1962 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x193E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1971 DUP2 PUSH2 0x192C JUMP JUMPDEST DUP2 EQ PUSH2 0x197C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x198E DUP2 PUSH2 0x1968 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19AB JUMPI PUSH2 0x19AA PUSH2 0x1729 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19B9 DUP6 DUP3 DUP7 ADD PUSH2 0x197F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x19CA DUP6 DUP3 DUP7 ADD PUSH2 0x18CA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x19ED JUMPI PUSH2 0x19EC PUSH2 0x1729 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19FB DUP7 DUP3 DUP8 ADD PUSH2 0x197F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1A0C DUP7 DUP3 DUP8 ADD PUSH2 0x197F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1A1D DUP7 DUP3 DUP8 ADD PUSH2 0x18CA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A3D JUMPI PUSH2 0x1A3C PUSH2 0x1729 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A4B DUP5 DUP3 DUP6 ADD PUSH2 0x197F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A5D DUP2 PUSH2 0x18A9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A78 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A54 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A87 DUP2 PUSH2 0x17B8 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AA4 DUP2 PUSH2 0x1A7E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AC1 JUMPI PUSH2 0x1AC0 PUSH2 0x1729 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1ACF DUP6 DUP3 DUP7 ADD PUSH2 0x197F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1AE0 DUP6 DUP3 DUP7 ADD PUSH2 0x1A95 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1B2C DUP3 PUSH2 0x183D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1B4B JUMPI PUSH2 0x1B4A PUSH2 0x1AF4 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B5E PUSH2 0x171F JUMP JUMPDEST SWAP1 POP PUSH2 0x1B6A DUP3 DUP3 PUSH2 0x1B23 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1B8A JUMPI PUSH2 0x1B89 PUSH2 0x1AF4 JUMP JUMPDEST JUMPDEST PUSH2 0x1B93 DUP3 PUSH2 0x183D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BC2 PUSH2 0x1BBD DUP5 PUSH2 0x1B6F JUMP JUMPDEST PUSH2 0x1B54 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1BDE JUMPI PUSH2 0x1BDD PUSH2 0x1AEF JUMP JUMPDEST JUMPDEST PUSH2 0x1BE9 DUP5 DUP3 DUP6 PUSH2 0x1BA0 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1C06 JUMPI PUSH2 0x1C05 PUSH2 0x1AEA JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1C16 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1BAF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1C39 JUMPI PUSH2 0x1C38 PUSH2 0x1729 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C47 DUP8 DUP3 DUP9 ADD PUSH2 0x197F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1C58 DUP8 DUP3 DUP9 ADD PUSH2 0x197F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1C69 DUP8 DUP3 DUP9 ADD PUSH2 0x18CA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C8A JUMPI PUSH2 0x1C89 PUSH2 0x172E JUMP JUMPDEST JUMPDEST PUSH2 0x1C96 DUP8 DUP3 DUP9 ADD PUSH2 0x1BF1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CB9 JUMPI PUSH2 0x1CB8 PUSH2 0x1729 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CC7 DUP6 DUP3 DUP7 ADD PUSH2 0x197F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1CD8 DUP6 DUP3 DUP7 ADD PUSH2 0x197F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1D29 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1D3D JUMPI PUSH2 0x1D3C PUSH2 0x1CE2 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D9F PUSH1 0x21 DUP4 PUSH2 0x17F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DAA DUP3 PUSH2 0x1D43 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DCE DUP2 PUSH2 0x1D92 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E31 PUSH1 0x3D DUP4 PUSH2 0x17F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E3C DUP3 PUSH2 0x1DD5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E60 DUP2 PUSH2 0x1E24 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EC3 PUSH1 0x2D DUP4 PUSH2 0x17F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x1ECE DUP3 PUSH2 0x1E67 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EF2 DUP2 PUSH2 0x1EB6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F2F PUSH1 0x18 DUP4 PUSH2 0x17F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F3A DUP3 PUSH2 0x1EF9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F5E DUP2 PUSH2 0x1F22 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F9B PUSH1 0x14 DUP4 PUSH2 0x17F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FA6 DUP3 PUSH2 0x1F65 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FCA DUP2 PUSH2 0x1F8E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FE7 DUP3 PUSH2 0x17EE JUMP JUMPDEST PUSH2 0x1FF1 DUP2 DUP6 PUSH2 0x1FD1 JUMP JUMPDEST SWAP4 POP PUSH2 0x2001 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x180A JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2019 DUP3 DUP6 PUSH2 0x1FDC JUMP JUMPDEST SWAP2 POP PUSH2 0x2025 DUP3 DUP5 PUSH2 0x1FDC JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x208D PUSH1 0x26 DUP4 PUSH2 0x17F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x2098 DUP3 PUSH2 0x2031 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20BC DUP2 PUSH2 0x2080 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x211F PUSH1 0x25 DUP4 PUSH2 0x17F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x212A DUP3 PUSH2 0x20C3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x214E DUP2 PUSH2 0x2112 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21B1 PUSH1 0x24 DUP4 PUSH2 0x17F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x21BC DUP3 PUSH2 0x2155 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21E0 DUP2 PUSH2 0x21A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x221D PUSH1 0x20 DUP4 PUSH2 0x17F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x2228 DUP3 PUSH2 0x21E7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x224C DUP2 PUSH2 0x2210 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2289 PUSH1 0x19 DUP4 PUSH2 0x17F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x2294 DUP3 PUSH2 0x2253 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22B8 DUP2 PUSH2 0x227C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x231B PUSH1 0x32 DUP4 PUSH2 0x17F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x2326 DUP3 PUSH2 0x22BF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x234A DUP2 PUSH2 0x230E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23A7 DUP3 PUSH2 0x2380 JUMP JUMPDEST PUSH2 0x23B1 DUP2 DUP6 PUSH2 0x238B JUMP JUMPDEST SWAP4 POP PUSH2 0x23C1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x180A JUMP JUMPDEST PUSH2 0x23CA DUP2 PUSH2 0x183D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x23EA PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x193E JUMP JUMPDEST PUSH2 0x23F7 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x193E JUMP JUMPDEST PUSH2 0x2404 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1A54 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2416 DUP2 DUP5 PUSH2 0x239C JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2430 DUP2 PUSH2 0x175F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x244C JUMPI PUSH2 0x244B PUSH2 0x1729 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x245A DUP5 DUP3 DUP6 ADD PUSH2 0x2421 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE DUP7 0xB1 0xDE NUMBER SWAP8 0xBF STOP 0xEB PUSH7 0x48755A030C368B POP 0xAB SWAP12 0x2A 0xC5 TIMESTAMP SHL PUSH6 0xE56BB20CE0F5 PUSH30 0x64736F6C6343000809003300000000000000000000000000000000000000 ",
							"sourceMap": "334:16620:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1321:297;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2205:92;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3681:163;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3203:412;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4357:293;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4721:143;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1922:216;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1682:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1877:103:2;;;:::i;:::-;;1236:87;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2366:96:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3916:147;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4935:271;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2533:273;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4134:156;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2135:201:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1321:297:3;1415:4;1467:25;1452:40;;;:11;:40;;;;:105;;;;1524:33;1509:48;;;:11;:48;;;;1452:105;:158;;;;1574:36;1598:11;1574:23;:36::i;:::-;1452:158;1432:178;;1321:297;;;:::o;2205:92::-;2251:13;2284:5;2277:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2205:92;:::o;3681:163::-;3749:7;3769:23;3784:7;3769:14;:23::i;:::-;3812:15;:24;3828:7;3812:24;;;;;;;;;;;;;;;;;;;;;3805:31;;3681:163;;;:::o;3203:412::-;3276:13;3292:27;3311:7;3292:18;:27::i;:::-;3276:43;;3344:5;3338:11;;:2;:11;;;;3330:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3438:5;3422:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3447:37;3464:5;3471:12;:10;:12::i;:::-;3447:16;:37::i;:::-;3422:62;3400:173;;;;;;;;;;;;:::i;:::-;;;;;;;;;3586:21;3595:2;3599:7;3586:8;:21::i;:::-;3265:350;3203:412;;:::o;4357:293::-;4510:41;4529:12;:10;:12::i;:::-;4543:7;4510:18;:41::i;:::-;4502:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;4614:28;4624:4;4630:2;4634:7;4614:9;:28::i;:::-;4357:293;;;:::o;4721:143::-;4817:39;4834:4;4840:2;4844:7;4817:39;;;;;;;;;;;;:16;:39::i;:::-;4721:143;;;:::o;1922:216::-;1987:7;2007:13;2023:17;2032:7;2023:8;:17::i;:::-;2007:33;;2076:1;2059:19;;:5;:19;;;;2051:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2125:5;2118:12;;;1922:216;;;:::o;1682:178::-;1746:7;1791:1;1774:19;;:5;:19;;;;1766:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1836:9;:16;1846:5;1836:16;;;;;;;;;;;;;;;;1829:23;;1682:178;;;:::o;1877:103:2:-;1122:13;:11;:13::i;:::-;1942:30:::1;1969:1;1942:18;:30::i;:::-;1877:103::o:0;1236:87::-;1282:7;1309:6;;;;;;;;;;;1302:13;;1236:87;:::o;2366:96:3:-;2414:13;2447:7;2440:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2366:96;:::o;3916:147::-;4003:52;4022:12;:10;:12::i;:::-;4036:8;4046;4003:18;:52::i;:::-;3916:147;;:::o;4935:271::-;5058:41;5077:12;:10;:12::i;:::-;5091:7;5058:18;:41::i;:::-;5050:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;5160:38;5174:4;5180:2;5184:7;5193:4;5160:13;:38::i;:::-;4935:271;;;;:::o;2533:273::-;2598:13;2624:23;2639:7;2624:14;:23::i;:::-;2660:21;2684:10;:8;:10::i;:::-;2660:34;;2736:1;2718:7;2712:21;:25;:86;;;;;;;;;;;;;;;;;2764:7;2773:18;:7;:16;:18::i;:::-;2747:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2712:86;2705:93;;;2533:273;;;:::o;4134:156::-;4223:4;4247:18;:25;4266:5;4247:25;;;;;;;;;;;;;;;:35;4273:8;4247:35;;;;;;;;;;;;;;;;;;;;;;;;;4240:42;;4134:156;;;;:::o;2135:201:2:-;1122:13;:11;:13::i;:::-;2244:1:::1;2224:22;;:8;:22;;;;2216:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2300:28;2319:8;2300:18;:28::i;:::-;2135:201:::0;:::o;866:157:1:-;951:4;990:25;975:40;;;:11;:40;;;;968:47;;866:157;;;:::o;13132:127:3:-;13206:16;13214:7;13206;:16::i;:::-;13198:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;13132:127;:::o;671:98:0:-;724:7;751:10;744:17;;671:98;:::o;12457:170:3:-;12551:2;12524:15;:24;12540:7;12524:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;12611:7;12607:2;12569:50;;12578:27;12597:7;12578:18;:27::i;:::-;12569:50;;;;;;;;;;;;12457:170;;:::o;7172:260::-;7257:4;7274:13;7290:27;7309:7;7290:18;:27::i;:::-;7274:43;;7347:5;7336:16;;:7;:16;;;:52;;;;7356:32;7373:5;7380:7;7356:16;:32::i;:::-;7336:52;:87;;;;7416:7;7392:31;;:20;7404:7;7392:11;:20::i;:::-;:31;;;7336:87;7328:96;;;7172:260;;;;:::o;11109:1229::-;11230:4;11199:35;;:27;11218:7;11199:18;:27::i;:::-;:35;;;11191:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;11309:1;11295:16;;:2;:16;;;;11287:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;11365:42;11386:4;11392:2;11396:7;11405:1;11365:20;:42::i;:::-;11541:4;11510:35;;:27;11529:7;11510:18;:27::i;:::-;:35;;;11502:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;11659:15;:24;11675:7;11659:24;;;;;;;;;;;;11652:31;;;;;;;;;;;12154:1;12135:9;:15;12145:4;12135:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;12187:1;12170:9;:13;12180:2;12170:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;12229:2;12210:7;:16;12218:7;12210:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;12268:7;12264:2;12249:27;;12258:4;12249:27;;;;;;;;;;;;12289:41;12309:4;12315:2;12319:7;12328:1;12289:19;:41::i;:::-;11109:1229;;;:::o;6463:109::-;6521:7;6548;:16;6556:7;6548:16;;;;;;;;;;;;;;;;;;;;;6541:23;;6463:109;;;:::o;1401:132:2:-;1476:12;:10;:12::i;:::-;1465:23;;:7;:5;:7::i;:::-;:23;;;1457:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1401:132::o;2496:191::-;2570:16;2589:6;;;;;;;;;;;2570:25;;2615:8;2606:6;;:17;;;;;;;;;;;;;;;;;;2670:8;2639:40;;2660:8;2639:40;;;;;;;;;;;;2559:128;2496:191;:::o;12770:273:3:-;12883:8;12874:17;;:5;:17;;;;12866:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;12970:8;12932:18;:25;12951:5;12932:25;;;;;;;;;;;;;;;:35;12958:8;12932:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13016:8;12994:41;;13009:5;12994:41;;;13026:8;12994:41;;;;;;:::i;:::-;;;;;;;;12770:273;;;:::o;6087:262::-;6192:28;6202:4;6208:2;6212:7;6192:9;:28::i;:::-;6239:47;6262:4;6268:2;6272:7;6281:4;6239:22;:47::i;:::-;6231:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;6087:262;;;;:::o;3055:86::-;3098:13;3124:9;;;;;;;;;;;;;;3055:86;:::o;455:716:11:-;511:13;562:14;599:1;579:17;590:5;579:10;:17::i;:::-;:21;562:38;;615:20;649:6;638:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;615:41;;671:11;800:6;796:2;792:15;784:6;780:28;773:35;;837:288;844:4;837:288;;;869:5;;;;;;;;1011:8;1006:2;999:5;995:14;990:30;985:3;977:44;1067:2;1058:11;;;;;;:::i;:::-;;;;;1101:1;1092:5;:10;1088:21;;;1104:5;;1088:21;837:288;;;1146:6;1139:13;;;;;455:716;;;:::o;6885:120:3:-;6942:4;6995:1;6966:31;;:17;6975:7;6966:8;:17::i;:::-;:31;;;;6959:38;;6885:120;;;:::o;15408:108::-;;;;;:::o;16238:107::-;;;;;:::o;13823:853::-;13977:4;13998:15;:2;:13;;;:15::i;:::-;13994:675;;;14050:2;14034:36;;;14071:12;:10;:12::i;:::-;14085:4;14091:7;14100:4;14034:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14030:584;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14292:1;14275:6;:13;:18;14271:328;;;14318:60;;;;;;;;;;:::i;:::-;;;;;;;;14271:328;14549:6;14543:13;14534:6;14530:2;14526:15;14519:38;14030:584;14166:41;;;14156:51;;;:6;:51;;;;14149:58;;;;;13994:675;14653:4;14646:11;;13823:853;;;;;;;:::o;10390:948:9:-;10443:7;10463:14;10480:1;10463:18;;10530:8;10521:5;:17;10517:106;;10568:8;10559:17;;;;;;:::i;:::-;;;;;10605:2;10595:12;;;;10517:106;10650:8;10641:5;:17;10637:106;;10688:8;10679:17;;;;;;:::i;:::-;;;;;10725:2;10715:12;;;;10637:106;10770:8;10761:5;:17;10757:106;;10808:8;10799:17;;;;;;:::i;:::-;;;;;10845:2;10835:12;;;;10757:106;10890:7;10881:5;:16;10877:103;;10927:7;10918:16;;;;;;:::i;:::-;;;;;10963:1;10953:11;;;;10877:103;11007:7;10998:5;:16;10994:103;;11044:7;11035:16;;;;;;:::i;:::-;;;;;11080:1;11070:11;;;;10994:103;11124:7;11115:5;:16;11111:103;;11161:7;11152:16;;;;;;:::i;:::-;;;;;11197:1;11187:11;;;;11111:103;11241:7;11232:5;:16;11228:68;;11279:1;11269:11;;;;11228:68;11324:6;11317:13;;;10390:948;;;:::o;1452:326:8:-;1512:4;1769:1;1747:7;:19;;;:23;1740:30;;1452:326;;;:::o;7:75:12:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:307::-;1866:1;1876:113;1890:6;1887:1;1884:13;1876:113;;;1975:1;1970:3;1966:11;1960:18;1956:1;1951:3;1947:11;1940:39;1912:2;1909:1;1905:10;1900:15;;1876:113;;;2007:6;2004:1;2001:13;1998:101;;;2087:1;2078:6;2073:3;2069:16;2062:27;1998:101;1847:258;1798:307;;;:::o;2111:102::-;2152:6;2203:2;2199:7;2194:2;2187:5;2183:14;2179:28;2169:38;;2111:102;;;:::o;2219:364::-;2307:3;2335:39;2368:5;2335:39;:::i;:::-;2390:71;2454:6;2449:3;2390:71;:::i;:::-;2383:78;;2470:52;2515:6;2510:3;2503:4;2496:5;2492:16;2470:52;:::i;:::-;2547:29;2569:6;2547:29;:::i;:::-;2542:3;2538:39;2531:46;;2311:272;2219:364;;;;:::o;2589:313::-;2702:4;2740:2;2729:9;2725:18;2717:26;;2789:9;2783:4;2779:20;2775:1;2764:9;2760:17;2753:47;2817:78;2890:4;2881:6;2817:78;:::i;:::-;2809:86;;2589:313;;;;:::o;2908:77::-;2945:7;2974:5;2963:16;;2908:77;;;:::o;2991:122::-;3064:24;3082:5;3064:24;:::i;:::-;3057:5;3054:35;3044:63;;3103:1;3100;3093:12;3044:63;2991:122;:::o;3119:139::-;3165:5;3203:6;3190:20;3181:29;;3219:33;3246:5;3219:33;:::i;:::-;3119:139;;;;:::o;3264:329::-;3323:6;3372:2;3360:9;3351:7;3347:23;3343:32;3340:119;;;3378:79;;:::i;:::-;3340:119;3498:1;3523:53;3568:7;3559:6;3548:9;3544:22;3523:53;:::i;:::-;3513:63;;3469:117;3264:329;;;;:::o;3599:126::-;3636:7;3676:42;3669:5;3665:54;3654:65;;3599:126;;;:::o;3731:96::-;3768:7;3797:24;3815:5;3797:24;:::i;:::-;3786:35;;3731:96;;;:::o;3833:118::-;3920:24;3938:5;3920:24;:::i;:::-;3915:3;3908:37;3833:118;;:::o;3957:222::-;4050:4;4088:2;4077:9;4073:18;4065:26;;4101:71;4169:1;4158:9;4154:17;4145:6;4101:71;:::i;:::-;3957:222;;;;:::o;4185:122::-;4258:24;4276:5;4258:24;:::i;:::-;4251:5;4248:35;4238:63;;4297:1;4294;4287:12;4238:63;4185:122;:::o;4313:139::-;4359:5;4397:6;4384:20;4375:29;;4413:33;4440:5;4413:33;:::i;:::-;4313:139;;;;:::o;4458:474::-;4526:6;4534;4583:2;4571:9;4562:7;4558:23;4554:32;4551:119;;;4589:79;;:::i;:::-;4551:119;4709:1;4734:53;4779:7;4770:6;4759:9;4755:22;4734:53;:::i;:::-;4724:63;;4680:117;4836:2;4862:53;4907:7;4898:6;4887:9;4883:22;4862:53;:::i;:::-;4852:63;;4807:118;4458:474;;;;;:::o;4938:619::-;5015:6;5023;5031;5080:2;5068:9;5059:7;5055:23;5051:32;5048:119;;;5086:79;;:::i;:::-;5048:119;5206:1;5231:53;5276:7;5267:6;5256:9;5252:22;5231:53;:::i;:::-;5221:63;;5177:117;5333:2;5359:53;5404:7;5395:6;5384:9;5380:22;5359:53;:::i;:::-;5349:63;;5304:118;5461:2;5487:53;5532:7;5523:6;5512:9;5508:22;5487:53;:::i;:::-;5477:63;;5432:118;4938:619;;;;;:::o;5563:329::-;5622:6;5671:2;5659:9;5650:7;5646:23;5642:32;5639:119;;;5677:79;;:::i;:::-;5639:119;5797:1;5822:53;5867:7;5858:6;5847:9;5843:22;5822:53;:::i;:::-;5812:63;;5768:117;5563:329;;;;:::o;5898:118::-;5985:24;6003:5;5985:24;:::i;:::-;5980:3;5973:37;5898:118;;:::o;6022:222::-;6115:4;6153:2;6142:9;6138:18;6130:26;;6166:71;6234:1;6223:9;6219:17;6210:6;6166:71;:::i;:::-;6022:222;;;;:::o;6250:116::-;6320:21;6335:5;6320:21;:::i;:::-;6313:5;6310:32;6300:60;;6356:1;6353;6346:12;6300:60;6250:116;:::o;6372:133::-;6415:5;6453:6;6440:20;6431:29;;6469:30;6493:5;6469:30;:::i;:::-;6372:133;;;;:::o;6511:468::-;6576:6;6584;6633:2;6621:9;6612:7;6608:23;6604:32;6601:119;;;6639:79;;:::i;:::-;6601:119;6759:1;6784:53;6829:7;6820:6;6809:9;6805:22;6784:53;:::i;:::-;6774:63;;6730:117;6886:2;6912:50;6954:7;6945:6;6934:9;6930:22;6912:50;:::i;:::-;6902:60;;6857:115;6511:468;;;;;:::o;6985:117::-;7094:1;7091;7084:12;7108:117;7217:1;7214;7207:12;7231:180;7279:77;7276:1;7269:88;7376:4;7373:1;7366:15;7400:4;7397:1;7390:15;7417:281;7500:27;7522:4;7500:27;:::i;:::-;7492:6;7488:40;7630:6;7618:10;7615:22;7594:18;7582:10;7579:34;7576:62;7573:88;;;7641:18;;:::i;:::-;7573:88;7681:10;7677:2;7670:22;7460:238;7417:281;;:::o;7704:129::-;7738:6;7765:20;;:::i;:::-;7755:30;;7794:33;7822:4;7814:6;7794:33;:::i;:::-;7704:129;;;:::o;7839:307::-;7900:4;7990:18;7982:6;7979:30;7976:56;;;8012:18;;:::i;:::-;7976:56;8050:29;8072:6;8050:29;:::i;:::-;8042:37;;8134:4;8128;8124:15;8116:23;;7839:307;;;:::o;8152:154::-;8236:6;8231:3;8226;8213:30;8298:1;8289:6;8284:3;8280:16;8273:27;8152:154;;;:::o;8312:410::-;8389:5;8414:65;8430:48;8471:6;8430:48;:::i;:::-;8414:65;:::i;:::-;8405:74;;8502:6;8495:5;8488:21;8540:4;8533:5;8529:16;8578:3;8569:6;8564:3;8560:16;8557:25;8554:112;;;8585:79;;:::i;:::-;8554:112;8675:41;8709:6;8704:3;8699;8675:41;:::i;:::-;8395:327;8312:410;;;;;:::o;8741:338::-;8796:5;8845:3;8838:4;8830:6;8826:17;8822:27;8812:122;;8853:79;;:::i;:::-;8812:122;8970:6;8957:20;8995:78;9069:3;9061:6;9054:4;9046:6;9042:17;8995:78;:::i;:::-;8986:87;;8802:277;8741:338;;;;:::o;9085:943::-;9180:6;9188;9196;9204;9253:3;9241:9;9232:7;9228:23;9224:33;9221:120;;;9260:79;;:::i;:::-;9221:120;9380:1;9405:53;9450:7;9441:6;9430:9;9426:22;9405:53;:::i;:::-;9395:63;;9351:117;9507:2;9533:53;9578:7;9569:6;9558:9;9554:22;9533:53;:::i;:::-;9523:63;;9478:118;9635:2;9661:53;9706:7;9697:6;9686:9;9682:22;9661:53;:::i;:::-;9651:63;;9606:118;9791:2;9780:9;9776:18;9763:32;9822:18;9814:6;9811:30;9808:117;;;9844:79;;:::i;:::-;9808:117;9949:62;10003:7;9994:6;9983:9;9979:22;9949:62;:::i;:::-;9939:72;;9734:287;9085:943;;;;;;;:::o;10034:474::-;10102:6;10110;10159:2;10147:9;10138:7;10134:23;10130:32;10127:119;;;10165:79;;:::i;:::-;10127:119;10285:1;10310:53;10355:7;10346:6;10335:9;10331:22;10310:53;:::i;:::-;10300:63;;10256:117;10412:2;10438:53;10483:7;10474:6;10463:9;10459:22;10438:53;:::i;:::-;10428:63;;10383:118;10034:474;;;;;:::o;10514:180::-;10562:77;10559:1;10552:88;10659:4;10656:1;10649:15;10683:4;10680:1;10673:15;10700:320;10744:6;10781:1;10775:4;10771:12;10761:22;;10828:1;10822:4;10818:12;10849:18;10839:81;;10905:4;10897:6;10893:17;10883:27;;10839:81;10967:2;10959:6;10956:14;10936:18;10933:38;10930:84;;;10986:18;;:::i;:::-;10930:84;10751:269;10700:320;;;:::o;11026:220::-;11166:34;11162:1;11154:6;11150:14;11143:58;11235:3;11230:2;11222:6;11218:15;11211:28;11026:220;:::o;11252:366::-;11394:3;11415:67;11479:2;11474:3;11415:67;:::i;:::-;11408:74;;11491:93;11580:3;11491:93;:::i;:::-;11609:2;11604:3;11600:12;11593:19;;11252:366;;;:::o;11624:419::-;11790:4;11828:2;11817:9;11813:18;11805:26;;11877:9;11871:4;11867:20;11863:1;11852:9;11848:17;11841:47;11905:131;12031:4;11905:131;:::i;:::-;11897:139;;11624:419;;;:::o;12049:248::-;12189:34;12185:1;12177:6;12173:14;12166:58;12258:31;12253:2;12245:6;12241:15;12234:56;12049:248;:::o;12303:366::-;12445:3;12466:67;12530:2;12525:3;12466:67;:::i;:::-;12459:74;;12542:93;12631:3;12542:93;:::i;:::-;12660:2;12655:3;12651:12;12644:19;;12303:366;;;:::o;12675:419::-;12841:4;12879:2;12868:9;12864:18;12856:26;;12928:9;12922:4;12918:20;12914:1;12903:9;12899:17;12892:47;12956:131;13082:4;12956:131;:::i;:::-;12948:139;;12675:419;;;:::o;13100:232::-;13240:34;13236:1;13228:6;13224:14;13217:58;13309:15;13304:2;13296:6;13292:15;13285:40;13100:232;:::o;13338:366::-;13480:3;13501:67;13565:2;13560:3;13501:67;:::i;:::-;13494:74;;13577:93;13666:3;13577:93;:::i;:::-;13695:2;13690:3;13686:12;13679:19;;13338:366;;;:::o;13710:419::-;13876:4;13914:2;13903:9;13899:18;13891:26;;13963:9;13957:4;13953:20;13949:1;13938:9;13934:17;13927:47;13991:131;14117:4;13991:131;:::i;:::-;13983:139;;13710:419;;;:::o;14135:174::-;14275:26;14271:1;14263:6;14259:14;14252:50;14135:174;:::o;14315:366::-;14457:3;14478:67;14542:2;14537:3;14478:67;:::i;:::-;14471:74;;14554:93;14643:3;14554:93;:::i;:::-;14672:2;14667:3;14663:12;14656:19;;14315:366;;;:::o;14687:419::-;14853:4;14891:2;14880:9;14876:18;14868:26;;14940:9;14934:4;14930:20;14926:1;14915:9;14911:17;14904:47;14968:131;15094:4;14968:131;:::i;:::-;14960:139;;14687:419;;;:::o;15112:170::-;15252:22;15248:1;15240:6;15236:14;15229:46;15112:170;:::o;15288:366::-;15430:3;15451:67;15515:2;15510:3;15451:67;:::i;:::-;15444:74;;15527:93;15616:3;15527:93;:::i;:::-;15645:2;15640:3;15636:12;15629:19;;15288:366;;;:::o;15660:419::-;15826:4;15864:2;15853:9;15849:18;15841:26;;15913:9;15907:4;15903:20;15899:1;15888:9;15884:17;15877:47;15941:131;16067:4;15941:131;:::i;:::-;15933:139;;15660:419;;;:::o;16085:148::-;16187:11;16224:3;16209:18;;16085:148;;;;:::o;16239:377::-;16345:3;16373:39;16406:5;16373:39;:::i;:::-;16428:89;16510:6;16505:3;16428:89;:::i;:::-;16421:96;;16526:52;16571:6;16566:3;16559:4;16552:5;16548:16;16526:52;:::i;:::-;16603:6;16598:3;16594:16;16587:23;;16349:267;16239:377;;;;:::o;16622:435::-;16802:3;16824:95;16915:3;16906:6;16824:95;:::i;:::-;16817:102;;16936:95;17027:3;17018:6;16936:95;:::i;:::-;16929:102;;17048:3;17041:10;;16622:435;;;;;:::o;17063:225::-;17203:34;17199:1;17191:6;17187:14;17180:58;17272:8;17267:2;17259:6;17255:15;17248:33;17063:225;:::o;17294:366::-;17436:3;17457:67;17521:2;17516:3;17457:67;:::i;:::-;17450:74;;17533:93;17622:3;17533:93;:::i;:::-;17651:2;17646:3;17642:12;17635:19;;17294:366;;;:::o;17666:419::-;17832:4;17870:2;17859:9;17855:18;17847:26;;17919:9;17913:4;17909:20;17905:1;17894:9;17890:17;17883:47;17947:131;18073:4;17947:131;:::i;:::-;17939:139;;17666:419;;;:::o;18091:224::-;18231:34;18227:1;18219:6;18215:14;18208:58;18300:7;18295:2;18287:6;18283:15;18276:32;18091:224;:::o;18321:366::-;18463:3;18484:67;18548:2;18543:3;18484:67;:::i;:::-;18477:74;;18560:93;18649:3;18560:93;:::i;:::-;18678:2;18673:3;18669:12;18662:19;;18321:366;;;:::o;18693:419::-;18859:4;18897:2;18886:9;18882:18;18874:26;;18946:9;18940:4;18936:20;18932:1;18921:9;18917:17;18910:47;18974:131;19100:4;18974:131;:::i;:::-;18966:139;;18693:419;;;:::o;19118:223::-;19258:34;19254:1;19246:6;19242:14;19235:58;19327:6;19322:2;19314:6;19310:15;19303:31;19118:223;:::o;19347:366::-;19489:3;19510:67;19574:2;19569:3;19510:67;:::i;:::-;19503:74;;19586:93;19675:3;19586:93;:::i;:::-;19704:2;19699:3;19695:12;19688:19;;19347:366;;;:::o;19719:419::-;19885:4;19923:2;19912:9;19908:18;19900:26;;19972:9;19966:4;19962:20;19958:1;19947:9;19943:17;19936:47;20000:131;20126:4;20000:131;:::i;:::-;19992:139;;19719:419;;;:::o;20144:182::-;20284:34;20280:1;20272:6;20268:14;20261:58;20144:182;:::o;20332:366::-;20474:3;20495:67;20559:2;20554:3;20495:67;:::i;:::-;20488:74;;20571:93;20660:3;20571:93;:::i;:::-;20689:2;20684:3;20680:12;20673:19;;20332:366;;;:::o;20704:419::-;20870:4;20908:2;20897:9;20893:18;20885:26;;20957:9;20951:4;20947:20;20943:1;20932:9;20928:17;20921:47;20985:131;21111:4;20985:131;:::i;:::-;20977:139;;20704:419;;;:::o;21129:175::-;21269:27;21265:1;21257:6;21253:14;21246:51;21129:175;:::o;21310:366::-;21452:3;21473:67;21537:2;21532:3;21473:67;:::i;:::-;21466:74;;21549:93;21638:3;21549:93;:::i;:::-;21667:2;21662:3;21658:12;21651:19;;21310:366;;;:::o;21682:419::-;21848:4;21886:2;21875:9;21871:18;21863:26;;21935:9;21929:4;21925:20;21921:1;21910:9;21906:17;21899:47;21963:131;22089:4;21963:131;:::i;:::-;21955:139;;21682:419;;;:::o;22107:237::-;22247:34;22243:1;22235:6;22231:14;22224:58;22316:20;22311:2;22303:6;22299:15;22292:45;22107:237;:::o;22350:366::-;22492:3;22513:67;22577:2;22572:3;22513:67;:::i;:::-;22506:74;;22589:93;22678:3;22589:93;:::i;:::-;22707:2;22702:3;22698:12;22691:19;;22350:366;;;:::o;22722:419::-;22888:4;22926:2;22915:9;22911:18;22903:26;;22975:9;22969:4;22965:20;22961:1;22950:9;22946:17;22939:47;23003:131;23129:4;23003:131;:::i;:::-;22995:139;;22722:419;;;:::o;23147:180::-;23195:77;23192:1;23185:88;23292:4;23289:1;23282:15;23316:4;23313:1;23306:15;23333:98;23384:6;23418:5;23412:12;23402:22;;23333:98;;;:::o;23437:168::-;23520:11;23554:6;23549:3;23542:19;23594:4;23589:3;23585:14;23570:29;;23437:168;;;;:::o;23611:360::-;23697:3;23725:38;23757:5;23725:38;:::i;:::-;23779:70;23842:6;23837:3;23779:70;:::i;:::-;23772:77;;23858:52;23903:6;23898:3;23891:4;23884:5;23880:16;23858:52;:::i;:::-;23935:29;23957:6;23935:29;:::i;:::-;23930:3;23926:39;23919:46;;23701:270;23611:360;;;;:::o;23977:640::-;24172:4;24210:3;24199:9;24195:19;24187:27;;24224:71;24292:1;24281:9;24277:17;24268:6;24224:71;:::i;:::-;24305:72;24373:2;24362:9;24358:18;24349:6;24305:72;:::i;:::-;24387;24455:2;24444:9;24440:18;24431:6;24387:72;:::i;:::-;24506:9;24500:4;24496:20;24491:2;24480:9;24476:18;24469:48;24534:76;24605:4;24596:6;24534:76;:::i;:::-;24526:84;;23977:640;;;;;;;:::o;24623:141::-;24679:5;24710:6;24704:13;24695:22;;24726:32;24752:5;24726:32;:::i;:::-;24623:141;;;;:::o;24770:349::-;24839:6;24888:2;24876:9;24867:7;24863:23;24859:32;24856:119;;;24894:79;;:::i;:::-;24856:119;25014:1;25039:63;25094:7;25085:6;25074:9;25070:22;25039:63;:::i;:::-;25029:73;;24985:127;24770:349;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1873800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2968",
								"getApproved(uint256)": "5300",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"owner()": "2567",
								"ownerOf(uint256)": "3069",
								"renounceOwnership()": "30421",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "797",
								"symbol()": "infinite",
								"tokenURI(uint256)": "3445",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "30835"
							},
							"internal": {
								"__unsafe_increaseBalance(address,uint256)": "infinite",
								"_afterTokenTransfer(address,address,uint256,uint256)": "17",
								"_approve(address,uint256)": "infinite",
								"_baseURI()": "infinite",
								"_beforeTokenTransfer(address,address,uint256,uint256)": "17",
								"_burn(uint256)": "infinite",
								"_checkOnERC721Received(address,address,uint256,bytes memory)": "infinite",
								"_exists(uint256)": "2312",
								"_isApprovedOrOwner(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_ownerOf(uint256)": "2248",
								"_requireMinted(uint256)": "infinite",
								"_safeMint(address,uint256)": "infinite",
								"_safeMint(address,uint256,bytes memory)": "infinite",
								"_safeTransfer(address,address,uint256,bytes memory)": "infinite",
								"_setApprovalForAll(address,address,bool)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 334,
									"end": 16954,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1133,
									"end": 1249,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 1133,
									"end": 1249,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1133,
									"end": 1249,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1133,
									"end": 1249,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1133,
									"end": 1249,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1133,
									"end": 1249,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1133,
									"end": 1249,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1133,
									"end": 1249,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1133,
									"end": 1249,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1133,
									"end": 1249,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1133,
									"end": 1249,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1133,
									"end": 1249,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1133,
									"end": 1249,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1133,
									"end": 1249,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 1133,
									"end": 1249,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 1133,
									"end": 1249,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1133,
									"end": 1249,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1133,
									"end": 1249,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 1133,
									"end": 1249,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1133,
									"end": 1249,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 1133,
									"end": 1249,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1133,
									"end": 1249,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1133,
									"end": 1249,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1133,
									"end": 1249,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1133,
									"end": 1249,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1133,
									"end": 1249,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1133,
									"end": 1249,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1133,
									"end": 1249,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1133,
									"end": 1249,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1133,
									"end": 1249,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1133,
									"end": 1249,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1133,
									"end": 1249,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1133,
									"end": 1249,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1133,
									"end": 1249,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1133,
									"end": 1249,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 957,
									"end": 989,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 976,
									"end": 988,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 976,
									"end": 986,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 976,
									"end": 986,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 976,
									"end": 986,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 976,
									"end": 988,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 976,
									"end": 988,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 976,
									"end": 988,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 976,
									"end": 988,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 976,
									"end": 988,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 957,
									"end": 975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 957,
									"end": 975,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 957,
									"end": 975,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 957,
									"end": 989,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 957,
									"end": 989,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 957,
									"end": 989,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 957,
									"end": 989,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 957,
									"end": 989,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1208,
									"end": 1213,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1200,
									"end": 1205,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1200,
									"end": 1213,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1200,
									"end": 1213,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1200,
									"end": 1213,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1200,
									"end": 1213,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1200,
									"end": 1213,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1200,
									"end": 1213,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1200,
									"end": 1213,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1200,
									"end": 1213,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 1200,
									"end": 1213,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1200,
									"end": 1213,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1200,
									"end": 1213,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1200,
									"end": 1213,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1200,
									"end": 1213,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1200,
									"end": 1213,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 1200,
									"end": 1213,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1200,
									"end": 1213,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1234,
									"end": 1241,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1224,
									"end": 1231,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1224,
									"end": 1241,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1224,
									"end": 1241,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1224,
									"end": 1241,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1224,
									"end": 1241,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1224,
									"end": 1241,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1224,
									"end": 1241,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1224,
									"end": 1241,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1224,
									"end": 1241,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 1224,
									"end": 1241,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1224,
									"end": 1241,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1224,
									"end": 1241,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1224,
									"end": 1241,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1224,
									"end": 1241,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1224,
									"end": 1241,
									"name": "tag",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 1224,
									"end": 1241,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1224,
									"end": 1241,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1133,
									"end": 1249,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1133,
									"end": 1249,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 671,
									"end": 769,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 671,
									"end": 769,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 724,
									"end": 731,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 761,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 744,
									"end": 761,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 744,
									"end": 761,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 671,
									"end": 769,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 671,
									"end": 769,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 2496,
									"end": 2687,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 2496,
									"end": 2687,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2570,
									"end": 2586,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2589,
									"end": 2595,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2589,
									"end": 2595,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2589,
									"end": 2595,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2589,
									"end": 2595,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 2589,
									"end": 2595,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2589,
									"end": 2595,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 2589,
									"end": 2595,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 2589,
									"end": 2595,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2589,
									"end": 2595,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 2589,
									"end": 2595,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2589,
									"end": 2595,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2570,
									"end": 2595,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2570,
									"end": 2595,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2615,
									"end": 2623,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2606,
									"end": 2612,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2606,
									"end": 2612,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2606,
									"end": 2623,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 2606,
									"end": 2623,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 2606,
									"end": 2623,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2606,
									"end": 2623,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 2606,
									"end": 2623,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2606,
									"end": 2623,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2606,
									"end": 2623,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 2606,
									"end": 2623,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 2606,
									"end": 2623,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2606,
									"end": 2623,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2606,
									"end": 2623,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2606,
									"end": 2623,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2606,
									"end": 2623,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2606,
									"end": 2623,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 2606,
									"end": 2623,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 2606,
									"end": 2623,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2606,
									"end": 2623,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 2606,
									"end": 2623,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2670,
									"end": 2678,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2639,
									"end": 2679,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2639,
									"end": 2679,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2660,
									"end": 2668,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2639,
									"end": 2679,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2639,
									"end": 2679,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2639,
									"end": 2679,
									"name": "PUSH",
									"source": 2,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2639,
									"end": 2679,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2639,
									"end": 2679,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2639,
									"end": 2679,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2639,
									"end": 2679,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2639,
									"end": 2679,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2639,
									"end": 2679,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2639,
									"end": 2679,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 2639,
									"end": 2679,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2639,
									"end": 2679,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 2559,
									"end": 2687,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2496,
									"end": 2687,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2496,
									"end": 2687,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "tag",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "tag",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "PUSH",
									"source": 3,
									"value": "FF"
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "tag",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "tag",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "tag",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "tag",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "tag",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "tag",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMP",
									"source": 12,
									"value": "[out]"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMP",
									"source": 12,
									"value": "[out]"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "52"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMP",
									"source": 12,
									"value": "[in]"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 12,
									"value": "52"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "53"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "54"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMP",
									"source": 12,
									"value": "[in]"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 12,
									"value": "54"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 12,
									"value": "53"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMP",
									"source": 12,
									"value": "[out]"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "56"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMP",
									"source": 12,
									"value": "[in]"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 12,
									"value": "56"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "57"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMP",
									"source": 12,
									"value": "[in]"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 12,
									"value": "57"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMP",
									"source": 12,
									"value": "[out]"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "59"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMP",
									"source": 12,
									"value": "[in]"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 12,
									"value": "59"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "61"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMP",
									"source": 12,
									"value": "[in]"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 12,
									"value": "61"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMP",
									"source": 12,
									"value": "[out]"
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "tag",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1678,
									"end": 1679,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "tag",
									"source": 12,
									"value": "63"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1702,
									"end": 1708,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1699,
									"end": 1700,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1696,
									"end": 1709,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "65"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1787,
									"end": 1788,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1782,
									"end": 1785,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1778,
									"end": 1789,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1772,
									"end": 1790,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1768,
									"end": 1769,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1763,
									"end": 1766,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1759,
									"end": 1770,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1752,
									"end": 1791,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1724,
									"end": 1726,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1721,
									"end": 1722,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1717,
									"end": 1727,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1712,
									"end": 1727,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1712,
									"end": 1727,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "63"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "tag",
									"source": 12,
									"value": "65"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1819,
									"end": 1825,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1816,
									"end": 1817,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1813,
									"end": 1826,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "66"
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1899,
									"end": 1900,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1890,
									"end": 1896,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1885,
									"end": 1888,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1881,
									"end": 1897,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1874,
									"end": 1901,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "tag",
									"source": 12,
									"value": "66"
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1659,
									"end": 1917,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "JUMP",
									"source": 12,
									"value": "[out]"
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "tag",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2012,
									"end": 2017,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2037,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "68"
								},
								{
									"begin": 2053,
									"end": 2102,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 2095,
									"end": 2101,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2053,
									"end": 2102,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 2053,
									"end": 2102,
									"name": "JUMP",
									"source": 12,
									"value": "[in]"
								},
								{
									"begin": 2053,
									"end": 2102,
									"name": "tag",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 2053,
									"end": 2102,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2037,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 2037,
									"end": 2103,
									"name": "JUMP",
									"source": 12,
									"value": "[in]"
								},
								{
									"begin": 2037,
									"end": 2103,
									"name": "tag",
									"source": 12,
									"value": "68"
								},
								{
									"begin": 2037,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2028,
									"end": 2103,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2028,
									"end": 2103,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2126,
									"end": 2132,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2119,
									"end": 2124,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2112,
									"end": 2133,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2164,
									"end": 2168,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2157,
									"end": 2162,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2153,
									"end": 2169,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2202,
									"end": 2205,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2193,
									"end": 2199,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2188,
									"end": 2191,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2184,
									"end": 2200,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2181,
									"end": 2206,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "70"
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2209,
									"end": 2288,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "71"
								},
								{
									"begin": 2209,
									"end": 2288,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 2209,
									"end": 2288,
									"name": "JUMP",
									"source": 12,
									"value": "[in]"
								},
								{
									"begin": 2209,
									"end": 2288,
									"name": "tag",
									"source": 12,
									"value": "71"
								},
								{
									"begin": 2209,
									"end": 2288,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "tag",
									"source": 12,
									"value": "70"
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2299,
									"end": 2338,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "72"
								},
								{
									"begin": 2331,
									"end": 2337,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2326,
									"end": 2329,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2321,
									"end": 2324,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 2299,
									"end": 2338,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 2299,
									"end": 2338,
									"name": "JUMP",
									"source": 12,
									"value": "[in]"
								},
								{
									"begin": 2299,
									"end": 2338,
									"name": "tag",
									"source": 12,
									"value": "72"
								},
								{
									"begin": 2299,
									"end": 2338,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2018,
									"end": 2344,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "JUMP",
									"source": 12,
									"value": "[out]"
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "tag",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2431,
									"end": 2436,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2480,
									"end": 2483,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2473,
									"end": 2477,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 2465,
									"end": 2471,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2461,
									"end": 2478,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2457,
									"end": 2484,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 2447,
									"end": 2569,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "74"
								},
								{
									"begin": 2447,
									"end": 2569,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2488,
									"end": 2567,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "75"
								},
								{
									"begin": 2488,
									"end": 2567,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 2488,
									"end": 2567,
									"name": "JUMP",
									"source": 12,
									"value": "[in]"
								},
								{
									"begin": 2488,
									"end": 2567,
									"name": "tag",
									"source": 12,
									"value": "75"
								},
								{
									"begin": 2488,
									"end": 2567,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2447,
									"end": 2569,
									"name": "tag",
									"source": 12,
									"value": "74"
								},
								{
									"begin": 2447,
									"end": 2569,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2598,
									"end": 2604,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2592,
									"end": 2605,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 2623,
									"end": 2713,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "76"
								},
								{
									"begin": 2709,
									"end": 2712,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2701,
									"end": 2707,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2694,
									"end": 2698,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2686,
									"end": 2692,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 2682,
									"end": 2699,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2623,
									"end": 2713,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 2623,
									"end": 2713,
									"name": "JUMP",
									"source": 12,
									"value": "[in]"
								},
								{
									"begin": 2623,
									"end": 2713,
									"name": "tag",
									"source": 12,
									"value": "76"
								},
								{
									"begin": 2623,
									"end": 2713,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2614,
									"end": 2713,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2614,
									"end": 2713,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2437,
									"end": 2719,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "JUMP",
									"source": 12,
									"value": "[out]"
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "tag",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2824,
									"end": 2830,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2832,
									"end": 2838,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2881,
									"end": 2883,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 2869,
									"end": 2878,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2860,
									"end": 2867,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 2856,
									"end": 2879,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 2852,
									"end": 2884,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 2849,
									"end": 2968,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2849,
									"end": 2968,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "78"
								},
								{
									"begin": 2849,
									"end": 2968,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2887,
									"end": 2966,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "79"
								},
								{
									"begin": 2887,
									"end": 2966,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 2887,
									"end": 2966,
									"name": "JUMP",
									"source": 12,
									"value": "[in]"
								},
								{
									"begin": 2887,
									"end": 2966,
									"name": "tag",
									"source": 12,
									"value": "79"
								},
								{
									"begin": 2887,
									"end": 2966,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2849,
									"end": 2968,
									"name": "tag",
									"source": 12,
									"value": "78"
								},
								{
									"begin": 2849,
									"end": 2968,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3028,
									"end": 3029,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3017,
									"end": 3026,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3013,
									"end": 3030,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3007,
									"end": 3031,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3058,
									"end": 3076,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3050,
									"end": 3056,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3047,
									"end": 3077,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 3044,
									"end": 3161,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3044,
									"end": 3161,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 3044,
									"end": 3161,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3080,
									"end": 3159,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "81"
								},
								{
									"begin": 3080,
									"end": 3159,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 3080,
									"end": 3159,
									"name": "JUMP",
									"source": 12,
									"value": "[in]"
								},
								{
									"begin": 3080,
									"end": 3159,
									"name": "tag",
									"source": 12,
									"value": "81"
								},
								{
									"begin": 3080,
									"end": 3159,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3044,
									"end": 3161,
									"name": "tag",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 3044,
									"end": 3161,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3185,
									"end": 3259,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "82"
								},
								{
									"begin": 3251,
									"end": 3258,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3242,
									"end": 3248,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3231,
									"end": 3240,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 3227,
									"end": 3249,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3185,
									"end": 3259,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 3185,
									"end": 3259,
									"name": "JUMP",
									"source": 12,
									"value": "[in]"
								},
								{
									"begin": 3185,
									"end": 3259,
									"name": "tag",
									"source": 12,
									"value": "82"
								},
								{
									"begin": 3185,
									"end": 3259,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3175,
									"end": 3259,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3175,
									"end": 3259,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2978,
									"end": 3269,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3329,
									"end": 3331,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 3318,
									"end": 3327,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3314,
									"end": 3332,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3308,
									"end": 3333,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3360,
									"end": 3378,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3352,
									"end": 3358,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3349,
									"end": 3379,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 3346,
									"end": 3463,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3346,
									"end": 3463,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "83"
								},
								{
									"begin": 3346,
									"end": 3463,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3382,
									"end": 3461,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "84"
								},
								{
									"begin": 3382,
									"end": 3461,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 3382,
									"end": 3461,
									"name": "JUMP",
									"source": 12,
									"value": "[in]"
								},
								{
									"begin": 3382,
									"end": 3461,
									"name": "tag",
									"source": 12,
									"value": "84"
								},
								{
									"begin": 3382,
									"end": 3461,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3346,
									"end": 3463,
									"name": "tag",
									"source": 12,
									"value": "83"
								},
								{
									"begin": 3346,
									"end": 3463,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3487,
									"end": 3561,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "85"
								},
								{
									"begin": 3553,
									"end": 3560,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3544,
									"end": 3550,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3533,
									"end": 3542,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 3529,
									"end": 3551,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3487,
									"end": 3561,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 3487,
									"end": 3561,
									"name": "JUMP",
									"source": 12,
									"value": "[in]"
								},
								{
									"begin": 3487,
									"end": 3561,
									"name": "tag",
									"source": 12,
									"value": "85"
								},
								{
									"begin": 3487,
									"end": 3561,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3477,
									"end": 3561,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3477,
									"end": 3561,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3279,
									"end": 3571,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "JUMP",
									"source": 12,
									"value": "[out]"
								},
								{
									"begin": 3584,
									"end": 3764,
									"name": "tag",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 3584,
									"end": 3764,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3632,
									"end": 3709,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3629,
									"end": 3630,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3622,
									"end": 3710,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 3729,
									"end": 3733,
									"name": "PUSH",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 3726,
									"end": 3727,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 3719,
									"end": 3734,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 3753,
									"end": 3757,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 3750,
									"end": 3751,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3743,
									"end": 3758,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 3770,
									"end": 4090,
									"name": "tag",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 3770,
									"end": 4090,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3814,
									"end": 3820,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3851,
									"end": 3852,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 3845,
									"end": 3849,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3841,
									"end": 3853,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 3831,
									"end": 3853,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3831,
									"end": 3853,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3898,
									"end": 3899,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 3892,
									"end": 3896,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3888,
									"end": 3900,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3919,
									"end": 3937,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3909,
									"end": 3990,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "88"
								},
								{
									"begin": 3909,
									"end": 3990,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3975,
									"end": 3979,
									"name": "PUSH",
									"source": 12,
									"value": "7F"
								},
								{
									"begin": 3967,
									"end": 3973,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3963,
									"end": 3980,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3953,
									"end": 3980,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3953,
									"end": 3980,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3909,
									"end": 3990,
									"name": "tag",
									"source": 12,
									"value": "88"
								},
								{
									"begin": 3909,
									"end": 3990,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4037,
									"end": 4039,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4029,
									"end": 4035,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4026,
									"end": 4040,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 4006,
									"end": 4024,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4003,
									"end": 4041,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 4000,
									"end": 4084,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 4000,
									"end": 4084,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "89"
								},
								{
									"begin": 4000,
									"end": 4084,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4056,
									"end": 4074,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "90"
								},
								{
									"begin": 4056,
									"end": 4074,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 4056,
									"end": 4074,
									"name": "JUMP",
									"source": 12,
									"value": "[in]"
								},
								{
									"begin": 4056,
									"end": 4074,
									"name": "tag",
									"source": 12,
									"value": "90"
								},
								{
									"begin": 4056,
									"end": 4074,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4000,
									"end": 4084,
									"name": "tag",
									"source": 12,
									"value": "89"
								},
								{
									"begin": 4000,
									"end": 4084,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3821,
									"end": 4090,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3770,
									"end": 4090,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3770,
									"end": 4090,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3770,
									"end": 4090,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3770,
									"end": 4090,
									"name": "JUMP",
									"source": 12,
									"value": "[out]"
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 334,
									"end": 16954,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f086b1de4397bf00eb6648755a030c368b50ab9b2ac5421b65e56bb20ce0f57d64736f6c63430008090033",
									".code": [
										{
											"begin": 334,
											"end": 16954,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "PUSH",
											"source": 3,
											"value": "B88D4FDE"
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "PUSH",
											"source": 3,
											"value": "B88D4FDE"
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "PUSH",
											"source": 3,
											"value": "C87B56DD"
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "PUSH",
											"source": 3,
											"value": "E985E9C5"
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "PUSH",
											"source": 3,
											"value": "F2FDE38B"
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "PUSH",
											"source": 3,
											"value": "95D89B41"
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "PUSH",
											"source": 3,
											"value": "A22CB465"
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "PUSH",
											"source": 3,
											"value": "42842E0E"
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "PUSH",
											"source": 3,
											"value": "6352211E"
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "PUSH",
											"source": 3,
											"value": "1FFC9A7"
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "PUSH",
											"source": 3,
											"value": "6FDDE03"
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "PUSH",
											"source": 3,
											"value": "81812FC"
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "PUSH",
											"source": 3,
											"value": "95EA7B3"
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 334,
											"end": 16954,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 1618,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1321,
											"end": 1618,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 1618,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1321,
											"end": 1618,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1321,
											"end": 1618,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 1618,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 1618,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 1618,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 1618,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 1618,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 1618,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1321,
											"end": 1618,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 1618,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 1618,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1321,
											"end": 1618,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1321,
											"end": 1618,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1321,
											"end": 1618,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 1618,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1321,
											"end": 1618,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1321,
											"end": 1618,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1321,
											"end": 1618,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 1618,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1321,
											"end": 1618,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 1618,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1321,
											"end": 1618,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 1618,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 1618,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1321,
											"end": 1618,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1321,
											"end": 1618,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1321,
											"end": 1618,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 1618,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1321,
											"end": 1618,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 1618,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 1618,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 1618,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 1618,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 1618,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2205,
											"end": 2297,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2205,
											"end": 2297,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2205,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 2205,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 2205,
											"end": 2297,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2205,
											"end": 2297,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 2205,
											"end": 2297,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2205,
											"end": 2297,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2205,
											"end": 2297,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2205,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 2205,
											"end": 2297,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2205,
											"end": 2297,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2205,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 2205,
											"end": 2297,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2205,
											"end": 2297,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 2205,
											"end": 2297,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2205,
											"end": 2297,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2205,
											"end": 2297,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2205,
											"end": 2297,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2205,
											"end": 2297,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2205,
											"end": 2297,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2205,
											"end": 2297,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2205,
											"end": 2297,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3681,
											"end": 3844,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 3681,
											"end": 3844,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3681,
											"end": 3844,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 3681,
											"end": 3844,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3681,
											"end": 3844,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3681,
											"end": 3844,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3681,
											"end": 3844,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3681,
											"end": 3844,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3681,
											"end": 3844,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3681,
											"end": 3844,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3681,
											"end": 3844,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 3681,
											"end": 3844,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3681,
											"end": 3844,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3681,
											"end": 3844,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 3681,
											"end": 3844,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3681,
											"end": 3844,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 3681,
											"end": 3844,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3681,
											"end": 3844,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 3681,
											"end": 3844,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3681,
											"end": 3844,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 3681,
											"end": 3844,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3681,
											"end": 3844,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3681,
											"end": 3844,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3681,
											"end": 3844,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 3681,
											"end": 3844,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3681,
											"end": 3844,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3681,
											"end": 3844,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 3681,
											"end": 3844,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3681,
											"end": 3844,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 3681,
											"end": 3844,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3681,
											"end": 3844,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3681,
											"end": 3844,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3681,
											"end": 3844,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3681,
											"end": 3844,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3681,
											"end": 3844,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3681,
											"end": 3844,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3681,
											"end": 3844,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3203,
											"end": 3615,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 3203,
											"end": 3615,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3203,
											"end": 3615,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 3203,
											"end": 3615,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3203,
											"end": 3615,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3203,
											"end": 3615,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3203,
											"end": 3615,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3203,
											"end": 3615,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3203,
											"end": 3615,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3203,
											"end": 3615,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3203,
											"end": 3615,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 3203,
											"end": 3615,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3203,
											"end": 3615,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3203,
											"end": 3615,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3203,
											"end": 3615,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3203,
											"end": 3615,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 3203,
											"end": 3615,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3203,
											"end": 3615,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 3203,
											"end": 3615,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3203,
											"end": 3615,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 3203,
											"end": 3615,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3203,
											"end": 3615,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 4357,
											"end": 4650,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 4357,
											"end": 4650,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4357,
											"end": 4650,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 4357,
											"end": 4650,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4357,
											"end": 4650,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4357,
											"end": 4650,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4357,
											"end": 4650,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4357,
											"end": 4650,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4357,
											"end": 4650,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4357,
											"end": 4650,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4357,
											"end": 4650,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 4357,
											"end": 4650,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4357,
											"end": 4650,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4357,
											"end": 4650,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 4357,
											"end": 4650,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4357,
											"end": 4650,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 4357,
											"end": 4650,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4357,
											"end": 4650,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 4357,
											"end": 4650,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4357,
											"end": 4650,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 4357,
											"end": 4650,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4357,
											"end": 4650,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 4721,
											"end": 4864,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 4721,
											"end": 4864,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4721,
											"end": 4864,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 4721,
											"end": 4864,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4721,
											"end": 4864,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4721,
											"end": 4864,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4721,
											"end": 4864,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4721,
											"end": 4864,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4721,
											"end": 4864,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4721,
											"end": 4864,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4721,
											"end": 4864,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 4721,
											"end": 4864,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4721,
											"end": 4864,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4721,
											"end": 4864,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 4721,
											"end": 4864,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4721,
											"end": 4864,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 4721,
											"end": 4864,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4721,
											"end": 4864,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 4721,
											"end": 4864,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4721,
											"end": 4864,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 4721,
											"end": 4864,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4721,
											"end": 4864,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1922,
											"end": 2138,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 1922,
											"end": 2138,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1922,
											"end": 2138,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 1922,
											"end": 2138,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1922,
											"end": 2138,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1922,
											"end": 2138,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1922,
											"end": 2138,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1922,
											"end": 2138,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1922,
											"end": 2138,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1922,
											"end": 2138,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1922,
											"end": 2138,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 1922,
											"end": 2138,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1922,
											"end": 2138,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1922,
											"end": 2138,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 1922,
											"end": 2138,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1922,
											"end": 2138,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 1922,
											"end": 2138,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1922,
											"end": 2138,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 1922,
											"end": 2138,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1922,
											"end": 2138,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 1922,
											"end": 2138,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1922,
											"end": 2138,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1922,
											"end": 2138,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1922,
											"end": 2138,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 1922,
											"end": 2138,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1922,
											"end": 2138,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1922,
											"end": 2138,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 1922,
											"end": 2138,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1922,
											"end": 2138,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 1922,
											"end": 2138,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1922,
											"end": 2138,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1922,
											"end": 2138,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1922,
											"end": 2138,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1922,
											"end": 2138,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1922,
											"end": 2138,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1922,
											"end": 2138,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1922,
											"end": 2138,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1682,
											"end": 1860,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 1682,
											"end": 1860,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1682,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 1682,
											"end": 1860,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1682,
											"end": 1860,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1682,
											"end": 1860,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1682,
											"end": 1860,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1682,
											"end": 1860,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1682,
											"end": 1860,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1682,
											"end": 1860,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1682,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1682,
											"end": 1860,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1682,
											"end": 1860,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1682,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1682,
											"end": 1860,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1682,
											"end": 1860,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1682,
											"end": 1860,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1682,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1682,
											"end": 1860,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1682,
											"end": 1860,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 1682,
											"end": 1860,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1682,
											"end": 1860,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1682,
											"end": 1860,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1682,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 1682,
											"end": 1860,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1682,
											"end": 1860,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1682,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 1682,
											"end": 1860,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1682,
											"end": 1860,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 1682,
											"end": 1860,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1682,
											"end": 1860,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1682,
											"end": 1860,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1682,
											"end": 1860,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1682,
											"end": 1860,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1682,
											"end": 1860,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1682,
											"end": 1860,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1682,
											"end": 1860,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1877,
											"end": 1980,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1877,
											"end": 1980,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1877,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1877,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1877,
											"end": 1980,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1877,
											"end": 1980,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1877,
											"end": 1980,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1877,
											"end": 1980,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2462,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 2366,
											"end": 2462,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2366,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2366,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 2366,
											"end": 2462,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2366,
											"end": 2462,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2366,
											"end": 2462,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2366,
											"end": 2462,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2366,
											"end": 2462,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2366,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 2366,
											"end": 2462,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2366,
											"end": 2462,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2366,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 2366,
											"end": 2462,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2366,
											"end": 2462,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 2366,
											"end": 2462,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2366,
											"end": 2462,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2366,
											"end": 2462,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2366,
											"end": 2462,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2366,
											"end": 2462,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2366,
											"end": 2462,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2366,
											"end": 2462,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2366,
											"end": 2462,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3916,
											"end": 4063,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 3916,
											"end": 4063,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3916,
											"end": 4063,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 3916,
											"end": 4063,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3916,
											"end": 4063,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3916,
											"end": 4063,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3916,
											"end": 4063,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3916,
											"end": 4063,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3916,
											"end": 4063,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3916,
											"end": 4063,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3916,
											"end": 4063,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 3916,
											"end": 4063,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3916,
											"end": 4063,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3916,
											"end": 4063,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 3916,
											"end": 4063,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3916,
											"end": 4063,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 3916,
											"end": 4063,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3916,
											"end": 4063,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 3916,
											"end": 4063,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3916,
											"end": 4063,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 3916,
											"end": 4063,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3916,
											"end": 4063,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 4935,
											"end": 5206,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 4935,
											"end": 5206,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4935,
											"end": 5206,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 4935,
											"end": 5206,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4935,
											"end": 5206,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4935,
											"end": 5206,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4935,
											"end": 5206,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4935,
											"end": 5206,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4935,
											"end": 5206,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4935,
											"end": 5206,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4935,
											"end": 5206,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 4935,
											"end": 5206,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4935,
											"end": 5206,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4935,
											"end": 5206,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 4935,
											"end": 5206,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4935,
											"end": 5206,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 4935,
											"end": 5206,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4935,
											"end": 5206,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 4935,
											"end": 5206,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4935,
											"end": 5206,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 4935,
											"end": 5206,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4935,
											"end": 5206,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2806,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 2533,
											"end": 2806,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2806,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 2533,
											"end": 2806,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2533,
											"end": 2806,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2806,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2806,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2806,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2806,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2806,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2806,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 2533,
											"end": 2806,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2806,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2806,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 2533,
											"end": 2806,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2533,
											"end": 2806,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 2533,
											"end": 2806,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2806,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 2533,
											"end": 2806,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2533,
											"end": 2806,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 2533,
											"end": 2806,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2806,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2533,
											"end": 2806,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2806,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 2533,
											"end": 2806,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2806,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2806,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 2533,
											"end": 2806,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2533,
											"end": 2806,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 2533,
											"end": 2806,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2806,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2533,
											"end": 2806,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2806,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2806,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2806,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2806,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2806,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4134,
											"end": 4290,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 4134,
											"end": 4290,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4134,
											"end": 4290,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 4134,
											"end": 4290,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4134,
											"end": 4290,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4134,
											"end": 4290,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4134,
											"end": 4290,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4134,
											"end": 4290,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4134,
											"end": 4290,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4134,
											"end": 4290,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4134,
											"end": 4290,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 4134,
											"end": 4290,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4134,
											"end": 4290,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4134,
											"end": 4290,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 4134,
											"end": 4290,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4134,
											"end": 4290,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 4134,
											"end": 4290,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4134,
											"end": 4290,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 4134,
											"end": 4290,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4134,
											"end": 4290,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 4134,
											"end": 4290,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4134,
											"end": 4290,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4134,
											"end": 4290,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4134,
											"end": 4290,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 4134,
											"end": 4290,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4134,
											"end": 4290,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4134,
											"end": 4290,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 4134,
											"end": 4290,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4134,
											"end": 4290,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 4134,
											"end": 4290,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4134,
											"end": 4290,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4134,
											"end": 4290,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4134,
											"end": 4290,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4134,
											"end": 4290,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4134,
											"end": 4290,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4134,
											"end": 4290,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4134,
											"end": 4290,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2135,
											"end": 2336,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2135,
											"end": 2336,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2135,
											"end": 2336,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2135,
											"end": 2336,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2135,
											"end": 2336,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2135,
											"end": 2336,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2135,
											"end": 2336,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2135,
											"end": 2336,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2135,
											"end": 2336,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2135,
											"end": 2336,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2135,
											"end": 2336,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2135,
											"end": 2336,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2135,
											"end": 2336,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2135,
											"end": 2336,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2135,
											"end": 2336,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2135,
											"end": 2336,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2135,
											"end": 2336,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2135,
											"end": 2336,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2135,
											"end": 2336,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2135,
											"end": 2336,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2135,
											"end": 2336,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2135,
											"end": 2336,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 1618,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1321,
											"end": 1618,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1415,
											"end": 1419,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1467,
											"end": 1492,
											"name": "PUSH",
											"source": 3,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1452,
											"end": 1492,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1452,
											"end": 1492,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1492,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1463,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1492,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1452,
											"end": 1492,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1492,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1492,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1557,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1557,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 1452,
											"end": 1557,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1557,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1557,
											"name": "PUSH",
											"source": 3,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1509,
											"end": 1557,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1509,
											"end": 1557,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1557,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1520,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1557,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1509,
											"end": 1557,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1557,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1557,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1557,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 1452,
											"end": 1557,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1610,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1610,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 1452,
											"end": 1610,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1610,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1574,
											"end": 1610,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1598,
											"end": 1609,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1574,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 1574,
											"end": 1610,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1574,
											"end": 1610,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1574,
											"end": 1610,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1610,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 1452,
											"end": 1610,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1432,
											"end": 1610,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1432,
											"end": 1610,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 1618,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 1618,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 1618,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 1618,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2205,
											"end": 2297,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 2205,
											"end": 2297,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2251,
											"end": 2264,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2284,
											"end": 2289,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2205,
											"end": 2297,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2205,
											"end": 2297,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3681,
											"end": 3844,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 3681,
											"end": 3844,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3749,
											"end": 3756,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3769,
											"end": 3792,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3784,
											"end": 3791,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3769,
											"end": 3783,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 3769,
											"end": 3792,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3769,
											"end": 3792,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3769,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3812,
											"end": 3827,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 3812,
											"end": 3836,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3828,
											"end": 3835,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3812,
											"end": 3836,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3812,
											"end": 3836,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3812,
											"end": 3836,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3812,
											"end": 3836,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3812,
											"end": 3836,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3812,
											"end": 3836,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3812,
											"end": 3836,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3812,
											"end": 3836,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3812,
											"end": 3836,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3812,
											"end": 3836,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3812,
											"end": 3836,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3812,
											"end": 3836,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3812,
											"end": 3836,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3812,
											"end": 3836,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3812,
											"end": 3836,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3812,
											"end": 3836,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3812,
											"end": 3836,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 3812,
											"end": 3836,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3812,
											"end": 3836,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 3812,
											"end": 3836,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3812,
											"end": 3836,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3805,
											"end": 3836,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3805,
											"end": 3836,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3681,
											"end": 3844,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3681,
											"end": 3844,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3681,
											"end": 3844,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3681,
											"end": 3844,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3203,
											"end": 3615,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 3203,
											"end": 3615,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3276,
											"end": 3289,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3292,
											"end": 3319,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 3311,
											"end": 3318,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3292,
											"end": 3310,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 3292,
											"end": 3319,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3292,
											"end": 3319,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 3292,
											"end": 3319,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3276,
											"end": 3319,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3276,
											"end": 3319,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3344,
											"end": 3349,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3338,
											"end": 3349,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3338,
											"end": 3349,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3338,
											"end": 3340,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3338,
											"end": 3349,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3338,
											"end": 3349,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3338,
											"end": 3349,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 3338,
											"end": 3349,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3330,
											"end": 3387,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 3330,
											"end": 3387,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3330,
											"end": 3387,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3330,
											"end": 3387,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3330,
											"end": 3387,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3330,
											"end": 3387,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3330,
											"end": 3387,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3330,
											"end": 3387,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3330,
											"end": 3387,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3330,
											"end": 3387,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 3330,
											"end": 3387,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3330,
											"end": 3387,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 3330,
											"end": 3387,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3330,
											"end": 3387,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 3330,
											"end": 3387,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3330,
											"end": 3387,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3330,
											"end": 3387,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3330,
											"end": 3387,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3330,
											"end": 3387,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3330,
											"end": 3387,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3330,
											"end": 3387,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3330,
											"end": 3387,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3330,
											"end": 3387,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 3330,
											"end": 3387,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3443,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3422,
											"end": 3443,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3422,
											"end": 3443,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3422,
											"end": 3434,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 3422,
											"end": 3432,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 3422,
											"end": 3434,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3422,
											"end": 3434,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 3422,
											"end": 3434,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3422,
											"end": 3443,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3422,
											"end": 3443,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3422,
											"end": 3443,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 3422,
											"end": 3484,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3422,
											"end": 3484,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 3422,
											"end": 3484,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3422,
											"end": 3484,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3447,
											"end": 3484,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 3464,
											"end": 3469,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3471,
											"end": 3483,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 3471,
											"end": 3481,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 3471,
											"end": 3483,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3471,
											"end": 3483,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 3471,
											"end": 3483,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3447,
											"end": 3463,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 3447,
											"end": 3484,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3447,
											"end": 3484,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 3447,
											"end": 3484,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3422,
											"end": 3484,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 3422,
											"end": 3484,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3573,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 3400,
											"end": 3573,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3573,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3400,
											"end": 3573,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3573,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3400,
											"end": 3573,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3573,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3573,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3400,
											"end": 3573,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3573,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 3400,
											"end": 3573,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3573,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 3400,
											"end": 3573,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3400,
											"end": 3573,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 3400,
											"end": 3573,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3573,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3400,
											"end": 3573,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3573,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3573,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3573,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3573,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3573,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3573,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 3400,
											"end": 3573,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3586,
											"end": 3607,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 3595,
											"end": 3597,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3599,
											"end": 3606,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3586,
											"end": 3594,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 3586,
											"end": 3607,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3586,
											"end": 3607,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 3586,
											"end": 3607,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3265,
											"end": 3615,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3203,
											"end": 3615,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3203,
											"end": 3615,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3203,
											"end": 3615,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4357,
											"end": 4650,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 4357,
											"end": 4650,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 4529,
											"end": 4541,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 4529,
											"end": 4539,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 4529,
											"end": 4541,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4529,
											"end": 4541,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 4529,
											"end": 4541,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4543,
											"end": 4550,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4510,
											"end": 4528,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 4510,
											"end": 4551,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4502,
											"end": 4601,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 4502,
											"end": 4601,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4502,
											"end": 4601,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4502,
											"end": 4601,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4502,
											"end": 4601,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4502,
											"end": 4601,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4502,
											"end": 4601,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4502,
											"end": 4601,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4502,
											"end": 4601,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4502,
											"end": 4601,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 4502,
											"end": 4601,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4502,
											"end": 4601,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 4502,
											"end": 4601,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4502,
											"end": 4601,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 4502,
											"end": 4601,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4502,
											"end": 4601,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4502,
											"end": 4601,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4502,
											"end": 4601,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4502,
											"end": 4601,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4502,
											"end": 4601,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4502,
											"end": 4601,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4502,
											"end": 4601,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4502,
											"end": 4601,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 4502,
											"end": 4601,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4614,
											"end": 4642,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 4624,
											"end": 4628,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4630,
											"end": 4632,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4634,
											"end": 4641,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4614,
											"end": 4623,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 4614,
											"end": 4642,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4614,
											"end": 4642,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 4614,
											"end": 4642,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4357,
											"end": 4650,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4357,
											"end": 4650,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4357,
											"end": 4650,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4357,
											"end": 4650,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4721,
											"end": 4864,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 4721,
											"end": 4864,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4817,
											"end": 4856,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 4834,
											"end": 4838,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4840,
											"end": 4842,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4844,
											"end": 4851,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4817,
											"end": 4856,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4817,
											"end": 4856,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4817,
											"end": 4856,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4817,
											"end": 4856,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4817,
											"end": 4856,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4817,
											"end": 4856,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4817,
											"end": 4856,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4817,
											"end": 4856,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4817,
											"end": 4856,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4817,
											"end": 4856,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4817,
											"end": 4856,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4817,
											"end": 4856,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4817,
											"end": 4833,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 4817,
											"end": 4856,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4817,
											"end": 4856,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 4817,
											"end": 4856,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4721,
											"end": 4864,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4721,
											"end": 4864,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4721,
											"end": 4864,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4721,
											"end": 4864,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1922,
											"end": 2138,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 1922,
											"end": 2138,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1987,
											"end": 1994,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2007,
											"end": 2020,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2023,
											"end": 2040,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 2032,
											"end": 2039,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2023,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 2023,
											"end": 2040,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2023,
											"end": 2040,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 2023,
											"end": 2040,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2007,
											"end": 2040,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2007,
											"end": 2040,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2076,
											"end": 2077,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2059,
											"end": 2078,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2059,
											"end": 2078,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2059,
											"end": 2064,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2059,
											"end": 2078,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2059,
											"end": 2078,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2059,
											"end": 2078,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2059,
											"end": 2078,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2051,
											"end": 2107,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 2051,
											"end": 2107,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2051,
											"end": 2107,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2051,
											"end": 2107,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2051,
											"end": 2107,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2051,
											"end": 2107,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2051,
											"end": 2107,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2051,
											"end": 2107,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2051,
											"end": 2107,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2051,
											"end": 2107,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 2051,
											"end": 2107,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2051,
											"end": 2107,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 2051,
											"end": 2107,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2051,
											"end": 2107,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 2051,
											"end": 2107,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2051,
											"end": 2107,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2051,
											"end": 2107,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2051,
											"end": 2107,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2051,
											"end": 2107,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2051,
											"end": 2107,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2051,
											"end": 2107,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2051,
											"end": 2107,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2051,
											"end": 2107,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 2051,
											"end": 2107,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2125,
											"end": 2130,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2118,
											"end": 2130,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2118,
											"end": 2130,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2118,
											"end": 2130,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1922,
											"end": 2138,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1922,
											"end": 2138,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1922,
											"end": 2138,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1922,
											"end": 2138,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1682,
											"end": 1860,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1682,
											"end": 1860,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1746,
											"end": 1753,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1791,
											"end": 1792,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1774,
											"end": 1793,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1774,
											"end": 1793,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1774,
											"end": 1779,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1774,
											"end": 1793,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1774,
											"end": 1793,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1774,
											"end": 1793,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1774,
											"end": 1793,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1818,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 1766,
											"end": 1818,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1818,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1766,
											"end": 1818,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1818,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1766,
											"end": 1818,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1818,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1818,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1766,
											"end": 1818,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1818,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 1766,
											"end": 1818,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1818,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 1766,
											"end": 1818,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1766,
											"end": 1818,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 1766,
											"end": 1818,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1818,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1766,
											"end": 1818,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1818,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1818,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1818,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1818,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1818,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1818,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 1766,
											"end": 1818,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1836,
											"end": 1845,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1836,
											"end": 1852,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1846,
											"end": 1851,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1836,
											"end": 1852,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1836,
											"end": 1852,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1836,
											"end": 1852,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1836,
											"end": 1852,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1836,
											"end": 1852,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1836,
											"end": 1852,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1836,
											"end": 1852,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1836,
											"end": 1852,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1836,
											"end": 1852,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1836,
											"end": 1852,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1836,
											"end": 1852,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1836,
											"end": 1852,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1836,
											"end": 1852,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1836,
											"end": 1852,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1836,
											"end": 1852,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1836,
											"end": 1852,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1852,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1852,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1682,
											"end": 1860,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1682,
											"end": 1860,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1682,
											"end": 1860,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1682,
											"end": 1860,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1877,
											"end": 1980,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1877,
											"end": 1980,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1122,
											"end": 1135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 1122,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 1122,
											"end": 1135,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1122,
											"end": 1135,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 1122,
											"end": 1135,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1942,
											"end": 1972,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 1969,
											"end": 1970,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1942,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 1942,
											"end": 1972,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1942,
											"end": 1972,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 1942,
											"end": 1972,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1877,
											"end": 1980,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1282,
											"end": 1289,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1302,
											"end": 1315,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1302,
											"end": 1315,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1323,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2366,
											"end": 2462,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 2366,
											"end": 2462,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2414,
											"end": 2427,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2447,
											"end": 2454,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2366,
											"end": 2462,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2366,
											"end": 2462,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3916,
											"end": 4063,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 3916,
											"end": 4063,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4003,
											"end": 4055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 4022,
											"end": 4034,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 4022,
											"end": 4032,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 4022,
											"end": 4034,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4022,
											"end": 4034,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 4022,
											"end": 4034,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4036,
											"end": 4044,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4046,
											"end": 4054,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4003,
											"end": 4021,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 4003,
											"end": 4055,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4003,
											"end": 4055,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 4003,
											"end": 4055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3916,
											"end": 4063,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3916,
											"end": 4063,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3916,
											"end": 4063,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4935,
											"end": 5206,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 4935,
											"end": 5206,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5058,
											"end": 5099,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 5077,
											"end": 5089,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 5077,
											"end": 5087,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 5077,
											"end": 5089,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5077,
											"end": 5089,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 5077,
											"end": 5089,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5091,
											"end": 5098,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5058,
											"end": 5076,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 5058,
											"end": 5099,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5058,
											"end": 5099,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 5058,
											"end": 5099,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5050,
											"end": 5149,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 5050,
											"end": 5149,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5050,
											"end": 5149,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5050,
											"end": 5149,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5050,
											"end": 5149,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5050,
											"end": 5149,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5050,
											"end": 5149,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5050,
											"end": 5149,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5050,
											"end": 5149,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5050,
											"end": 5149,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 5050,
											"end": 5149,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5050,
											"end": 5149,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 5050,
											"end": 5149,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5050,
											"end": 5149,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 5050,
											"end": 5149,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5050,
											"end": 5149,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5050,
											"end": 5149,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5050,
											"end": 5149,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5050,
											"end": 5149,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5050,
											"end": 5149,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5050,
											"end": 5149,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5050,
											"end": 5149,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5050,
											"end": 5149,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 5050,
											"end": 5149,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5160,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 5174,
											"end": 5178,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5180,
											"end": 5182,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5184,
											"end": 5191,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5193,
											"end": 5197,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5160,
											"end": 5173,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 5160,
											"end": 5198,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5160,
											"end": 5198,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 5160,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4935,
											"end": 5206,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4935,
											"end": 5206,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4935,
											"end": 5206,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4935,
											"end": 5206,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4935,
											"end": 5206,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2533,
											"end": 2806,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 2533,
											"end": 2806,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2598,
											"end": 2611,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2624,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 2639,
											"end": 2646,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2624,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 2624,
											"end": 2647,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2624,
											"end": 2647,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 2624,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2660,
											"end": 2681,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2684,
											"end": 2694,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 2684,
											"end": 2692,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 2684,
											"end": 2694,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2684,
											"end": 2694,
											"name": "tag",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 2684,
											"end": 2694,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2660,
											"end": 2694,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2660,
											"end": 2694,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2736,
											"end": 2737,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2718,
											"end": 2725,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2712,
											"end": 2733,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2712,
											"end": 2737,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2712,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 2712,
											"end": 2798,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2712,
											"end": 2798,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2712,
											"end": 2798,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2712,
											"end": 2798,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2712,
											"end": 2798,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2712,
											"end": 2798,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2712,
											"end": 2798,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2712,
											"end": 2798,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2712,
											"end": 2798,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2712,
											"end": 2798,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2712,
											"end": 2798,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2712,
											"end": 2798,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2712,
											"end": 2798,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2712,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 2712,
											"end": 2798,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2712,
											"end": 2798,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 2712,
											"end": 2798,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2764,
											"end": 2771,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2773,
											"end": 2791,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 2773,
											"end": 2780,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2773,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 2773,
											"end": 2791,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2773,
											"end": 2791,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 2773,
											"end": 2791,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2747,
											"end": 2792,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2747,
											"end": 2792,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2747,
											"end": 2792,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2747,
											"end": 2792,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2747,
											"end": 2792,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 2747,
											"end": 2792,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2747,
											"end": 2792,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2747,
											"end": 2792,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2747,
											"end": 2792,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 2747,
											"end": 2792,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2747,
											"end": 2792,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 2747,
											"end": 2792,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2747,
											"end": 2792,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2747,
											"end": 2792,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2747,
											"end": 2792,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2747,
											"end": 2792,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2747,
											"end": 2792,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2747,
											"end": 2792,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2747,
											"end": 2792,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2747,
											"end": 2792,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2747,
											"end": 2792,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2747,
											"end": 2792,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2747,
											"end": 2792,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2747,
											"end": 2792,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2712,
											"end": 2798,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 2712,
											"end": 2798,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2798,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2798,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2798,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2806,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2806,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2806,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2806,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4134,
											"end": 4290,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 4134,
											"end": 4290,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4223,
											"end": 4227,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4247,
											"end": 4265,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 4247,
											"end": 4272,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4266,
											"end": 4271,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4272,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4247,
											"end": 4272,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4272,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4247,
											"end": 4272,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4272,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4272,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4272,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4247,
											"end": 4272,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4272,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4272,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4272,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4272,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4247,
											"end": 4272,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4272,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4247,
											"end": 4272,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4282,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4273,
											"end": 4281,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4282,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4247,
											"end": 4282,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4282,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4247,
											"end": 4282,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4282,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4282,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4282,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4247,
											"end": 4282,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4282,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4282,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4282,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4282,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4247,
											"end": 4282,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4282,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4247,
											"end": 4282,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4282,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4247,
											"end": 4282,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4282,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4282,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4282,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4247,
											"end": 4282,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4282,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4282,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4282,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 4247,
											"end": 4282,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4240,
											"end": 4282,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4240,
											"end": 4282,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4134,
											"end": 4290,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4134,
											"end": 4290,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4134,
											"end": 4290,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4134,
											"end": 4290,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4134,
											"end": 4290,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2135,
											"end": 2336,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2135,
											"end": 2336,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1122,
											"end": 1135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 1122,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 1122,
											"end": 1135,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1122,
											"end": 1135,
											"name": "tag",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 1122,
											"end": 1135,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2244,
											"end": 2245,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2224,
											"end": 2246,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2224,
											"end": 2246,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2224,
											"end": 2232,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2224,
											"end": 2246,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2224,
											"end": 2246,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2224,
											"end": 2246,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2224,
											"end": 2246,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2216,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 2216,
											"end": 2289,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2216,
											"end": 2289,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2216,
											"end": 2289,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2216,
											"end": 2289,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2216,
											"end": 2289,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2216,
											"end": 2289,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2216,
											"end": 2289,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2216,
											"end": 2289,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2216,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 2216,
											"end": 2289,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2216,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 2216,
											"end": 2289,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2216,
											"end": 2289,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 2216,
											"end": 2289,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2216,
											"end": 2289,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2216,
											"end": 2289,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2216,
											"end": 2289,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2216,
											"end": 2289,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2216,
											"end": 2289,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2216,
											"end": 2289,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2216,
											"end": 2289,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2216,
											"end": 2289,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 2216,
											"end": 2289,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2300,
											"end": 2328,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 2319,
											"end": 2327,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2300,
											"end": 2318,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 2300,
											"end": 2328,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2300,
											"end": 2328,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 2300,
											"end": 2328,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2135,
											"end": 2336,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2135,
											"end": 2336,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 866,
											"end": 1023,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 866,
											"end": 1023,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 951,
											"end": 955,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 990,
											"end": 1015,
											"name": "PUSH",
											"source": 1,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 975,
											"end": 1015,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 975,
											"end": 1015,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 975,
											"end": 1015,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 975,
											"end": 986,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 975,
											"end": 1015,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 975,
											"end": 1015,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 975,
											"end": 1015,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 975,
											"end": 1015,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 968,
											"end": 1015,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 968,
											"end": 1015,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 866,
											"end": 1023,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 866,
											"end": 1023,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 866,
											"end": 1023,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 866,
											"end": 1023,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13132,
											"end": 13259,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 13132,
											"end": 13259,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13206,
											"end": 13222,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 13214,
											"end": 13221,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13206,
											"end": 13213,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 13206,
											"end": 13222,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 13206,
											"end": 13222,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 13206,
											"end": 13222,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13198,
											"end": 13251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 13198,
											"end": 13251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 13198,
											"end": 13251,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 13198,
											"end": 13251,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 13198,
											"end": 13251,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13198,
											"end": 13251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13198,
											"end": 13251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13198,
											"end": 13251,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 13198,
											"end": 13251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13198,
											"end": 13251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 13198,
											"end": 13251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13198,
											"end": 13251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 13198,
											"end": 13251,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 13198,
											"end": 13251,
											"name": "tag",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 13198,
											"end": 13251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13198,
											"end": 13251,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 13198,
											"end": 13251,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 13198,
											"end": 13251,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 13198,
											"end": 13251,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13198,
											"end": 13251,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 13198,
											"end": 13251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13198,
											"end": 13251,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 13198,
											"end": 13251,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 13198,
											"end": 13251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13132,
											"end": 13259,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13132,
											"end": 13259,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 671,
											"end": 769,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 671,
											"end": 769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 724,
											"end": 731,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 761,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 744,
											"end": 761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 744,
											"end": 761,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 671,
											"end": 769,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 671,
											"end": 769,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12457,
											"end": 12627,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 12457,
											"end": 12627,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12551,
											"end": 12553,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12524,
											"end": 12539,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 12524,
											"end": 12548,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12540,
											"end": 12547,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12524,
											"end": 12548,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12524,
											"end": 12548,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12524,
											"end": 12548,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12524,
											"end": 12548,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12524,
											"end": 12548,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12524,
											"end": 12548,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12524,
											"end": 12548,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12524,
											"end": 12548,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12524,
											"end": 12548,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12524,
											"end": 12548,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12524,
											"end": 12548,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 12524,
											"end": 12548,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12524,
											"end": 12553,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 12524,
											"end": 12553,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 12524,
											"end": 12553,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12524,
											"end": 12553,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 12524,
											"end": 12553,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12524,
											"end": 12553,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12524,
											"end": 12553,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 12524,
											"end": 12553,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 12524,
											"end": 12553,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 12524,
											"end": 12553,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12524,
											"end": 12553,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12524,
											"end": 12553,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12524,
											"end": 12553,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 12524,
											"end": 12553,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 12524,
											"end": 12553,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 12524,
											"end": 12553,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12524,
											"end": 12553,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 12524,
											"end": 12553,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12611,
											"end": 12618,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 12607,
											"end": 12609,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12569,
											"end": 12619,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12569,
											"end": 12619,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 12578,
											"end": 12605,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 12597,
											"end": 12604,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12578,
											"end": 12596,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 12578,
											"end": 12605,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 12578,
											"end": 12605,
											"name": "tag",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 12578,
											"end": 12605,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12569,
											"end": 12619,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12569,
											"end": 12619,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 12569,
											"end": 12619,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 12569,
											"end": 12619,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 12569,
											"end": 12619,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 12569,
											"end": 12619,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 12569,
											"end": 12619,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 12569,
											"end": 12619,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 12569,
											"end": 12619,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12569,
											"end": 12619,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 12569,
											"end": 12619,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12569,
											"end": 12619,
											"name": "LOG4",
											"source": 3
										},
										{
											"begin": 12457,
											"end": 12627,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12457,
											"end": 12627,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12457,
											"end": 12627,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7172,
											"end": 7432,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 7172,
											"end": 7432,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7257,
											"end": 7261,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7274,
											"end": 7287,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7290,
											"end": 7317,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 7309,
											"end": 7316,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7290,
											"end": 7308,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 7290,
											"end": 7317,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7290,
											"end": 7317,
											"name": "tag",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 7290,
											"end": 7317,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7274,
											"end": 7317,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7274,
											"end": 7317,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7347,
											"end": 7352,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7336,
											"end": 7352,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7336,
											"end": 7352,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7336,
											"end": 7343,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7336,
											"end": 7352,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7336,
											"end": 7352,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7336,
											"end": 7352,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 7336,
											"end": 7388,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7336,
											"end": 7388,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 7336,
											"end": 7388,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7336,
											"end": 7388,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7356,
											"end": 7388,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 7373,
											"end": 7378,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7380,
											"end": 7387,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7356,
											"end": 7372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 7356,
											"end": 7388,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7356,
											"end": 7388,
											"name": "tag",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 7356,
											"end": 7388,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7336,
											"end": 7388,
											"name": "tag",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 7336,
											"end": 7388,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7336,
											"end": 7423,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7336,
											"end": 7423,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 7336,
											"end": 7423,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7336,
											"end": 7423,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7416,
											"end": 7423,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7392,
											"end": 7423,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7392,
											"end": 7423,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7392,
											"end": 7412,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 7404,
											"end": 7411,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7392,
											"end": 7403,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 7392,
											"end": 7412,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7392,
											"end": 7412,
											"name": "tag",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 7392,
											"end": 7412,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7392,
											"end": 7423,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7392,
											"end": 7423,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7392,
											"end": 7423,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 7336,
											"end": 7423,
											"name": "tag",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 7336,
											"end": 7423,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7328,
											"end": 7424,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7328,
											"end": 7424,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7328,
											"end": 7424,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7172,
											"end": 7432,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7172,
											"end": 7432,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7172,
											"end": 7432,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7172,
											"end": 7432,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7172,
											"end": 7432,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 11109,
											"end": 12338,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 11109,
											"end": 12338,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11230,
											"end": 11234,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11199,
											"end": 11234,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11199,
											"end": 11234,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11199,
											"end": 11226,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 11218,
											"end": 11225,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11199,
											"end": 11217,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 11199,
											"end": 11226,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11199,
											"end": 11226,
											"name": "tag",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 11199,
											"end": 11226,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11199,
											"end": 11234,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11199,
											"end": 11234,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11199,
											"end": 11234,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 11191,
											"end": 11276,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 11191,
											"end": 11276,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11191,
											"end": 11276,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11191,
											"end": 11276,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11191,
											"end": 11276,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11191,
											"end": 11276,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11191,
											"end": 11276,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11191,
											"end": 11276,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 11191,
											"end": 11276,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11191,
											"end": 11276,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 11191,
											"end": 11276,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11191,
											"end": 11276,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 11191,
											"end": 11276,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11191,
											"end": 11276,
											"name": "tag",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 11191,
											"end": 11276,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11191,
											"end": 11276,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11191,
											"end": 11276,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11191,
											"end": 11276,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11191,
											"end": 11276,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11191,
											"end": 11276,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11191,
											"end": 11276,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11191,
											"end": 11276,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 11191,
											"end": 11276,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 11191,
											"end": 11276,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11309,
											"end": 11310,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11295,
											"end": 11311,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11295,
											"end": 11311,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11295,
											"end": 11297,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11295,
											"end": 11311,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11295,
											"end": 11311,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11295,
											"end": 11311,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 11295,
											"end": 11311,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11287,
											"end": 11352,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 11287,
											"end": 11352,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11287,
											"end": 11352,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11287,
											"end": 11352,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11287,
											"end": 11352,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11287,
											"end": 11352,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11287,
											"end": 11352,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11287,
											"end": 11352,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 11287,
											"end": 11352,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11287,
											"end": 11352,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 11287,
											"end": 11352,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11287,
											"end": 11352,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 11287,
											"end": 11352,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11287,
											"end": 11352,
											"name": "tag",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 11287,
											"end": 11352,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11287,
											"end": 11352,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11287,
											"end": 11352,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11287,
											"end": 11352,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11287,
											"end": 11352,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11287,
											"end": 11352,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11287,
											"end": 11352,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11287,
											"end": 11352,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 11287,
											"end": 11352,
											"name": "tag",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 11287,
											"end": 11352,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11365,
											"end": 11407,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 11386,
											"end": 11390,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11392,
											"end": 11394,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11396,
											"end": 11403,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11405,
											"end": 11406,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 11365,
											"end": 11385,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 11365,
											"end": 11407,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11365,
											"end": 11407,
											"name": "tag",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 11365,
											"end": 11407,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11541,
											"end": 11545,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11510,
											"end": 11545,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11510,
											"end": 11545,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11510,
											"end": 11537,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 11529,
											"end": 11536,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11510,
											"end": 11528,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 11510,
											"end": 11537,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11510,
											"end": 11537,
											"name": "tag",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 11510,
											"end": 11537,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11510,
											"end": 11545,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11510,
											"end": 11545,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11510,
											"end": 11545,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 11502,
											"end": 11587,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 11502,
											"end": 11587,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11502,
											"end": 11587,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11502,
											"end": 11587,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11502,
											"end": 11587,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11502,
											"end": 11587,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11502,
											"end": 11587,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11502,
											"end": 11587,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 11502,
											"end": 11587,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11502,
											"end": 11587,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 11502,
											"end": 11587,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11502,
											"end": 11587,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 11502,
											"end": 11587,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11502,
											"end": 11587,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 11502,
											"end": 11587,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11502,
											"end": 11587,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11502,
											"end": 11587,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11502,
											"end": 11587,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11502,
											"end": 11587,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11502,
											"end": 11587,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11502,
											"end": 11587,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11502,
											"end": 11587,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 11502,
											"end": 11587,
											"name": "tag",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 11502,
											"end": 11587,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11659,
											"end": 11674,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 11659,
											"end": 11683,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11675,
											"end": 11682,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11659,
											"end": 11683,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11659,
											"end": 11683,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11659,
											"end": 11683,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11659,
											"end": 11683,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11659,
											"end": 11683,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11659,
											"end": 11683,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11659,
											"end": 11683,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11659,
											"end": 11683,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11659,
											"end": 11683,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11659,
											"end": 11683,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11659,
											"end": 11683,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 11659,
											"end": 11683,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11652,
											"end": 11683,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 11652,
											"end": 11683,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 11652,
											"end": 11683,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11652,
											"end": 11683,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 11652,
											"end": 11683,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11652,
											"end": 11683,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11652,
											"end": 11683,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 11652,
											"end": 11683,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 11652,
											"end": 11683,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11652,
											"end": 11683,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11652,
											"end": 11683,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 12154,
											"end": 12155,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 12135,
											"end": 12144,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 12135,
											"end": 12150,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12145,
											"end": 12149,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 12135,
											"end": 12150,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12135,
											"end": 12150,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 12135,
											"end": 12150,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12135,
											"end": 12150,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 12135,
											"end": 12150,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12135,
											"end": 12150,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12135,
											"end": 12150,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12135,
											"end": 12150,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12135,
											"end": 12150,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12135,
											"end": 12150,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12135,
											"end": 12150,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12135,
											"end": 12150,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12135,
											"end": 12150,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12135,
											"end": 12150,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12135,
											"end": 12150,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 12135,
											"end": 12150,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12135,
											"end": 12155,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12135,
											"end": 12155,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12135,
											"end": 12155,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 12135,
											"end": 12155,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 12135,
											"end": 12155,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 12135,
											"end": 12155,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12135,
											"end": 12155,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12135,
											"end": 12155,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12135,
											"end": 12155,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12135,
											"end": 12155,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 12135,
											"end": 12155,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12187,
											"end": 12188,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 12170,
											"end": 12179,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 12170,
											"end": 12183,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12180,
											"end": 12182,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 12170,
											"end": 12183,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12170,
											"end": 12183,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 12170,
											"end": 12183,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12170,
											"end": 12183,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 12170,
											"end": 12183,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12170,
											"end": 12183,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12170,
											"end": 12183,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12170,
											"end": 12183,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12170,
											"end": 12183,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12170,
											"end": 12183,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12170,
											"end": 12183,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12170,
											"end": 12183,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12170,
											"end": 12183,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12170,
											"end": 12183,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12170,
											"end": 12183,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 12170,
											"end": 12183,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12170,
											"end": 12188,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12170,
											"end": 12188,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12170,
											"end": 12188,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 12170,
											"end": 12188,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12170,
											"end": 12188,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 12170,
											"end": 12188,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12170,
											"end": 12188,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12170,
											"end": 12188,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12170,
											"end": 12188,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12170,
											"end": 12188,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 12170,
											"end": 12188,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12229,
											"end": 12231,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12210,
											"end": 12217,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 12210,
											"end": 12226,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12218,
											"end": 12225,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12210,
											"end": 12226,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12210,
											"end": 12226,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12210,
											"end": 12226,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12210,
											"end": 12226,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12210,
											"end": 12226,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12210,
											"end": 12226,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12210,
											"end": 12226,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12210,
											"end": 12226,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12210,
											"end": 12226,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12210,
											"end": 12226,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12210,
											"end": 12226,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 12210,
											"end": 12226,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12210,
											"end": 12231,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 12210,
											"end": 12231,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 12210,
											"end": 12231,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12210,
											"end": 12231,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 12210,
											"end": 12231,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12210,
											"end": 12231,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12210,
											"end": 12231,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 12210,
											"end": 12231,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 12210,
											"end": 12231,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 12210,
											"end": 12231,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12210,
											"end": 12231,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12210,
											"end": 12231,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12210,
											"end": 12231,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 12210,
											"end": 12231,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 12210,
											"end": 12231,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 12210,
											"end": 12231,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12210,
											"end": 12231,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 12210,
											"end": 12231,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12268,
											"end": 12275,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 12264,
											"end": 12266,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12249,
											"end": 12276,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12249,
											"end": 12276,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 12258,
											"end": 12262,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 12249,
											"end": 12276,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12249,
											"end": 12276,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 12249,
											"end": 12276,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 12249,
											"end": 12276,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 12249,
											"end": 12276,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 12249,
											"end": 12276,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 12249,
											"end": 12276,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 12249,
											"end": 12276,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 12249,
											"end": 12276,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12249,
											"end": 12276,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 12249,
											"end": 12276,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12249,
											"end": 12276,
											"name": "LOG4",
											"source": 3
										},
										{
											"begin": 12289,
											"end": 12330,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 12309,
											"end": 12313,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12315,
											"end": 12317,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12319,
											"end": 12326,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12328,
											"end": 12329,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 12289,
											"end": 12308,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 12289,
											"end": 12330,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 12289,
											"end": 12330,
											"name": "tag",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 12289,
											"end": 12330,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11109,
											"end": 12338,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11109,
											"end": 12338,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11109,
											"end": 12338,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11109,
											"end": 12338,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6463,
											"end": 6572,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 6463,
											"end": 6572,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6521,
											"end": 6528,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6548,
											"end": 6555,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 6548,
											"end": 6564,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6556,
											"end": 6563,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6548,
											"end": 6564,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6548,
											"end": 6564,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6548,
											"end": 6564,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6548,
											"end": 6564,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6548,
											"end": 6564,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6548,
											"end": 6564,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6548,
											"end": 6564,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6548,
											"end": 6564,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6548,
											"end": 6564,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6548,
											"end": 6564,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6548,
											"end": 6564,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6548,
											"end": 6564,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6548,
											"end": 6564,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6548,
											"end": 6564,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6548,
											"end": 6564,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6548,
											"end": 6564,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 6548,
											"end": 6564,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 6548,
											"end": 6564,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6548,
											"end": 6564,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 6548,
											"end": 6564,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6548,
											"end": 6564,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6541,
											"end": 6564,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6541,
											"end": 6564,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6463,
											"end": 6572,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6463,
											"end": 6572,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6463,
											"end": 6572,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6463,
											"end": 6572,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1401,
											"end": 1533,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 1401,
											"end": 1533,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 1476,
											"end": 1486,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 1476,
											"end": 1488,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1476,
											"end": 1488,
											"name": "tag",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 1476,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1472,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 1465,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1465,
											"end": 1472,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1465,
											"end": 1472,
											"name": "tag",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 1465,
											"end": 1472,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "tag",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "tag",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 1457,
											"end": 1525,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1533,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2496,
											"end": 2687,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 2496,
											"end": 2687,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2570,
											"end": 2586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2589,
											"end": 2595,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2589,
											"end": 2595,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2589,
											"end": 2595,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2589,
											"end": 2595,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2589,
											"end": 2595,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2589,
											"end": 2595,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2589,
											"end": 2595,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2589,
											"end": 2595,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2589,
											"end": 2595,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2589,
											"end": 2595,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2589,
											"end": 2595,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2570,
											"end": 2595,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2570,
											"end": 2595,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2615,
											"end": 2623,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2606,
											"end": 2612,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2606,
											"end": 2612,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2606,
											"end": 2623,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2606,
											"end": 2623,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2606,
											"end": 2623,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2606,
											"end": 2623,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2606,
											"end": 2623,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2606,
											"end": 2623,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2606,
											"end": 2623,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2606,
											"end": 2623,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2606,
											"end": 2623,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2606,
											"end": 2623,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2606,
											"end": 2623,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2606,
											"end": 2623,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2606,
											"end": 2623,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2606,
											"end": 2623,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2606,
											"end": 2623,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2606,
											"end": 2623,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2606,
											"end": 2623,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2606,
											"end": 2623,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2670,
											"end": 2678,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2639,
											"end": 2679,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2639,
											"end": 2679,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2660,
											"end": 2668,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2639,
											"end": 2679,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2639,
											"end": 2679,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2639,
											"end": 2679,
											"name": "PUSH",
											"source": 2,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2639,
											"end": 2679,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2639,
											"end": 2679,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2639,
											"end": 2679,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2639,
											"end": 2679,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2639,
											"end": 2679,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2639,
											"end": 2679,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2639,
											"end": 2679,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2639,
											"end": 2679,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2639,
											"end": 2679,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 2559,
											"end": 2687,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2496,
											"end": 2687,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2496,
											"end": 2687,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 12770,
											"end": 13043,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 12770,
											"end": 13043,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12883,
											"end": 12891,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12874,
											"end": 12891,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12874,
											"end": 12891,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 12874,
											"end": 12879,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12874,
											"end": 12891,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12874,
											"end": 12891,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 12874,
											"end": 12891,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 12874,
											"end": 12891,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 12866,
											"end": 12921,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 12866,
											"end": 12921,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 12866,
											"end": 12921,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 12866,
											"end": 12921,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 12866,
											"end": 12921,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12866,
											"end": 12921,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12866,
											"end": 12921,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12866,
											"end": 12921,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 12866,
											"end": 12921,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12866,
											"end": 12921,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 12866,
											"end": 12921,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12866,
											"end": 12921,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 12866,
											"end": 12921,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 12866,
											"end": 12921,
											"name": "tag",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 12866,
											"end": 12921,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12866,
											"end": 12921,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 12866,
											"end": 12921,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 12866,
											"end": 12921,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 12866,
											"end": 12921,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12866,
											"end": 12921,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 12866,
											"end": 12921,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12866,
											"end": 12921,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 12866,
											"end": 12921,
											"name": "tag",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 12866,
											"end": 12921,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12970,
											"end": 12978,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 12932,
											"end": 12950,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 12932,
											"end": 12957,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12951,
											"end": 12956,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 12932,
											"end": 12957,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12932,
											"end": 12957,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 12932,
											"end": 12957,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12932,
											"end": 12957,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 12932,
											"end": 12957,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12932,
											"end": 12957,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12932,
											"end": 12957,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12932,
											"end": 12957,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12932,
											"end": 12957,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12932,
											"end": 12957,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12932,
											"end": 12957,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12932,
											"end": 12957,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12932,
											"end": 12957,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12932,
											"end": 12957,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12932,
											"end": 12957,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 12932,
											"end": 12967,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12958,
											"end": 12966,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 12932,
											"end": 12967,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12932,
											"end": 12967,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 12932,
											"end": 12967,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12932,
											"end": 12967,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 12932,
											"end": 12967,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12932,
											"end": 12967,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12932,
											"end": 12967,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12932,
											"end": 12967,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12932,
											"end": 12967,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12932,
											"end": 12967,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12932,
											"end": 12967,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12932,
											"end": 12967,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12932,
											"end": 12967,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12932,
											"end": 12967,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12932,
											"end": 12967,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 12932,
											"end": 12967,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12932,
											"end": 12978,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 12932,
											"end": 12978,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 12932,
											"end": 12978,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12932,
											"end": 12978,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 12932,
											"end": 12978,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12932,
											"end": 12978,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 12932,
											"end": 12978,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 12932,
											"end": 12978,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 12932,
											"end": 12978,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 12932,
											"end": 12978,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12932,
											"end": 12978,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12932,
											"end": 12978,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 12932,
											"end": 12978,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 12932,
											"end": 12978,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 12932,
											"end": 12978,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 12932,
											"end": 12978,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12932,
											"end": 12978,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 12932,
											"end": 12978,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13016,
											"end": 13024,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12994,
											"end": 13035,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12994,
											"end": 13035,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 13009,
											"end": 13014,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12994,
											"end": 13035,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12994,
											"end": 13035,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 12994,
											"end": 13035,
											"name": "PUSH",
											"source": 3,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 13026,
											"end": 13034,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12994,
											"end": 13035,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 12994,
											"end": 13035,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 12994,
											"end": 13035,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 12994,
											"end": 13035,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12994,
											"end": 13035,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12994,
											"end": 13035,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 12994,
											"end": 13035,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 12994,
											"end": 13035,
											"name": "tag",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 12994,
											"end": 13035,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12994,
											"end": 13035,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 12994,
											"end": 13035,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 12994,
											"end": 13035,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 12994,
											"end": 13035,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12994,
											"end": 13035,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 12994,
											"end": 13035,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12994,
											"end": 13035,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 12770,
											"end": 13043,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12770,
											"end": 13043,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12770,
											"end": 13043,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12770,
											"end": 13043,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6087,
											"end": 6349,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 6087,
											"end": 6349,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6192,
											"end": 6220,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 6202,
											"end": 6206,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6208,
											"end": 6210,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6212,
											"end": 6219,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6192,
											"end": 6201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 6192,
											"end": 6220,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6192,
											"end": 6220,
											"name": "tag",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 6192,
											"end": 6220,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6239,
											"end": 6286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 6262,
											"end": 6266,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6268,
											"end": 6270,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6272,
											"end": 6279,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6281,
											"end": 6285,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6239,
											"end": 6261,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 6239,
											"end": 6286,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6239,
											"end": 6286,
											"name": "tag",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 6239,
											"end": 6286,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6231,
											"end": 6341,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 6231,
											"end": 6341,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6231,
											"end": 6341,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6231,
											"end": 6341,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6231,
											"end": 6341,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6231,
											"end": 6341,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6231,
											"end": 6341,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6231,
											"end": 6341,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6231,
											"end": 6341,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6231,
											"end": 6341,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 6231,
											"end": 6341,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6231,
											"end": 6341,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 6231,
											"end": 6341,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6231,
											"end": 6341,
											"name": "tag",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 6231,
											"end": 6341,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6231,
											"end": 6341,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6231,
											"end": 6341,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6231,
											"end": 6341,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6231,
											"end": 6341,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6231,
											"end": 6341,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6231,
											"end": 6341,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6231,
											"end": 6341,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6231,
											"end": 6341,
											"name": "tag",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 6231,
											"end": 6341,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6087,
											"end": 6349,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6087,
											"end": 6349,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6087,
											"end": 6349,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6087,
											"end": 6349,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6087,
											"end": 6349,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3055,
											"end": 3141,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 3055,
											"end": 3141,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3111,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3124,
											"end": 3133,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3124,
											"end": 3133,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3124,
											"end": 3133,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3124,
											"end": 3133,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3124,
											"end": 3133,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3124,
											"end": 3133,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3124,
											"end": 3133,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3124,
											"end": 3133,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3124,
											"end": 3133,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3124,
											"end": 3133,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3124,
											"end": 3133,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3124,
											"end": 3133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3124,
											"end": 3133,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3124,
											"end": 3133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3055,
											"end": 3141,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3055,
											"end": 3141,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 455,
											"end": 1171,
											"name": "tag",
											"source": 11,
											"value": "169"
										},
										{
											"begin": 455,
											"end": 1171,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 511,
											"end": 524,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 562,
											"end": 576,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 579,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "232"
										},
										{
											"begin": 590,
											"end": 595,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 579,
											"end": 589,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "233"
										},
										{
											"begin": 579,
											"end": 596,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 579,
											"end": 596,
											"name": "tag",
											"source": 11,
											"value": "232"
										},
										{
											"begin": 579,
											"end": 596,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 579,
											"end": 600,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 562,
											"end": 600,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 562,
											"end": 600,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 615,
											"end": 635,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 649,
											"end": 655,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 638,
											"end": 656,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 638,
											"end": 656,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 638,
											"end": 656,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 638,
											"end": 656,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 638,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 638,
											"end": 656,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 638,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 638,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "236"
										},
										{
											"begin": 638,
											"end": 656,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 638,
											"end": 656,
											"name": "tag",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 638,
											"end": 656,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 638,
											"end": 656,
											"name": "tag",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 638,
											"end": 656,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 638,
											"end": 656,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 638,
											"end": 656,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 638,
											"end": 656,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 638,
											"end": 656,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 638,
											"end": 656,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 638,
											"end": 656,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 638,
											"end": 656,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 638,
											"end": 656,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 638,
											"end": 656,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 638,
											"end": 656,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 638,
											"end": 656,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 638,
											"end": 656,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 638,
											"end": 656,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 638,
											"end": 656,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 638,
											"end": 656,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 638,
											"end": 656,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 638,
											"end": 656,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 638,
											"end": 656,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 638,
											"end": 656,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 638,
											"end": 656,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 638,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 638,
											"end": 656,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 638,
											"end": 656,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 638,
											"end": 656,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 638,
											"end": 656,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 638,
											"end": 656,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 638,
											"end": 656,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 638,
											"end": 656,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 638,
											"end": 656,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 638,
											"end": 656,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 638,
											"end": 656,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 638,
											"end": 656,
											"name": "CALLDATACOPY",
											"source": 11
										},
										{
											"begin": 638,
											"end": 656,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 638,
											"end": 656,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 638,
											"end": 656,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 638,
											"end": 656,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 638,
											"end": 656,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 638,
											"end": 656,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 638,
											"end": 656,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 638,
											"end": 656,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 638,
											"end": 656,
											"name": "tag",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 638,
											"end": 656,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 638,
											"end": 656,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 615,
											"end": 656,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 615,
											"end": 656,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 671,
											"end": 682,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 800,
											"end": 806,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 796,
											"end": 798,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 792,
											"end": 807,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 784,
											"end": 790,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 780,
											"end": 808,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 773,
											"end": 808,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 773,
											"end": 808,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 837,
											"end": 1125,
											"name": "tag",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 837,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 844,
											"end": 848,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 837,
											"end": 1125,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 837,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 837,
											"end": 1125,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 869,
											"end": 874,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 869,
											"end": 874,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 869,
											"end": 874,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 869,
											"end": 874,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 869,
											"end": 874,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 869,
											"end": 874,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 869,
											"end": 874,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 869,
											"end": 874,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1011,
											"end": 1019,
											"name": "PUSH",
											"source": 11,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 1006,
											"end": 1008,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 999,
											"end": 1004,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 995,
											"end": 1009,
											"name": "MOD",
											"source": 11
										},
										{
											"begin": 990,
											"end": 1020,
											"name": "BYTE",
											"source": 11
										},
										{
											"begin": 985,
											"end": 988,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 977,
											"end": 1021,
											"name": "MSTORE8",
											"source": 11
										},
										{
											"begin": 1067,
											"end": 1069,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "tag",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "tag",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1101,
											"end": 1102,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1092,
											"end": 1097,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1092,
											"end": 1102,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1088,
											"end": 1109,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1088,
											"end": 1109,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 1088,
											"end": 1109,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1104,
											"end": 1109,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 1104,
											"end": 1109,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1088,
											"end": 1109,
											"name": "tag",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 1088,
											"end": 1109,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 837,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 837,
											"end": 1125,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 837,
											"end": 1125,
											"name": "tag",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 837,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1146,
											"end": 1152,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1139,
											"end": 1152,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 1139,
											"end": 1152,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1139,
											"end": 1152,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1139,
											"end": 1152,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1139,
											"end": 1152,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 455,
											"end": 1171,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 455,
											"end": 1171,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 455,
											"end": 1171,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 455,
											"end": 1171,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 6885,
											"end": 7005,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 6885,
											"end": 7005,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6942,
											"end": 6946,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6995,
											"end": 6996,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6966,
											"end": 6997,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6966,
											"end": 6997,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6966,
											"end": 6983,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 6975,
											"end": 6982,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6966,
											"end": 6974,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 6966,
											"end": 6983,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6966,
											"end": 6983,
											"name": "tag",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 6966,
											"end": 6983,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6966,
											"end": 6997,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6966,
											"end": 6997,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6966,
											"end": 6997,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6966,
											"end": 6997,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6959,
											"end": 6997,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6959,
											"end": 6997,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6885,
											"end": 7005,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6885,
											"end": 7005,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6885,
											"end": 7005,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6885,
											"end": 7005,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 15408,
											"end": 15516,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 15408,
											"end": 15516,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15408,
											"end": 15516,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15408,
											"end": 15516,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15408,
											"end": 15516,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15408,
											"end": 15516,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15408,
											"end": 15516,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 16238,
											"end": 16345,
											"name": "tag",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 16238,
											"end": 16345,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16238,
											"end": 16345,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16238,
											"end": 16345,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16238,
											"end": 16345,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16238,
											"end": 16345,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16238,
											"end": 16345,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 13823,
											"end": 14676,
											"name": "tag",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 13823,
											"end": 14676,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13977,
											"end": 13981,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13998,
											"end": 14013,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 13998,
											"end": 14000,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 13998,
											"end": 14011,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13998,
											"end": 14011,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 13998,
											"end": 14011,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 13998,
											"end": 14013,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 13998,
											"end": 14013,
											"name": "tag",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 13998,
											"end": 14013,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13994,
											"end": 14669,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 13994,
											"end": 14669,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 13994,
											"end": 14669,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 14050,
											"end": 14052,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 14034,
											"end": 14070,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14034,
											"end": 14070,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 14034,
											"end": 14070,
											"name": "PUSH",
											"source": 3,
											"value": "150B7A02"
										},
										{
											"begin": 14071,
											"end": 14083,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 14071,
											"end": 14081,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 14071,
											"end": 14083,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 14071,
											"end": 14083,
											"name": "tag",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 14071,
											"end": 14083,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14085,
											"end": 14089,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 14091,
											"end": 14098,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 14100,
											"end": 14104,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "tag",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "tag",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "tag",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "tag",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14030,
											"end": 14614,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 14030,
											"end": 14614,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 14030,
											"end": 14614,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 14030,
											"end": 14614,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 14030,
											"end": 14614,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14030,
											"end": 14614,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14030,
											"end": 14614,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 14030,
											"end": 14614,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 14030,
											"end": 14614,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 14030,
											"end": 14614,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 14030,
											"end": 14614,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 14030,
											"end": 14614,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14030,
											"end": 14614,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14030,
											"end": 14614,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 14030,
											"end": 14614,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 14030,
											"end": 14614,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 14030,
											"end": 14614,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 14030,
											"end": 14614,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14030,
											"end": 14614,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 14030,
											"end": 14614,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14030,
											"end": 14614,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14030,
											"end": 14614,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 14030,
											"end": 14614,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14030,
											"end": 14614,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 14030,
											"end": 14614,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14030,
											"end": 14614,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14030,
											"end": 14614,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 14030,
											"end": 14614,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14030,
											"end": 14614,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 14030,
											"end": 14614,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 14030,
											"end": 14614,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14030,
											"end": 14614,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 14030,
											"end": 14614,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 14030,
											"end": 14614,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14030,
											"end": 14614,
											"name": "tag",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 14030,
											"end": 14614,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14030,
											"end": 14614,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 14030,
											"end": 14614,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14030,
											"end": 14614,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14030,
											"end": 14614,
											"name": "tag",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 14030,
											"end": 14614,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14030,
											"end": 14614,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14292,
											"end": 14293,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14275,
											"end": 14281,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14275,
											"end": 14288,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 14275,
											"end": 14293,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 14271,
											"end": 14599,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 14271,
											"end": 14599,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 14271,
											"end": 14599,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 14318,
											"end": 14378,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 14318,
											"end": 14378,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 14318,
											"end": 14378,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14318,
											"end": 14378,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14318,
											"end": 14378,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14318,
											"end": 14378,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 14318,
											"end": 14378,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14318,
											"end": 14378,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 14318,
											"end": 14378,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14318,
											"end": 14378,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 14318,
											"end": 14378,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 14318,
											"end": 14378,
											"name": "tag",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 14318,
											"end": 14378,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14318,
											"end": 14378,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 14318,
											"end": 14378,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 14318,
											"end": 14378,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 14318,
											"end": 14378,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14318,
											"end": 14378,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 14318,
											"end": 14378,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14318,
											"end": 14378,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 14271,
											"end": 14599,
											"name": "tag",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 14271,
											"end": 14599,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14549,
											"end": 14555,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 14543,
											"end": 14556,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 14534,
											"end": 14540,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14530,
											"end": 14532,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 14526,
											"end": 14541,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14519,
											"end": 14557,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 14030,
											"end": 14614,
											"name": "tag",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 14030,
											"end": 14614,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14166,
											"end": 14207,
											"name": "PUSH",
											"source": 3,
											"value": "150B7A02"
										},
										{
											"begin": 14166,
											"end": 14207,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 14166,
											"end": 14207,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 14156,
											"end": 14207,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14156,
											"end": 14207,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 14156,
											"end": 14207,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 14156,
											"end": 14162,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14156,
											"end": 14207,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14156,
											"end": 14207,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 14156,
											"end": 14207,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 14156,
											"end": 14207,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 14149,
											"end": 14207,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14149,
											"end": 14207,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14149,
											"end": 14207,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14149,
											"end": 14207,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 14149,
											"end": 14207,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13994,
											"end": 14669,
											"name": "tag",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 13994,
											"end": 14669,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14653,
											"end": 14657,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 14646,
											"end": 14657,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14646,
											"end": 14657,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13823,
											"end": 14676,
											"name": "tag",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 13823,
											"end": 14676,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13823,
											"end": 14676,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 13823,
											"end": 14676,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 13823,
											"end": 14676,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13823,
											"end": 14676,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13823,
											"end": 14676,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13823,
											"end": 14676,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13823,
											"end": 14676,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10390,
											"end": 11338,
											"name": "tag",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 10390,
											"end": 11338,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10443,
											"end": 10450,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10463,
											"end": 10477,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10480,
											"end": 10481,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10463,
											"end": 10481,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10463,
											"end": 10481,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10530,
											"end": 10538,
											"name": "PUSH",
											"source": 9,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 10521,
											"end": 10526,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10521,
											"end": 10538,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 10517,
											"end": 10623,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 10517,
											"end": 10623,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10568,
											"end": 10576,
											"name": "PUSH",
											"source": 9,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 10559,
											"end": 10576,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10559,
											"end": 10576,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10559,
											"end": 10576,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 10559,
											"end": 10576,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10559,
											"end": 10576,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 10559,
											"end": 10576,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 10559,
											"end": 10576,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10559,
											"end": 10576,
											"name": "tag",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 10559,
											"end": 10576,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10559,
											"end": 10576,
											"name": "tag",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 10559,
											"end": 10576,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10559,
											"end": 10576,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 10559,
											"end": 10576,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10559,
											"end": 10576,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10605,
											"end": 10607,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10595,
											"end": 10607,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10595,
											"end": 10607,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10595,
											"end": 10607,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10595,
											"end": 10607,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10517,
											"end": 10623,
											"name": "tag",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 10517,
											"end": 10623,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10650,
											"end": 10658,
											"name": "PUSH",
											"source": 9,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 10641,
											"end": 10646,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10641,
											"end": 10658,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 10637,
											"end": 10743,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 10637,
											"end": 10743,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10688,
											"end": 10696,
											"name": "PUSH",
											"source": 9,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 10679,
											"end": 10696,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10679,
											"end": 10696,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10679,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 10679,
											"end": 10696,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10679,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 10679,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 10679,
											"end": 10696,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10679,
											"end": 10696,
											"name": "tag",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 10679,
											"end": 10696,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10679,
											"end": 10696,
											"name": "tag",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 10679,
											"end": 10696,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10679,
											"end": 10696,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 10679,
											"end": 10696,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10679,
											"end": 10696,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10725,
											"end": 10727,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10715,
											"end": 10727,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10715,
											"end": 10727,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10715,
											"end": 10727,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10715,
											"end": 10727,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10637,
											"end": 10743,
											"name": "tag",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 10637,
											"end": 10743,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10770,
											"end": 10778,
											"name": "PUSH",
											"source": 9,
											"value": "2386F26FC10000"
										},
										{
											"begin": 10761,
											"end": 10766,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10761,
											"end": 10778,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 10757,
											"end": 10863,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 10757,
											"end": 10863,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10808,
											"end": 10816,
											"name": "PUSH",
											"source": 9,
											"value": "2386F26FC10000"
										},
										{
											"begin": 10799,
											"end": 10816,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10799,
											"end": 10816,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10799,
											"end": 10816,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 10799,
											"end": 10816,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10799,
											"end": 10816,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 10799,
											"end": 10816,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 10799,
											"end": 10816,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10799,
											"end": 10816,
											"name": "tag",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 10799,
											"end": 10816,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10799,
											"end": 10816,
											"name": "tag",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 10799,
											"end": 10816,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10799,
											"end": 10816,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 10799,
											"end": 10816,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10799,
											"end": 10816,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10845,
											"end": 10847,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 10835,
											"end": 10847,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10835,
											"end": 10847,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10835,
											"end": 10847,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10835,
											"end": 10847,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10757,
											"end": 10863,
											"name": "tag",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 10757,
											"end": 10863,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10890,
											"end": 10897,
											"name": "PUSH",
											"source": 9,
											"value": "5F5E100"
										},
										{
											"begin": 10881,
											"end": 10886,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10881,
											"end": 10897,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 10877,
											"end": 10980,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 10877,
											"end": 10980,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10927,
											"end": 10934,
											"name": "PUSH",
											"source": 9,
											"value": "5F5E100"
										},
										{
											"begin": 10918,
											"end": 10934,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10918,
											"end": 10934,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10918,
											"end": 10934,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 10918,
											"end": 10934,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10918,
											"end": 10934,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 10918,
											"end": 10934,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 10918,
											"end": 10934,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10918,
											"end": 10934,
											"name": "tag",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 10918,
											"end": 10934,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10918,
											"end": 10934,
											"name": "tag",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 10918,
											"end": 10934,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10918,
											"end": 10934,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 10918,
											"end": 10934,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10918,
											"end": 10934,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10963,
											"end": 10964,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 10953,
											"end": 10964,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10953,
											"end": 10964,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10953,
											"end": 10964,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10953,
											"end": 10964,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10877,
											"end": 10980,
											"name": "tag",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 10877,
											"end": 10980,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11007,
											"end": 11014,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 10998,
											"end": 11003,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10998,
											"end": 11014,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 10994,
											"end": 11097,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 10994,
											"end": 11097,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11044,
											"end": 11051,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 11035,
											"end": 11051,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11035,
											"end": 11051,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11035,
											"end": 11051,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 11035,
											"end": 11051,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11035,
											"end": 11051,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 11035,
											"end": 11051,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 11035,
											"end": 11051,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11035,
											"end": 11051,
											"name": "tag",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 11035,
											"end": 11051,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11035,
											"end": 11051,
											"name": "tag",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 11035,
											"end": 11051,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11035,
											"end": 11051,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 11035,
											"end": 11051,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11035,
											"end": 11051,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11080,
											"end": 11081,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11070,
											"end": 11081,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11081,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11081,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11081,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10994,
											"end": 11097,
											"name": "tag",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 10994,
											"end": 11097,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11124,
											"end": 11131,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 11115,
											"end": 11120,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11115,
											"end": 11131,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 11111,
											"end": 11214,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 11111,
											"end": 11214,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11161,
											"end": 11168,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 11152,
											"end": 11168,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11152,
											"end": 11168,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11152,
											"end": 11168,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 11152,
											"end": 11168,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11152,
											"end": 11168,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 11152,
											"end": 11168,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 11152,
											"end": 11168,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11152,
											"end": 11168,
											"name": "tag",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 11152,
											"end": 11168,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11152,
											"end": 11168,
											"name": "tag",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 11152,
											"end": 11168,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11152,
											"end": 11168,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 11152,
											"end": 11168,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11152,
											"end": 11168,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11197,
											"end": 11198,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 11187,
											"end": 11198,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11187,
											"end": 11198,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11187,
											"end": 11198,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11187,
											"end": 11198,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11111,
											"end": 11214,
											"name": "tag",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 11111,
											"end": 11214,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11241,
											"end": 11248,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 11232,
											"end": 11237,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11232,
											"end": 11248,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 11228,
											"end": 11296,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 11228,
											"end": 11296,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11279,
											"end": 11280,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 11269,
											"end": 11280,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11269,
											"end": 11280,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11269,
											"end": 11280,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11269,
											"end": 11280,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11228,
											"end": 11296,
											"name": "tag",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 11228,
											"end": 11296,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11324,
											"end": 11330,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11317,
											"end": 11330,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11317,
											"end": 11330,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11317,
											"end": 11330,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10390,
											"end": 11338,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10390,
											"end": 11338,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10390,
											"end": 11338,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10390,
											"end": 11338,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1452,
											"end": 1778,
											"name": "tag",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 1452,
											"end": 1778,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1512,
											"end": 1516,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1769,
											"end": 1770,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1747,
											"end": 1754,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1747,
											"end": 1766,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1747,
											"end": 1766,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1747,
											"end": 1766,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 1747,
											"end": 1770,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1740,
											"end": 1770,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1740,
											"end": 1770,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1452,
											"end": 1778,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1452,
											"end": 1778,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1452,
											"end": 1778,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1452,
											"end": 1778,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 12,
											"value": "296"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "296"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 1798,
											"end": 2105,
											"name": "tag",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 1798,
											"end": 2105,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1866,
											"end": 1867,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "tag",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1890,
											"end": 1896,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1887,
											"end": 1888,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1884,
											"end": 1897,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1975,
											"end": 1976,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1970,
											"end": 1973,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1966,
											"end": 1977,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1960,
											"end": 1978,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1956,
											"end": 1957,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1951,
											"end": 1954,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1947,
											"end": 1958,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1940,
											"end": 1979,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1912,
											"end": 1914,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1909,
											"end": 1910,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1905,
											"end": 1915,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "tag",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2007,
											"end": 2013,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2004,
											"end": 2005,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2001,
											"end": 2014,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1998,
											"end": 2099,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1998,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 1998,
											"end": 2099,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2087,
											"end": 2088,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2078,
											"end": 2084,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2073,
											"end": 2076,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2069,
											"end": 2085,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2062,
											"end": 2089,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1998,
											"end": 2099,
											"name": "tag",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 1998,
											"end": 2099,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1847,
											"end": 2105,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 2105,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 2105,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 2105,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 2105,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 2111,
											"end": 2213,
											"name": "tag",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 2111,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2152,
											"end": 2158,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2203,
											"end": 2205,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2199,
											"end": 2206,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 2194,
											"end": 2196,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2187,
											"end": 2192,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2183,
											"end": 2197,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2179,
											"end": 2207,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2169,
											"end": 2207,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2169,
											"end": 2207,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2111,
											"end": 2213,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2111,
											"end": 2213,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2111,
											"end": 2213,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2111,
											"end": 2213,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 2219,
											"end": 2583,
											"name": "tag",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 2219,
											"end": 2583,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2307,
											"end": 2310,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2335,
											"end": 2374,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 2368,
											"end": 2373,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2335,
											"end": 2374,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 2335,
											"end": 2374,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2335,
											"end": 2374,
											"name": "tag",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 2335,
											"end": 2374,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2390,
											"end": 2461,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 2454,
											"end": 2460,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2449,
											"end": 2452,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2390,
											"end": 2461,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 2390,
											"end": 2461,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2390,
											"end": 2461,
											"name": "tag",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 2390,
											"end": 2461,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2383,
											"end": 2461,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2383,
											"end": 2461,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2470,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "382"
										},
										{
											"begin": 2515,
											"end": 2521,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2510,
											"end": 2513,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2503,
											"end": 2507,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2496,
											"end": 2501,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2492,
											"end": 2508,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2470,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 2470,
											"end": 2522,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2470,
											"end": 2522,
											"name": "tag",
											"source": 12,
											"value": "382"
										},
										{
											"begin": 2470,
											"end": 2522,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2547,
											"end": 2576,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 2569,
											"end": 2575,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2547,
											"end": 2576,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 2547,
											"end": 2576,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2547,
											"end": 2576,
											"name": "tag",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 2547,
											"end": 2576,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2542,
											"end": 2545,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2538,
											"end": 2577,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2531,
											"end": 2577,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2531,
											"end": 2577,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2311,
											"end": 2583,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2219,
											"end": 2583,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2219,
											"end": 2583,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2219,
											"end": 2583,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2219,
											"end": 2583,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2219,
											"end": 2583,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 2589,
											"end": 2902,
											"name": "tag",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 2589,
											"end": 2902,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2702,
											"end": 2706,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2740,
											"end": 2742,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2729,
											"end": 2738,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2725,
											"end": 2743,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2717,
											"end": 2743,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2717,
											"end": 2743,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2789,
											"end": 2798,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2783,
											"end": 2787,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2779,
											"end": 2799,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2775,
											"end": 2776,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2764,
											"end": 2773,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2760,
											"end": 2777,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2753,
											"end": 2800,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2817,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 2890,
											"end": 2894,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2881,
											"end": 2887,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2817,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 2817,
											"end": 2895,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2817,
											"end": 2895,
											"name": "tag",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 2817,
											"end": 2895,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2809,
											"end": 2895,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2809,
											"end": 2895,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2589,
											"end": 2902,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2589,
											"end": 2902,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2589,
											"end": 2902,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2589,
											"end": 2902,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2589,
											"end": 2902,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 2908,
											"end": 2985,
											"name": "tag",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 2908,
											"end": 2985,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2945,
											"end": 2952,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2974,
											"end": 2979,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2963,
											"end": 2979,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2963,
											"end": 2979,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2908,
											"end": 2985,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2908,
											"end": 2985,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2908,
											"end": 2985,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2908,
											"end": 2985,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 2991,
											"end": 3113,
											"name": "tag",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 2991,
											"end": 3113,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3064,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 3082,
											"end": 3087,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3064,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 3064,
											"end": 3088,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3064,
											"end": 3088,
											"name": "tag",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 3064,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3057,
											"end": 3062,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3054,
											"end": 3089,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 3044,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 3044,
											"end": 3107,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3103,
											"end": 3104,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3100,
											"end": 3101,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3093,
											"end": 3105,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3044,
											"end": 3107,
											"name": "tag",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 3044,
											"end": 3107,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2991,
											"end": 3113,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2991,
											"end": 3113,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 3119,
											"end": 3258,
											"name": "tag",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 3119,
											"end": 3258,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3165,
											"end": 3170,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3203,
											"end": 3209,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3190,
											"end": 3210,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3181,
											"end": 3210,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3181,
											"end": 3210,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3219,
											"end": 3252,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 3246,
											"end": 3251,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3219,
											"end": 3252,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 3219,
											"end": 3252,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3219,
											"end": 3252,
											"name": "tag",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 3219,
											"end": 3252,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3119,
											"end": 3258,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3119,
											"end": 3258,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3119,
											"end": 3258,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3119,
											"end": 3258,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3119,
											"end": 3258,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 3264,
											"end": 3593,
											"name": "tag",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 3264,
											"end": 3593,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3323,
											"end": 3329,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3372,
											"end": 3374,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3360,
											"end": 3369,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3351,
											"end": 3358,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3347,
											"end": 3370,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3343,
											"end": 3375,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3340,
											"end": 3459,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3340,
											"end": 3459,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 3340,
											"end": 3459,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3378,
											"end": 3457,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 3378,
											"end": 3457,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 3378,
											"end": 3457,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3378,
											"end": 3457,
											"name": "tag",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 3378,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3340,
											"end": 3459,
											"name": "tag",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 3340,
											"end": 3459,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3498,
											"end": 3499,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3523,
											"end": 3576,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "395"
										},
										{
											"begin": 3568,
											"end": 3575,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3559,
											"end": 3565,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3548,
											"end": 3557,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3544,
											"end": 3566,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3523,
											"end": 3576,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 3523,
											"end": 3576,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3523,
											"end": 3576,
											"name": "tag",
											"source": 12,
											"value": "395"
										},
										{
											"begin": 3523,
											"end": 3576,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3513,
											"end": 3576,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3513,
											"end": 3576,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3469,
											"end": 3586,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3264,
											"end": 3593,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3264,
											"end": 3593,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3264,
											"end": 3593,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3264,
											"end": 3593,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3264,
											"end": 3593,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 3599,
											"end": 3725,
											"name": "tag",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 3599,
											"end": 3725,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3636,
											"end": 3643,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3718,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3665,
											"end": 3719,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3654,
											"end": 3719,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3654,
											"end": 3719,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3599,
											"end": 3725,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3599,
											"end": 3725,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3599,
											"end": 3725,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3599,
											"end": 3725,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 3731,
											"end": 3827,
											"name": "tag",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 3731,
											"end": 3827,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3768,
											"end": 3775,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3797,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "398"
										},
										{
											"begin": 3815,
											"end": 3820,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3797,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 3797,
											"end": 3821,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3797,
											"end": 3821,
											"name": "tag",
											"source": 12,
											"value": "398"
										},
										{
											"begin": 3797,
											"end": 3821,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3786,
											"end": 3821,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3786,
											"end": 3821,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3731,
											"end": 3827,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3731,
											"end": 3827,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3731,
											"end": 3827,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3731,
											"end": 3827,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 3833,
											"end": 3951,
											"name": "tag",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 3833,
											"end": 3951,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3920,
											"end": 3944,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 3938,
											"end": 3943,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3920,
											"end": 3944,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 3920,
											"end": 3944,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3920,
											"end": 3944,
											"name": "tag",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 3920,
											"end": 3944,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3915,
											"end": 3918,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3908,
											"end": 3945,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3833,
											"end": 3951,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3833,
											"end": 3951,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3833,
											"end": 3951,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 3957,
											"end": 4179,
											"name": "tag",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 3957,
											"end": 4179,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4050,
											"end": 4054,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4088,
											"end": 4090,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4077,
											"end": 4086,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4073,
											"end": 4091,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4091,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4091,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4101,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "402"
										},
										{
											"begin": 4169,
											"end": 4170,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4158,
											"end": 4167,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4154,
											"end": 4171,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4145,
											"end": 4151,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4101,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 4101,
											"end": 4172,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4101,
											"end": 4172,
											"name": "tag",
											"source": 12,
											"value": "402"
										},
										{
											"begin": 4101,
											"end": 4172,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3957,
											"end": 4179,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3957,
											"end": 4179,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3957,
											"end": 4179,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3957,
											"end": 4179,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3957,
											"end": 4179,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 4185,
											"end": 4307,
											"name": "tag",
											"source": 12,
											"value": "310"
										},
										{
											"begin": 4185,
											"end": 4307,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4258,
											"end": 4282,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 4276,
											"end": 4281,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4258,
											"end": 4282,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 4258,
											"end": 4282,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4258,
											"end": 4282,
											"name": "tag",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 4258,
											"end": 4282,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4251,
											"end": 4256,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4248,
											"end": 4283,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4301,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "405"
										},
										{
											"begin": 4238,
											"end": 4301,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4297,
											"end": 4298,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4294,
											"end": 4295,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4287,
											"end": 4299,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4301,
											"name": "tag",
											"source": 12,
											"value": "405"
										},
										{
											"begin": 4238,
											"end": 4301,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4185,
											"end": 4307,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4185,
											"end": 4307,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 4313,
											"end": 4452,
											"name": "tag",
											"source": 12,
											"value": "311"
										},
										{
											"begin": 4313,
											"end": 4452,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4359,
											"end": 4364,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4397,
											"end": 4403,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4384,
											"end": 4404,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 4375,
											"end": 4404,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4375,
											"end": 4404,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4413,
											"end": 4446,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 4440,
											"end": 4445,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4413,
											"end": 4446,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "310"
										},
										{
											"begin": 4413,
											"end": 4446,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4413,
											"end": 4446,
											"name": "tag",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 4413,
											"end": 4446,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4313,
											"end": 4452,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4313,
											"end": 4452,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4313,
											"end": 4452,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4313,
											"end": 4452,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4313,
											"end": 4452,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 4458,
											"end": 4932,
											"name": "tag",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4458,
											"end": 4932,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4526,
											"end": 4532,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4534,
											"end": 4540,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4583,
											"end": 4585,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4571,
											"end": 4580,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4562,
											"end": 4569,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4558,
											"end": 4581,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4554,
											"end": 4586,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4551,
											"end": 4670,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4551,
											"end": 4670,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "409"
										},
										{
											"begin": 4551,
											"end": 4670,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4589,
											"end": 4668,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "410"
										},
										{
											"begin": 4589,
											"end": 4668,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 4589,
											"end": 4668,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4589,
											"end": 4668,
											"name": "tag",
											"source": 12,
											"value": "410"
										},
										{
											"begin": 4589,
											"end": 4668,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4551,
											"end": 4670,
											"name": "tag",
											"source": 12,
											"value": "409"
										},
										{
											"begin": 4551,
											"end": 4670,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4709,
											"end": 4710,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4734,
											"end": 4787,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 4779,
											"end": 4786,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4770,
											"end": 4776,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4759,
											"end": 4768,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4755,
											"end": 4777,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4734,
											"end": 4787,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "311"
										},
										{
											"begin": 4734,
											"end": 4787,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4734,
											"end": 4787,
											"name": "tag",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 4734,
											"end": 4787,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4724,
											"end": 4787,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4724,
											"end": 4787,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4680,
											"end": 4797,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4836,
											"end": 4838,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4862,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "412"
										},
										{
											"begin": 4907,
											"end": 4914,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4898,
											"end": 4904,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4887,
											"end": 4896,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4883,
											"end": 4905,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4862,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 4862,
											"end": 4915,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4862,
											"end": 4915,
											"name": "tag",
											"source": 12,
											"value": "412"
										},
										{
											"begin": 4862,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4852,
											"end": 4915,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4852,
											"end": 4915,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4807,
											"end": 4925,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4458,
											"end": 4932,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4458,
											"end": 4932,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4458,
											"end": 4932,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4458,
											"end": 4932,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4458,
											"end": 4932,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4458,
											"end": 4932,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 4938,
											"end": 5557,
											"name": "tag",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 4938,
											"end": 5557,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5015,
											"end": 5021,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5023,
											"end": 5029,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5031,
											"end": 5037,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5080,
											"end": 5082,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 5068,
											"end": 5077,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5059,
											"end": 5066,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5055,
											"end": 5078,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5051,
											"end": 5083,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 5048,
											"end": 5167,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5048,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "414"
										},
										{
											"begin": 5048,
											"end": 5167,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5086,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "415"
										},
										{
											"begin": 5086,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 5086,
											"end": 5165,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 5086,
											"end": 5165,
											"name": "tag",
											"source": 12,
											"value": "415"
										},
										{
											"begin": 5086,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5048,
											"end": 5167,
											"name": "tag",
											"source": 12,
											"value": "414"
										},
										{
											"begin": 5048,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5206,
											"end": 5207,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5231,
											"end": 5284,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "416"
										},
										{
											"begin": 5276,
											"end": 5283,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5267,
											"end": 5273,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5256,
											"end": 5265,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 5252,
											"end": 5274,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5231,
											"end": 5284,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "311"
										},
										{
											"begin": 5231,
											"end": 5284,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 5231,
											"end": 5284,
											"name": "tag",
											"source": 12,
											"value": "416"
										},
										{
											"begin": 5231,
											"end": 5284,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5221,
											"end": 5284,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 5221,
											"end": 5284,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5177,
											"end": 5294,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5333,
											"end": 5335,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5359,
											"end": 5412,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "417"
										},
										{
											"begin": 5404,
											"end": 5411,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5395,
											"end": 5401,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5384,
											"end": 5393,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 5380,
											"end": 5402,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5359,
											"end": 5412,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "311"
										},
										{
											"begin": 5359,
											"end": 5412,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 5359,
											"end": 5412,
											"name": "tag",
											"source": 12,
											"value": "417"
										},
										{
											"begin": 5359,
											"end": 5412,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5349,
											"end": 5412,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5349,
											"end": 5412,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5304,
											"end": 5422,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5461,
											"end": 5463,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5487,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "418"
										},
										{
											"begin": 5532,
											"end": 5539,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5523,
											"end": 5529,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5512,
											"end": 5521,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 5508,
											"end": 5530,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5487,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 5487,
											"end": 5540,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 5487,
											"end": 5540,
											"name": "tag",
											"source": 12,
											"value": "418"
										},
										{
											"begin": 5487,
											"end": 5540,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5477,
											"end": 5540,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5477,
											"end": 5540,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5432,
											"end": 5550,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4938,
											"end": 5557,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4938,
											"end": 5557,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4938,
											"end": 5557,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4938,
											"end": 5557,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4938,
											"end": 5557,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4938,
											"end": 5557,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 5563,
											"end": 5892,
											"name": "tag",
											"source": 12,
											"value": "55"
										},
										{
											"begin": 5563,
											"end": 5892,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5622,
											"end": 5628,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5671,
											"end": 5673,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5659,
											"end": 5668,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5650,
											"end": 5657,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5646,
											"end": 5669,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5642,
											"end": 5674,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 5639,
											"end": 5758,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5639,
											"end": 5758,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "420"
										},
										{
											"begin": 5639,
											"end": 5758,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5677,
											"end": 5756,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "421"
										},
										{
											"begin": 5677,
											"end": 5756,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 5677,
											"end": 5756,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 5677,
											"end": 5756,
											"name": "tag",
											"source": 12,
											"value": "421"
										},
										{
											"begin": 5677,
											"end": 5756,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5639,
											"end": 5758,
											"name": "tag",
											"source": 12,
											"value": "420"
										},
										{
											"begin": 5639,
											"end": 5758,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5797,
											"end": 5798,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5822,
											"end": 5875,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "422"
										},
										{
											"begin": 5867,
											"end": 5874,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5858,
											"end": 5864,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5847,
											"end": 5856,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5843,
											"end": 5865,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5822,
											"end": 5875,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "311"
										},
										{
											"begin": 5822,
											"end": 5875,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 5822,
											"end": 5875,
											"name": "tag",
											"source": 12,
											"value": "422"
										},
										{
											"begin": 5822,
											"end": 5875,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5812,
											"end": 5875,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5812,
											"end": 5875,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5768,
											"end": 5885,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5563,
											"end": 5892,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5563,
											"end": 5892,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5563,
											"end": 5892,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5563,
											"end": 5892,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5563,
											"end": 5892,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 5898,
											"end": 6016,
											"name": "tag",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 5898,
											"end": 6016,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5985,
											"end": 6009,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "424"
										},
										{
											"begin": 6003,
											"end": 6008,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5985,
											"end": 6009,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 5985,
											"end": 6009,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 5985,
											"end": 6009,
											"name": "tag",
											"source": 12,
											"value": "424"
										},
										{
											"begin": 5985,
											"end": 6009,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5980,
											"end": 5983,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5973,
											"end": 6010,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5898,
											"end": 6016,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5898,
											"end": 6016,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5898,
											"end": 6016,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 6022,
											"end": 6244,
											"name": "tag",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 6022,
											"end": 6244,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6115,
											"end": 6119,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6153,
											"end": 6155,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6142,
											"end": 6151,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6138,
											"end": 6156,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6130,
											"end": 6156,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6130,
											"end": 6156,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6166,
											"end": 6237,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 6234,
											"end": 6235,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6223,
											"end": 6232,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6219,
											"end": 6236,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6210,
											"end": 6216,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6166,
											"end": 6237,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 6166,
											"end": 6237,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 6166,
											"end": 6237,
											"name": "tag",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 6166,
											"end": 6237,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6022,
											"end": 6244,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6022,
											"end": 6244,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6022,
											"end": 6244,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6022,
											"end": 6244,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6022,
											"end": 6244,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 6250,
											"end": 6366,
											"name": "tag",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 6250,
											"end": 6366,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6320,
											"end": 6341,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "428"
										},
										{
											"begin": 6335,
											"end": 6340,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6320,
											"end": 6341,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 6320,
											"end": 6341,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 6320,
											"end": 6341,
											"name": "tag",
											"source": 12,
											"value": "428"
										},
										{
											"begin": 6320,
											"end": 6341,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6313,
											"end": 6318,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6310,
											"end": 6342,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 6300,
											"end": 6360,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "429"
										},
										{
											"begin": 6300,
											"end": 6360,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6356,
											"end": 6357,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6353,
											"end": 6354,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6346,
											"end": 6358,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6300,
											"end": 6360,
											"name": "tag",
											"source": 12,
											"value": "429"
										},
										{
											"begin": 6300,
											"end": 6360,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6250,
											"end": 6366,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6250,
											"end": 6366,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 6372,
											"end": 6505,
											"name": "tag",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 6372,
											"end": 6505,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6415,
											"end": 6420,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6453,
											"end": 6459,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6440,
											"end": 6460,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 6431,
											"end": 6460,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6431,
											"end": 6460,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6469,
											"end": 6499,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "431"
										},
										{
											"begin": 6493,
											"end": 6498,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6469,
											"end": 6499,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 6469,
											"end": 6499,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 6469,
											"end": 6499,
											"name": "tag",
											"source": 12,
											"value": "431"
										},
										{
											"begin": 6469,
											"end": 6499,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6372,
											"end": 6505,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6372,
											"end": 6505,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6372,
											"end": 6505,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6372,
											"end": 6505,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6372,
											"end": 6505,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 6511,
											"end": 6979,
											"name": "tag",
											"source": 12,
											"value": "69"
										},
										{
											"begin": 6511,
											"end": 6979,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6576,
											"end": 6582,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6584,
											"end": 6590,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6633,
											"end": 6635,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6621,
											"end": 6630,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6612,
											"end": 6619,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6608,
											"end": 6631,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6604,
											"end": 6636,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 6601,
											"end": 6720,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6601,
											"end": 6720,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "433"
										},
										{
											"begin": 6601,
											"end": 6720,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6639,
											"end": 6718,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 6639,
											"end": 6718,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 6639,
											"end": 6718,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 6639,
											"end": 6718,
											"name": "tag",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 6639,
											"end": 6718,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6601,
											"end": 6720,
											"name": "tag",
											"source": 12,
											"value": "433"
										},
										{
											"begin": 6601,
											"end": 6720,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6759,
											"end": 6760,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6784,
											"end": 6837,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "435"
										},
										{
											"begin": 6829,
											"end": 6836,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6820,
											"end": 6826,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6809,
											"end": 6818,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6805,
											"end": 6827,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6784,
											"end": 6837,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "311"
										},
										{
											"begin": 6784,
											"end": 6837,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 6784,
											"end": 6837,
											"name": "tag",
											"source": 12,
											"value": "435"
										},
										{
											"begin": 6784,
											"end": 6837,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6774,
											"end": 6837,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6774,
											"end": 6837,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6730,
											"end": 6847,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6886,
											"end": 6888,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6912,
											"end": 6962,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "436"
										},
										{
											"begin": 6954,
											"end": 6961,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6945,
											"end": 6951,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6934,
											"end": 6943,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6930,
											"end": 6952,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6912,
											"end": 6962,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 6912,
											"end": 6962,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 6912,
											"end": 6962,
											"name": "tag",
											"source": 12,
											"value": "436"
										},
										{
											"begin": 6912,
											"end": 6962,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6902,
											"end": 6962,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6902,
											"end": 6962,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6857,
											"end": 6972,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6511,
											"end": 6979,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6511,
											"end": 6979,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6511,
											"end": 6979,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6511,
											"end": 6979,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6511,
											"end": 6979,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6511,
											"end": 6979,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 6985,
											"end": 7102,
											"name": "tag",
											"source": 12,
											"value": "315"
										},
										{
											"begin": 6985,
											"end": 7102,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7094,
											"end": 7095,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7091,
											"end": 7092,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7084,
											"end": 7096,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7108,
											"end": 7225,
											"name": "tag",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 7108,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7217,
											"end": 7218,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7214,
											"end": 7215,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7207,
											"end": 7219,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7231,
											"end": 7411,
											"name": "tag",
											"source": 12,
											"value": "236"
										},
										{
											"begin": 7231,
											"end": 7411,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7279,
											"end": 7356,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7276,
											"end": 7277,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7269,
											"end": 7357,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7376,
											"end": 7380,
											"name": "PUSH",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 7373,
											"end": 7374,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7366,
											"end": 7381,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7400,
											"end": 7404,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 7397,
											"end": 7398,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7390,
											"end": 7405,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7417,
											"end": 7698,
											"name": "tag",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 7417,
											"end": 7698,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7500,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "441"
										},
										{
											"begin": 7522,
											"end": 7526,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7500,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 7500,
											"end": 7527,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 7500,
											"end": 7527,
											"name": "tag",
											"source": 12,
											"value": "441"
										},
										{
											"begin": 7500,
											"end": 7527,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7492,
											"end": 7498,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7488,
											"end": 7528,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7630,
											"end": 7636,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7618,
											"end": 7628,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7615,
											"end": 7637,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 7594,
											"end": 7612,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7582,
											"end": 7592,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7579,
											"end": 7613,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 7576,
											"end": 7638,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 7573,
											"end": 7661,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7573,
											"end": 7661,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "442"
										},
										{
											"begin": 7573,
											"end": 7661,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7641,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "443"
										},
										{
											"begin": 7641,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "236"
										},
										{
											"begin": 7641,
											"end": 7659,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 7641,
											"end": 7659,
											"name": "tag",
											"source": 12,
											"value": "443"
										},
										{
											"begin": 7641,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7573,
											"end": 7661,
											"name": "tag",
											"source": 12,
											"value": "442"
										},
										{
											"begin": 7573,
											"end": 7661,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7681,
											"end": 7691,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7677,
											"end": 7679,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7670,
											"end": 7692,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7460,
											"end": 7698,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7417,
											"end": 7698,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7417,
											"end": 7698,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7417,
											"end": 7698,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 7704,
											"end": 7833,
											"name": "tag",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 7704,
											"end": 7833,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7738,
											"end": 7744,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "445"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "tag",
											"source": 12,
											"value": "445"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7755,
											"end": 7785,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7755,
											"end": 7785,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7794,
											"end": 7827,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "446"
										},
										{
											"begin": 7822,
											"end": 7826,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7814,
											"end": 7820,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7794,
											"end": 7827,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 7794,
											"end": 7827,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 7794,
											"end": 7827,
											"name": "tag",
											"source": 12,
											"value": "446"
										},
										{
											"begin": 7794,
											"end": 7827,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7704,
											"end": 7833,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7704,
											"end": 7833,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7704,
											"end": 7833,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7704,
											"end": 7833,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 7839,
											"end": 8146,
											"name": "tag",
											"source": 12,
											"value": "319"
										},
										{
											"begin": 7839,
											"end": 8146,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7900,
											"end": 7904,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7990,
											"end": 8008,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7982,
											"end": 7988,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7979,
											"end": 8009,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 7976,
											"end": 8032,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7976,
											"end": 8032,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "448"
										},
										{
											"begin": 7976,
											"end": 8032,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8012,
											"end": 8030,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "449"
										},
										{
											"begin": 8012,
											"end": 8030,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "236"
										},
										{
											"begin": 8012,
											"end": 8030,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 8012,
											"end": 8030,
											"name": "tag",
											"source": 12,
											"value": "449"
										},
										{
											"begin": 8012,
											"end": 8030,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7976,
											"end": 8032,
											"name": "tag",
											"source": 12,
											"value": "448"
										},
										{
											"begin": 7976,
											"end": 8032,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8050,
											"end": 8079,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 8072,
											"end": 8078,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8050,
											"end": 8079,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 8050,
											"end": 8079,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 8050,
											"end": 8079,
											"name": "tag",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 8050,
											"end": 8079,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8042,
											"end": 8079,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8042,
											"end": 8079,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8134,
											"end": 8138,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8128,
											"end": 8132,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8124,
											"end": 8139,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8116,
											"end": 8139,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8116,
											"end": 8139,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7839,
											"end": 8146,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7839,
											"end": 8146,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7839,
											"end": 8146,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7839,
											"end": 8146,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 8152,
											"end": 8306,
											"name": "tag",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 8152,
											"end": 8306,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8236,
											"end": 8242,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8231,
											"end": 8234,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8226,
											"end": 8229,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8213,
											"end": 8243,
											"name": "CALLDATACOPY",
											"source": 12
										},
										{
											"begin": 8298,
											"end": 8299,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8289,
											"end": 8295,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8284,
											"end": 8287,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8280,
											"end": 8296,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8273,
											"end": 8300,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8152,
											"end": 8306,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8152,
											"end": 8306,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8152,
											"end": 8306,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8152,
											"end": 8306,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 8312,
											"end": 8722,
											"name": "tag",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 8312,
											"end": 8722,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8389,
											"end": 8394,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8414,
											"end": 8479,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "453"
										},
										{
											"begin": 8430,
											"end": 8478,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "454"
										},
										{
											"begin": 8471,
											"end": 8477,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8430,
											"end": 8478,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "319"
										},
										{
											"begin": 8430,
											"end": 8478,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 8430,
											"end": 8478,
											"name": "tag",
											"source": 12,
											"value": "454"
										},
										{
											"begin": 8430,
											"end": 8478,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8414,
											"end": 8479,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 8414,
											"end": 8479,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 8414,
											"end": 8479,
											"name": "tag",
											"source": 12,
											"value": "453"
										},
										{
											"begin": 8414,
											"end": 8479,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8405,
											"end": 8479,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8405,
											"end": 8479,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8502,
											"end": 8508,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8495,
											"end": 8500,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8488,
											"end": 8509,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8540,
											"end": 8544,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8533,
											"end": 8538,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8529,
											"end": 8545,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8578,
											"end": 8581,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8569,
											"end": 8575,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8564,
											"end": 8567,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8560,
											"end": 8576,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8557,
											"end": 8582,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 8554,
											"end": 8666,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8554,
											"end": 8666,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 8554,
											"end": 8666,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8585,
											"end": 8664,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 8585,
											"end": 8664,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 8585,
											"end": 8664,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 8585,
											"end": 8664,
											"name": "tag",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 8585,
											"end": 8664,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8554,
											"end": 8666,
											"name": "tag",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 8554,
											"end": 8666,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8675,
											"end": 8716,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 8709,
											"end": 8715,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8704,
											"end": 8707,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8699,
											"end": 8702,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8675,
											"end": 8716,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 8675,
											"end": 8716,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 8675,
											"end": 8716,
											"name": "tag",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 8675,
											"end": 8716,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8395,
											"end": 8722,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8312,
											"end": 8722,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 8312,
											"end": 8722,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8312,
											"end": 8722,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8312,
											"end": 8722,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8312,
											"end": 8722,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8312,
											"end": 8722,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 8741,
											"end": 9079,
											"name": "tag",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 8741,
											"end": 9079,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8796,
											"end": 8801,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8845,
											"end": 8848,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8838,
											"end": 8842,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 8830,
											"end": 8836,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8826,
											"end": 8843,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8822,
											"end": 8849,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 8812,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 8812,
											"end": 8934,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8853,
											"end": 8932,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "460"
										},
										{
											"begin": 8853,
											"end": 8932,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "315"
										},
										{
											"begin": 8853,
											"end": 8932,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 8853,
											"end": 8932,
											"name": "tag",
											"source": 12,
											"value": "460"
										},
										{
											"begin": 8853,
											"end": 8932,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8812,
											"end": 8934,
											"name": "tag",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 8812,
											"end": 8934,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8970,
											"end": 8976,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8957,
											"end": 8977,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 8995,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "461"
										},
										{
											"begin": 9069,
											"end": 9072,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9061,
											"end": 9067,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9054,
											"end": 9058,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9046,
											"end": 9052,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 9042,
											"end": 9059,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8995,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 8995,
											"end": 9073,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 8995,
											"end": 9073,
											"name": "tag",
											"source": 12,
											"value": "461"
										},
										{
											"begin": 8995,
											"end": 9073,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8986,
											"end": 9073,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8986,
											"end": 9073,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8802,
											"end": 9079,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8741,
											"end": 9079,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8741,
											"end": 9079,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8741,
											"end": 9079,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8741,
											"end": 9079,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8741,
											"end": 9079,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "tag",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9180,
											"end": 9186,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9188,
											"end": 9194,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9196,
											"end": 9202,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9204,
											"end": 9210,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9253,
											"end": 9256,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 9241,
											"end": 9250,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9232,
											"end": 9239,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 9228,
											"end": 9251,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9224,
											"end": 9257,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 9221,
											"end": 9341,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9221,
											"end": 9341,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "463"
										},
										{
											"begin": 9221,
											"end": 9341,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9260,
											"end": 9339,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "464"
										},
										{
											"begin": 9260,
											"end": 9339,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 9260,
											"end": 9339,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 9260,
											"end": 9339,
											"name": "tag",
											"source": 12,
											"value": "464"
										},
										{
											"begin": 9260,
											"end": 9339,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9221,
											"end": 9341,
											"name": "tag",
											"source": 12,
											"value": "463"
										},
										{
											"begin": 9221,
											"end": 9341,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9380,
											"end": 9381,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9405,
											"end": 9458,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "465"
										},
										{
											"begin": 9450,
											"end": 9457,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 9441,
											"end": 9447,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9430,
											"end": 9439,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 9426,
											"end": 9448,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9405,
											"end": 9458,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "311"
										},
										{
											"begin": 9405,
											"end": 9458,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 9405,
											"end": 9458,
											"name": "tag",
											"source": 12,
											"value": "465"
										},
										{
											"begin": 9405,
											"end": 9458,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9395,
											"end": 9458,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 9395,
											"end": 9458,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9351,
											"end": 9468,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9507,
											"end": 9509,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9533,
											"end": 9586,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "466"
										},
										{
											"begin": 9578,
											"end": 9585,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 9569,
											"end": 9575,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9558,
											"end": 9567,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 9554,
											"end": 9576,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9533,
											"end": 9586,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "311"
										},
										{
											"begin": 9533,
											"end": 9586,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 9533,
											"end": 9586,
											"name": "tag",
											"source": 12,
											"value": "466"
										},
										{
											"begin": 9533,
											"end": 9586,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9523,
											"end": 9586,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 9523,
											"end": 9586,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9478,
											"end": 9596,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9637,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9661,
											"end": 9714,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "467"
										},
										{
											"begin": 9706,
											"end": 9713,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 9697,
											"end": 9703,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9686,
											"end": 9695,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 9682,
											"end": 9704,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9661,
											"end": 9714,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 9661,
											"end": 9714,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 9661,
											"end": 9714,
											"name": "tag",
											"source": 12,
											"value": "467"
										},
										{
											"begin": 9661,
											"end": 9714,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9651,
											"end": 9714,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9651,
											"end": 9714,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9606,
											"end": 9724,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9791,
											"end": 9793,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 9780,
											"end": 9789,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9776,
											"end": 9794,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9763,
											"end": 9795,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 9822,
											"end": 9840,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9814,
											"end": 9820,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9811,
											"end": 9841,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 9808,
											"end": 9925,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9808,
											"end": 9925,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "468"
										},
										{
											"begin": 9808,
											"end": 9925,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9844,
											"end": 9923,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "469"
										},
										{
											"begin": 9844,
											"end": 9923,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 9844,
											"end": 9923,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 9844,
											"end": 9923,
											"name": "tag",
											"source": 12,
											"value": "469"
										},
										{
											"begin": 9844,
											"end": 9923,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9808,
											"end": 9925,
											"name": "tag",
											"source": 12,
											"value": "468"
										},
										{
											"begin": 9808,
											"end": 9925,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9949,
											"end": 10011,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "470"
										},
										{
											"begin": 10003,
											"end": 10010,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 9994,
											"end": 10000,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9983,
											"end": 9992,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 9979,
											"end": 10001,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9949,
											"end": 10011,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 9949,
											"end": 10011,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 9949,
											"end": 10011,
											"name": "tag",
											"source": 12,
											"value": "470"
										},
										{
											"begin": 9949,
											"end": 10011,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9939,
											"end": 10011,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9939,
											"end": 10011,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9734,
											"end": 10021,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 10034,
											"end": 10508,
											"name": "tag",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 10034,
											"end": 10508,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10102,
											"end": 10108,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10110,
											"end": 10116,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10159,
											"end": 10161,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10147,
											"end": 10156,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10138,
											"end": 10145,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10134,
											"end": 10157,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10130,
											"end": 10162,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 10127,
											"end": 10246,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10127,
											"end": 10246,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "472"
										},
										{
											"begin": 10127,
											"end": 10246,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10165,
											"end": 10244,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 10165,
											"end": 10244,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 10165,
											"end": 10244,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 10165,
											"end": 10244,
											"name": "tag",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 10165,
											"end": 10244,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10127,
											"end": 10246,
											"name": "tag",
											"source": 12,
											"value": "472"
										},
										{
											"begin": 10127,
											"end": 10246,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10285,
											"end": 10286,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10310,
											"end": 10363,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "474"
										},
										{
											"begin": 10355,
											"end": 10362,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10346,
											"end": 10352,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10335,
											"end": 10344,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 10331,
											"end": 10353,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10310,
											"end": 10363,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "311"
										},
										{
											"begin": 10310,
											"end": 10363,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 10310,
											"end": 10363,
											"name": "tag",
											"source": 12,
											"value": "474"
										},
										{
											"begin": 10310,
											"end": 10363,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10300,
											"end": 10363,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10300,
											"end": 10363,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10256,
											"end": 10373,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10412,
											"end": 10414,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10438,
											"end": 10491,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "475"
										},
										{
											"begin": 10483,
											"end": 10490,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10474,
											"end": 10480,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10463,
											"end": 10472,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 10459,
											"end": 10481,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10438,
											"end": 10491,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "311"
										},
										{
											"begin": 10438,
											"end": 10491,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 10438,
											"end": 10491,
											"name": "tag",
											"source": 12,
											"value": "475"
										},
										{
											"begin": 10438,
											"end": 10491,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10428,
											"end": 10491,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10428,
											"end": 10491,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10383,
											"end": 10501,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10034,
											"end": 10508,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10034,
											"end": 10508,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10034,
											"end": 10508,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10034,
											"end": 10508,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10034,
											"end": 10508,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10034,
											"end": 10508,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 10514,
											"end": 10694,
											"name": "tag",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 10514,
											"end": 10694,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10562,
											"end": 10639,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10559,
											"end": 10560,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10552,
											"end": 10640,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10659,
											"end": 10663,
											"name": "PUSH",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 10656,
											"end": 10657,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 10649,
											"end": 10664,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10683,
											"end": 10687,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 10680,
											"end": 10681,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10673,
											"end": 10688,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 10700,
											"end": 11020,
											"name": "tag",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 10700,
											"end": 11020,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10744,
											"end": 10750,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10781,
											"end": 10782,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 10775,
											"end": 10779,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10771,
											"end": 10783,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 10761,
											"end": 10783,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10761,
											"end": 10783,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10828,
											"end": 10829,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 10822,
											"end": 10826,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10818,
											"end": 10830,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10849,
											"end": 10867,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10839,
											"end": 10920,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "478"
										},
										{
											"begin": 10839,
											"end": 10920,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10905,
											"end": 10909,
											"name": "PUSH",
											"source": 12,
											"value": "7F"
										},
										{
											"begin": 10897,
											"end": 10903,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10893,
											"end": 10910,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10883,
											"end": 10910,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10883,
											"end": 10910,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10839,
											"end": 10920,
											"name": "tag",
											"source": 12,
											"value": "478"
										},
										{
											"begin": 10839,
											"end": 10920,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10967,
											"end": 10969,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10959,
											"end": 10965,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10956,
											"end": 10970,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 10936,
											"end": 10954,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10933,
											"end": 10971,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 10930,
											"end": 11014,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10930,
											"end": 11014,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "479"
										},
										{
											"begin": 10930,
											"end": 11014,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10986,
											"end": 11004,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "480"
										},
										{
											"begin": 10986,
											"end": 11004,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 10986,
											"end": 11004,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 10986,
											"end": 11004,
											"name": "tag",
											"source": 12,
											"value": "480"
										},
										{
											"begin": 10986,
											"end": 11004,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10930,
											"end": 11014,
											"name": "tag",
											"source": 12,
											"value": "479"
										},
										{
											"begin": 10930,
											"end": 11014,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10751,
											"end": 11020,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10700,
											"end": 11020,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10700,
											"end": 11020,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10700,
											"end": 11020,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10700,
											"end": 11020,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 11026,
											"end": 11246,
											"name": "tag",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 11026,
											"end": 11246,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11166,
											"end": 11200,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
										},
										{
											"begin": 11162,
											"end": 11163,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11154,
											"end": 11160,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11150,
											"end": 11164,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11143,
											"end": 11201,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11235,
											"end": 11238,
											"name": "PUSH",
											"source": 12,
											"value": "7200000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11230,
											"end": 11232,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11222,
											"end": 11228,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11218,
											"end": 11233,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11211,
											"end": 11239,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11026,
											"end": 11246,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11026,
											"end": 11246,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 11252,
											"end": 11618,
											"name": "tag",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 11252,
											"end": 11618,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11394,
											"end": 11397,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11415,
											"end": 11482,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "483"
										},
										{
											"begin": 11479,
											"end": 11481,
											"name": "PUSH",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 11474,
											"end": 11477,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11415,
											"end": 11482,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 11415,
											"end": 11482,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 11415,
											"end": 11482,
											"name": "tag",
											"source": 12,
											"value": "483"
										},
										{
											"begin": 11415,
											"end": 11482,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11408,
											"end": 11482,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11408,
											"end": 11482,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11491,
											"end": 11584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 11580,
											"end": 11583,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11491,
											"end": 11584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 11491,
											"end": 11584,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 11491,
											"end": 11584,
											"name": "tag",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 11491,
											"end": 11584,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11609,
											"end": 11611,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 11604,
											"end": 11607,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11600,
											"end": 11612,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11593,
											"end": 11612,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11593,
											"end": 11612,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11252,
											"end": 11618,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11252,
											"end": 11618,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11252,
											"end": 11618,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11252,
											"end": 11618,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 11624,
											"end": 12043,
											"name": "tag",
											"source": 12,
											"value": "106"
										},
										{
											"begin": 11624,
											"end": 12043,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11790,
											"end": 11794,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11828,
											"end": 11830,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11817,
											"end": 11826,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11813,
											"end": 11831,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11805,
											"end": 11831,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11805,
											"end": 11831,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11877,
											"end": 11886,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11871,
											"end": 11875,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11867,
											"end": 11887,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 11863,
											"end": 11864,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11852,
											"end": 11861,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11848,
											"end": 11865,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11841,
											"end": 11888,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11905,
											"end": 12036,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "486"
										},
										{
											"begin": 12031,
											"end": 12035,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11905,
											"end": 12036,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 11905,
											"end": 12036,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 11905,
											"end": 12036,
											"name": "tag",
											"source": 12,
											"value": "486"
										},
										{
											"begin": 11905,
											"end": 12036,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11897,
											"end": 12036,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11897,
											"end": 12036,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11624,
											"end": 12043,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11624,
											"end": 12043,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11624,
											"end": 12043,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11624,
											"end": 12043,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 12049,
											"end": 12297,
											"name": "tag",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 12049,
											"end": 12297,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12189,
											"end": 12223,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F"
										},
										{
											"begin": 12185,
											"end": 12186,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12177,
											"end": 12183,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12173,
											"end": 12187,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12166,
											"end": 12224,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12258,
											"end": 12289,
											"name": "PUSH",
											"source": 12,
											"value": "6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000"
										},
										{
											"begin": 12253,
											"end": 12255,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12245,
											"end": 12251,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12241,
											"end": 12256,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12234,
											"end": 12290,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12049,
											"end": 12297,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12049,
											"end": 12297,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 12303,
											"end": 12669,
											"name": "tag",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 12303,
											"end": 12669,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12445,
											"end": 12448,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12466,
											"end": 12533,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "489"
										},
										{
											"begin": 12530,
											"end": 12532,
											"name": "PUSH",
											"source": 12,
											"value": "3D"
										},
										{
											"begin": 12525,
											"end": 12528,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12466,
											"end": 12533,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 12466,
											"end": 12533,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 12466,
											"end": 12533,
											"name": "tag",
											"source": 12,
											"value": "489"
										},
										{
											"begin": 12466,
											"end": 12533,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12459,
											"end": 12533,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12459,
											"end": 12533,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12542,
											"end": 12635,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 12631,
											"end": 12634,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12542,
											"end": 12635,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 12542,
											"end": 12635,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 12542,
											"end": 12635,
											"name": "tag",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 12542,
											"end": 12635,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12660,
											"end": 12662,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 12655,
											"end": 12658,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12651,
											"end": 12663,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12644,
											"end": 12663,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12644,
											"end": 12663,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12303,
											"end": 12669,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12303,
											"end": 12669,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12303,
											"end": 12669,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12303,
											"end": 12669,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 12675,
											"end": 13094,
											"name": "tag",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 12675,
											"end": 13094,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12841,
											"end": 12845,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12879,
											"end": 12881,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12868,
											"end": 12877,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12864,
											"end": 12882,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12856,
											"end": 12882,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12856,
											"end": 12882,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12928,
											"end": 12937,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12922,
											"end": 12926,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12918,
											"end": 12938,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 12914,
											"end": 12915,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12903,
											"end": 12912,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12899,
											"end": 12916,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12892,
											"end": 12939,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12956,
											"end": 13087,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "492"
										},
										{
											"begin": 13082,
											"end": 13086,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12956,
											"end": 13087,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 12956,
											"end": 13087,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 12956,
											"end": 13087,
											"name": "tag",
											"source": 12,
											"value": "492"
										},
										{
											"begin": 12956,
											"end": 13087,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12948,
											"end": 13087,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12948,
											"end": 13087,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12675,
											"end": 13094,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12675,
											"end": 13094,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12675,
											"end": 13094,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12675,
											"end": 13094,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 13100,
											"end": 13332,
											"name": "tag",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 13100,
											"end": 13332,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13240,
											"end": 13274,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65"
										},
										{
											"begin": 13236,
											"end": 13237,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13228,
											"end": 13234,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13224,
											"end": 13238,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13217,
											"end": 13275,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13309,
											"end": 13324,
											"name": "PUSH",
											"source": 12,
											"value": "72206F7220617070726F76656400000000000000000000000000000000000000"
										},
										{
											"begin": 13304,
											"end": 13306,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13296,
											"end": 13302,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13292,
											"end": 13307,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13285,
											"end": 13325,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13100,
											"end": 13332,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13100,
											"end": 13332,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 13338,
											"end": 13704,
											"name": "tag",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 13338,
											"end": 13704,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13480,
											"end": 13483,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13501,
											"end": 13568,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "495"
										},
										{
											"begin": 13565,
											"end": 13567,
											"name": "PUSH",
											"source": 12,
											"value": "2D"
										},
										{
											"begin": 13560,
											"end": 13563,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13501,
											"end": 13568,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 13501,
											"end": 13568,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 13501,
											"end": 13568,
											"name": "tag",
											"source": 12,
											"value": "495"
										},
										{
											"begin": 13501,
											"end": 13568,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13494,
											"end": 13568,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13494,
											"end": 13568,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13577,
											"end": 13670,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "496"
										},
										{
											"begin": 13666,
											"end": 13669,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13577,
											"end": 13670,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 13577,
											"end": 13670,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 13577,
											"end": 13670,
											"name": "tag",
											"source": 12,
											"value": "496"
										},
										{
											"begin": 13577,
											"end": 13670,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13695,
											"end": 13697,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 13690,
											"end": 13693,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13686,
											"end": 13698,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13679,
											"end": 13698,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13679,
											"end": 13698,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13338,
											"end": 13704,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13338,
											"end": 13704,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13338,
											"end": 13704,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13338,
											"end": 13704,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 13710,
											"end": 14129,
											"name": "tag",
											"source": 12,
											"value": "123"
										},
										{
											"begin": 13710,
											"end": 14129,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13876,
											"end": 13880,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13914,
											"end": 13916,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13903,
											"end": 13912,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13899,
											"end": 13917,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13891,
											"end": 13917,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13891,
											"end": 13917,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13963,
											"end": 13972,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13957,
											"end": 13961,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13953,
											"end": 13973,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 13949,
											"end": 13950,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13938,
											"end": 13947,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13934,
											"end": 13951,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13927,
											"end": 13974,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13991,
											"end": 14122,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "498"
										},
										{
											"begin": 14117,
											"end": 14121,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13991,
											"end": 14122,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 13991,
											"end": 14122,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 13991,
											"end": 14122,
											"name": "tag",
											"source": 12,
											"value": "498"
										},
										{
											"begin": 13991,
											"end": 14122,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13983,
											"end": 14122,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13983,
											"end": 14122,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13710,
											"end": 14129,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13710,
											"end": 14129,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13710,
											"end": 14129,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13710,
											"end": 14129,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 14135,
											"end": 14309,
											"name": "tag",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 14135,
											"end": 14309,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14275,
											"end": 14301,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732313A20696E76616C696420746F6B656E2049440000000000000000"
										},
										{
											"begin": 14271,
											"end": 14272,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14263,
											"end": 14269,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14259,
											"end": 14273,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14252,
											"end": 14302,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14135,
											"end": 14309,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14135,
											"end": 14309,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 14315,
											"end": 14681,
											"name": "tag",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 14315,
											"end": 14681,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14457,
											"end": 14460,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14478,
											"end": 14545,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "501"
										},
										{
											"begin": 14542,
											"end": 14544,
											"name": "PUSH",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 14537,
											"end": 14540,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14478,
											"end": 14545,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 14478,
											"end": 14545,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 14478,
											"end": 14545,
											"name": "tag",
											"source": 12,
											"value": "501"
										},
										{
											"begin": 14478,
											"end": 14545,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14471,
											"end": 14545,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14471,
											"end": 14545,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14554,
											"end": 14647,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "502"
										},
										{
											"begin": 14643,
											"end": 14646,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14554,
											"end": 14647,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 14554,
											"end": 14647,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 14554,
											"end": 14647,
											"name": "tag",
											"source": 12,
											"value": "502"
										},
										{
											"begin": 14554,
											"end": 14647,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14672,
											"end": 14674,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14667,
											"end": 14670,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14663,
											"end": 14675,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14656,
											"end": 14675,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14656,
											"end": 14675,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14315,
											"end": 14681,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14315,
											"end": 14681,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14315,
											"end": 14681,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14315,
											"end": 14681,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 14687,
											"end": 15106,
											"name": "tag",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 14687,
											"end": 15106,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14853,
											"end": 14857,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14891,
											"end": 14893,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14880,
											"end": 14889,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14876,
											"end": 14894,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14868,
											"end": 14894,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14868,
											"end": 14894,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14940,
											"end": 14949,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14934,
											"end": 14938,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14930,
											"end": 14950,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 14926,
											"end": 14927,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14915,
											"end": 14924,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14911,
											"end": 14928,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14904,
											"end": 14951,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14968,
											"end": 15099,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "504"
										},
										{
											"begin": 15094,
											"end": 15098,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14968,
											"end": 15099,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 14968,
											"end": 15099,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 14968,
											"end": 15099,
											"name": "tag",
											"source": 12,
											"value": "504"
										},
										{
											"begin": 14968,
											"end": 15099,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14960,
											"end": 15099,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14960,
											"end": 15099,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14687,
											"end": 15106,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14687,
											"end": 15106,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14687,
											"end": 15106,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14687,
											"end": 15106,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 15112,
											"end": 15282,
											"name": "tag",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 15112,
											"end": 15282,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15252,
											"end": 15274,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732313A2061646472657373207A65726F000000000000000000000000"
										},
										{
											"begin": 15248,
											"end": 15249,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15240,
											"end": 15246,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15236,
											"end": 15250,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15229,
											"end": 15275,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15112,
											"end": 15282,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15112,
											"end": 15282,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 15288,
											"end": 15654,
											"name": "tag",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 15288,
											"end": 15654,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15430,
											"end": 15433,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15451,
											"end": 15518,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "507"
										},
										{
											"begin": 15515,
											"end": 15517,
											"name": "PUSH",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 15510,
											"end": 15513,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15451,
											"end": 15518,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 15451,
											"end": 15518,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 15451,
											"end": 15518,
											"name": "tag",
											"source": 12,
											"value": "507"
										},
										{
											"begin": 15451,
											"end": 15518,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15444,
											"end": 15518,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15444,
											"end": 15518,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15527,
											"end": 15620,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "508"
										},
										{
											"begin": 15616,
											"end": 15619,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15527,
											"end": 15620,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 15527,
											"end": 15620,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 15527,
											"end": 15620,
											"name": "tag",
											"source": 12,
											"value": "508"
										},
										{
											"begin": 15527,
											"end": 15620,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15645,
											"end": 15647,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15640,
											"end": 15643,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15636,
											"end": 15648,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15629,
											"end": 15648,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15629,
											"end": 15648,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15288,
											"end": 15654,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15288,
											"end": 15654,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15288,
											"end": 15654,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15288,
											"end": 15654,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 15660,
											"end": 16079,
											"name": "tag",
											"source": 12,
											"value": "137"
										},
										{
											"begin": 15660,
											"end": 16079,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15826,
											"end": 15830,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15864,
											"end": 15866,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15853,
											"end": 15862,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15849,
											"end": 15867,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15841,
											"end": 15867,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15841,
											"end": 15867,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15913,
											"end": 15922,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15907,
											"end": 15911,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15903,
											"end": 15923,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 15899,
											"end": 15900,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15888,
											"end": 15897,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15884,
											"end": 15901,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15877,
											"end": 15924,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15941,
											"end": 16072,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "510"
										},
										{
											"begin": 16067,
											"end": 16071,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15941,
											"end": 16072,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 15941,
											"end": 16072,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 15941,
											"end": 16072,
											"name": "tag",
											"source": 12,
											"value": "510"
										},
										{
											"begin": 15941,
											"end": 16072,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15933,
											"end": 16072,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15933,
											"end": 16072,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15660,
											"end": 16079,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15660,
											"end": 16079,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15660,
											"end": 16079,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15660,
											"end": 16079,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 16085,
											"end": 16233,
											"name": "tag",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 16085,
											"end": 16233,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16187,
											"end": 16198,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16224,
											"end": 16227,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16209,
											"end": 16227,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16209,
											"end": 16227,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16085,
											"end": 16233,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 16085,
											"end": 16233,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16085,
											"end": 16233,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16085,
											"end": 16233,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16085,
											"end": 16233,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 16239,
											"end": 16616,
											"name": "tag",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 16239,
											"end": 16616,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16345,
											"end": 16348,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16373,
											"end": 16412,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "513"
										},
										{
											"begin": 16406,
											"end": 16411,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16373,
											"end": 16412,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 16373,
											"end": 16412,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 16373,
											"end": 16412,
											"name": "tag",
											"source": 12,
											"value": "513"
										},
										{
											"begin": 16373,
											"end": 16412,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16428,
											"end": 16517,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "514"
										},
										{
											"begin": 16510,
											"end": 16516,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16505,
											"end": 16508,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 16428,
											"end": 16517,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 16428,
											"end": 16517,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 16428,
											"end": 16517,
											"name": "tag",
											"source": 12,
											"value": "514"
										},
										{
											"begin": 16428,
											"end": 16517,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16421,
											"end": 16517,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 16421,
											"end": 16517,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16526,
											"end": 16578,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "515"
										},
										{
											"begin": 16571,
											"end": 16577,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16566,
											"end": 16569,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 16559,
											"end": 16563,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16552,
											"end": 16557,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 16548,
											"end": 16564,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16526,
											"end": 16578,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 16526,
											"end": 16578,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 16526,
											"end": 16578,
											"name": "tag",
											"source": 12,
											"value": "515"
										},
										{
											"begin": 16526,
											"end": 16578,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16603,
											"end": 16609,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 16598,
											"end": 16601,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 16594,
											"end": 16610,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16587,
											"end": 16610,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16587,
											"end": 16610,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16349,
											"end": 16616,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16239,
											"end": 16616,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 16239,
											"end": 16616,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16239,
											"end": 16616,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16239,
											"end": 16616,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16239,
											"end": 16616,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 16622,
											"end": 17057,
											"name": "tag",
											"source": 12,
											"value": "171"
										},
										{
											"begin": 16622,
											"end": 17057,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16802,
											"end": 16805,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16824,
											"end": 16919,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "517"
										},
										{
											"begin": 16915,
											"end": 16918,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16906,
											"end": 16912,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 16824,
											"end": 16919,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 16824,
											"end": 16919,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 16824,
											"end": 16919,
											"name": "tag",
											"source": 12,
											"value": "517"
										},
										{
											"begin": 16824,
											"end": 16919,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16817,
											"end": 16919,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16817,
											"end": 16919,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16936,
											"end": 17031,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "518"
										},
										{
											"begin": 17027,
											"end": 17030,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17018,
											"end": 17024,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 16936,
											"end": 17031,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 16936,
											"end": 17031,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 16936,
											"end": 17031,
											"name": "tag",
											"source": 12,
											"value": "518"
										},
										{
											"begin": 16936,
											"end": 17031,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16929,
											"end": 17031,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16929,
											"end": 17031,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17048,
											"end": 17051,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17041,
											"end": 17051,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17041,
											"end": 17051,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16622,
											"end": 17057,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 16622,
											"end": 17057,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 16622,
											"end": 17057,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16622,
											"end": 17057,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16622,
											"end": 17057,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16622,
											"end": 17057,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 17063,
											"end": 17288,
											"name": "tag",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 17063,
											"end": 17288,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17203,
											"end": 17237,
											"name": "PUSH",
											"source": 12,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 17199,
											"end": 17200,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17191,
											"end": 17197,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17187,
											"end": 17201,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17180,
											"end": 17238,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17272,
											"end": 17280,
											"name": "PUSH",
											"source": 12,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17267,
											"end": 17269,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17259,
											"end": 17265,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17255,
											"end": 17270,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17248,
											"end": 17281,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17063,
											"end": 17288,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17063,
											"end": 17288,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 17294,
											"end": 17660,
											"name": "tag",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 17294,
											"end": 17660,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17436,
											"end": 17439,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17457,
											"end": 17524,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "521"
										},
										{
											"begin": 17521,
											"end": 17523,
											"name": "PUSH",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 17516,
											"end": 17519,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17457,
											"end": 17524,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 17457,
											"end": 17524,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 17457,
											"end": 17524,
											"name": "tag",
											"source": 12,
											"value": "521"
										},
										{
											"begin": 17457,
											"end": 17524,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17450,
											"end": 17524,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17450,
											"end": 17524,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17533,
											"end": 17626,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "522"
										},
										{
											"begin": 17622,
											"end": 17625,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17533,
											"end": 17626,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 17533,
											"end": 17626,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 17533,
											"end": 17626,
											"name": "tag",
											"source": 12,
											"value": "522"
										},
										{
											"begin": 17533,
											"end": 17626,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17651,
											"end": 17653,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 17646,
											"end": 17649,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17642,
											"end": 17654,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17635,
											"end": 17654,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17635,
											"end": 17654,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17294,
											"end": 17660,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17294,
											"end": 17660,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17294,
											"end": 17660,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17294,
											"end": 17660,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 17666,
											"end": 18085,
											"name": "tag",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 17666,
											"end": 18085,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17832,
											"end": 17836,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17870,
											"end": 17872,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17859,
											"end": 17868,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17855,
											"end": 17873,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17847,
											"end": 17873,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17847,
											"end": 17873,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17919,
											"end": 17928,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17913,
											"end": 17917,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17909,
											"end": 17929,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 17905,
											"end": 17906,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17894,
											"end": 17903,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17890,
											"end": 17907,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17883,
											"end": 17930,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17947,
											"end": 18078,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "524"
										},
										{
											"begin": 18073,
											"end": 18077,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17947,
											"end": 18078,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 17947,
											"end": 18078,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 17947,
											"end": 18078,
											"name": "tag",
											"source": 12,
											"value": "524"
										},
										{
											"begin": 17947,
											"end": 18078,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17939,
											"end": 18078,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17939,
											"end": 18078,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17666,
											"end": 18085,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17666,
											"end": 18085,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17666,
											"end": 18085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17666,
											"end": 18085,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 18091,
											"end": 18315,
											"name": "tag",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 18091,
											"end": 18315,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18231,
											"end": 18265,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732313A207472616E736665722066726F6D20696E636F727265637420"
										},
										{
											"begin": 18227,
											"end": 18228,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18219,
											"end": 18225,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18215,
											"end": 18229,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18208,
											"end": 18266,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18300,
											"end": 18307,
											"name": "PUSH",
											"source": 12,
											"value": "6F776E6572000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18295,
											"end": 18297,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 18287,
											"end": 18293,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18283,
											"end": 18298,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18276,
											"end": 18308,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18091,
											"end": 18315,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18091,
											"end": 18315,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 18321,
											"end": 18687,
											"name": "tag",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 18321,
											"end": 18687,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18463,
											"end": 18466,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18484,
											"end": 18551,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "527"
										},
										{
											"begin": 18548,
											"end": 18550,
											"name": "PUSH",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 18543,
											"end": 18546,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18484,
											"end": 18551,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 18484,
											"end": 18551,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 18484,
											"end": 18551,
											"name": "tag",
											"source": 12,
											"value": "527"
										},
										{
											"begin": 18484,
											"end": 18551,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18477,
											"end": 18551,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18477,
											"end": 18551,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18560,
											"end": 18653,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "528"
										},
										{
											"begin": 18649,
											"end": 18652,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18560,
											"end": 18653,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 18560,
											"end": 18653,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 18560,
											"end": 18653,
											"name": "tag",
											"source": 12,
											"value": "528"
										},
										{
											"begin": 18560,
											"end": 18653,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18678,
											"end": 18680,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 18673,
											"end": 18676,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18669,
											"end": 18681,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18662,
											"end": 18681,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18662,
											"end": 18681,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18321,
											"end": 18687,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18321,
											"end": 18687,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18321,
											"end": 18687,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18321,
											"end": 18687,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 18693,
											"end": 19112,
											"name": "tag",
											"source": 12,
											"value": "199"
										},
										{
											"begin": 18693,
											"end": 19112,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18859,
											"end": 18863,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18897,
											"end": 18899,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 18886,
											"end": 18895,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18882,
											"end": 18900,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18874,
											"end": 18900,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18874,
											"end": 18900,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18946,
											"end": 18955,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18940,
											"end": 18944,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18936,
											"end": 18956,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 18932,
											"end": 18933,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18921,
											"end": 18930,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18917,
											"end": 18934,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18910,
											"end": 18957,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18974,
											"end": 19105,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "530"
										},
										{
											"begin": 19100,
											"end": 19104,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18974,
											"end": 19105,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 18974,
											"end": 19105,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 18974,
											"end": 19105,
											"name": "tag",
											"source": 12,
											"value": "530"
										},
										{
											"begin": 18974,
											"end": 19105,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18966,
											"end": 19105,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18966,
											"end": 19105,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18693,
											"end": 19112,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18693,
											"end": 19112,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18693,
											"end": 19112,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18693,
											"end": 19112,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 19118,
											"end": 19341,
											"name": "tag",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 19118,
											"end": 19341,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19258,
											"end": 19292,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732313A207472616E7366657220746F20746865207A65726F20616464"
										},
										{
											"begin": 19254,
											"end": 19255,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19246,
											"end": 19252,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19242,
											"end": 19256,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19235,
											"end": 19293,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19327,
											"end": 19333,
											"name": "PUSH",
											"source": 12,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19322,
											"end": 19324,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 19314,
											"end": 19320,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19310,
											"end": 19325,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19303,
											"end": 19334,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19118,
											"end": 19341,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19118,
											"end": 19341,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 19347,
											"end": 19713,
											"name": "tag",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 19347,
											"end": 19713,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19489,
											"end": 19492,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19510,
											"end": 19577,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "533"
										},
										{
											"begin": 19574,
											"end": 19576,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 19569,
											"end": 19572,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19510,
											"end": 19577,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 19510,
											"end": 19577,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 19510,
											"end": 19577,
											"name": "tag",
											"source": 12,
											"value": "533"
										},
										{
											"begin": 19510,
											"end": 19577,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19503,
											"end": 19577,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19503,
											"end": 19577,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19586,
											"end": 19679,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "534"
										},
										{
											"begin": 19675,
											"end": 19678,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19586,
											"end": 19679,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 19586,
											"end": 19679,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 19586,
											"end": 19679,
											"name": "tag",
											"source": 12,
											"value": "534"
										},
										{
											"begin": 19586,
											"end": 19679,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19704,
											"end": 19706,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 19699,
											"end": 19702,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19695,
											"end": 19707,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19688,
											"end": 19707,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19688,
											"end": 19707,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19347,
											"end": 19713,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19347,
											"end": 19713,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19347,
											"end": 19713,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19347,
											"end": 19713,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 19719,
											"end": 20138,
											"name": "tag",
											"source": 12,
											"value": "202"
										},
										{
											"begin": 19719,
											"end": 20138,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19885,
											"end": 19889,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19923,
											"end": 19925,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 19912,
											"end": 19921,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19908,
											"end": 19926,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19900,
											"end": 19926,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19900,
											"end": 19926,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19972,
											"end": 19981,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19966,
											"end": 19970,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19962,
											"end": 19982,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 19958,
											"end": 19959,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19947,
											"end": 19956,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19943,
											"end": 19960,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19936,
											"end": 19983,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 20000,
											"end": 20131,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "536"
										},
										{
											"begin": 20126,
											"end": 20130,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20000,
											"end": 20131,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 20000,
											"end": 20131,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 20000,
											"end": 20131,
											"name": "tag",
											"source": 12,
											"value": "536"
										},
										{
											"begin": 20000,
											"end": 20131,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19992,
											"end": 20131,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19992,
											"end": 20131,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19719,
											"end": 20138,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19719,
											"end": 20138,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19719,
											"end": 20138,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19719,
											"end": 20138,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 20144,
											"end": 20326,
											"name": "tag",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 20144,
											"end": 20326,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20284,
											"end": 20318,
											"name": "PUSH",
											"source": 12,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 20280,
											"end": 20281,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20272,
											"end": 20278,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20268,
											"end": 20282,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20261,
											"end": 20319,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 20144,
											"end": 20326,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20144,
											"end": 20326,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 20332,
											"end": 20698,
											"name": "tag",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 20332,
											"end": 20698,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20474,
											"end": 20477,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20495,
											"end": 20562,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "539"
										},
										{
											"begin": 20559,
											"end": 20561,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 20554,
											"end": 20557,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 20495,
											"end": 20562,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 20495,
											"end": 20562,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 20495,
											"end": 20562,
											"name": "tag",
											"source": 12,
											"value": "539"
										},
										{
											"begin": 20495,
											"end": 20562,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20488,
											"end": 20562,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20488,
											"end": 20562,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20571,
											"end": 20664,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "540"
										},
										{
											"begin": 20660,
											"end": 20663,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20571,
											"end": 20664,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 20571,
											"end": 20664,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 20571,
											"end": 20664,
											"name": "tag",
											"source": 12,
											"value": "540"
										},
										{
											"begin": 20571,
											"end": 20664,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20689,
											"end": 20691,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 20684,
											"end": 20687,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20680,
											"end": 20692,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20673,
											"end": 20692,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20673,
											"end": 20692,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20332,
											"end": 20698,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20332,
											"end": 20698,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20332,
											"end": 20698,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20332,
											"end": 20698,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 20704,
											"end": 21123,
											"name": "tag",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 20704,
											"end": 21123,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20870,
											"end": 20874,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20908,
											"end": 20910,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 20897,
											"end": 20906,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20893,
											"end": 20911,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20885,
											"end": 20911,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20885,
											"end": 20911,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20957,
											"end": 20966,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20951,
											"end": 20955,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20947,
											"end": 20967,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 20943,
											"end": 20944,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20932,
											"end": 20941,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 20928,
											"end": 20945,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20921,
											"end": 20968,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 20985,
											"end": 21116,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "542"
										},
										{
											"begin": 21111,
											"end": 21115,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20985,
											"end": 21116,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 20985,
											"end": 21116,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 20985,
											"end": 21116,
											"name": "tag",
											"source": 12,
											"value": "542"
										},
										{
											"begin": 20985,
											"end": 21116,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20977,
											"end": 21116,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20977,
											"end": 21116,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20704,
											"end": 21123,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20704,
											"end": 21123,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20704,
											"end": 21123,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20704,
											"end": 21123,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 21129,
											"end": 21304,
											"name": "tag",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 21129,
											"end": 21304,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21269,
											"end": 21296,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732313A20617070726F766520746F2063616C6C657200000000000000"
										},
										{
											"begin": 21265,
											"end": 21266,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21257,
											"end": 21263,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21253,
											"end": 21267,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21246,
											"end": 21297,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 21129,
											"end": 21304,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21129,
											"end": 21304,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 21310,
											"end": 21676,
											"name": "tag",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 21310,
											"end": 21676,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21452,
											"end": 21455,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21473,
											"end": 21540,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "545"
										},
										{
											"begin": 21537,
											"end": 21539,
											"name": "PUSH",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 21532,
											"end": 21535,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21473,
											"end": 21540,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 21473,
											"end": 21540,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 21473,
											"end": 21540,
											"name": "tag",
											"source": 12,
											"value": "545"
										},
										{
											"begin": 21473,
											"end": 21540,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21466,
											"end": 21540,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21466,
											"end": 21540,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21549,
											"end": 21642,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "546"
										},
										{
											"begin": 21638,
											"end": 21641,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21549,
											"end": 21642,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 21549,
											"end": 21642,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 21549,
											"end": 21642,
											"name": "tag",
											"source": 12,
											"value": "546"
										},
										{
											"begin": 21549,
											"end": 21642,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21667,
											"end": 21669,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 21662,
											"end": 21665,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21658,
											"end": 21670,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21651,
											"end": 21670,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21651,
											"end": 21670,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21310,
											"end": 21676,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21310,
											"end": 21676,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21310,
											"end": 21676,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21310,
											"end": 21676,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 21682,
											"end": 22101,
											"name": "tag",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 21682,
											"end": 22101,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21848,
											"end": 21852,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21886,
											"end": 21888,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 21875,
											"end": 21884,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21871,
											"end": 21889,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21863,
											"end": 21889,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21863,
											"end": 21889,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21935,
											"end": 21944,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21929,
											"end": 21933,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21925,
											"end": 21945,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 21921,
											"end": 21922,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21910,
											"end": 21919,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21906,
											"end": 21923,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21899,
											"end": 21946,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 21963,
											"end": 22094,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "548"
										},
										{
											"begin": 22089,
											"end": 22093,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21963,
											"end": 22094,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 21963,
											"end": 22094,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 21963,
											"end": 22094,
											"name": "tag",
											"source": 12,
											"value": "548"
										},
										{
											"begin": 21963,
											"end": 22094,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21955,
											"end": 22094,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21955,
											"end": 22094,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21682,
											"end": 22101,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21682,
											"end": 22101,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21682,
											"end": 22101,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21682,
											"end": 22101,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 22107,
											"end": 22344,
											"name": "tag",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 22107,
											"end": 22344,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22247,
											"end": 22281,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
										},
										{
											"begin": 22243,
											"end": 22244,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22235,
											"end": 22241,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22231,
											"end": 22245,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22224,
											"end": 22282,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 22316,
											"end": 22336,
											"name": "PUSH",
											"source": 12,
											"value": "63656976657220696D706C656D656E7465720000000000000000000000000000"
										},
										{
											"begin": 22311,
											"end": 22313,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 22303,
											"end": 22309,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22299,
											"end": 22314,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22292,
											"end": 22337,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 22107,
											"end": 22344,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22107,
											"end": 22344,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 22350,
											"end": 22716,
											"name": "tag",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 22350,
											"end": 22716,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22492,
											"end": 22495,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22513,
											"end": 22580,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "551"
										},
										{
											"begin": 22577,
											"end": 22579,
											"name": "PUSH",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 22572,
											"end": 22575,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 22513,
											"end": 22580,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 22513,
											"end": 22580,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 22513,
											"end": 22580,
											"name": "tag",
											"source": 12,
											"value": "551"
										},
										{
											"begin": 22513,
											"end": 22580,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22506,
											"end": 22580,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 22506,
											"end": 22580,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22589,
											"end": 22682,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "552"
										},
										{
											"begin": 22678,
											"end": 22681,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22589,
											"end": 22682,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 22589,
											"end": 22682,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 22589,
											"end": 22682,
											"name": "tag",
											"source": 12,
											"value": "552"
										},
										{
											"begin": 22589,
											"end": 22682,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22707,
											"end": 22709,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 22702,
											"end": 22705,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22698,
											"end": 22710,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22691,
											"end": 22710,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22691,
											"end": 22710,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22350,
											"end": 22716,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 22350,
											"end": 22716,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22350,
											"end": 22716,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22350,
											"end": 22716,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 22722,
											"end": 23141,
											"name": "tag",
											"source": 12,
											"value": "229"
										},
										{
											"begin": 22722,
											"end": 23141,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22888,
											"end": 22892,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22926,
											"end": 22928,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 22915,
											"end": 22924,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22911,
											"end": 22929,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22903,
											"end": 22929,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22903,
											"end": 22929,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22975,
											"end": 22984,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22969,
											"end": 22973,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22965,
											"end": 22985,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 22961,
											"end": 22962,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22950,
											"end": 22959,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 22946,
											"end": 22963,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22939,
											"end": 22986,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 23003,
											"end": 23134,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "554"
										},
										{
											"begin": 23129,
											"end": 23133,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23003,
											"end": 23134,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 23003,
											"end": 23134,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 23003,
											"end": 23134,
											"name": "tag",
											"source": 12,
											"value": "554"
										},
										{
											"begin": 23003,
											"end": 23134,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22995,
											"end": 23134,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22995,
											"end": 23134,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22722,
											"end": 23141,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 22722,
											"end": 23141,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22722,
											"end": 23141,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22722,
											"end": 23141,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 23147,
											"end": 23327,
											"name": "tag",
											"source": 12,
											"value": "242"
										},
										{
											"begin": 23147,
											"end": 23327,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23195,
											"end": 23272,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23192,
											"end": 23193,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23185,
											"end": 23273,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 23292,
											"end": 23296,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 23289,
											"end": 23290,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 23282,
											"end": 23297,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 23316,
											"end": 23320,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 23313,
											"end": 23314,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23306,
											"end": 23321,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 23333,
											"end": 23431,
											"name": "tag",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 23333,
											"end": 23431,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23384,
											"end": 23390,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23418,
											"end": 23423,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23412,
											"end": 23424,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 23402,
											"end": 23424,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23402,
											"end": 23424,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23333,
											"end": 23431,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 23333,
											"end": 23431,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23333,
											"end": 23431,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23333,
											"end": 23431,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 23437,
											"end": 23605,
											"name": "tag",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 23437,
											"end": 23605,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23520,
											"end": 23531,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23554,
											"end": 23560,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23549,
											"end": 23552,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23542,
											"end": 23561,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 23594,
											"end": 23598,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 23589,
											"end": 23592,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23585,
											"end": 23599,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23570,
											"end": 23599,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23570,
											"end": 23599,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23437,
											"end": 23605,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 23437,
											"end": 23605,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 23437,
											"end": 23605,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23437,
											"end": 23605,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23437,
											"end": 23605,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 23611,
											"end": 23971,
											"name": "tag",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 23611,
											"end": 23971,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23697,
											"end": 23700,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23725,
											"end": 23763,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "559"
										},
										{
											"begin": 23757,
											"end": 23762,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23725,
											"end": 23763,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 23725,
											"end": 23763,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 23725,
											"end": 23763,
											"name": "tag",
											"source": 12,
											"value": "559"
										},
										{
											"begin": 23725,
											"end": 23763,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23779,
											"end": 23849,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "560"
										},
										{
											"begin": 23842,
											"end": 23848,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23837,
											"end": 23840,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 23779,
											"end": 23849,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 23779,
											"end": 23849,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 23779,
											"end": 23849,
											"name": "tag",
											"source": 12,
											"value": "560"
										},
										{
											"begin": 23779,
											"end": 23849,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23772,
											"end": 23849,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 23772,
											"end": 23849,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23858,
											"end": 23910,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "561"
										},
										{
											"begin": 23903,
											"end": 23909,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23898,
											"end": 23901,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 23891,
											"end": 23895,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 23884,
											"end": 23889,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 23880,
											"end": 23896,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23858,
											"end": 23910,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 23858,
											"end": 23910,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 23858,
											"end": 23910,
											"name": "tag",
											"source": 12,
											"value": "561"
										},
										{
											"begin": 23858,
											"end": 23910,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23935,
											"end": 23964,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "562"
										},
										{
											"begin": 23957,
											"end": 23963,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23935,
											"end": 23964,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 23935,
											"end": 23964,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 23935,
											"end": 23964,
											"name": "tag",
											"source": 12,
											"value": "562"
										},
										{
											"begin": 23935,
											"end": 23964,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23930,
											"end": 23933,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 23926,
											"end": 23965,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23919,
											"end": 23965,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 23919,
											"end": 23965,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23701,
											"end": 23971,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23611,
											"end": 23971,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 23611,
											"end": 23971,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 23611,
											"end": 23971,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23611,
											"end": 23971,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23611,
											"end": 23971,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 23977,
											"end": 24617,
											"name": "tag",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 23977,
											"end": 24617,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24172,
											"end": 24176,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24210,
											"end": 24213,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 24199,
											"end": 24208,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24195,
											"end": 24214,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24187,
											"end": 24214,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24187,
											"end": 24214,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24224,
											"end": 24295,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "564"
										},
										{
											"begin": 24292,
											"end": 24293,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24281,
											"end": 24290,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 24277,
											"end": 24294,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24268,
											"end": 24274,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 24224,
											"end": 24295,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 24224,
											"end": 24295,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 24224,
											"end": 24295,
											"name": "tag",
											"source": 12,
											"value": "564"
										},
										{
											"begin": 24224,
											"end": 24295,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24305,
											"end": 24377,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "565"
										},
										{
											"begin": 24373,
											"end": 24375,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 24362,
											"end": 24371,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 24358,
											"end": 24376,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24349,
											"end": 24355,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 24305,
											"end": 24377,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 24305,
											"end": 24377,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 24305,
											"end": 24377,
											"name": "tag",
											"source": 12,
											"value": "565"
										},
										{
											"begin": 24305,
											"end": 24377,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24387,
											"end": 24459,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "566"
										},
										{
											"begin": 24455,
											"end": 24457,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 24444,
											"end": 24453,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 24440,
											"end": 24458,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24431,
											"end": 24437,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 24387,
											"end": 24459,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 24387,
											"end": 24459,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 24387,
											"end": 24459,
											"name": "tag",
											"source": 12,
											"value": "566"
										},
										{
											"begin": 24387,
											"end": 24459,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24506,
											"end": 24515,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 24500,
											"end": 24504,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 24496,
											"end": 24516,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 24491,
											"end": 24493,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 24480,
											"end": 24489,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 24476,
											"end": 24494,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24469,
											"end": 24517,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 24534,
											"end": 24610,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "567"
										},
										{
											"begin": 24605,
											"end": 24609,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 24596,
											"end": 24602,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 24534,
											"end": 24610,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 24534,
											"end": 24610,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 24534,
											"end": 24610,
											"name": "tag",
											"source": 12,
											"value": "567"
										},
										{
											"begin": 24534,
											"end": 24610,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24526,
											"end": 24610,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24526,
											"end": 24610,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23977,
											"end": 24617,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 23977,
											"end": 24617,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 23977,
											"end": 24617,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23977,
											"end": 24617,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23977,
											"end": 24617,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23977,
											"end": 24617,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23977,
											"end": 24617,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23977,
											"end": 24617,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 24623,
											"end": 24764,
											"name": "tag",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 24623,
											"end": 24764,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24679,
											"end": 24684,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24710,
											"end": 24716,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 24704,
											"end": 24717,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 24695,
											"end": 24717,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24695,
											"end": 24717,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24726,
											"end": 24758,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "569"
										},
										{
											"begin": 24752,
											"end": 24757,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 24726,
											"end": 24758,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 24726,
											"end": 24758,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 24726,
											"end": 24758,
											"name": "tag",
											"source": 12,
											"value": "569"
										},
										{
											"begin": 24726,
											"end": 24758,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24623,
											"end": 24764,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 24623,
											"end": 24764,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 24623,
											"end": 24764,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24623,
											"end": 24764,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24623,
											"end": 24764,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 24770,
											"end": 25119,
											"name": "tag",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 24770,
											"end": 25119,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24839,
											"end": 24845,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24888,
											"end": 24890,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 24876,
											"end": 24885,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24867,
											"end": 24874,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 24863,
											"end": 24886,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 24859,
											"end": 24891,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 24856,
											"end": 24975,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 24856,
											"end": 24975,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "571"
										},
										{
											"begin": 24856,
											"end": 24975,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 24894,
											"end": 24973,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "572"
										},
										{
											"begin": 24894,
											"end": 24973,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 24894,
											"end": 24973,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 24894,
											"end": 24973,
											"name": "tag",
											"source": 12,
											"value": "572"
										},
										{
											"begin": 24894,
											"end": 24973,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24856,
											"end": 24975,
											"name": "tag",
											"source": 12,
											"value": "571"
										},
										{
											"begin": 24856,
											"end": 24975,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25014,
											"end": 25015,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 25039,
											"end": 25102,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "573"
										},
										{
											"begin": 25094,
											"end": 25101,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 25085,
											"end": 25091,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 25074,
											"end": 25083,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 25070,
											"end": 25092,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 25039,
											"end": 25102,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 25039,
											"end": 25102,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 25039,
											"end": 25102,
											"name": "tag",
											"source": 12,
											"value": "573"
										},
										{
											"begin": 25039,
											"end": 25102,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25029,
											"end": 25102,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 25029,
											"end": 25102,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24985,
											"end": 25112,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24770,
											"end": 25119,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 24770,
											"end": 25119,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 24770,
											"end": 25119,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24770,
											"end": 25119,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24770,
											"end": 25119,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"ownerOf(uint256)": "6352211e",
							"renounceOwnership()": "715018a6",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TimeERC721.sol\":\"TimeERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Context.sol\":{\"keccak256\":\"0x5c1036c412bf0d922989a2dda6f47dfa3abf62c0a7acfe2c3b6aef9dacd7d1d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16ada029b695de1ebc91f2be39c2e64b7d61dc9d619708511e2d2316d0617f20\",\"dweb:/ipfs/QmX2WeFsgQu4FfBzbhtqCsQGtqjB5R7Enyfg8qDG3dJUP2\"]},\"contracts/ERC165.sol\":{\"keccak256\":\"0x4615ca265b636fd23ad2948acd2682e54b4084e9cc199e4680b07c9029c3a391\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://31048e93acc6fc656a8fc6e8868df865fa23e42227412fecf26bb8b4d6490f04\",\"dweb:/ipfs/QmbaRsivtFWmdakce6mGoUaBfJyPxTELQ5tP3SoNMbX6KP\"]},\"contracts/Ownable.sol\":{\"keccak256\":\"0x31e94a47c0d562565cdb206e71fcd1d6bdaf29e4e6eeef983bf49325c8cf9161\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ead9bd6dc98dee246c8deb676eb81ee609fa72a19553902fc596c2f3348135e4\",\"dweb:/ipfs/QmauDEeAtCVxUpQafLUPoaPePzcAdvrY9yMi4B7FhLfpDF\"]},\"contracts/TimeERC721.sol\":{\"keccak256\":\"0xd0299f7edefa7bd957092d30b9b43559930b2c146b49dd8b87b40476fcd11fe7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d41f4dc75868151d280d15d4220464d07c1b43b41621b09afb681420c6b6eed\",\"dweb:/ipfs/QmcSSKzHBB2g1NRQBzktTqTTPf1mrgC4gk8ALsBv386Keo\"]},\"interfaces/IERC165.sol\":{\"keccak256\":\"0x7d622aae953af8cc0c42b642ea6bfefc4851d9da99ebf0c11c8a99e1b97dc7ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef936c54bf126d59024eaf04e4a15aa3527c52a27e160d5f93185cf2e47db5e8\",\"dweb:/ipfs/QmQS5yZTHRPGXyJbj1RX9JajLueqN3MTQ6SSvAG9iJQ4cV\"]},\"interfaces/IERC721.sol\":{\"keccak256\":\"0x49d5ef5ec866b921e61b9fd74a17160dc7f7396e2a58c3812fa4936ae7655899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5675c27037dbd9a9d90cf650930c5ed95ee6c62bb8dfcacdc3872eab62ecf50d\",\"dweb:/ipfs/QmYmdBCaUZNiQjc4qnx4avKAWx7QXYiid1nwo76Zq7PdHn\"]},\"interfaces/IERC721Metadata.sol\":{\"keccak256\":\"0xd32870e2a6e19ded14c88a471733a51504aaec5e51b61be8f57469cc67440f2b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe79f6298aa790c064e9aec4ded31cdb32d5de372b3fcda66035a9c6b3780331\",\"dweb:/ipfs/QmWvVNwdFao6264NR63yHgKH4LcYqYjJDq9SZ7GqKVRJFx\"]},\"interfaces/IERC721Receiver.sol\":{\"keccak256\":\"0xd669818e4d77be24bc391f00146315479826edff54e6791b92508bf7f4147791\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ab4b52e2db524224473b3e62999634b2adf7d6e6fe00c34a6f57d562619a251\",\"dweb:/ipfs/QmaHFCwJtUDXoyLfV1KyDoFAAti1UgSqS8pQWZMFYZv2wu\"]},\"libraries/Address.sol\":{\"keccak256\":\"0x0f4169fea1817f1228f6a2db5e764e2a86f357a9f42f83de1f157449bca0f1ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://244a3f17ec48680bfaadacf724e5b12030636dc8b3e59f01de1cf206f0802ad7\",\"dweb:/ipfs/QmZXNxyUx2vm7LjcwtNhwYyKgqVxmbMAM3cG5bricBmL1K\"]},\"libraries/Math.sol\":{\"keccak256\":\"0xb8b8236795b4713101dbe4fea88037f20cff3fe21ebde0ec96d8862a1462e67d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6279d1ec255977f2c21b7ff73745bde2db91a297f2e90ddb8a3be86589294ed\",\"dweb:/ipfs/QmfJo1qC43VeyZdHiCBbQxySqufkVdRwWQtzbndv1BSRux\"]},\"libraries/SignedMath.sol\":{\"keccak256\":\"0x6e5b78ca933d7f644517832ed7a8c4399ca8f5b2e7c813e7ffaa17a045b3d956\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53469082eb094366b54f0fb9f3f60feaced3013039e1931582531c6fbefe92ce\",\"dweb:/ipfs/Qmdj8qrQdToqbXydef71akHQCDKifDQ3dneEyxX2vG2BNs\"]},\"libraries/Strings.sol\":{\"keccak256\":\"0xbfe48783f884b92c7db6c32be2b92851bbbb7c2b1530cfdd2f47fc0cc8a5f322\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5523b8a23f6b8ec4c30bd0b53bdc8408d80166588e3354c7c7de8016d88beb60\",\"dweb:/ipfs/QmfVg2x6iyijH3YQFxpoci3og2JKAPMcPNjViHPGzZQWNS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 61,
								"contract": "contracts/TimeERC721.sol:TimeERC721",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 194,
								"contract": "contracts/TimeERC721.sol:TimeERC721",
								"label": "_name",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 196,
								"contract": "contracts/TimeERC721.sol:TimeERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 200,
								"contract": "contracts/TimeERC721.sol:TimeERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 204,
								"contract": "contracts/TimeERC721.sol:TimeERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 208,
								"contract": "contracts/TimeERC721.sol:TimeERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 214,
								"contract": "contracts/TimeERC721.sol:TimeERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interfaces/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/IERC165.sol\":{\"keccak256\":\"0x7d622aae953af8cc0c42b642ea6bfefc4851d9da99ebf0c11c8a99e1b97dc7ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef936c54bf126d59024eaf04e4a15aa3527c52a27e160d5f93185cf2e47db5e8\",\"dweb:/ipfs/QmQS5yZTHRPGXyJbj1RX9JajLueqN3MTQ6SSvAG9iJQ4cV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interfaces/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/IERC165.sol\":{\"keccak256\":\"0x7d622aae953af8cc0c42b642ea6bfefc4851d9da99ebf0c11c8a99e1b97dc7ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef936c54bf126d59024eaf04e4a15aa3527c52a27e160d5f93185cf2e47db5e8\",\"dweb:/ipfs/QmQS5yZTHRPGXyJbj1RX9JajLueqN3MTQ6SSvAG9iJQ4cV\"]},\"interfaces/IERC721.sol\":{\"keccak256\":\"0x49d5ef5ec866b921e61b9fd74a17160dc7f7396e2a58c3812fa4936ae7655899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5675c27037dbd9a9d90cf650930c5ed95ee6c62bb8dfcacdc3872eab62ecf50d\",\"dweb:/ipfs/QmYmdBCaUZNiQjc4qnx4avKAWx7QXYiid1nwo76Zq7PdHn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interfaces/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/IERC165.sol\":{\"keccak256\":\"0x7d622aae953af8cc0c42b642ea6bfefc4851d9da99ebf0c11c8a99e1b97dc7ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef936c54bf126d59024eaf04e4a15aa3527c52a27e160d5f93185cf2e47db5e8\",\"dweb:/ipfs/QmQS5yZTHRPGXyJbj1RX9JajLueqN3MTQ6SSvAG9iJQ4cV\"]},\"interfaces/IERC721.sol\":{\"keccak256\":\"0x49d5ef5ec866b921e61b9fd74a17160dc7f7396e2a58c3812fa4936ae7655899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5675c27037dbd9a9d90cf650930c5ed95ee6c62bb8dfcacdc3872eab62ecf50d\",\"dweb:/ipfs/QmYmdBCaUZNiQjc4qnx4avKAWx7QXYiid1nwo76Zq7PdHn\"]},\"interfaces/IERC721Metadata.sol\":{\"keccak256\":\"0xd32870e2a6e19ded14c88a471733a51504aaec5e51b61be8f57469cc67440f2b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe79f6298aa790c064e9aec4ded31cdb32d5de372b3fcda66035a9c6b3780331\",\"dweb:/ipfs/QmWvVNwdFao6264NR63yHgKH4LcYqYjJDq9SZ7GqKVRJFx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interfaces/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/IERC721Receiver.sol\":{\"keccak256\":\"0xd669818e4d77be24bc391f00146315479826edff54e6791b92508bf7f4147791\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ab4b52e2db524224473b3e62999634b2adf7d6e6fe00c34a6f57d562619a251\",\"dweb:/ipfs/QmaHFCwJtUDXoyLfV1KyDoFAAti1UgSqS8pQWZMFYZv2wu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"libraries/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"libraries/Address.sol\":203:9607  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"libraries/Address.sol\":203:9607  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122062904bdf8e832dde7d8c0407890cb164073063eaf4608ae345276dba0354bc8464736f6c63430008090033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122062904bdf8e832dde7d8c0407890cb164073063eaf4608ae345276dba0354bc8464736f6c63430008090033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH3 0x904BDF DUP15 DUP4 0x2D 0xDE PUSH30 0x8C0407890CB164073063EAF4608AE345276DBA0354BC8464736F6C634300 ADDMOD MULMOD STOP CALLER ",
							"sourceMap": "203:9404:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122062904bdf8e832dde7d8c0407890cb164073063eaf4608ae345276dba0354bc8464736f6c63430008090033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH3 0x904BDF DUP15 DUP4 0x2D 0xDE PUSH30 0x8C0407890CB164073063EAF4608AE345276DBA0354BC8464736F6C634300 ADDMOD MULMOD STOP CALLER ",
							"sourceMap": "203:9404:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 9607,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122062904bdf8e832dde7d8c0407890cb164073063eaf4608ae345276dba0354bc8464736f6c63430008090033",
									".code": [
										{
											"begin": 203,
											"end": 9607,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 203,
											"end": 9607,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 203,
											"end": 9607,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 203,
											"end": 9607,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 9607,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 9607,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 203,
											"end": 9607,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 9607,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 203,
											"end": 9607,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"libraries/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"libraries/Address.sol\":{\"keccak256\":\"0x0f4169fea1817f1228f6a2db5e764e2a86f357a9f42f83de1f157449bca0f1ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://244a3f17ec48680bfaadacf724e5b12030636dc8b3e59f01de1cf206f0802ad7\",\"dweb:/ipfs/QmZXNxyUx2vm7LjcwtNhwYyKgqVxmbMAM3cG5bricBmL1K\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"libraries/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"libraries/Math.sol\":210:13122  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"libraries/Math.sol\":210:13122  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e393e1ebb9ccb8e314707ac681edd63d97597696c9e89ec9c60b611ad64aff0f64736f6c63430008090033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e393e1ebb9ccb8e314707ac681edd63d97597696c9e89ec9c60b611ad64aff0f64736f6c63430008090033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE3 SWAP4 0xE1 0xEB 0xB9 0xCC 0xB8 0xE3 EQ PUSH17 0x7AC681EDD63D97597696C9E89EC9C60B61 BYTE 0xD6 0x4A SELFDESTRUCT 0xF PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ",
							"sourceMap": "210:12912:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e393e1ebb9ccb8e314707ac681edd63d97597696c9e89ec9c60b611ad64aff0f64736f6c63430008090033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE3 SWAP4 0xE1 0xEB 0xB9 0xCC 0xB8 0xE3 EQ PUSH17 0x7AC681EDD63D97597696C9E89EC9C60B61 BYTE 0xD6 0x4A SELFDESTRUCT 0xF PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ",
							"sourceMap": "210:12912:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 210,
									"end": 13122,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 210,
									"end": 13122,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 210,
									"end": 13122,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 210,
									"end": 13122,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 210,
									"end": 13122,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 210,
									"end": 13122,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 210,
									"end": 13122,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 210,
									"end": 13122,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 210,
									"end": 13122,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 210,
									"end": 13122,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 210,
									"end": 13122,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 210,
									"end": 13122,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 210,
									"end": 13122,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 210,
									"end": 13122,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 210,
									"end": 13122,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 210,
									"end": 13122,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 210,
									"end": 13122,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 210,
									"end": 13122,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 210,
									"end": 13122,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 210,
									"end": 13122,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 210,
									"end": 13122,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 210,
									"end": 13122,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 210,
									"end": 13122,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 210,
									"end": 13122,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 210,
									"end": 13122,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 210,
									"end": 13122,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 210,
									"end": 13122,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 210,
									"end": 13122,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 210,
									"end": 13122,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 210,
									"end": 13122,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 210,
									"end": 13122,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 210,
									"end": 13122,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 210,
									"end": 13122,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 210,
									"end": 13122,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 210,
									"end": 13122,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e393e1ebb9ccb8e314707ac681edd63d97597696c9e89ec9c60b611ad64aff0f64736f6c63430008090033",
									".code": [
										{
											"begin": 210,
											"end": 13122,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 210,
											"end": 13122,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 210,
											"end": 13122,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 210,
											"end": 13122,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 210,
											"end": 13122,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 210,
											"end": 13122,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 210,
											"end": 13122,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 210,
											"end": 13122,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 210,
											"end": 13122,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"libraries/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"libraries/Math.sol\":{\"keccak256\":\"0xb8b8236795b4713101dbe4fea88037f20cff3fe21ebde0ec96d8862a1462e67d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6279d1ec255977f2c21b7ff73745bde2db91a297f2e90ddb8a3be86589294ed\",\"dweb:/ipfs/QmfJo1qC43VeyZdHiCBbQxySqufkVdRwWQtzbndv1BSRux\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"libraries/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"libraries/SignedMath.sol\":223:1304  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"libraries/SignedMath.sol\":223:1304  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122057d0e22017d181e8517374156e15506a2ab86a016fe379042e9ee9ed2baf2a8764736f6c63430008090033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122057d0e22017d181e8517374156e15506a2ab86a016fe379042e9ee9ed2baf2a8764736f6c63430008090033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPI 0xD0 0xE2 KECCAK256 OR 0xD1 DUP2 0xE8 MLOAD PUSH20 0x74156E15506A2AB86A016FE379042E9EE9ED2BAF 0x2A DUP8 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ",
							"sourceMap": "223:1081:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122057d0e22017d181e8517374156e15506a2ab86a016fe379042e9ee9ed2baf2a8764736f6c63430008090033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPI 0xD0 0xE2 KECCAK256 OR 0xD1 DUP2 0xE8 MLOAD PUSH20 0x74156E15506A2AB86A016FE379042E9EE9ED2BAF 0x2A DUP8 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ",
							"sourceMap": "223:1081:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 223,
									"end": 1304,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122057d0e22017d181e8517374156e15506a2ab86a016fe379042e9ee9ed2baf2a8764736f6c63430008090033",
									".code": [
										{
											"begin": 223,
											"end": 1304,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 223,
											"end": 1304,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 223,
											"end": 1304,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 223,
											"end": 1304,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 223,
											"end": 1304,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 223,
											"end": 1304,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 223,
											"end": 1304,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 223,
											"end": 1304,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 223,
											"end": 1304,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"libraries/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"libraries/SignedMath.sol\":{\"keccak256\":\"0x6e5b78ca933d7f644517832ed7a8c4399ca8f5b2e7c813e7ffaa17a045b3d956\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53469082eb094366b54f0fb9f3f60feaced3013039e1931582531c6fbefe92ce\",\"dweb:/ipfs/Qmdj8qrQdToqbXydef71akHQCDKifDQ3dneEyxX2vG2BNs\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"libraries/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"libraries/Strings.sol\":221:2853  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"libraries/Strings.sol\":221:2853  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200be2eeacdc2c8762fa27b0af87233899c363f7b6f28f62a820e412c56b171f0664736f6c63430008090033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200be2eeacdc2c8762fa27b0af87233899c363f7b6f28f62a820e412c56b171f0664736f6c63430008090033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND 0xE2 0xEE 0xAC 0xDC 0x2C DUP8 PUSH3 0xFA27B0 0xAF DUP8 0x23 CODESIZE SWAP10 0xC3 PUSH4 0xF7B6F28F PUSH3 0xA820E4 SLT 0xC5 PUSH12 0x171F0664736F6C6343000809 STOP CALLER ",
							"sourceMap": "221:2632:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200be2eeacdc2c8762fa27b0af87233899c363f7b6f28f62a820e412c56b171f0664736f6c63430008090033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND 0xE2 0xEE 0xAC 0xDC 0x2C DUP8 PUSH3 0xFA27B0 0xAF DUP8 0x23 CODESIZE SWAP10 0xC3 PUSH4 0xF7B6F28F PUSH3 0xA820E4 SLT 0xC5 PUSH12 0x171F0664736F6C6343000809 STOP CALLER ",
							"sourceMap": "221:2632:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(int256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 221,
									"end": 2853,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200be2eeacdc2c8762fa27b0af87233899c363f7b6f28f62a820e412c56b171f0664736f6c63430008090033",
									".code": [
										{
											"begin": 221,
											"end": 2853,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 221,
											"end": 2853,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 221,
											"end": 2853,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 221,
											"end": 2853,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 221,
											"end": 2853,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 221,
											"end": 2853,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 221,
											"end": 2853,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 221,
											"end": 2853,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 221,
											"end": 2853,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"libraries/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"libraries/Math.sol\":{\"keccak256\":\"0xb8b8236795b4713101dbe4fea88037f20cff3fe21ebde0ec96d8862a1462e67d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6279d1ec255977f2c21b7ff73745bde2db91a297f2e90ddb8a3be86589294ed\",\"dweb:/ipfs/QmfJo1qC43VeyZdHiCBbQxySqufkVdRwWQtzbndv1BSRux\"]},\"libraries/SignedMath.sol\":{\"keccak256\":\"0x6e5b78ca933d7f644517832ed7a8c4399ca8f5b2e7c813e7ffaa17a045b3d956\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53469082eb094366b54f0fb9f3f60feaced3013039e1931582531c6fbefe92ce\",\"dweb:/ipfs/Qmdj8qrQdToqbXydef71akHQCDKifDQ3dneEyxX2vG2BNs\"]},\"libraries/Strings.sol\":{\"keccak256\":\"0xbfe48783f884b92c7db6c32be2b92851bbbb7c2b1530cfdd2f47fc0cc8a5f322\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5523b8a23f6b8ec4c30bd0b53bdc8408d80166588e3354c7c7de8016d88beb60\",\"dweb:/ipfs/QmfVg2x6iyijH3YQFxpoci3og2JKAPMcPNjViHPGzZQWNS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> contracts/TimeERC721.sol:99:5:\n   |\n99 |     function _baseURI() internal view returns (string memory) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 3141,
					"file": "contracts/TimeERC721.sol",
					"start": 3055
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/Context.sol": {
				"ast": {
					"absolutePath": "contracts/Context.sol",
					"exportedSymbols": {
						"Context": [
							29
						]
					},
					"id": 30,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "104:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:505:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 29,
							"linearizedBaseContracts": [
								29
							],
							"name": "Context",
							"nameLocation": "656:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 10,
										"nodeType": "Block",
										"src": "733:36:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 7,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "751:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 8,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "751:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 6,
												"id": 9,
												"nodeType": "Return",
												"src": "744:17:0"
											}
										]
									},
									"id": 11,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "680:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "690:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "724:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "724:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "723:9:0"
									},
									"scope": 29,
									"src": "671:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "844:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 16,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "862:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "862:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 15,
												"id": 18,
												"nodeType": "Return",
												"src": "855:15:0"
											}
										]
									},
									"id": 20,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "786:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "828:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 13,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "828:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "827:16:0"
									},
									"scope": 29,
									"src": "777:101:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 27,
										"nodeType": "Block",
										"src": "958:27:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 25,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "976:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 24,
												"id": 26,
												"nodeType": "Return",
												"src": "969:8:0"
											}
										]
									},
									"id": 28,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "895:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "915:2:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "949:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 22,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "949:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "948:9:0"
									},
									"scope": 29,
									"src": "886:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 30,
							"src": "638:350:0",
							"usedErrors": []
						}
					],
					"src": "104:884:0"
				},
				"id": 0
			},
			"contracts/ERC165.sol": {
				"ast": {
					"absolutePath": "contracts/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							53
						],
						"IERC165": [
							1107
						]
					},
					"id": 54,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 31,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:1"
						},
						{
							"absolutePath": "interfaces/IERC165.sol",
							"file": "../interfaces/IERC165.sol",
							"id": 32,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 54,
							"sourceUnit": 1108,
							"src": "129:35:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 34,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1107,
										"src": "787:7:1"
									},
									"id": 35,
									"nodeType": "InheritanceSpecifier",
									"src": "787:7:1"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 33,
								"nodeType": "StructuredDocumentation",
								"src": "168:589:1",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 53,
							"linearizedBaseContracts": [
								53,
								1107
							],
							"name": "ERC165",
							"nameLocation": "777:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1106
									],
									"body": {
										"id": 51,
										"nodeType": "Block",
										"src": "957:66:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 44,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 38,
														"src": "975:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 46,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1107,
																	"src": "995:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1107_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1107_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 45,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "990:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "990:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1107",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 48,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "990:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "975:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 43,
												"id": 50,
												"nodeType": "Return",
												"src": "968:47:1"
											}
										]
									},
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "802:58:1",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 52,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "875:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 40,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "933:8:1"
									},
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "900:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "893:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 37,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "893:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "892:20:1"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "951:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "951:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "950:6:1"
									},
									"scope": 53,
									"src": "866:157:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 54,
							"src": "759:267:1",
							"usedErrors": []
						}
					],
					"src": "102:924:1"
				},
				"id": 1
			},
			"contracts/Ownable.sol": {
				"ast": {
					"absolutePath": "contracts/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							29
						],
						"Ownable": [
							166
						]
					},
					"id": 167,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 55,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:2"
						},
						{
							"absolutePath": "contracts/Context.sol",
							"file": "./Context.sol",
							"id": 56,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 167,
							"sourceUnit": 30,
							"src": "132:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 58,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 29,
										"src": "695:7:2"
									},
									"id": 59,
									"nodeType": "InheritanceSpecifier",
									"src": "695:7:2"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 57,
								"nodeType": "StructuredDocumentation",
								"src": "159:505:2",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 166,
							"linearizedBaseContracts": [
								166,
								29
							],
							"name": "Ownable",
							"nameLocation": "684:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 61,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "726:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 166,
									"src": "710:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 60,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "710:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 67,
									"name": "OwnershipTransferred",
									"nameLocation": "747:20:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "784:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "768:29:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "768:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "815:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "799:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 64,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "799:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "767:57:2"
									},
									"src": "741:84:2"
								},
								{
									"body": {
										"id": 76,
										"nodeType": "Block",
										"src": "946:51:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 72,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "976:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 73,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "976:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 71,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "957:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 74,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "957:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 75,
												"nodeType": "ExpressionStatement",
												"src": "957:32:2"
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "833:93:2",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 77,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "943:2:2"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "946:0:2"
									},
									"scope": 166,
									"src": "932:65:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 84,
										"nodeType": "Block",
										"src": "1111:44:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 80,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 108,
														"src": "1122:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1122:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 82,
												"nodeType": "ExpressionStatement",
												"src": "1122:13:2"
											},
											{
												"id": 83,
												"nodeType": "PlaceholderStatement",
												"src": "1146:1:2"
											}
										]
									},
									"documentation": {
										"id": 78,
										"nodeType": "StructuredDocumentation",
										"src": "1005:79:2",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 85,
									"name": "onlyOwner",
									"nameLocation": "1099:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1108:2:2"
									},
									"src": "1090:65:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 93,
										"nodeType": "Block",
										"src": "1291:32:2",
										"statements": [
											{
												"expression": {
													"id": 91,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 61,
													"src": "1309:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 90,
												"id": 92,
												"nodeType": "Return",
												"src": "1302:13:2"
											}
										]
									},
									"documentation": {
										"id": 86,
										"nodeType": "StructuredDocumentation",
										"src": "1163:67:2",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 94,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1245:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1250:2:2"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1282:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 88,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1282:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1281:9:2"
									},
									"scope": 166,
									"src": "1236:87:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "1446:87:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 99,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 94,
																	"src": "1465:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 100,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1465:7:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 101,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "1476:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 102,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1476:12:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1465:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 104,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1490:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 98,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1457:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1457:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 106,
												"nodeType": "ExpressionStatement",
												"src": "1457:68:2"
											}
										]
									},
									"documentation": {
										"id": 95,
										"nodeType": "StructuredDocumentation",
										"src": "1331:64:2",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1410:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1421:2:2"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1446:0:2"
									},
									"scope": 166,
									"src": "1401:132:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 121,
										"nodeType": "Block",
										"src": "1931:49:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 117,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1969:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 116,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1961:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 115,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1961:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1961:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 114,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "1942:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1942:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 120,
												"nodeType": "ExpressionStatement",
												"src": "1942:30:2"
											}
										]
									},
									"documentation": {
										"id": 109,
										"nodeType": "StructuredDocumentation",
										"src": "1541:330:2",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 122,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 112,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 111,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 85,
												"src": "1921:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1921:9:2"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1886:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1903:2:2"
									},
									"returnParameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1931:0:2"
									},
									"scope": 166,
									"src": "1877:103:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 144,
										"nodeType": "Block",
										"src": "2205:131:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 131,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 125,
																"src": "2224:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 134,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2244:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 133,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2236:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 132,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2236:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 135,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2236:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2224:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 137,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2248:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 130,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2216:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2216:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "2216:73:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 141,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "2319:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2300:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2300:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 143,
												"nodeType": "ExpressionStatement",
												"src": "2300:28:2"
											}
										]
									},
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "1988:141:2",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 145,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 128,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 127,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 85,
												"src": "2195:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2195:9:2"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2144:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2170:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "2162:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2162:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2161:18:2"
									},
									"returnParameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2205:0:2"
									},
									"scope": 166,
									"src": "2135:201:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 164,
										"nodeType": "Block",
										"src": "2559:128:2",
										"statements": [
											{
												"assignments": [
													152
												],
												"declarations": [
													{
														"constant": false,
														"id": 152,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2578:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 164,
														"src": "2570:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 151,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2570:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 154,
												"initialValue": {
													"id": 153,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 61,
													"src": "2589:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2570:25:2"
											},
											{
												"expression": {
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 155,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 61,
														"src": "2606:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 156,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 148,
														"src": "2615:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2606:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 158,
												"nodeType": "ExpressionStatement",
												"src": "2606:17:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 160,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "2660:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 161,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 148,
															"src": "2670:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 159,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "2639:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 163,
												"nodeType": "EmitStatement",
												"src": "2634:45:2"
											}
										]
									},
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "2344:146:2",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2505:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2532:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "2524:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2524:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2523:18:2"
									},
									"returnParameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2559:0:2"
									},
									"scope": 166,
									"src": "2496:191:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 167,
							"src": "666:2024:2",
							"usedErrors": []
						}
					],
					"src": "105:2585:2"
				},
				"id": 2
			},
			"contracts/TimeERC721.sol": {
				"ast": {
					"absolutePath": "contracts/TimeERC721.sol",
					"exportedSymbols": {
						"Address": [
							1599
						],
						"Context": [
							29
						],
						"ERC165": [
							53
						],
						"IERC165": [
							1107
						],
						"IERC721": [
							1224
						],
						"IERC721Metadata": [
							1251
						],
						"IERC721Receiver": [
							1269
						],
						"Math": [
							2465
						],
						"Ownable": [
							166
						],
						"SignedMath": [
							2570
						],
						"Strings": [
							2799
						],
						"TimeERC721": [
							1095
						]
					},
					"id": 1096,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 168,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:3"
						},
						{
							"absolutePath": "interfaces/IERC721.sol",
							"file": "../interfaces/IERC721.sol",
							"id": 169,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1096,
							"sourceUnit": 1225,
							"src": "59:35:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/IERC721Receiver.sol",
							"file": "../interfaces/IERC721Receiver.sol",
							"id": 170,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1096,
							"sourceUnit": 1270,
							"src": "96:43:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/IERC721Metadata.sol",
							"file": "../interfaces/IERC721Metadata.sol",
							"id": 171,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1096,
							"sourceUnit": 1252,
							"src": "141:43:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "libraries/Address.sol",
							"file": "../libraries/Address.sol",
							"id": 172,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1096,
							"sourceUnit": 1600,
							"src": "186:34:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "libraries/Strings.sol",
							"file": "../libraries/Strings.sol",
							"id": 173,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1096,
							"sourceUnit": 2800,
							"src": "222:34:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/ERC165.sol",
							"file": "./ERC165.sol",
							"id": 174,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1096,
							"sourceUnit": 54,
							"src": "258:22:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Context.sol",
							"file": "./Context.sol",
							"id": 175,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1096,
							"sourceUnit": 30,
							"src": "282:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Ownable.sol",
							"file": "./Ownable.sol",
							"id": 176,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1096,
							"sourceUnit": 167,
							"src": "307:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 177,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 29,
										"src": "357:7:3"
									},
									"id": 178,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:3"
								},
								{
									"baseName": {
										"id": 179,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 53,
										"src": "366:6:3"
									},
									"id": 180,
									"nodeType": "InheritanceSpecifier",
									"src": "366:6:3"
								},
								{
									"baseName": {
										"id": 181,
										"name": "IERC721",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1224,
										"src": "374:7:3"
									},
									"id": 182,
									"nodeType": "InheritanceSpecifier",
									"src": "374:7:3"
								},
								{
									"baseName": {
										"id": 183,
										"name": "IERC721Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1251,
										"src": "383:15:3"
									},
									"id": 184,
									"nodeType": "InheritanceSpecifier",
									"src": "383:15:3"
								},
								{
									"baseName": {
										"id": 185,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 166,
										"src": "400:7:3"
									},
									"id": 186,
									"nodeType": "InheritanceSpecifier",
									"src": "400:7:3"
								}
							],
							"canonicalName": "TimeERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1095,
							"linearizedBaseContracts": [
								1095,
								166,
								1251,
								1224,
								53,
								29,
								1107
							],
							"name": "TimeERC721",
							"nameLocation": "343:10:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 189,
									"libraryName": {
										"id": 187,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1599,
										"src": "420:7:3"
									},
									"nodeType": "UsingForDirective",
									"src": "414:26:3",
									"typeName": {
										"id": 188,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "432:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"id": 192,
									"libraryName": {
										"id": 190,
										"name": "Strings",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2799,
										"src": "452:7:3"
									},
									"nodeType": "UsingForDirective",
									"src": "446:26:3",
									"typeName": {
										"id": 191,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "464:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 194,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "514:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 1095,
									"src": "499:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 193,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "499:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 196,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "564:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 1095,
									"src": "549:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 195,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "549:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 200,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "663:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 1095,
									"src": "627:43:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 199,
										"keyType": {
											"id": 197,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "635:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "627:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 198,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "646:7:3",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 204,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "760:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 1095,
									"src": "724:45:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 203,
										"keyType": {
											"id": 201,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "732:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "724:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 202,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "743:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 208,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "864:15:3",
									"nodeType": "VariableDeclaration",
									"scope": 1095,
									"src": "828:51:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 207,
										"keyType": {
											"id": 205,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "836:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "828:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 206,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "847:7:3",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 214,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "990:18:3",
									"nodeType": "VariableDeclaration",
									"scope": 1095,
									"src": "937:71:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 213,
										"keyType": {
											"id": 209,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "945:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "937:44:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 212,
											"keyType": {
												"id": 210,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "964:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "956:24:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 211,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "975:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 230,
										"nodeType": "Block",
										"src": "1189:60:3",
										"statements": [
											{
												"expression": {
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 222,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "1200:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 223,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "1208:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1200:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 225,
												"nodeType": "ExpressionStatement",
												"src": "1200:13:3"
											},
											{
												"expression": {
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 226,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 196,
														"src": "1224:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 227,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "1234:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1224:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 229,
												"nodeType": "ExpressionStatement",
												"src": "1224:17:3"
											}
										]
									},
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "1017:110:3",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 231,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1159:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "1145:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 216,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1145:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1180:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "1166:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 218,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1166:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1144:44:3"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1189:0:3"
									},
									"scope": 1095,
									"src": "1133:116:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										52,
										1106
									],
									"body": {
										"id": 261,
										"nodeType": "Block",
										"src": "1421:197:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 254,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 242,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 234,
																"src": "1452:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 244,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1224,
																			"src": "1472:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1224_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1224_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 243,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1467:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 245,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1467:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1224",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1467:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1452:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 248,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 234,
																"src": "1509:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 250,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1251,
																			"src": "1529:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1251_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1251_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 249,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1524:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 251,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1524:21:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1251",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 252,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1524:33:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1509:48:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1452:105:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 257,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 234,
																"src": "1598:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 255,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1574:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_TimeERC721_$1095_$",
																	"typeString": "type(contract super TimeERC721)"
																}
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 52,
															"src": "1574:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 258,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1574:36:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1452:158:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 241,
												"id": 260,
												"nodeType": "Return",
												"src": "1432:178:3"
											}
										]
									},
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "1257:58:3",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1330:17:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 238,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 236,
												"name": "ERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 53,
												"src": "1389:6:3"
											},
											{
												"id": 237,
												"name": "IERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1107,
												"src": "1397:7:3"
											}
										],
										"src": "1380:25:3"
									},
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1355:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "1348:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 233,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1348:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1347:20:3"
									},
									"returnParameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "1415:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 239,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1415:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1414:6:3"
									},
									"scope": 1095,
									"src": "1321:297:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1149
									],
									"body": {
										"id": 285,
										"nodeType": "Block",
										"src": "1755:105:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 272,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "1774:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1791:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1783:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 273,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1783:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 276,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1783:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1774:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a2061646472657373207a65726f",
															"id": 278,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1795:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_36ef143da8b2347d8f62e4cb6f029f7ea3f89998523a3fa935d79bb869ff4cc2",
																"typeString": "literal_string \"ERC721: address zero\""
															},
															"value": "ERC721: address zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_36ef143da8b2347d8f62e4cb6f029f7ea3f89998523a3fa935d79bb869ff4cc2",
																"typeString": "literal_string \"ERC721: address zero\""
															}
														],
														"id": 271,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1766:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1766:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 280,
												"nodeType": "ExpressionStatement",
												"src": "1766:52:3"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 281,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 204,
														"src": "1836:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 283,
													"indexExpression": {
														"id": 282,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 265,
														"src": "1846:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1836:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 284,
												"nodeType": "Return",
												"src": "1829:23:3"
											}
										]
									},
									"documentation": {
										"id": 263,
										"nodeType": "StructuredDocumentation",
										"src": "1626:50:3",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1691:9:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 267,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1728:8:3"
									},
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1709:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "1701:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1701:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1700:15:3"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "1746:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1746:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1745:9:3"
									},
									"scope": 1095,
									"src": "1682:178:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1157
									],
									"body": {
										"id": 313,
										"nodeType": "Block",
										"src": "1996:142:3",
										"statements": [
											{
												"assignments": [
													296
												],
												"declarations": [
													{
														"constant": false,
														"id": 296,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "2015:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 313,
														"src": "2007:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 295,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2007:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 300,
												"initialValue": {
													"arguments": [
														{
															"id": 298,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "2032:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 297,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 596,
														"src": "2023:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2023:17:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2007:33:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 302,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 296,
																"src": "2059:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 305,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2076:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2068:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 303,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2068:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 306,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2068:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2059:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
															"id": 308,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2080:26:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															},
															"value": "ERC721: invalid token ID"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															}
														],
														"id": 301,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2051:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2051:56:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 310,
												"nodeType": "ExpressionStatement",
												"src": "2051:56:3"
											},
											{
												"expression": {
													"id": 311,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 296,
													"src": "2125:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 294,
												"id": 312,
												"nodeType": "Return",
												"src": "2118:12:3"
											}
										]
									},
									"documentation": {
										"id": 287,
										"nodeType": "StructuredDocumentation",
										"src": "1868:48:3",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 314,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1931:7:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 291,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1969:8:3"
									},
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1947:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "1939:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1939:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1938:17:3"
									},
									"returnParameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "1987:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1987:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1986:9:3"
									},
									"scope": 1095,
									"src": "1922:216:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1236
									],
									"body": {
										"id": 323,
										"nodeType": "Block",
										"src": "2266:31:3",
										"statements": [
											{
												"expression": {
													"id": 321,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 194,
													"src": "2284:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 320,
												"id": 322,
												"nodeType": "Return",
												"src": "2277:12:3"
											}
										]
									},
									"documentation": {
										"id": 315,
										"nodeType": "StructuredDocumentation",
										"src": "2146:53:3",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 324,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2214:4:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 317,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2233:8:3"
									},
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2218:2:3"
									},
									"returnParameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "2251:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 318,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2251:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2250:15:3"
									},
									"scope": 1095,
									"src": "2205:92:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1242
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "2429:33:3",
										"statements": [
											{
												"expression": {
													"id": 331,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 196,
													"src": "2447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 330,
												"id": 332,
												"nodeType": "Return",
												"src": "2440:14:3"
											}
										]
									},
									"documentation": {
										"id": 325,
										"nodeType": "StructuredDocumentation",
										"src": "2305:55:3",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2375:6:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 327,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2396:8:3"
									},
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2381:2:3"
									},
									"returnParameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "2414:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 328,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2414:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2413:15:3"
									},
									"scope": 1095,
									"src": "2366:96:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1250
									],
									"body": {
										"id": 372,
										"nodeType": "Block",
										"src": "2613:193:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 344,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "2639:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 343,
														"name": "_requireMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 991,
														"src": "2624:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
															"typeString": "function (uint256) view"
														}
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2624:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 346,
												"nodeType": "ExpressionStatement",
												"src": "2624:23:3"
											},
											{
												"assignments": [
													348
												],
												"declarations": [
													{
														"constant": false,
														"id": 348,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2674:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 372,
														"src": "2660:21:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 347,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2660:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 351,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 349,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 382,
														"src": "2684:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2684:10:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2660:34:3"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 358,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 354,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 348,
																		"src": "2718:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 353,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2712:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 352,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2712:5:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2712:14:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2712:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2736:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2712:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 369,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2796:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2712:86:3",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 363,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 348,
																		"src": "2764:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 364,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 337,
																				"src": "2773:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 365,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "toString",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2629,
																			"src": "2773:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 366,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2773:18:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 361,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "2747:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 362,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "2747:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 367,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2747:45:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2740:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 359,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "2740:6:3",
																"typeDescriptions": {}
															}
														},
														"id": 368,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2740:53:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 342,
												"id": 371,
												"nodeType": "Return",
												"src": "2705:93:3"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "2470:57:3",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 373,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2542:8:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 339,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2580:8:3"
									},
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2559:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "2551:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2551:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2550:17:3"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "2598:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 340,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2598:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2597:15:3"
									},
									"scope": 1095,
									"src": "2533:273:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 381,
										"nodeType": "Block",
										"src": "3113:28:3",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3131:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 378,
												"id": 380,
												"nodeType": "Return",
												"src": "3124:9:3"
											}
										]
									},
									"documentation": {
										"id": 374,
										"nodeType": "StructuredDocumentation",
										"src": "2814:235:3",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 382,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3064:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3072:2:3"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "3098:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 376,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3098:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3097:15:3"
									},
									"scope": 1095,
									"src": "3055:86:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1197
									],
									"body": {
										"id": 424,
										"nodeType": "Block",
										"src": "3265:350:3",
										"statements": [
											{
												"assignments": [
													392
												],
												"declarations": [
													{
														"constant": false,
														"id": 392,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3284:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 424,
														"src": "3276:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 391,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3276:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 397,
												"initialValue": {
													"arguments": [
														{
															"id": 395,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "3311:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 393,
															"name": "TimeERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1095,
															"src": "3292:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TimeERC721_$1095_$",
																"typeString": "type(contract TimeERC721)"
															}
														},
														"id": 394,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 314,
														"src": "3292:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3292:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3276:43:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 401,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 399,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 385,
																"src": "3338:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 400,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 392,
																"src": "3344:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3338:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572",
															"id": 402,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3351:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
																"typeString": "literal_string \"ERC721: approval to current owner\""
															},
															"value": "ERC721: approval to current owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
																"typeString": "literal_string \"ERC721: approval to current owner\""
															}
														],
														"id": 398,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3330:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3330:57:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 404,
												"nodeType": "ExpressionStatement",
												"src": "3330:57:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 409,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 406,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 11,
																		"src": "3422:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 407,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3422:12:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 408,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 392,
																	"src": "3438:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3422:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 411,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "3464:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 412,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 11,
																			"src": "3471:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 413,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3471:12:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 410,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 478,
																	"src": "3447:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 414,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3447:37:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3422:62:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c",
															"id": 416,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3499:63:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83",
																"typeString": "literal_string \"ERC721: approve caller is not token owner or approved for all\""
															},
															"value": "ERC721: approve caller is not token owner or approved for all"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83",
																"typeString": "literal_string \"ERC721: approve caller is not token owner or approved for all\""
															}
														],
														"id": 405,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3400:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3400:173:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 418,
												"nodeType": "ExpressionStatement",
												"src": "3400:173:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 420,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "3595:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 421,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "3599:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 419,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 945,
														"src": "3586:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3586:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 423,
												"nodeType": "ExpressionStatement",
												"src": "3586:21:3"
											}
										]
									},
									"documentation": {
										"id": 383,
										"nodeType": "StructuredDocumentation",
										"src": "3149:48:3",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3212:7:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 389,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3256:8:3"
									},
									"parameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3228:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "3220:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3220:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3240:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "3232:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3232:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3219:29:3"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3265:0:3"
									},
									"scope": 1095,
									"src": "3203:412:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1213
									],
									"body": {
										"id": 442,
										"nodeType": "Block",
										"src": "3758:86:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 435,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 428,
															"src": "3784:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 434,
														"name": "_requireMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 991,
														"src": "3769:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
															"typeString": "function (uint256) view"
														}
													},
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3769:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 437,
												"nodeType": "ExpressionStatement",
												"src": "3769:23:3"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 438,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "3812:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 440,
													"indexExpression": {
														"id": 439,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 428,
														"src": "3828:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3812:24:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 433,
												"id": 441,
												"nodeType": "Return",
												"src": "3805:31:3"
											}
										]
									},
									"documentation": {
										"id": 426,
										"nodeType": "StructuredDocumentation",
										"src": "3623:52:3",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 443,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3690:11:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 430,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3731:8:3"
									},
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3710:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "3702:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3702:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3701:17:3"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "3749:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3749:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3748:9:3"
									},
									"scope": 1095,
									"src": "3681:163:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1205
									],
									"body": {
										"id": 459,
										"nodeType": "Block",
										"src": "3992:71:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 453,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "4022:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4022:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 455,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "4036:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 456,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "4046:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 452,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 977,
														"src": "4003:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4003:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 458,
												"nodeType": "ExpressionStatement",
												"src": "4003:52:3"
											}
										]
									},
									"documentation": {
										"id": 444,
										"nodeType": "StructuredDocumentation",
										"src": "3852:58:3",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 460,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3925:17:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 450,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3983:8:3"
									},
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3951:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "3943:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3943:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3966:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "3961:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 447,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3961:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3942:33:3"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3992:0:3"
									},
									"scope": 1095,
									"src": "3916:147:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1223
									],
									"body": {
										"id": 477,
										"nodeType": "Block",
										"src": "4229:61:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 471,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "4247:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 473,
														"indexExpression": {
															"id": 472,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4266:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4247:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 475,
													"indexExpression": {
														"id": 474,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 465,
														"src": "4273:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4247:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 470,
												"id": 476,
												"nodeType": "Return",
												"src": "4240:42:3"
											}
										]
									},
									"documentation": {
										"id": 461,
										"nodeType": "StructuredDocumentation",
										"src": "4071:57:3",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4143:16:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 467,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4205:8:3"
									},
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4168:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "4160:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4160:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4183:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "4175:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4175:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4159:33:3"
									},
									"returnParameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "4223:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 468,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4223:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4222:6:3"
									},
									"scope": 1095,
									"src": "4134:156:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1189
									],
									"body": {
										"id": 504,
										"nodeType": "Block",
										"src": "4438:212:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 491,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 11,
																		"src": "4529:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 492,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4529:12:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 493,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 485,
																	"src": "4543:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 490,
																"name": "_isApprovedOrOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 648,
																"src": "4510:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) view returns (bool)"
																}
															},
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4510:41:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564",
															"id": 495,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4553:47:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															},
															"value": "ERC721: caller is not token owner or approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															}
														],
														"id": 489,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4502:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4502:99:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 497,
												"nodeType": "ExpressionStatement",
												"src": "4502:99:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 499,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "4624:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 500,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "4630:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 501,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "4634:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 498,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 921,
														"src": "4614:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4614:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 503,
												"nodeType": "ExpressionStatement",
												"src": "4614:28:3"
											}
										]
									},
									"documentation": {
										"id": 479,
										"nodeType": "StructuredDocumentation",
										"src": "4298:53:3",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4366:12:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 487,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4429:8:3"
									},
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4387:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "4379:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4379:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4401:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "4393:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4393:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4413:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "4405:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4405:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4378:43:3"
									},
									"returnParameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4438:0:3"
									},
									"scope": 1095,
									"src": "4357:293:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1179
									],
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "4806:58:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 517,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "4834:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 518,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "4840:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 519,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "4844:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 520,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4853:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 516,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															524,
															554
														],
														"referencedDeclaration": 554,
														"src": "4817:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4817:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "4817:39:3"
											}
										]
									},
									"documentation": {
										"id": 506,
										"nodeType": "StructuredDocumentation",
										"src": "4658:57:3",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4730:16:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 514,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4797:8:3"
									},
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4755:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "4747:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4747:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4769:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "4761:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4761:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4781:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "4773:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4773:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4746:43:3"
									},
									"returnParameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4806:0:3"
									},
									"scope": 1095,
									"src": "4721:143:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1169
									],
									"body": {
										"id": 553,
										"nodeType": "Block",
										"src": "5039:167:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 539,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 11,
																		"src": "5077:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 540,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5077:12:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 541,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 531,
																	"src": "5091:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 538,
																"name": "_isApprovedOrOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 648,
																"src": "5058:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) view returns (bool)"
																}
															},
															"id": 542,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5058:41:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564",
															"id": 543,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5101:47:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															},
															"value": "ERC721: caller is not token owner or approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															}
														],
														"id": 537,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5050:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5050:99:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 545,
												"nodeType": "ExpressionStatement",
												"src": "5050:99:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 547,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "5174:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 548,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "5180:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 549,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "5184:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 550,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 533,
															"src": "5193:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 546,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 583,
														"src": "5160:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 552,
												"nodeType": "ExpressionStatement",
												"src": "5160:38:3"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "4872:57:3",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 554,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4944:16:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 535,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5030:8:3"
									},
									"parameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4969:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "4961:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4961:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4983:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "4975:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4975:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4995:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "4987:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4987:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5017:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "5004:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 532,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5004:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4960:62:3"
									},
									"returnParameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5039:0:3"
									},
									"scope": 1095,
									"src": "4935:271:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 582,
										"nodeType": "Block",
										"src": "6181:168:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 567,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 557,
															"src": "6202:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 568,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "6208:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 569,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "6212:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 566,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 921,
														"src": "6192:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6192:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 571,
												"nodeType": "ExpressionStatement",
												"src": "6192:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 574,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 557,
																	"src": "6262:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 575,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 559,
																	"src": "6268:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 576,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 561,
																	"src": "6272:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 577,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 563,
																	"src": "6281:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 573,
																"name": "_checkOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1053,
																"src": "6239:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6239:47:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
															"id": 579,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6288:52:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															},
															"value": "ERC721: transfer to non ERC721Receiver implementer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															}
														],
														"id": 572,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6231:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6231:110:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 581,
												"nodeType": "ExpressionStatement",
												"src": "6231:110:3"
											}
										]
									},
									"documentation": {
										"id": 555,
										"nodeType": "StructuredDocumentation",
										"src": "5214:867:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 583,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "6096:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6118:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "6110:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6110:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6132:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "6124:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 558,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6124:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6144:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "6136:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 560,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6136:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6166:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "6153:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 562,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6153:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6109:62:3"
									},
									"returnParameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6181:0:3"
									},
									"scope": 1095,
									"src": "6087:262:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 595,
										"nodeType": "Block",
										"src": "6530:42:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 591,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "6548:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 593,
													"indexExpression": {
														"id": 592,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 586,
														"src": "6556:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6548:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 590,
												"id": 594,
												"nodeType": "Return",
												"src": "6541:23:3"
											}
										]
									},
									"documentation": {
										"id": 584,
										"nodeType": "StructuredDocumentation",
										"src": "6357:100:3",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist"
									},
									"id": 596,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "6472:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6489:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "6481:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6481:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6480:17:3"
									},
									"returnParameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "6521:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 588,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6521:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6520:9:3"
									},
									"scope": 1095,
									"src": "6463:109:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 613,
										"nodeType": "Block",
										"src": "6948:57:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 605,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 599,
																"src": "6975:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 604,
															"name": "_ownerOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 596,
															"src": "6966:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																"typeString": "function (uint256) view returns (address)"
															}
														},
														"id": 606,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6966:17:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 609,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6995:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 608,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6987:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 607,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6987:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 610,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6987:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6966:31:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 603,
												"id": 612,
												"nodeType": "Return",
												"src": "6959:38:3"
											}
										]
									},
									"documentation": {
										"id": 597,
										"nodeType": "StructuredDocumentation",
										"src": "6580:299:3",
										"text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."
									},
									"id": 614,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "6894:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6910:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "6902:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 598,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6902:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6901:17:3"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "6942:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 601,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6942:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6941:6:3"
									},
									"scope": 1095,
									"src": "6885:120:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 647,
										"nodeType": "Block",
										"src": "7263:169:3",
										"statements": [
											{
												"assignments": [
													625
												],
												"declarations": [
													{
														"constant": false,
														"id": 625,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "7282:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 647,
														"src": "7274:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 624,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7274:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 630,
												"initialValue": {
													"arguments": [
														{
															"id": 628,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 619,
															"src": "7309:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 626,
															"name": "TimeERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1095,
															"src": "7290:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TimeERC721_$1095_$",
																"typeString": "type(contract TimeERC721)"
															}
														},
														"id": 627,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 314,
														"src": "7290:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7290:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7274:43:3"
											},
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 638,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 633,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 631,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 617,
																		"src": "7336:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 632,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 625,
																		"src": "7347:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "7336:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 635,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 625,
																			"src": "7373:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 636,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 617,
																			"src": "7380:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 634,
																		"name": "isApprovedForAll",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 478,
																		"src": "7356:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																			"typeString": "function (address,address) view returns (bool)"
																		}
																	},
																	"id": 637,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7356:32:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "7336:52:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 643,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 640,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 619,
																			"src": "7404:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 639,
																		"name": "getApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 443,
																		"src": "7392:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																			"typeString": "function (uint256) view returns (address)"
																		}
																	},
																	"id": 641,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7392:20:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 642,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 617,
																	"src": "7416:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7392:31:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "7336:87:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 645,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "7335:89:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 623,
												"id": 646,
												"nodeType": "Return",
												"src": "7328:96:3"
											}
										]
									},
									"documentation": {
										"id": 615,
										"nodeType": "StructuredDocumentation",
										"src": "7013:153:3",
										"text": " @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."
									},
									"id": 648,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isApprovedOrOwner",
									"nameLocation": "7181:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7208:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "7200:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 616,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7200:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7225:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "7217:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 618,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7217:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7199:34:3"
									},
									"returnParameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "7257:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 621,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7257:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7256:6:3"
									},
									"scope": 1095,
									"src": "7172:260:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 662,
										"nodeType": "Block",
										"src": "7831:45:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 657,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "7852:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 658,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 653,
															"src": "7856:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 659,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7865:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 656,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															663,
															692
														],
														"referencedDeclaration": 692,
														"src": "7842:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7842:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 661,
												"nodeType": "ExpressionStatement",
												"src": "7842:26:3"
											}
										]
									},
									"documentation": {
										"id": 649,
										"nodeType": "StructuredDocumentation",
										"src": "7440:328:3",
										"text": " @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 663,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "7783:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7801:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "7793:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7793:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7813:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "7805:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7805:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7792:29:3"
									},
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7831:0:3"
									},
									"scope": 1095,
									"src": "7774:102:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 691,
										"nodeType": "Block",
										"src": "8179:201:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 674,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 666,
															"src": "8196:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 675,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 668,
															"src": "8200:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 673,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 769,
														"src": "8190:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8190:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 677,
												"nodeType": "ExpressionStatement",
												"src": "8190:18:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 682,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8272:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 681,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8264:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 680,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8264:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 683,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8264:10:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 684,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 666,
																	"src": "8276:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 685,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 668,
																	"src": "8280:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 686,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 670,
																	"src": "8289:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 679,
																"name": "_checkOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1053,
																"src": "8241:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 687,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8241:53:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
															"id": 688,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8309:52:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															},
															"value": "ERC721: transfer to non ERC721Receiver implementer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															}
														],
														"id": 678,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8219:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8219:153:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 690,
												"nodeType": "ExpressionStatement",
												"src": "8219:153:3"
											}
										]
									},
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "7884:213:3",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 692,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "8112:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8130:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "8122:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8122:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8142:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "8134:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8134:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8164:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "8151:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 669,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8151:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8121:48:3"
									},
									"returnParameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8179:0:3"
									},
									"scope": 1095,
									"src": "8103:277:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 768,
										"nodeType": "Block",
										"src": "8769:881:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 701,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 695,
																"src": "8788:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 704,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8802:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8794:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 702,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8794:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8794:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8788:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 707,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8806:34:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
																"typeString": "literal_string \"ERC721: mint to the zero address\""
															},
															"value": "ERC721: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
																"typeString": "literal_string \"ERC721: mint to the zero address\""
															}
														],
														"id": 700,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8780:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8780:61:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 709,
												"nodeType": "ExpressionStatement",
												"src": "8780:61:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 714,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "8860:17:3",
															"subExpression": {
																"arguments": [
																	{
																		"id": 712,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "8869:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 711,
																	"name": "_exists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 614,
																	"src": "8861:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (uint256) view returns (bool)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8861:16:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
															"id": 715,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8879:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															},
															"value": "ERC721: token already minted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															}
														],
														"id": 710,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8852:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8852:58:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 717,
												"nodeType": "ExpressionStatement",
												"src": "8852:58:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 721,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8952:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8944:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 719,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8944:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 722,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8944:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 723,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "8956:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 724,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 697,
															"src": "8960:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 725,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8969:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 718,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1066,
														"src": "8923:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8923:48:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 727,
												"nodeType": "ExpressionStatement",
												"src": "8923:48:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "9069:17:3",
															"subExpression": {
																"arguments": [
																	{
																		"id": 730,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "9078:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 729,
																	"name": "_exists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 614,
																	"src": "9070:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (uint256) view returns (bool)"
																	}
																},
																"id": 731,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9070:16:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
															"id": 733,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9088:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															},
															"value": "ERC721: token already minted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															}
														],
														"id": 728,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9061:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9061:58:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 735,
												"nodeType": "ExpressionStatement",
												"src": "9061:58:3"
											},
											{
												"id": 742,
												"nodeType": "UncheckedBlock",
												"src": "9132:366:3",
												"statements": [
													{
														"expression": {
															"id": 740,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 736,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 204,
																	"src": "9468:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 738,
																"indexExpression": {
																	"id": 737,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 695,
																	"src": "9478:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9468:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 739,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9485:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "9468:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 741,
														"nodeType": "ExpressionStatement",
														"src": "9468:18:3"
													}
												]
											},
											{
												"expression": {
													"id": 747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 743,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 200,
															"src": "9510:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 745,
														"indexExpression": {
															"id": 744,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 697,
															"src": "9518:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9510:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 746,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "9529:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9510:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 748,
												"nodeType": "ExpressionStatement",
												"src": "9510:21:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 752,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9566:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 751,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9558:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 750,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9558:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 753,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9558:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 754,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "9570:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 755,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 697,
															"src": "9574:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 749,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1123,
														"src": "9549:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9549:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 757,
												"nodeType": "EmitStatement",
												"src": "9544:38:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 761,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9623:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 760,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9615:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 759,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9615:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 762,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9615:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 763,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "9627:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 697,
															"src": "9631:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 765,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9640:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 758,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1079,
														"src": "9595:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9595:47:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 767,
												"nodeType": "ExpressionStatement",
												"src": "9595:47:3"
											}
										]
									},
									"documentation": {
										"id": 693,
										"nodeType": "StructuredDocumentation",
										"src": "8388:322:3",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 769,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8725:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8739:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "8731:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8731:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8751:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "8743:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8743:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8730:29:3"
									},
									"returnParameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8769:0:3"
									},
									"scope": 1095,
									"src": "8716:934:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 835,
										"nodeType": "Block",
										"src": "10030:742:3",
										"statements": [
											{
												"assignments": [
													776
												],
												"declarations": [
													{
														"constant": false,
														"id": 776,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "10049:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 835,
														"src": "10041:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 775,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10041:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 781,
												"initialValue": {
													"arguments": [
														{
															"id": 779,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "10076:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 777,
															"name": "TimeERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1095,
															"src": "10057:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TimeERC721_$1095_$",
																"typeString": "type(contract TimeERC721)"
															}
														},
														"id": 778,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 314,
														"src": "10057:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10057:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10041:43:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 783,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 776,
															"src": "10118:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 786,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10133:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 785,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10125:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 784,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10125:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 787,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10125:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 788,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "10137:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 789,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10146:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 782,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1066,
														"src": "10097:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10097:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 791,
												"nodeType": "ExpressionStatement",
												"src": "10097:51:3"
											},
											{
												"expression": {
													"id": 797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 792,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 776,
														"src": "10253:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 795,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 772,
																"src": "10280:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 793,
																"name": "TimeERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1095,
																"src": "10261:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_TimeERC721_$1095_$",
																	"typeString": "type(contract TimeERC721)"
																}
															},
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "ownerOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 314,
															"src": "10261:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																"typeString": "function (uint256) view returns (address)"
															}
														},
														"id": 796,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10261:27:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10253:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 798,
												"nodeType": "ExpressionStatement",
												"src": "10253:35:3"
											},
											{
												"expression": {
													"id": 802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "10329:31:3",
													"subExpression": {
														"baseExpression": {
															"id": 799,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "10336:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 801,
														"indexExpression": {
															"id": 800,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "10352:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10336:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 803,
												"nodeType": "ExpressionStatement",
												"src": "10329:31:3"
											},
											{
												"id": 810,
												"nodeType": "UncheckedBlock",
												"src": "10373:241:3",
												"statements": [
													{
														"expression": {
															"id": 808,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 804,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 204,
																	"src": "10581:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 806,
																"indexExpression": {
																	"id": 805,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 776,
																	"src": "10591:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "10581:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 807,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10601:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "10581:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 809,
														"nodeType": "ExpressionStatement",
														"src": "10581:21:3"
													}
												]
											},
											{
												"expression": {
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "10624:23:3",
													"subExpression": {
														"baseExpression": {
															"id": 811,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 200,
															"src": "10631:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 813,
														"indexExpression": {
															"id": 812,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "10639:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10631:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 815,
												"nodeType": "ExpressionStatement",
												"src": "10624:23:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 817,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 776,
															"src": "10674:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 820,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10689:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 819,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10681:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 818,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10681:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 821,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10681:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 822,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "10693:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 816,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1123,
														"src": "10665:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10665:36:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 824,
												"nodeType": "EmitStatement",
												"src": "10660:41:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 826,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 776,
															"src": "10734:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 829,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10749:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 828,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10741:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 827,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10741:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 830,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10741:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 831,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "10753:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 832,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10762:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 825,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1079,
														"src": "10714:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10714:50:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 834,
												"nodeType": "ExpressionStatement",
												"src": "10714:50:3"
											}
										]
									},
									"documentation": {
										"id": 770,
										"nodeType": "StructuredDocumentation",
										"src": "9658:325:3",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 836,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9998:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10012:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "10004:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10004:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10003:17:3"
									},
									"returnParameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10030:0:3"
									},
									"scope": 1095,
									"src": "9989:783:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 920,
										"nodeType": "Block",
										"src": "11180:1158:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 852,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 849,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 843,
																		"src": "11218:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 847,
																		"name": "TimeERC721",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1095,
																		"src": "11199:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TimeERC721_$1095_$",
																			"typeString": "type(contract TimeERC721)"
																		}
																	},
																	"id": 848,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 314,
																	"src": "11199:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 850,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11199:27:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 851,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 839,
																"src": "11230:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11199:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572",
															"id": 853,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11236:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															},
															"value": "ERC721: transfer from incorrect owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															}
														],
														"id": 846,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11191:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11191:85:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 855,
												"nodeType": "ExpressionStatement",
												"src": "11191:85:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 862,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 857,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 841,
																"src": "11295:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 860,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11309:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 859,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11301:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 858,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11301:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11301:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11295:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 863,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11313:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
																"typeString": "literal_string \"ERC721: transfer to the zero address\""
															},
															"value": "ERC721: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
																"typeString": "literal_string \"ERC721: transfer to the zero address\""
															}
														],
														"id": 856,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11287:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11287:65:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 865,
												"nodeType": "ExpressionStatement",
												"src": "11287:65:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 867,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 839,
															"src": "11386:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 868,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 841,
															"src": "11392:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 869,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 843,
															"src": "11396:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 870,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11405:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 866,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1066,
														"src": "11365:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11365:42:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 872,
												"nodeType": "ExpressionStatement",
												"src": "11365:42:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 879,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 876,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 843,
																		"src": "11529:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 874,
																		"name": "TimeERC721",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1095,
																		"src": "11510:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TimeERC721_$1095_$",
																			"typeString": "type(contract TimeERC721)"
																		}
																	},
																	"id": 875,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 314,
																	"src": "11510:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 877,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11510:27:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 878,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 839,
																"src": "11541:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11510:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572",
															"id": 880,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11547:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															},
															"value": "ERC721: transfer from incorrect owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															}
														],
														"id": 873,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11502:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11502:85:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 882,
												"nodeType": "ExpressionStatement",
												"src": "11502:85:3"
											},
											{
												"expression": {
													"id": 886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "11652:31:3",
													"subExpression": {
														"baseExpression": {
															"id": 883,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "11659:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 885,
														"indexExpression": {
															"id": 884,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 843,
															"src": "11675:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11659:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 887,
												"nodeType": "ExpressionStatement",
												"src": "11652:31:3"
											},
											{
												"id": 900,
												"nodeType": "UncheckedBlock",
												"src": "11696:504:3",
												"statements": [
													{
														"expression": {
															"id": 892,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 888,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 204,
																	"src": "12135:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 890,
																"indexExpression": {
																	"id": 889,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 839,
																	"src": "12145:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "12135:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 891,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12154:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "12135:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 893,
														"nodeType": "ExpressionStatement",
														"src": "12135:20:3"
													},
													{
														"expression": {
															"id": 898,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 894,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 204,
																	"src": "12170:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 896,
																"indexExpression": {
																	"id": 895,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 841,
																	"src": "12180:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "12170:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 897,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12187:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "12170:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 899,
														"nodeType": "ExpressionStatement",
														"src": "12170:18:3"
													}
												]
											},
											{
												"expression": {
													"id": 905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 901,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 200,
															"src": "12210:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 903,
														"indexExpression": {
															"id": 902,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 843,
															"src": "12218:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12210:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 904,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 841,
														"src": "12229:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12210:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 906,
												"nodeType": "ExpressionStatement",
												"src": "12210:21:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 908,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 839,
															"src": "12258:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 909,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 841,
															"src": "12264:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 910,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 843,
															"src": "12268:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 907,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1123,
														"src": "12249:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12249:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 912,
												"nodeType": "EmitStatement",
												"src": "12244:32:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 914,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 839,
															"src": "12309:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 915,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 841,
															"src": "12315:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 916,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 843,
															"src": "12319:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 917,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12328:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 913,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1079,
														"src": "12289:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12289:41:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 919,
												"nodeType": "ExpressionStatement",
												"src": "12289:41:3"
											}
										]
									},
									"documentation": {
										"id": 837,
										"nodeType": "StructuredDocumentation",
										"src": "10780:323:3",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 921,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "11118:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11136:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "11128:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 838,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11128:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11150:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "11142:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 840,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11142:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11162:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "11154:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 842,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11154:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11127:43:3"
									},
									"returnParameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11180:0:3"
									},
									"scope": 1095,
									"src": "11109:1229:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 944,
										"nodeType": "Block",
										"src": "12513:114:3",
										"statements": [
											{
												"expression": {
													"id": 933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 929,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "12524:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 931,
														"indexExpression": {
															"id": 930,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "12540:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12524:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 932,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 924,
														"src": "12551:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12524:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 934,
												"nodeType": "ExpressionStatement",
												"src": "12524:29:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 938,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 926,
																	"src": "12597:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 936,
																	"name": "TimeERC721",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1095,
																	"src": "12578:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_TimeERC721_$1095_$",
																		"typeString": "type(contract TimeERC721)"
																	}
																},
																"id": 937,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "ownerOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 314,
																"src": "12578:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																	"typeString": "function (uint256) view returns (address)"
																}
															},
															"id": 939,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12578:27:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 940,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 924,
															"src": "12607:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 941,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "12611:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 935,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1132,
														"src": "12569:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12569:50:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 943,
												"nodeType": "EmitStatement",
												"src": "12564:55:3"
											}
										]
									},
									"documentation": {
										"id": 922,
										"nodeType": "StructuredDocumentation",
										"src": "12346:105:3",
										"text": " @dev Approve `to` to operate on `tokenId`\n Emits an {Approval} event."
									},
									"id": 945,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "12466:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12483:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "12475:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 923,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12475:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12495:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "12487:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 925,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12487:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12474:29:3"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12513:0:3"
									},
									"scope": 1095,
									"src": "12457:170:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 976,
										"nodeType": "Block",
										"src": "12855:188:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 958,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 956,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 948,
																"src": "12874:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 957,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 950,
																"src": "12883:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12874:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
															"id": 959,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12893:27:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
																"typeString": "literal_string \"ERC721: approve to caller\""
															},
															"value": "ERC721: approve to caller"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
																"typeString": "literal_string \"ERC721: approve to caller\""
															}
														],
														"id": 955,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12866:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12866:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 961,
												"nodeType": "ExpressionStatement",
												"src": "12866:55:3"
											},
											{
												"expression": {
													"id": 968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 962,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 214,
																"src": "12932:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 965,
															"indexExpression": {
																"id": 963,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 948,
																"src": "12951:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12932:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 966,
														"indexExpression": {
															"id": 964,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "12958:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12932:35:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 967,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 952,
														"src": "12970:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "12932:46:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 969,
												"nodeType": "ExpressionStatement",
												"src": "12932:46:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 971,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 948,
															"src": "13009:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 972,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "13016:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 973,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "13026:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 970,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1141,
														"src": "12994:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12994:41:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 975,
												"nodeType": "EmitStatement",
												"src": "12989:46:3"
											}
										]
									},
									"documentation": {
										"id": 946,
										"nodeType": "StructuredDocumentation",
										"src": "12635:129:3",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event."
									},
									"id": 977,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "12779:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "12806:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 977,
												"src": "12798:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 947,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12798:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "12821:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 977,
												"src": "12813:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12813:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "12836:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 977,
												"src": "12831:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 951,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12831:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12797:48:3"
									},
									"returnParameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12855:0:3"
									},
									"scope": 1095,
									"src": "12770:273:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 990,
										"nodeType": "Block",
										"src": "13187:72:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 985,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 980,
																	"src": "13214:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 984,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 614,
																"src": "13206:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 986,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13206:16:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
															"id": 987,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13224:26:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															},
															"value": "ERC721: invalid token ID"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															}
														],
														"id": 983,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13198:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13198:53:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 989,
												"nodeType": "ExpressionStatement",
												"src": "13198:53:3"
											}
										]
									},
									"documentation": {
										"id": 978,
										"nodeType": "StructuredDocumentation",
										"src": "13051:75:3",
										"text": " @dev Reverts if the `tokenId` has not been minted yet."
									},
									"id": 991,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireMinted",
									"nameLocation": "13141:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13164:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "13156:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13156:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13155:17:3"
									},
									"returnParameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13187:0:3"
									},
									"scope": 1095,
									"src": "13132:127:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1052,
										"nodeType": "Block",
										"src": "13983:693:3",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1005,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 996,
															"src": "13998:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1006,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1287,
														"src": "13998:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13998:15:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1050,
													"nodeType": "Block",
													"src": "14631:38:3",
													"statements": [
														{
															"expression": {
																"hexValue": "74727565",
																"id": 1048,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14653:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 1004,
															"id": 1049,
															"nodeType": "Return",
															"src": "14646:11:3"
														}
													]
												},
												"id": 1051,
												"nodeType": "IfStatement",
												"src": "13994:675:3",
												"trueBody": {
													"id": 1047,
													"nodeType": "Block",
													"src": "14015:610:3",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1027,
																		"nodeType": "Block",
																		"src": "14130:93:3",
																		"statements": [
																			{
																				"expression": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1025,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1021,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1019,
																						"src": "14156:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1022,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1269,
																								"src": "14166:15:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1269_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1023,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1268,
																							"src": "14166:32:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1024,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "14166:41:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "14156:51:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"functionReturnParameters": 1004,
																				"id": 1026,
																				"nodeType": "Return",
																				"src": "14149:58:3"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1028,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1020,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1019,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "14122:6:3",
																				"nodeType": "VariableDeclaration",
																				"scope": 1028,
																				"src": "14115:13:3",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1018,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "14115:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14114:15:3"
																	},
																	"src": "14106:117:3"
																},
																{
																	"block": {
																		"id": 1044,
																		"nodeType": "Block",
																		"src": "14252:362:3",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1035,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1032,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1030,
																							"src": "14275:6:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1033,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "14275:13:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1034,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14292:1:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "14275:18:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1042,
																					"nodeType": "Block",
																					"src": "14404:195:3",
																					"statements": [
																						{
																							"AST": {
																								"nodeType": "YulBlock",
																								"src": "14492:88:3",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nodeType": "YulLiteral",
																															"src": "14530:2:3",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "14534:6:3"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nodeType": "YulIdentifier",
																														"src": "14526:3:3"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "14526:15:3"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "14549:6:3"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nodeType": "YulIdentifier",
																														"src": "14543:5:3"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "14543:13:3"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nodeType": "YulIdentifier",
																												"src": "14519:6:3"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "14519:38:3"
																										},
																										"nodeType": "YulExpressionStatement",
																										"src": "14519:38:3"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "london",
																							"externalReferences": [
																								{
																									"declaration": 1030,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "14534:6:3",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1030,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "14549:6:3",
																									"valueSize": 1
																								}
																							],
																							"id": 1041,
																							"nodeType": "InlineAssembly",
																							"src": "14483:97:3"
																						}
																					]
																				},
																				"id": 1043,
																				"nodeType": "IfStatement",
																				"src": "14271:328:3",
																				"trueBody": {
																					"id": 1040,
																					"nodeType": "Block",
																					"src": "14295:103:3",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
																										"id": 1037,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "14325:52:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																											"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
																										},
																										"value": "ERC721: transfer to non ERC721Receiver implementer"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																											"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
																										}
																									],
																									"id": 1036,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "14318:6:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1038,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "14318:60:3",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1039,
																							"nodeType": "ExpressionStatement",
																							"src": "14318:60:3"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1045,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1031,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1030,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "14244:6:3",
																				"nodeType": "VariableDeclaration",
																				"scope": 1045,
																				"src": "14231:19:3",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1029,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "14231:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14230:21:3"
																	},
																	"src": "14224:390:3"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1012,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 11,
																			"src": "14071:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1013,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14071:12:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1014,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 994,
																		"src": "14085:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1015,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 998,
																		"src": "14091:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1016,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1000,
																		"src": "14100:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1009,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 996,
																				"src": "14050:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1008,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1269,
																			"src": "14034:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1269_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1010,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14034:19:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1269",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1011,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1268,
																	"src": "14034:36:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1017,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14034:71:3",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1046,
															"nodeType": "TryStatement",
															"src": "14030:584:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 992,
										"nodeType": "StructuredDocumentation",
										"src": "13267:550:3",
										"text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
									},
									"id": 1053,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "13832:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13873:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "13865:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 993,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13865:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13896:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "13888:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 995,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13888:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13917:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "13909:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 997,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13909:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13948:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "13935:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 999,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13935:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13854:105:3"
									},
									"returnParameters": {
										"id": 1004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "13977:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1002,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13977:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13976:6:3"
									},
									"scope": 1095,
									"src": "13823:853:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1065,
										"nodeType": "Block",
										"src": "15514:2:3",
										"statements": []
									},
									"documentation": {
										"id": 1054,
										"nodeType": "StructuredDocumentation",
										"src": "14684:718:3",
										"text": " @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n - When `from` is zero, the tokens will be minted for `to`.\n - When `to` is zero, ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1066,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "15417:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15446:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "15438:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1055,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15438:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15460:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "15452:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1057,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15452:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "firstTokenId",
												"nameLocation": "15472:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "15464:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1059,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15464:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "batchSize",
												"nameLocation": "15494:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "15486:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1061,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15486:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15437:67:3"
									},
									"returnParameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15514:0:3"
									},
									"scope": 1095,
									"src": "15408:108:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1078,
										"nodeType": "Block",
										"src": "16343:2:3",
										"statements": []
									},
									"documentation": {
										"id": 1067,
										"nodeType": "StructuredDocumentation",
										"src": "15524:708:3",
										"text": " @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n - When `from` is zero, the tokens were minted for `to`.\n - When `to` is zero, ``from``'s tokens were burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1079,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "16247:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16275:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "16267:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1068,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16267:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16289:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "16281:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1070,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16281:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "firstTokenId",
												"nameLocation": "16301:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "16293:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16293:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "batchSize",
												"nameLocation": "16323:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "16315:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1074,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16315:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16266:67:3"
									},
									"returnParameters": {
										"id": 1077,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16343:0:3"
									},
									"scope": 1095,
									"src": "16238:107:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1093,
										"nodeType": "Block",
										"src": "16904:47:3",
										"statements": [
											{
												"expression": {
													"id": 1091,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1087,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 204,
															"src": "16915:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1089,
														"indexExpression": {
															"id": 1088,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1082,
															"src": "16925:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16915:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1090,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1084,
														"src": "16937:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16915:28:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1092,
												"nodeType": "ExpressionStatement",
												"src": "16915:28:3"
											}
										]
									},
									"documentation": {
										"id": 1080,
										"nodeType": "StructuredDocumentation",
										"src": "16353:415:3",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\n being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\n that `ownerOf(tokenId)` is `a`."
									},
									"id": 1094,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "__unsafe_increaseBalance",
									"nameLocation": "16837:24:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "16870:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "16862:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1081,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16862:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1084,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "16887:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "16879:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1083,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16879:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16861:33:3"
									},
									"returnParameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16904:0:3"
									},
									"scope": 1095,
									"src": "16828:123:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1096,
							"src": "334:16620:3",
							"usedErrors": []
						}
					],
					"src": "32:16922:3"
				},
				"id": 3
			},
			"interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1107
						]
					},
					"id": 1108,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1097,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "118:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1098,
								"nodeType": "StructuredDocumentation",
								"src": "146:287:4",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1107,
							"linearizedBaseContracts": [
								1107
							],
							"name": "IERC165",
							"nameLocation": "445:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1099,
										"nodeType": "StructuredDocumentation",
										"src": "460:347:4",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1106,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "822:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "847:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 1106,
												"src": "840:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1100,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "840:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "839:20:4"
									},
									"returnParameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1106,
												"src": "883:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1103,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "883:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "882:6:4"
									},
									"scope": 1107,
									"src": "813:76:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1108,
							"src": "435:457:4",
							"usedErrors": []
						}
					],
					"src": "118:776:4"
				},
				"id": 4
			},
			"interfaces/IERC721.sol": {
				"ast": {
					"absolutePath": "interfaces/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1107
						],
						"IERC721": [
							1224
						]
					},
					"id": 1225,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1109,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "111:24:5"
						},
						{
							"absolutePath": "interfaces/IERC165.sol",
							"file": "../interfaces/IERC165.sol",
							"id": 1111,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1225,
							"sourceUnit": 1108,
							"src": "139:50:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1110,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "147:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1113,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1107,
										"src": "285:7:5"
									},
									"id": 1114,
									"nodeType": "InheritanceSpecifier",
									"src": "285:7:5"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1112,
								"nodeType": "StructuredDocumentation",
								"src": "193:69:5",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1224,
							"linearizedBaseContracts": [
								1224,
								1107
							],
							"name": "IERC721",
							"nameLocation": "274:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1115,
										"nodeType": "StructuredDocumentation",
										"src": "300:90:5",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"id": 1123,
									"name": "Transfer",
									"nameLocation": "402:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1117,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "427:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "411:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "411:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1119,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "449:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "433:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "433:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1121,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "469:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "453:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "453:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "410:67:5"
									},
									"src": "396:82:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1124,
										"nodeType": "StructuredDocumentation",
										"src": "486:96:5",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"id": 1132,
									"name": "Approval",
									"nameLocation": "594:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1126,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "619:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "603:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1128,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "642:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "626:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "626:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1130,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "668:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "652:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "602:74:5"
									},
									"src": "588:89:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1133,
										"nodeType": "StructuredDocumentation",
										"src": "685:119:5",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"id": 1141,
									"name": "ApprovalForAll",
									"nameLocation": "816:14:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1135,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "847:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "831:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "870:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "854:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "854:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1139,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "885:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "880:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1138,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "880:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "830:64:5"
									},
									"src": "810:85:5"
								},
								{
									"documentation": {
										"id": 1142,
										"nodeType": "StructuredDocumentation",
										"src": "903:78:5",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1149,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "996:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1014:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "1006:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1006:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1005:15:5"
									},
									"returnParameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1052:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "1044:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1044:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1043:17:5"
									},
									"scope": 1224,
									"src": "987:74:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1150,
										"nodeType": "StructuredDocumentation",
										"src": "1069:137:5",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1157,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1221:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1237:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "1229:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1229:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1228:17:5"
									},
									"returnParameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1277:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "1269:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1269:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1268:15:5"
									},
									"scope": 1224,
									"src": "1212:72:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1158,
										"nodeType": "StructuredDocumentation",
										"src": "1292:578:5",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1169,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1885:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1160,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1910:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "1902:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1902:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1924:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "1916:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1916:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1936:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "1928:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1928:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1960:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "1945:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1165,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1945:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1901:64:5"
									},
									"returnParameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1974:0:5"
									},
									"scope": 1224,
									"src": "1876:99:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1170,
										"nodeType": "StructuredDocumentation",
										"src": "1983:720:5",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1179,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2718:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1172,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2743:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "2735:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2735:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1174,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2757:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "2749:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2749:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1176,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2769:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "2761:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2761:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2734:43:5"
									},
									"returnParameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2786:0:5"
									},
									"scope": 1224,
									"src": "2709:78:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1180,
										"nodeType": "StructuredDocumentation",
										"src": "2795:747:5",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1189,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3557:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3578:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "3570:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3592:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "3584:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3584:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3604:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "3596:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3596:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:43:5"
									},
									"returnParameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3621:0:5"
									},
									"scope": 1224,
									"src": "3548:74:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1190,
										"nodeType": "StructuredDocumentation",
										"src": "3630:464:5",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1197,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4109:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4125:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "4117:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4117:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4137:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "4129:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4129:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4116:29:5"
									},
									"returnParameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4154:0:5"
									},
									"scope": 1224,
									"src": "4100:55:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1198,
										"nodeType": "StructuredDocumentation",
										"src": "4163:324:5",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1205,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4502:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4528:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "4520:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4520:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4543:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "4538:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1201,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4538:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4519:33:5"
									},
									"returnParameters": {
										"id": 1204,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4561:0:5"
									},
									"scope": 1224,
									"src": "4493:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1206,
										"nodeType": "StructuredDocumentation",
										"src": "4570:145:5",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1213,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4730:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4750:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "4742:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4742:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4741:17:5"
									},
									"returnParameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4790:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "4782:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4782:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4781:18:5"
									},
									"scope": 1224,
									"src": "4721:79:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1214,
										"nodeType": "StructuredDocumentation",
										"src": "4808:142:5",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1223,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4965:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4990:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "4982:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4982:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5005:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "4997:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4997:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4981:33:5"
									},
									"returnParameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "5038:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1220,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5038:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5037:6:5"
									},
									"scope": 1224,
									"src": "4956:88:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1225,
							"src": "264:4783:5",
							"usedErrors": []
						}
					],
					"src": "111:4938:5"
				},
				"id": 5
			},
			"interfaces/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "interfaces/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC165": [
							1107
						],
						"IERC721": [
							1224
						],
						"IERC721Metadata": [
							1251
						]
					},
					"id": 1252,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1226,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:6"
						},
						{
							"absolutePath": "interfaces/IERC721.sol",
							"file": "../interfaces/IERC721.sol",
							"id": 1227,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1252,
							"sourceUnit": 1225,
							"src": "143:35:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1229,
										"name": "IERC721",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1224,
										"src": "349:7:6"
									},
									"id": 1230,
									"nodeType": "InheritanceSpecifier",
									"src": "349:7:6"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1228,
								"nodeType": "StructuredDocumentation",
								"src": "182:136:6",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1251,
							"linearizedBaseContracts": [
								1251,
								1224,
								1107
							],
							"name": "IERC721Metadata",
							"nameLocation": "330:15:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1231,
										"nodeType": "StructuredDocumentation",
										"src": "364:60:6",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1236,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "439:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "443:2:6"
									},
									"returnParameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1236,
												"src": "469:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1233,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "469:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "468:15:6"
									},
									"scope": 1251,
									"src": "430:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1237,
										"nodeType": "StructuredDocumentation",
										"src": "492:62:6",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1242,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "569:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "575:2:6"
									},
									"returnParameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "601:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1239,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "601:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:15:6"
									},
									"scope": 1251,
									"src": "560:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1243,
										"nodeType": "StructuredDocumentation",
										"src": "624:92:6",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1250,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "731:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "748:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "740:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "740:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "739:17:6"
									},
									"returnParameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "780:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1247,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "780:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "779:15:6"
									},
									"scope": 1251,
									"src": "722:73:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1252,
							"src": "320:478:6",
							"usedErrors": []
						}
					],
					"src": "115:683:6"
				},
				"id": 6
			},
			"interfaces/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "interfaces/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1269
						]
					},
					"id": 1270,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1253,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "119:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1254,
								"nodeType": "StructuredDocumentation",
								"src": "147:156:7",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1269,
							"linearizedBaseContracts": [
								1269
							],
							"name": "IERC721Receiver",
							"nameLocation": "315:15:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1255,
										"nodeType": "StructuredDocumentation",
										"src": "338:501:7",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1268,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "854:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "889:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "881:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "881:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "916:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "908:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "908:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "939:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "931:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "972:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "957:19:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1262,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "957:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "870:113:7"
									},
									"returnParameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "1002:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1265,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1002:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1001:8:7"
									},
									"scope": 1269,
									"src": "845:165:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1270,
							"src": "305:708:7",
							"usedErrors": []
						}
					],
					"src": "119:894:7"
				},
				"id": 7
			},
			"libraries/Address.sol": {
				"ast": {
					"absolutePath": "libraries/Address.sol",
					"exportedSymbols": {
						"Address": [
							1599
						]
					},
					"id": 1600,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1271,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "104:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1272,
								"nodeType": "StructuredDocumentation",
								"src": "132:69:8",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1599,
							"linearizedBaseContracts": [
								1599
							],
							"name": "Address",
							"nameLocation": "211:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1286,
										"nodeType": "Block",
										"src": "1518:260:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1280,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1275,
																"src": "1747:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1747:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1282,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1747:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1283,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1769:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1747:23:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1279,
												"id": 1285,
												"nodeType": "Return",
												"src": "1740:30:8"
											}
										]
									},
									"documentation": {
										"id": 1273,
										"nodeType": "StructuredDocumentation",
										"src": "226:1220:8",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1461:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1480:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1287,
												"src": "1472:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1472:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1471:17:8"
									},
									"returnParameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1287,
												"src": "1512:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1277,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1512:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1511:6:8"
									},
									"scope": 1599,
									"src": "1452:326:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1320,
										"nodeType": "Block",
										"src": "2782:246:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1298,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2809:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1599",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1599",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1297,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2801:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1296,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2801:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1299,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2801:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1300,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2801:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1301,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1292,
																"src": "2826:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2801:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1303,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2834:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1295,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2793:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2793:73:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1305,
												"nodeType": "ExpressionStatement",
												"src": "2793:73:8"
											},
											{
												"assignments": [
													1307,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1307,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2885:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1320,
														"src": "2880:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1306,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2880:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1314,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1312,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2928:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1308,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1290,
																"src": "2898:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1309,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2898:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1311,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1310,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1292,
																"src": "2920:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2898:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2898:33:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2879:52:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1316,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1307,
															"src": "2950:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1317,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2959:60:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1315,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2942:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2942:78:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1319,
												"nodeType": "ExpressionStatement",
												"src": "2942:78:8"
											}
										]
									},
									"documentation": {
										"id": 1288,
										"nodeType": "StructuredDocumentation",
										"src": "1786:919:8",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1321,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2720:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2746:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "2730:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1289,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2730:15:8",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2765:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "2757:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2757:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2729:43:8"
									},
									"returnParameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2782:0:8"
									},
									"scope": 1599,
									"src": "2711:317:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1338,
										"nodeType": "Block",
										"src": "3879:98:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1332,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1324,
															"src": "3919:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1333,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1326,
															"src": "3927:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1334,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3933:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1335,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3936:32:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1331,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1379,
															1423
														],
														"referencedDeclaration": 1423,
														"src": "3897:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3897:72:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1330,
												"id": 1337,
												"nodeType": "Return",
												"src": "3890:79:8"
											}
										]
									},
									"documentation": {
										"id": 1322,
										"nodeType": "StructuredDocumentation",
										"src": "3036:748:8",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1339,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3799:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3820:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "3812:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3812:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3841:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "3828:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1325,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3828:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3811:35:8"
									},
									"returnParameters": {
										"id": 1330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1329,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "3865:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1328,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3865:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:14:8"
									},
									"scope": 1599,
									"src": "3790:187:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1358,
										"nodeType": "Block",
										"src": "4358:78:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1352,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1342,
															"src": "4398:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1353,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1344,
															"src": "4406:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1354,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4412:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1355,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1346,
															"src": "4415:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1351,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1379,
															1423
														],
														"referencedDeclaration": 1423,
														"src": "4376:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4376:52:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1350,
												"id": 1357,
												"nodeType": "Return",
												"src": "4369:59:8"
											}
										]
									},
									"documentation": {
										"id": 1340,
										"nodeType": "StructuredDocumentation",
										"src": "3985:216:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "4216:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4247:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "4239:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4239:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4277:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "4264:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1343,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4264:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1346,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4306:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "4292:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1345,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4292:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4228:97:8"
									},
									"returnParameters": {
										"id": 1350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "4344:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1348,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4344:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4343:14:8"
									},
									"scope": 1599,
									"src": "4207:229:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1378,
										"nodeType": "Block",
										"src": "4924:113:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1372,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1362,
															"src": "4964:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1373,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1364,
															"src": "4972:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1374,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1366,
															"src": "4978:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1375,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4985:43:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1371,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1379,
															1423
														],
														"referencedDeclaration": 1423,
														"src": "4942:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4942:87:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1370,
												"id": 1377,
												"nodeType": "Return",
												"src": "4935:94:8"
											}
										]
									},
									"documentation": {
										"id": 1360,
										"nodeType": "StructuredDocumentation",
										"src": "4444:361:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1379,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4820:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4850:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "4842:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4842:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1364,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4871:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "4858:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1363,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4858:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1366,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4885:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "4877:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4877:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4841:50:8"
									},
									"returnParameters": {
										"id": 1370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1369,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "4910:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1368,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4910:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4909:14:8"
									},
									"scope": 1599,
									"src": "4811:226:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1422,
										"nodeType": "Block",
										"src": "5477:271:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1400,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1396,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5504:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1599",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1599",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1395,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5496:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1394,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5496:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1397,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5496:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1398,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5496:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1399,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1386,
																"src": "5521:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5496:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1401,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5528:40:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1393,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5488:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5488:81:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1403,
												"nodeType": "ExpressionStatement",
												"src": "5488:81:8"
											},
											{
												"assignments": [
													1405,
													1407
												],
												"declarations": [
													{
														"constant": false,
														"id": 1405,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5586:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1422,
														"src": "5581:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1404,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5581:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1407,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5608:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1422,
														"src": "5595:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1406,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5595:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1414,
												"initialValue": {
													"arguments": [
														{
															"id": 1412,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1384,
															"src": "5648:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1408,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1382,
																"src": "5622:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5622:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1411,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1410,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1386,
																"src": "5641:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5622:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5622:31:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5580:73:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1416,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1382,
															"src": "5698:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1417,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1405,
															"src": "5706:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1418,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1407,
															"src": "5715:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1419,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1388,
															"src": "5727:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1415,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1554,
														"src": "5671:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5671:69:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1392,
												"id": 1421,
												"nodeType": "Return",
												"src": "5664:76:8"
											}
										]
									},
									"documentation": {
										"id": 1380,
										"nodeType": "StructuredDocumentation",
										"src": "5045:242:8",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1423,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5302:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5342:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "5334:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1381,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5334:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5372:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "5359:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1383,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5359:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1386,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5395:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "5387:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5387:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5425:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "5411:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1387,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5411:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5323:121:8"
									},
									"returnParameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "5463:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1390,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5463:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5462:14:8"
									},
									"scope": 1599,
									"src": "5293:455:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1439,
										"nodeType": "Block",
										"src": "6033:99:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1434,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1426,
															"src": "6070:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1435,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1428,
															"src": "6078:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1436,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6084:39:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1433,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1440,
															1469
														],
														"referencedDeclaration": 1469,
														"src": "6051:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6051:73:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1432,
												"id": 1438,
												"nodeType": "Return",
												"src": "6044:80:8"
											}
										]
									},
									"documentation": {
										"id": 1424,
										"nodeType": "StructuredDocumentation",
										"src": "5756:171:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1440,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5942:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5969:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1440,
												"src": "5961:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5961:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1428,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5990:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1440,
												"src": "5977:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1427,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5977:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5960:35:8"
									},
									"returnParameters": {
										"id": 1432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1440,
												"src": "6019:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1430,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6019:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6018:14:8"
									},
									"scope": 1599,
									"src": "5933:199:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1468,
										"nodeType": "Block",
										"src": "6486:171:8",
										"statements": [
											{
												"assignments": [
													1453,
													1455
												],
												"declarations": [
													{
														"constant": false,
														"id": 1453,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6503:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1468,
														"src": "6498:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1452,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6498:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1455,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6525:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1468,
														"src": "6512:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1454,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6512:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1460,
												"initialValue": {
													"arguments": [
														{
															"id": 1458,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1445,
															"src": "6557:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1456,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1443,
															"src": "6539:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1457,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6539:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6539:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6497:65:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1462,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1443,
															"src": "6607:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1463,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1453,
															"src": "6615:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1464,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1455,
															"src": "6624:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1465,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1447,
															"src": "6636:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1461,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1554,
														"src": "6580:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6580:69:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1451,
												"id": 1467,
												"nodeType": "Return",
												"src": "6573:76:8"
											}
										]
									},
									"documentation": {
										"id": 1441,
										"nodeType": "StructuredDocumentation",
										"src": "6140:178:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1469,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6333:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6370:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "6362:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6362:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1445,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6400:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "6387:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1444,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6387:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1447,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6429:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "6415:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1446,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6415:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6351:97:8"
									},
									"returnParameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "6472:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1449,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6472:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6471:14:8"
									},
									"scope": 1599,
									"src": "6324:333:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1485,
										"nodeType": "Block",
										"src": "6941:103:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1480,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1472,
															"src": "6980:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1481,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1474,
															"src": "6988:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1482,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6994:41:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1479,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1486,
															1515
														],
														"referencedDeclaration": 1515,
														"src": "6959:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6959:77:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1478,
												"id": 1484,
												"nodeType": "Return",
												"src": "6952:84:8"
											}
										]
									},
									"documentation": {
										"id": 1470,
										"nodeType": "StructuredDocumentation",
										"src": "6665:173:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1486,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6853:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6882:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "6874:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6874:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6903:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "6890:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1473,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6890:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6873:35:8"
									},
									"returnParameters": {
										"id": 1478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "6927:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1476,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6927:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6926:14:8"
									},
									"scope": 1599,
									"src": "6844:200:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1514,
										"nodeType": "Block",
										"src": "7397:173:8",
										"statements": [
											{
												"assignments": [
													1499,
													1501
												],
												"declarations": [
													{
														"constant": false,
														"id": 1499,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7414:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1514,
														"src": "7409:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1498,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7409:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1501,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7436:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1514,
														"src": "7423:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1500,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7423:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1506,
												"initialValue": {
													"arguments": [
														{
															"id": 1504,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1491,
															"src": "7470:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1502,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1489,
															"src": "7450:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1503,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7450:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7450:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7408:67:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1508,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1489,
															"src": "7520:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1509,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1499,
															"src": "7528:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1510,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1501,
															"src": "7537:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1511,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1493,
															"src": "7549:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1507,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1554,
														"src": "7493:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7493:69:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1497,
												"id": 1513,
												"nodeType": "Return",
												"src": "7486:76:8"
											}
										]
									},
									"documentation": {
										"id": 1487,
										"nodeType": "StructuredDocumentation",
										"src": "7052:180:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1515,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7247:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1489,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7286:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "7278:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7278:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7316:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "7303:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1490,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7303:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1493,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7345:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "7331:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1492,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7331:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7267:97:8"
									},
									"returnParameters": {
										"id": 1497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1496,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "7383:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1495,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7383:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7382:14:8"
									},
									"scope": 1599,
									"src": "7238:332:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1553,
										"nodeType": "Block",
										"src": "8065:445:8",
										"statements": [
											{
												"condition": {
													"id": 1529,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1520,
													"src": "8080:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1551,
													"nodeType": "Block",
													"src": "8443:60:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1547,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1522,
																		"src": "8466:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1548,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1524,
																		"src": "8478:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1546,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1598,
																	"src": "8458:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1549,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8458:33:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1550,
															"nodeType": "ExpressionStatement",
															"src": "8458:33:8"
														}
													]
												},
												"id": 1552,
												"nodeType": "IfStatement",
												"src": "8076:427:8",
												"trueBody": {
													"id": 1545,
													"nodeType": "Block",
													"src": "8089:348:8",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1533,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1530,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1522,
																		"src": "8108:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "8108:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1532,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8129:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8108:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1542,
															"nodeType": "IfStatement",
															"src": "8104:290:8",
															"trueBody": {
																"id": 1541,
																"nodeType": "Block",
																"src": "8132:262:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1536,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1518,
																							"src": "8337:6:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1535,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1287,
																						"src": "8326:10:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 1537,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8326:18:8",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 1538,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8346:31:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 1534,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8318:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1539,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8318:60:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1540,
																		"nodeType": "ExpressionStatement",
																		"src": "8318:60:8"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1543,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1522,
																"src": "8415:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1528,
															"id": 1544,
															"nodeType": "Return",
															"src": "8408:17:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1516,
										"nodeType": "StructuredDocumentation",
										"src": "7578:282:8",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 1554,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7875:26:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1518,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7920:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "7912:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7912:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1520,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7942:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "7937:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1519,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7937:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7973:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "7960:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1521,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7960:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1524,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8008:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "7994:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1523,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7994:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7901:126:8"
									},
									"returnParameters": {
										"id": 1528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1527,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "8051:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1526,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8051:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8050:14:8"
									},
									"scope": 1599,
									"src": "7866:644:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1577,
										"nodeType": "Block",
										"src": "8903:141:8",
										"statements": [
											{
												"condition": {
													"id": 1566,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1557,
													"src": "8918:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1575,
													"nodeType": "Block",
													"src": "8977:60:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1571,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1559,
																		"src": "9000:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1572,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1561,
																		"src": "9012:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1570,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1598,
																	"src": "8992:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1573,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8992:33:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1574,
															"nodeType": "ExpressionStatement",
															"src": "8992:33:8"
														}
													]
												},
												"id": 1576,
												"nodeType": "IfStatement",
												"src": "8914:123:8",
												"trueBody": {
													"id": 1569,
													"nodeType": "Block",
													"src": "8927:44:8",
													"statements": [
														{
															"expression": {
																"id": 1567,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1559,
																"src": "8949:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1565,
															"id": 1568,
															"nodeType": "Return",
															"src": "8942:17:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1555,
										"nodeType": "StructuredDocumentation",
										"src": "8518:215:8",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 1578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8748:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8780:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1578,
												"src": "8775:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1556,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8775:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1559,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8811:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1578,
												"src": "8798:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1558,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8798:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8846:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1578,
												"src": "8832:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1560,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8832:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8764:101:8"
									},
									"returnParameters": {
										"id": 1565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1564,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1578,
												"src": "8889:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1563,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8889:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8888:14:8"
									},
									"scope": 1599,
									"src": "8739:305:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1597,
										"nodeType": "Block",
										"src": "9135:469:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1585,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1580,
															"src": "9213:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1586,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "9213:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1587,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9233:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9213:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1595,
													"nodeType": "Block",
													"src": "9550:47:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1592,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1582,
																		"src": "9572:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1591,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9565:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 1593,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9565:20:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1594,
															"nodeType": "ExpressionStatement",
															"src": "9565:20:8"
														}
													]
												},
												"id": 1596,
												"nodeType": "IfStatement",
												"src": "9209:388:8",
												"trueBody": {
													"id": 1590,
													"nodeType": "Block",
													"src": "9236:308:8",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "9397:136:8",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9416:40:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9445:10:8"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "9439:5:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9439:17:8"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "9420:15:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9485:2:8",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9489:10:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9481:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9481:19:8"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9502:15:8"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9474:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9474:44:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9474:44:8"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 1580,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9445:10:8",
																	"valueSize": 1
																},
																{
																	"declaration": 1580,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9489:10:8",
																	"valueSize": 1
																}
															],
															"id": 1589,
															"nodeType": "InlineAssembly",
															"src": "9388:145:8"
														}
													]
												}
											}
										]
									},
									"id": 1598,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "9061:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1580,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "9082:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "9069:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1579,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9069:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1582,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "9108:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "9094:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1581,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9094:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9068:53:8"
									},
									"returnParameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9135:0:8"
									},
									"scope": 1599,
									"src": "9052:552:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1600,
							"src": "203:9404:8",
							"usedErrors": []
						}
					],
					"src": "104:9505:8"
				},
				"id": 8
			},
			"libraries/Math.sol": {
				"ast": {
					"absolutePath": "libraries/Math.sol",
					"exportedSymbols": {
						"Math": [
							2465
						]
					},
					"id": 2466,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1601,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1602,
								"nodeType": "StructuredDocumentation",
								"src": "133:75:9",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2465,
							"linearizedBaseContracts": [
								2465
							],
							"name": "Math",
							"nameLocation": "218:4:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 1606,
									"members": [
										{
											"id": 1603,
											"name": "Down",
											"nameLocation": "255:4:9",
											"nodeType": "EnumValue",
											"src": "255:4:9"
										},
										{
											"id": 1604,
											"name": "Up",
											"nameLocation": "298:2:9",
											"nodeType": "EnumValue",
											"src": "298:2:9"
										},
										{
											"id": 1605,
											"name": "Zero",
											"nameLocation": "330:4:9",
											"nodeType": "EnumValue",
											"src": "330:4:9"
										}
									],
									"name": "Rounding",
									"nameLocation": "235:8:9",
									"nodeType": "EnumDefinition",
									"src": "230:126:9"
								},
								{
									"body": {
										"id": 1623,
										"nodeType": "Block",
										"src": "498:39:9",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1618,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1616,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1609,
															"src": "516:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1617,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1611,
															"src": "520:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "516:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1620,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1611,
														"src": "528:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "516:13:9",
													"trueExpression": {
														"id": 1619,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1609,
														"src": "524:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1615,
												"id": 1622,
												"nodeType": "Return",
												"src": "509:20:9"
											}
										]
									},
									"documentation": {
										"id": 1607,
										"nodeType": "StructuredDocumentation",
										"src": "364:61:9",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1624,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "440:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1609,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "452:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1624,
												"src": "444:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "444:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1611,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "463:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1624,
												"src": "455:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "455:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "443:22:9"
									},
									"returnParameters": {
										"id": 1615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1614,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1624,
												"src": "489:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "489:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "488:9:9"
									},
									"scope": 2465,
									"src": "431:106:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1641,
										"nodeType": "Block",
										"src": "680:39:9",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1636,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1634,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1627,
															"src": "698:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1635,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1629,
															"src": "702:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "698:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1638,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1629,
														"src": "710:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "698:13:9",
													"trueExpression": {
														"id": 1637,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1627,
														"src": "706:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1633,
												"id": 1640,
												"nodeType": "Return",
												"src": "691:20:9"
											}
										]
									},
									"documentation": {
										"id": 1625,
										"nodeType": "StructuredDocumentation",
										"src": "545:62:9",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1642,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "622:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1627,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "634:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1642,
												"src": "626:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1626,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "626:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1629,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "645:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1642,
												"src": "637:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1628,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "625:22:9"
									},
									"returnParameters": {
										"id": 1633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1632,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1642,
												"src": "671:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "671:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "670:9:9"
									},
									"scope": 2465,
									"src": "613:106:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1664,
										"nodeType": "Block",
										"src": "909:85:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1654,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1652,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1645,
																	"src": "966:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1653,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1647,
																	"src": "970:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "966:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1655,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "965:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1661,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1658,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1656,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1645,
																		"src": "976:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1657,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1647,
																		"src": "980:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "976:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1659,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "975:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 1660,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "985:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "975:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "965:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1651,
												"id": 1663,
												"nodeType": "Return",
												"src": "958:28:9"
											}
										]
									},
									"documentation": {
										"id": 1643,
										"nodeType": "StructuredDocumentation",
										"src": "727:105:9",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 1665,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "847:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1645,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "863:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1665,
												"src": "855:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "855:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1647,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "874:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1665,
												"src": "866:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1646,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "866:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "854:22:9"
									},
									"returnParameters": {
										"id": 1651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1650,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1665,
												"src": "900:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "899:9:9"
									},
									"scope": 2465,
									"src": "838:156:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1689,
										"nodeType": "Block",
										"src": "1272:126:9",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1677,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1675,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1668,
															"src": "1362:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1676,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1367:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1362:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1686,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1684,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1681,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1679,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1668,
																			"src": "1376:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1680,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1380:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1376:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1682,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1375:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1683,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1670,
																"src": "1385:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1375:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1685,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1389:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1375:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1362:28:9",
													"trueExpression": {
														"hexValue": "30",
														"id": 1678,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1371:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1674,
												"id": 1688,
												"nodeType": "Return",
												"src": "1355:35:9"
											}
										]
									},
									"documentation": {
										"id": 1666,
										"nodeType": "StructuredDocumentation",
										"src": "1002:193:9",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 1690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1210:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1668,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1226:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "1218:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1218:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1670,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1237:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "1229:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1229:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1217:22:9"
									},
									"returnParameters": {
										"id": 1674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1673,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "1263:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1262:9:9"
									},
									"scope": 2465,
									"src": "1201:197:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1812,
										"nodeType": "Block",
										"src": "1819:4194:9",
										"statements": [
											{
												"id": 1811,
												"nodeType": "UncheckedBlock",
												"src": "1830:4176:9",
												"statements": [
													{
														"assignments": [
															1703
														],
														"declarations": [
															{
																"constant": false,
																"id": 1703,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2163:5:9",
																"nodeType": "VariableDeclaration",
																"scope": 1811,
																"src": "2155:13:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1702,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2155:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1704,
														"nodeType": "VariableDeclarationStatement",
														"src": "2155:13:9"
													},
													{
														"assignments": [
															1706
														],
														"declarations": [
															{
																"constant": false,
																"id": 1706,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2236:5:9",
																"nodeType": "VariableDeclaration",
																"scope": 1811,
																"src": "2228:13:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1705,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2228:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1707,
														"nodeType": "VariableDeclarationStatement",
														"src": "2228:13:9"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "2309:161:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2328:30:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2345:1:9"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2348:1:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2355:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2351:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2351:6:9"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "2338:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2338:20:9"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "2332:2:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2376:18:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2389:1:9"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2392:1:9"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "2385:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2385:9:9"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "2376:5:9"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2412:43:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2429:2:9"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2433:5:9"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2425:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2425:14:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2444:2:9"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2448:5:9"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "2441:2:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2441:13:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2421:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2421:34:9"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "2412:5:9"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 1703,
																"isOffset": false,
																"isSlot": false,
																"src": "2376:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1703,
																"isOffset": false,
																"isSlot": false,
																"src": "2433:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1703,
																"isOffset": false,
																"isSlot": false,
																"src": "2448:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1706,
																"isOffset": false,
																"isSlot": false,
																"src": "2412:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1693,
																"isOffset": false,
																"isSlot": false,
																"src": "2345:1:9",
																"valueSize": 1
															},
															{
																"declaration": 1693,
																"isOffset": false,
																"isSlot": false,
																"src": "2389:1:9",
																"valueSize": 1
															},
															{
																"declaration": 1695,
																"isOffset": false,
																"isSlot": false,
																"src": "2348:1:9",
																"valueSize": 1
															},
															{
																"declaration": 1695,
																"isOffset": false,
																"isSlot": false,
																"src": "2392:1:9",
																"valueSize": 1
															}
														],
														"id": 1708,
														"nodeType": "InlineAssembly",
														"src": "2300:170:9"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1711,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1709,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1706,
																"src": "2554:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1710,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2563:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2554:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1717,
														"nodeType": "IfStatement",
														"src": "2550:373:9",
														"trueBody": {
															"id": 1716,
															"nodeType": "Block",
															"src": "2566:357:9",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1714,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1712,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1703,
																			"src": "2888:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1713,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1697,
																			"src": "2896:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2888:19:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1701,
																	"id": 1715,
																	"nodeType": "Return",
																	"src": "2881:26:9"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1721,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1719,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1697,
																		"src": "3036:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 1720,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1706,
																		"src": "3050:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3036:19:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "4d6174683a206d756c446976206f766572666c6f77",
																	"id": 1722,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3057:23:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	},
																	"value": "Math: mulDiv overflow"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	}
																],
																"id": 1718,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "3028:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1723,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3028:53:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1724,
														"nodeType": "ExpressionStatement",
														"src": "3028:53:9"
													},
													{
														"assignments": [
															1726
														],
														"declarations": [
															{
																"constant": false,
																"id": 1726,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "3352:9:9",
																"nodeType": "VariableDeclaration",
																"scope": 1811,
																"src": "3344:17:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1725,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3344:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1727,
														"nodeType": "VariableDeclarationStatement",
														"src": "3344:17:9"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3385:298:9",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3456:38:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "3476:1:9"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3479:1:9"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3482:11:9"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "3469:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3469:25:9"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "3456:9:9"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3579:41:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "3592:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "3602:9:9"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "3613:5:9"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "3599:2:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3599:20:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3588:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3588:32:9"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "3579:5:9"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3638:30:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3651:5:9"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "3658:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3647:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3647:21:9"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3638:5:9"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 1697,
																"isOffset": false,
																"isSlot": false,
																"src": "3482:11:9",
																"valueSize": 1
															},
															{
																"declaration": 1703,
																"isOffset": false,
																"isSlot": false,
																"src": "3613:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1703,
																"isOffset": false,
																"isSlot": false,
																"src": "3638:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1703,
																"isOffset": false,
																"isSlot": false,
																"src": "3651:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1706,
																"isOffset": false,
																"isSlot": false,
																"src": "3579:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1706,
																"isOffset": false,
																"isSlot": false,
																"src": "3592:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1726,
																"isOffset": false,
																"isSlot": false,
																"src": "3456:9:9",
																"valueSize": 1
															},
															{
																"declaration": 1726,
																"isOffset": false,
																"isSlot": false,
																"src": "3602:9:9",
																"valueSize": 1
															},
															{
																"declaration": 1726,
																"isOffset": false,
																"isSlot": false,
																"src": "3658:9:9",
																"valueSize": 1
															},
															{
																"declaration": 1693,
																"isOffset": false,
																"isSlot": false,
																"src": "3476:1:9",
																"valueSize": 1
															},
															{
																"declaration": 1695,
																"isOffset": false,
																"isSlot": false,
																"src": "3479:1:9",
																"valueSize": 1
															}
														],
														"id": 1728,
														"nodeType": "InlineAssembly",
														"src": "3376:307:9"
													},
													{
														"assignments": [
															1730
														],
														"declarations": [
															{
																"constant": false,
																"id": 1730,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "4004:4:9",
																"nodeType": "VariableDeclaration",
																"scope": 1811,
																"src": "3996:12:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1729,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3996:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1738,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1737,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1731,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1697,
																"src": "4011:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1735,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1733,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "4026:12:9",
																			"subExpression": {
																				"id": 1732,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1697,
																				"src": "4027:11:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1734,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4041:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "4026:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1736,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4025:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4011:32:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3996:47:9"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "4067:371:9",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "4134:37:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "4153:11:9"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "4166:4:9"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "4149:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4149:22:9"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "4134:11:9"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4241:25:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "4254:5:9"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "4261:4:9"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "4250:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4250:16:9"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "4241:5:9"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4384:39:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4404:1:9",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "4407:4:9"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "4400:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4400:12:9"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "4414:4:9"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4396:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4396:23:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4421:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4392:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4392:31:9"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "4384:4:9"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 1697,
																"isOffset": false,
																"isSlot": false,
																"src": "4134:11:9",
																"valueSize": 1
															},
															{
																"declaration": 1697,
																"isOffset": false,
																"isSlot": false,
																"src": "4153:11:9",
																"valueSize": 1
															},
															{
																"declaration": 1703,
																"isOffset": false,
																"isSlot": false,
																"src": "4241:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1703,
																"isOffset": false,
																"isSlot": false,
																"src": "4254:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1730,
																"isOffset": false,
																"isSlot": false,
																"src": "4166:4:9",
																"valueSize": 1
															},
															{
																"declaration": 1730,
																"isOffset": false,
																"isSlot": false,
																"src": "4261:4:9",
																"valueSize": 1
															},
															{
																"declaration": 1730,
																"isOffset": false,
																"isSlot": false,
																"src": "4384:4:9",
																"valueSize": 1
															},
															{
																"declaration": 1730,
																"isOffset": false,
																"isSlot": false,
																"src": "4407:4:9",
																"valueSize": 1
															},
															{
																"declaration": 1730,
																"isOffset": false,
																"isSlot": false,
																"src": "4414:4:9",
																"valueSize": 1
															}
														],
														"id": 1739,
														"nodeType": "InlineAssembly",
														"src": "4058:380:9"
													},
													{
														"expression": {
															"id": 1744,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1740,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1703,
																"src": "4507:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1743,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1741,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1706,
																	"src": "4516:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1742,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1730,
																	"src": "4524:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4516:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4507:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1745,
														"nodeType": "ExpressionStatement",
														"src": "4507:21:9"
													},
													{
														"assignments": [
															1747
														],
														"declarations": [
															{
																"constant": false,
																"id": 1747,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4859:7:9",
																"nodeType": "VariableDeclaration",
																"scope": 1811,
																"src": "4851:15:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1746,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4851:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1754,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1753,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1750,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 1748,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4870:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1749,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1697,
																			"src": "4874:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4870:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1751,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4869:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1752,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4889:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4869:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4851:39:9"
													},
													{
														"expression": {
															"id": 1761,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1755,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1747,
																"src": "5111:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1760,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1756,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5122:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1759,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1757,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1697,
																		"src": "5126:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1758,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1747,
																		"src": "5140:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5122:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5111:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1762,
														"nodeType": "ExpressionStatement",
														"src": "5111:36:9"
													},
													{
														"expression": {
															"id": 1769,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1763,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1747,
																"src": "5181:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1768,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1764,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5192:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1767,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1765,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1697,
																		"src": "5196:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1766,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1747,
																		"src": "5210:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5196:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5192:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5181:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1770,
														"nodeType": "ExpressionStatement",
														"src": "5181:36:9"
													},
													{
														"expression": {
															"id": 1777,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1771,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1747,
																"src": "5252:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1772,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5263:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1775,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1773,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1697,
																		"src": "5267:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1774,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1747,
																		"src": "5281:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5267:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5263:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5252:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1778,
														"nodeType": "ExpressionStatement",
														"src": "5252:36:9"
													},
													{
														"expression": {
															"id": 1785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1779,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1747,
																"src": "5323:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1784,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1780,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5334:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1783,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1781,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1697,
																		"src": "5338:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1782,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1747,
																		"src": "5352:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5338:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5334:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5323:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1786,
														"nodeType": "ExpressionStatement",
														"src": "5323:36:9"
													},
													{
														"expression": {
															"id": 1793,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1787,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1747,
																"src": "5394:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1792,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1788,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5405:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1791,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1789,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1697,
																		"src": "5409:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1790,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1747,
																		"src": "5423:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5409:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5405:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5394:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1794,
														"nodeType": "ExpressionStatement",
														"src": "5394:36:9"
													},
													{
														"expression": {
															"id": 1801,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1795,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1747,
																"src": "5466:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1800,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1796,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5477:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1799,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1797,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1697,
																		"src": "5481:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1798,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1747,
																		"src": "5495:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5481:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5477:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5466:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1802,
														"nodeType": "ExpressionStatement",
														"src": "5466:36:9"
													},
													{
														"expression": {
															"id": 1807,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1803,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1700,
																"src": "5942:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1806,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1804,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1703,
																	"src": "5951:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1805,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1747,
																	"src": "5959:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5951:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5942:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1808,
														"nodeType": "ExpressionStatement",
														"src": "5942:24:9"
													},
													{
														"expression": {
															"id": 1809,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1700,
															"src": "5988:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1701,
														"id": 1810,
														"nodeType": "Return",
														"src": "5981:13:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1691,
										"nodeType": "StructuredDocumentation",
										"src": "1406:309:9",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 1813,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1730:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1693,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1745:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1813,
												"src": "1737:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1737:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1695,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1756:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1813,
												"src": "1748:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1748:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1697,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1767:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1813,
												"src": "1759:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1759:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1736:43:9"
									},
									"returnParameters": {
										"id": 1701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1700,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1811:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1813,
												"src": "1803:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1699,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1803:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1802:16:9"
									},
									"scope": 2465,
									"src": "1721:4292:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1856,
										"nodeType": "Block",
										"src": "6260:195:9",
										"statements": [
											{
												"assignments": [
													1829
												],
												"declarations": [
													{
														"constant": false,
														"id": 1829,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "6279:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1856,
														"src": "6271:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1828,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6271:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1835,
												"initialValue": {
													"arguments": [
														{
															"id": 1831,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1816,
															"src": "6295:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1832,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1818,
															"src": "6298:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1833,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1820,
															"src": "6301:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1830,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1813,
															1857
														],
														"referencedDeclaration": 1813,
														"src": "6288:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6288:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6271:42:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$1606",
															"typeString": "enum Math.Rounding"
														},
														"id": 1839,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1836,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1823,
															"src": "6328:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$1606",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1837,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1606,
																"src": "6340:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$1606_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 1838,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1604,
															"src": "6340:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$1606",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "6328:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1846,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1841,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1816,
																	"src": "6362:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1842,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1818,
																	"src": "6365:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1843,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1820,
																	"src": "6368:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1840,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "6355:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1844,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6355:25:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1845,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6383:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6355:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6328:56:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1853,
												"nodeType": "IfStatement",
												"src": "6324:100:9",
												"trueBody": {
													"id": 1852,
													"nodeType": "Block",
													"src": "6386:38:9",
													"statements": [
														{
															"expression": {
																"id": 1850,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1848,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1829,
																	"src": "6401:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1849,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6411:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6401:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1851,
															"nodeType": "ExpressionStatement",
															"src": "6401:11:9"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1854,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1829,
													"src": "6441:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1827,
												"id": 1855,
												"nodeType": "Return",
												"src": "6434:13:9"
											}
										]
									},
									"documentation": {
										"id": 1814,
										"nodeType": "StructuredDocumentation",
										"src": "6021:123:9",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 1857,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "6159:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1816,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "6174:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1857,
												"src": "6166:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1815,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6166:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1818,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "6185:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1857,
												"src": "6177:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6177:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1820,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "6196:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1857,
												"src": "6188:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1819,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6188:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1823,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "6218:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1857,
												"src": "6209:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1606",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1822,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1821,
														"name": "Rounding",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1606,
														"src": "6209:8:9"
													},
													"referencedDeclaration": 1606,
													"src": "6209:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1606",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6165:62:9"
									},
									"returnParameters": {
										"id": 1827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1826,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1857,
												"src": "6251:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1825,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6251:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6250:9:9"
									},
									"scope": 2465,
									"src": "6150:305:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1968,
										"nodeType": "Block",
										"src": "6738:1616:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1865,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1860,
														"src": "6753:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1866,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6758:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6753:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1871,
												"nodeType": "IfStatement",
												"src": "6749:47:9",
												"trueBody": {
													"id": 1870,
													"nodeType": "Block",
													"src": "6761:35:9",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1868,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6783:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1864,
															"id": 1869,
															"nodeType": "Return",
															"src": "6776:8:9"
														}
													]
												}
											},
											{
												"assignments": [
													1873
												],
												"declarations": [
													{
														"constant": false,
														"id": 1873,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7495:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1968,
														"src": "7487:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1872,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7487:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1882,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1874,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7504:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1879,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1876,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1860,
																			"src": "7515:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1875,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2137,
																			2173
																		],
																		"referencedDeclaration": 2137,
																		"src": "7510:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1877,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7510:7:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1878,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7521:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7510:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1880,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7509:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7504:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7487:36:9"
											},
											{
												"id": 1967,
												"nodeType": "UncheckedBlock",
												"src": "7930:417:9",
												"statements": [
													{
														"expression": {
															"id": 1892,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1883,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1873,
																"src": "7955:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1891,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1888,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1884,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1873,
																				"src": "7965:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1887,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1885,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1860,
																					"src": "7974:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1886,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1873,
																					"src": "7978:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7974:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7965:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1889,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7964:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1890,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7989:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7964:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7955:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1893,
														"nodeType": "ExpressionStatement",
														"src": "7955:35:9"
													},
													{
														"expression": {
															"id": 1903,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1894,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1873,
																"src": "8005:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1902,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1899,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1895,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1873,
																				"src": "8015:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1898,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1896,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1860,
																					"src": "8024:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1897,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1873,
																					"src": "8028:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8024:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8015:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1900,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8014:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1901,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8039:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8014:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8005:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1904,
														"nodeType": "ExpressionStatement",
														"src": "8005:35:9"
													},
													{
														"expression": {
															"id": 1914,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1905,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1873,
																"src": "8055:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1913,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1910,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1906,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1873,
																				"src": "8065:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1909,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1907,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1860,
																					"src": "8074:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1908,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1873,
																					"src": "8078:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8074:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8065:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1911,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8064:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1912,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8089:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8064:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8055:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1915,
														"nodeType": "ExpressionStatement",
														"src": "8055:35:9"
													},
													{
														"expression": {
															"id": 1925,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1916,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1873,
																"src": "8105:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1924,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1921,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1917,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1873,
																				"src": "8115:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1920,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1918,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1860,
																					"src": "8124:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1919,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1873,
																					"src": "8128:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8124:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8115:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1922,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8114:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1923,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8139:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8114:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8105:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1926,
														"nodeType": "ExpressionStatement",
														"src": "8105:35:9"
													},
													{
														"expression": {
															"id": 1936,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1927,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1873,
																"src": "8155:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1935,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1932,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1928,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1873,
																				"src": "8165:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1931,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1929,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1860,
																					"src": "8174:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1930,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1873,
																					"src": "8178:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8174:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8165:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1933,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8164:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1934,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8189:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8164:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8155:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1937,
														"nodeType": "ExpressionStatement",
														"src": "8155:35:9"
													},
													{
														"expression": {
															"id": 1947,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1938,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1873,
																"src": "8205:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1946,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1943,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1939,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1873,
																				"src": "8215:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1942,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1940,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1860,
																					"src": "8224:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1941,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1873,
																					"src": "8228:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8224:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8215:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1944,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8214:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1945,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8239:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8214:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8205:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1948,
														"nodeType": "ExpressionStatement",
														"src": "8205:35:9"
													},
													{
														"expression": {
															"id": 1958,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1949,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1873,
																"src": "8255:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1957,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1954,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1950,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1873,
																				"src": "8265:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1953,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1951,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1860,
																					"src": "8274:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1952,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1873,
																					"src": "8278:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8274:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8265:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1955,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8264:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1956,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8289:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8264:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8255:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1959,
														"nodeType": "ExpressionStatement",
														"src": "8255:35:9"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1961,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1873,
																	"src": "8316:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1964,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1962,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1860,
																		"src": "8324:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1963,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1873,
																		"src": "8328:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8324:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1960,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1642,
																"src": "8312:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1965,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8312:23:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1864,
														"id": 1966,
														"nodeType": "Return",
														"src": "8305:30:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1858,
										"nodeType": "StructuredDocumentation",
										"src": "6463:212:9",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 1969,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6690:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1860,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6703:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1969,
												"src": "6695:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6695:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6694:11:9"
									},
									"returnParameters": {
										"id": 1864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1863,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1969,
												"src": "6729:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1862,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6729:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6728:9:9"
									},
									"scope": 2465,
									"src": "6681:1673:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2004,
										"nodeType": "Block",
										"src": "8535:166:9",
										"statements": [
											{
												"id": 2003,
												"nodeType": "UncheckedBlock",
												"src": "8546:148:9",
												"statements": [
													{
														"assignments": [
															1981
														],
														"declarations": [
															{
																"constant": false,
																"id": 1981,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "8579:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 2003,
																"src": "8571:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1980,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8571:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1985,
														"initialValue": {
															"arguments": [
																{
																	"id": 1983,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1972,
																	"src": "8593:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1982,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1969,
																	2005
																],
																"referencedDeclaration": 1969,
																"src": "8588:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1984,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8588:7:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8571:24:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2001,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1986,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1981,
																"src": "8617:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1996,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1606",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1990,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1987,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1975,
																					"src": "8627:8:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1606",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1988,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1606,
																						"src": "8639:8:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1606_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1989,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1604,
																					"src": "8639:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1606",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "8627:23:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1995,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1993,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1991,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1981,
																						"src": "8654:6:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1992,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1981,
																						"src": "8663:6:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8654:15:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1994,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1972,
																					"src": "8672:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8654:19:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "8627:46:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1998,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8680:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1999,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "8627:54:9",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1997,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8676:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2000,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8626:56:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "8617:65:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1979,
														"id": 2002,
														"nodeType": "Return",
														"src": "8610:72:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1970,
										"nodeType": "StructuredDocumentation",
										"src": "8362:91:9",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2005,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8468:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1972,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8481:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2005,
												"src": "8473:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1971,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8473:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1975,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8493:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2005,
												"src": "8484:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1606",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1974,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1973,
														"name": "Rounding",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1606,
														"src": "8484:8:9"
													},
													"referencedDeclaration": 1606,
													"src": "8484:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1606",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8472:30:9"
									},
									"returnParameters": {
										"id": 1979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1978,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2005,
												"src": "8526:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1977,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8526:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8525:9:9"
									},
									"scope": 2465,
									"src": "8459:242:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2136,
										"nodeType": "Block",
										"src": "8892:958:9",
										"statements": [
											{
												"assignments": [
													2014
												],
												"declarations": [
													{
														"constant": false,
														"id": 2014,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8911:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 2136,
														"src": "8903:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2013,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8903:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2016,
												"initialValue": {
													"hexValue": "30",
													"id": 2015,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8920:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8903:18:9"
											},
											{
												"id": 2133,
												"nodeType": "UncheckedBlock",
												"src": "8932:887:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2021,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2019,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2017,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2008,
																	"src": "8961:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2018,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8970:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "8961:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2020,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8976:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8961:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2031,
														"nodeType": "IfStatement",
														"src": "8957:102:9",
														"trueBody": {
															"id": 2030,
															"nodeType": "Block",
															"src": "8979:80:9",
															"statements": [
																{
																	"expression": {
																		"id": 2024,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2022,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2008,
																			"src": "8998:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2023,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9008:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8998:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2025,
																	"nodeType": "ExpressionStatement",
																	"src": "8998:13:9"
																},
																{
																	"expression": {
																		"id": 2028,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2026,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2014,
																			"src": "9030:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2027,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9040:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "9030:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2029,
																	"nodeType": "ExpressionStatement",
																	"src": "9030:13:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2036,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2034,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2032,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2008,
																	"src": "9077:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2033,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9086:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "9077:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2035,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9091:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9077:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2046,
														"nodeType": "IfStatement",
														"src": "9073:99:9",
														"trueBody": {
															"id": 2045,
															"nodeType": "Block",
															"src": "9094:78:9",
															"statements": [
																{
																	"expression": {
																		"id": 2039,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2037,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2008,
																			"src": "9113:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2038,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9123:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "9113:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2040,
																	"nodeType": "ExpressionStatement",
																	"src": "9113:12:9"
																},
																{
																	"expression": {
																		"id": 2043,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2041,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2014,
																			"src": "9144:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2042,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9154:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "9144:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2044,
																	"nodeType": "ExpressionStatement",
																	"src": "9144:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2051,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2049,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2047,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2008,
																	"src": "9190:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2048,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9199:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "9190:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2050,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9204:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9190:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2061,
														"nodeType": "IfStatement",
														"src": "9186:99:9",
														"trueBody": {
															"id": 2060,
															"nodeType": "Block",
															"src": "9207:78:9",
															"statements": [
																{
																	"expression": {
																		"id": 2054,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2052,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2008,
																			"src": "9226:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2053,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9236:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9226:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2055,
																	"nodeType": "ExpressionStatement",
																	"src": "9226:12:9"
																},
																{
																	"expression": {
																		"id": 2058,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2056,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2014,
																			"src": "9257:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2057,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9267:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9257:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2059,
																	"nodeType": "ExpressionStatement",
																	"src": "9257:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2066,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2064,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2062,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2008,
																	"src": "9303:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2063,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9312:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "9303:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2065,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9317:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9303:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2076,
														"nodeType": "IfStatement",
														"src": "9299:99:9",
														"trueBody": {
															"id": 2075,
															"nodeType": "Block",
															"src": "9320:78:9",
															"statements": [
																{
																	"expression": {
																		"id": 2069,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2067,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2008,
																			"src": "9339:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2068,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9349:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9339:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2070,
																	"nodeType": "ExpressionStatement",
																	"src": "9339:12:9"
																},
																{
																	"expression": {
																		"id": 2073,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2071,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2014,
																			"src": "9370:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2072,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9380:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9370:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2074,
																	"nodeType": "ExpressionStatement",
																	"src": "9370:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2081,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2079,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2077,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2008,
																	"src": "9416:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2078,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9425:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "9416:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2080,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9429:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9416:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2091,
														"nodeType": "IfStatement",
														"src": "9412:96:9",
														"trueBody": {
															"id": 2090,
															"nodeType": "Block",
															"src": "9432:76:9",
															"statements": [
																{
																	"expression": {
																		"id": 2084,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2082,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2008,
																			"src": "9451:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2083,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9461:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9451:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2085,
																	"nodeType": "ExpressionStatement",
																	"src": "9451:11:9"
																},
																{
																	"expression": {
																		"id": 2088,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2086,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2014,
																			"src": "9481:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2087,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9491:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9481:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2089,
																	"nodeType": "ExpressionStatement",
																	"src": "9481:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2096,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2094,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2092,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2008,
																	"src": "9526:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2093,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9535:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "9526:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2095,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9539:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9526:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2106,
														"nodeType": "IfStatement",
														"src": "9522:96:9",
														"trueBody": {
															"id": 2105,
															"nodeType": "Block",
															"src": "9542:76:9",
															"statements": [
																{
																	"expression": {
																		"id": 2099,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2097,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2008,
																			"src": "9561:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2098,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9571:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9561:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2100,
																	"nodeType": "ExpressionStatement",
																	"src": "9561:11:9"
																},
																{
																	"expression": {
																		"id": 2103,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2101,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2014,
																			"src": "9591:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2102,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9601:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9591:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2104,
																	"nodeType": "ExpressionStatement",
																	"src": "9591:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2107,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2008,
																	"src": "9636:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9645:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "9636:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2110,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9649:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9636:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2121,
														"nodeType": "IfStatement",
														"src": "9632:96:9",
														"trueBody": {
															"id": 2120,
															"nodeType": "Block",
															"src": "9652:76:9",
															"statements": [
																{
																	"expression": {
																		"id": 2114,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2112,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2008,
																			"src": "9671:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2113,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9681:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9671:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2115,
																	"nodeType": "ExpressionStatement",
																	"src": "9671:11:9"
																},
																{
																	"expression": {
																		"id": 2118,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2116,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2014,
																			"src": "9701:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2117,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9711:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9701:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2119,
																	"nodeType": "ExpressionStatement",
																	"src": "9701:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2122,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2008,
																	"src": "9746:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2123,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9755:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9746:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2125,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9759:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9746:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2132,
														"nodeType": "IfStatement",
														"src": "9742:66:9",
														"trueBody": {
															"id": 2131,
															"nodeType": "Block",
															"src": "9762:46:9",
															"statements": [
																{
																	"expression": {
																		"id": 2129,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2127,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2014,
																			"src": "9781:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2128,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9791:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9781:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2130,
																	"nodeType": "ExpressionStatement",
																	"src": "9781:11:9"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2134,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2014,
													"src": "9836:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2012,
												"id": 2135,
												"nodeType": "Return",
												"src": "9829:13:9"
											}
										]
									},
									"documentation": {
										"id": 2006,
										"nodeType": "StructuredDocumentation",
										"src": "8709:116:9",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "8840:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2008,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8853:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2137,
												"src": "8845:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2007,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8845:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8844:15:9"
									},
									"returnParameters": {
										"id": 2012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2011,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2137,
												"src": "8883:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2010,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8883:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8882:9:9"
									},
									"scope": 2465,
									"src": "8831:1019:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2172,
										"nodeType": "Block",
										"src": "10089:170:9",
										"statements": [
											{
												"id": 2171,
												"nodeType": "UncheckedBlock",
												"src": "10100:152:9",
												"statements": [
													{
														"assignments": [
															2149
														],
														"declarations": [
															{
																"constant": false,
																"id": 2149,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10133:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 2171,
																"src": "10125:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2148,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10125:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2153,
														"initialValue": {
															"arguments": [
																{
																	"id": 2151,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2140,
																	"src": "10147:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2150,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2137,
																	2173
																],
																"referencedDeclaration": 2137,
																"src": "10142:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10142:11:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10125:28:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2169,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2154,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2149,
																"src": "10175:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2164,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1606",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2158,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2155,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2143,
																					"src": "10185:8:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1606",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2156,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1606,
																						"src": "10197:8:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1606_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2157,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1604,
																					"src": "10197:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1606",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "10185:23:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2163,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2161,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2159,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "10212:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2160,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2149,
																						"src": "10217:6:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10212:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2162,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2140,
																					"src": "10226:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10212:19:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10185:46:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2166,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10238:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2167,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10185:54:9",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2165,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10234:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2168,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10184:56:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10175:65:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2147,
														"id": 2170,
														"nodeType": "Return",
														"src": "10168:72:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2138,
										"nodeType": "StructuredDocumentation",
										"src": "9858:145:9",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2173,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10018:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2140,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10031:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2173,
												"src": "10023:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10023:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2143,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10047:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2173,
												"src": "10038:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1606",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2142,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2141,
														"name": "Rounding",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1606,
														"src": "10038:8:9"
													},
													"referencedDeclaration": 1606,
													"src": "10038:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1606",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10022:34:9"
									},
									"returnParameters": {
										"id": 2147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2146,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2173,
												"src": "10080:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10080:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10079:9:9"
									},
									"scope": 2465,
									"src": "10009:250:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2301,
										"nodeType": "Block",
										"src": "10452:886:9",
										"statements": [
											{
												"assignments": [
													2182
												],
												"declarations": [
													{
														"constant": false,
														"id": 2182,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10471:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 2301,
														"src": "10463:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2181,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10463:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2184,
												"initialValue": {
													"hexValue": "30",
													"id": 2183,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10480:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10463:18:9"
											},
											{
												"id": 2298,
												"nodeType": "UncheckedBlock",
												"src": "10492:815:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2185,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2176,
																"src": "10521:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2188,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2186,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10530:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2187,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10536:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10530:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "10521:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2201,
														"nodeType": "IfStatement",
														"src": "10517:106:9",
														"trueBody": {
															"id": 2200,
															"nodeType": "Block",
															"src": "10540:83:9",
															"statements": [
																{
																	"expression": {
																		"id": 2194,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2190,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2176,
																			"src": "10559:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2193,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2191,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10568:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2192,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10574:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "10568:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "10559:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2195,
																	"nodeType": "ExpressionStatement",
																	"src": "10559:17:9"
																},
																{
																	"expression": {
																		"id": 2198,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2196,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2182,
																			"src": "10595:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2197,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10605:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10595:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2199,
																	"nodeType": "ExpressionStatement",
																	"src": "10595:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2202,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2176,
																"src": "10641:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2205,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2203,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10650:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2204,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10656:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "10650:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "10641:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2218,
														"nodeType": "IfStatement",
														"src": "10637:106:9",
														"trueBody": {
															"id": 2217,
															"nodeType": "Block",
															"src": "10660:83:9",
															"statements": [
																{
																	"expression": {
																		"id": 2211,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2207,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2176,
																			"src": "10679:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2210,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2208,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10688:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2209,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10694:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "10688:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "10679:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2212,
																	"nodeType": "ExpressionStatement",
																	"src": "10679:17:9"
																},
																{
																	"expression": {
																		"id": 2215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2213,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2182,
																			"src": "10715:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2214,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10725:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "10715:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2216,
																	"nodeType": "ExpressionStatement",
																	"src": "10715:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2219,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2176,
																"src": "10761:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2222,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10770:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2221,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10776:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10770:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "10761:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2235,
														"nodeType": "IfStatement",
														"src": "10757:106:9",
														"trueBody": {
															"id": 2234,
															"nodeType": "Block",
															"src": "10780:83:9",
															"statements": [
																{
																	"expression": {
																		"id": 2228,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2224,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2176,
																			"src": "10799:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2227,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2225,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10808:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2226,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10814:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "10808:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "10799:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2229,
																	"nodeType": "ExpressionStatement",
																	"src": "10799:17:9"
																},
																{
																	"expression": {
																		"id": 2232,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2230,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2182,
																			"src": "10835:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2231,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10845:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "10835:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2233,
																	"nodeType": "ExpressionStatement",
																	"src": "10835:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2240,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2236,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2176,
																"src": "10881:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2239,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2237,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10890:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10896:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "10890:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "10881:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2252,
														"nodeType": "IfStatement",
														"src": "10877:103:9",
														"trueBody": {
															"id": 2251,
															"nodeType": "Block",
															"src": "10899:81:9",
															"statements": [
																{
																	"expression": {
																		"id": 2245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2241,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2176,
																			"src": "10918:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2244,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2242,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10927:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2243,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10933:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "10927:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "10918:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2246,
																	"nodeType": "ExpressionStatement",
																	"src": "10918:16:9"
																},
																{
																	"expression": {
																		"id": 2249,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2247,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2182,
																			"src": "10953:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2248,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10963:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "10953:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2250,
																	"nodeType": "ExpressionStatement",
																	"src": "10953:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2253,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2176,
																"src": "10998:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2256,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2254,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11007:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11013:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11007:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "10998:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2269,
														"nodeType": "IfStatement",
														"src": "10994:103:9",
														"trueBody": {
															"id": 2268,
															"nodeType": "Block",
															"src": "11016:81:9",
															"statements": [
																{
																	"expression": {
																		"id": 2262,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2258,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2176,
																			"src": "11035:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2261,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2259,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11044:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2260,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11050:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "11044:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "11035:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2263,
																	"nodeType": "ExpressionStatement",
																	"src": "11035:16:9"
																},
																{
																	"expression": {
																		"id": 2266,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2264,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2182,
																			"src": "11070:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2265,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11080:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11070:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2267,
																	"nodeType": "ExpressionStatement",
																	"src": "11070:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2270,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2176,
																"src": "11115:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2273,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11124:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2272,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11130:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11124:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "11115:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2286,
														"nodeType": "IfStatement",
														"src": "11111:103:9",
														"trueBody": {
															"id": 2285,
															"nodeType": "Block",
															"src": "11133:81:9",
															"statements": [
																{
																	"expression": {
																		"id": 2279,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2275,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2176,
																			"src": "11152:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2278,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2276,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11161:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2277,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11167:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "11161:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "11152:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2280,
																	"nodeType": "ExpressionStatement",
																	"src": "11152:16:9"
																},
																{
																	"expression": {
																		"id": 2283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2281,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2182,
																			"src": "11187:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2282,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11197:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11187:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2284,
																	"nodeType": "ExpressionStatement",
																	"src": "11187:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2287,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2176,
																"src": "11232:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2290,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2288,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11241:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2289,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11247:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11241:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "11232:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2297,
														"nodeType": "IfStatement",
														"src": "11228:68:9",
														"trueBody": {
															"id": 2296,
															"nodeType": "Block",
															"src": "11250:46:9",
															"statements": [
																{
																	"expression": {
																		"id": 2294,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2292,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2182,
																			"src": "11269:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2293,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11279:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11269:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2295,
																	"nodeType": "ExpressionStatement",
																	"src": "11269:11:9"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2299,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2182,
													"src": "11324:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2180,
												"id": 2300,
												"nodeType": "Return",
												"src": "11317:13:9"
											}
										]
									},
									"documentation": {
										"id": 2174,
										"nodeType": "StructuredDocumentation",
										"src": "10267:117:9",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "10399:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2176,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10413:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2302,
												"src": "10405:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10405:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10404:15:9"
									},
									"returnParameters": {
										"id": 2180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2179,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2302,
												"src": "10443:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10443:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10442:9:9"
									},
									"scope": 2465,
									"src": "10390:948:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2337,
										"nodeType": "Block",
										"src": "11579:172:9",
										"statements": [
											{
												"id": 2336,
												"nodeType": "UncheckedBlock",
												"src": "11590:154:9",
												"statements": [
													{
														"assignments": [
															2314
														],
														"declarations": [
															{
																"constant": false,
																"id": 2314,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11623:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 2336,
																"src": "11615:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2313,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11615:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2318,
														"initialValue": {
															"arguments": [
																{
																	"id": 2316,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2305,
																	"src": "11638:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2315,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2302,
																	2338
																],
																"referencedDeclaration": 2302,
																"src": "11632:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11632:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11615:29:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2319,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2314,
																"src": "11666:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2329,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1606",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2323,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2320,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2308,
																					"src": "11676:8:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1606",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2321,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1606,
																						"src": "11688:8:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1606_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2322,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1604,
																					"src": "11688:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1606",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "11676:23:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2328,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2326,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2324,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11703:2:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2325,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2314,
																						"src": "11709:6:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11703:12:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2327,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2305,
																					"src": "11718:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11703:20:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11676:47:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2331,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11730:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2332,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11676:55:9",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2330,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11726:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2333,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11675:57:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11666:66:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2312,
														"id": 2335,
														"nodeType": "Return",
														"src": "11659:73:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2303,
										"nodeType": "StructuredDocumentation",
										"src": "11346:146:9",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "11507:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2305,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11521:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2338,
												"src": "11513:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11513:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2308,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11537:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2338,
												"src": "11528:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1606",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2307,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2306,
														"name": "Rounding",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1606,
														"src": "11528:8:9"
													},
													"referencedDeclaration": 1606,
													"src": "11528:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1606",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11512:34:9"
									},
									"returnParameters": {
										"id": 2312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2311,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2338,
												"src": "11570:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11570:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11569:9:9"
									},
									"scope": 2465,
									"src": "11498:253:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2424,
										"nodeType": "Block",
										"src": "12073:624:9",
										"statements": [
											{
												"assignments": [
													2347
												],
												"declarations": [
													{
														"constant": false,
														"id": 2347,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12092:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 2424,
														"src": "12084:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2346,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12084:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2349,
												"initialValue": {
													"hexValue": "30",
													"id": 2348,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12101:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12084:18:9"
											},
											{
												"id": 2421,
												"nodeType": "UncheckedBlock",
												"src": "12113:553:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2352,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2350,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2341,
																	"src": "12142:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2351,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12151:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "12142:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2353,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12157:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12142:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2364,
														"nodeType": "IfStatement",
														"src": "12138:101:9",
														"trueBody": {
															"id": 2363,
															"nodeType": "Block",
															"src": "12160:79:9",
															"statements": [
																{
																	"expression": {
																		"id": 2357,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2355,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2341,
																			"src": "12179:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2356,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12189:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "12179:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2358,
																	"nodeType": "ExpressionStatement",
																	"src": "12179:13:9"
																},
																{
																	"expression": {
																		"id": 2361,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2359,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2347,
																			"src": "12211:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2360,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12221:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12211:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2362,
																	"nodeType": "ExpressionStatement",
																	"src": "12211:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2367,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2365,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2341,
																	"src": "12257:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2366,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12266:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12257:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2368,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12271:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12257:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2379,
														"nodeType": "IfStatement",
														"src": "12253:98:9",
														"trueBody": {
															"id": 2378,
															"nodeType": "Block",
															"src": "12274:77:9",
															"statements": [
																{
																	"expression": {
																		"id": 2372,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2370,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2341,
																			"src": "12293:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2371,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12303:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12293:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2373,
																	"nodeType": "ExpressionStatement",
																	"src": "12293:12:9"
																},
																{
																	"expression": {
																		"id": 2376,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2374,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2347,
																			"src": "12324:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2375,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12334:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12324:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2377,
																	"nodeType": "ExpressionStatement",
																	"src": "12324:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2382,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2380,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2341,
																	"src": "12369:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2381,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12378:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12369:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2383,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12383:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12369:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2394,
														"nodeType": "IfStatement",
														"src": "12365:98:9",
														"trueBody": {
															"id": 2393,
															"nodeType": "Block",
															"src": "12386:77:9",
															"statements": [
																{
																	"expression": {
																		"id": 2387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2385,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2341,
																			"src": "12405:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2386,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12415:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12405:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2388,
																	"nodeType": "ExpressionStatement",
																	"src": "12405:12:9"
																},
																{
																	"expression": {
																		"id": 2391,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2389,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2347,
																			"src": "12436:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2390,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12446:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12436:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2392,
																	"nodeType": "ExpressionStatement",
																	"src": "12436:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2399,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2397,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2395,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2341,
																	"src": "12481:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2396,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12490:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12481:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2398,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12495:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12481:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2409,
														"nodeType": "IfStatement",
														"src": "12477:98:9",
														"trueBody": {
															"id": 2408,
															"nodeType": "Block",
															"src": "12498:77:9",
															"statements": [
																{
																	"expression": {
																		"id": 2402,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2400,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2341,
																			"src": "12517:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2401,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12527:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12517:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2403,
																	"nodeType": "ExpressionStatement",
																	"src": "12517:12:9"
																},
																{
																	"expression": {
																		"id": 2406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2404,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2347,
																			"src": "12548:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2405,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12558:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12548:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2407,
																	"nodeType": "ExpressionStatement",
																	"src": "12548:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2412,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2410,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2341,
																	"src": "12593:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2411,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12602:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12593:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2413,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12606:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12593:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2420,
														"nodeType": "IfStatement",
														"src": "12589:66:9",
														"trueBody": {
															"id": 2419,
															"nodeType": "Block",
															"src": "12609:46:9",
															"statements": [
																{
																	"expression": {
																		"id": 2417,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2415,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2347,
																			"src": "12628:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2416,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12638:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12628:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2418,
																	"nodeType": "ExpressionStatement",
																	"src": "12628:11:9"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2422,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2347,
													"src": "12683:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2345,
												"id": 2423,
												"nodeType": "Return",
												"src": "12676:13:9"
											}
										]
									},
									"documentation": {
										"id": 2339,
										"nodeType": "StructuredDocumentation",
										"src": "11759:245:9",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "12019:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12034:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2425,
												"src": "12026:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12026:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12025:15:9"
									},
									"returnParameters": {
										"id": 2345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2425,
												"src": "12064:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12064:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12063:9:9"
									},
									"scope": 2465,
									"src": "12010:687:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2463,
										"nodeType": "Block",
										"src": "12940:179:9",
										"statements": [
											{
												"id": 2462,
												"nodeType": "UncheckedBlock",
												"src": "12951:161:9",
												"statements": [
													{
														"assignments": [
															2437
														],
														"declarations": [
															{
																"constant": false,
																"id": 2437,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12984:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 2462,
																"src": "12976:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2436,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12976:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2441,
														"initialValue": {
															"arguments": [
																{
																	"id": 2439,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2428,
																	"src": "13000:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2438,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2425,
																	2464
																],
																"referencedDeclaration": 2425,
																"src": "12993:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12993:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12976:30:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2442,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2437,
																"src": "13028:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2455,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1606",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2446,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2443,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2431,
																					"src": "13038:8:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1606",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2444,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1606,
																						"src": "13050:8:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1606_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2445,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1604,
																					"src": "13050:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1606",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "13038:23:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2454,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2452,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2447,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13065:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2450,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2448,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2437,
																									"src": "13071:6:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2449,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "13081:1:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "13071:11:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2451,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "13070:13:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13065:18:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2453,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2428,
																					"src": "13086:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13065:26:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13038:53:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2457,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13098:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2458,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13038:61:9",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2456,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13094:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2459,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13037:63:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13028:72:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2435,
														"id": 2461,
														"nodeType": "Return",
														"src": "13021:79:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2426,
										"nodeType": "StructuredDocumentation",
										"src": "12705:147:9",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2464,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "12867:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2428,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12882:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2464,
												"src": "12874:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12874:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2431,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12898:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2464,
												"src": "12889:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1606",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2430,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2429,
														"name": "Rounding",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1606,
														"src": "12889:8:9"
													},
													"referencedDeclaration": 1606,
													"src": "12889:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1606",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12873:34:9"
									},
									"returnParameters": {
										"id": 2435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2464,
												"src": "12931:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12931:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12930:9:9"
									},
									"scope": 2465,
									"src": "12858:261:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2466,
							"src": "210:12912:9",
							"usedErrors": []
						}
					],
					"src": "106:13016:9"
				},
				"id": 9
			},
			"libraries/SignedMath.sol": {
				"ast": {
					"absolutePath": "libraries/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							2570
						]
					},
					"id": 2571,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2467,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2468,
								"nodeType": "StructuredDocumentation",
								"src": "139:82:10",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2570,
							"linearizedBaseContracts": [
								2570
							],
							"name": "SignedMath",
							"nameLocation": "231:10:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2485,
										"nodeType": "Block",
										"src": "387:39:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2480,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2478,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2471,
															"src": "405:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2479,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2473,
															"src": "409:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "405:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2482,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2473,
														"src": "417:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "405:13:10",
													"trueExpression": {
														"id": 2481,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2471,
														"src": "413:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2477,
												"id": 2484,
												"nodeType": "Return",
												"src": "398:20:10"
											}
										]
									},
									"documentation": {
										"id": 2469,
										"nodeType": "StructuredDocumentation",
										"src": "249:68:10",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 2486,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "332:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2471,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "343:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2486,
												"src": "336:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2470,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "336:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2473,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "353:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2486,
												"src": "346:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2472,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "346:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "335:20:10"
									},
									"returnParameters": {
										"id": 2477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2476,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2486,
												"src": "379:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2475,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "379:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "378:8:10"
									},
									"scope": 2570,
									"src": "323:103:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2503,
										"nodeType": "Block",
										"src": "573:39:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2498,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2496,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2489,
															"src": "591:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2497,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2491,
															"src": "595:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "591:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2500,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2491,
														"src": "603:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "591:13:10",
													"trueExpression": {
														"id": 2499,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2489,
														"src": "599:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2495,
												"id": 2502,
												"nodeType": "Return",
												"src": "584:20:10"
											}
										]
									},
									"documentation": {
										"id": 2487,
										"nodeType": "StructuredDocumentation",
										"src": "434:69:10",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 2504,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "518:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2489,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "529:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2504,
												"src": "522:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2488,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "522:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2491,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "539:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2504,
												"src": "532:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2490,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "532:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "521:20:10"
									},
									"returnParameters": {
										"id": 2495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2494,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2504,
												"src": "565:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2493,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "565:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "564:8:10"
									},
									"scope": 2570,
									"src": "509:103:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2547,
										"nodeType": "Block",
										"src": "823:166:10",
										"statements": [
											{
												"assignments": [
													2515
												],
												"declarations": [
													{
														"constant": false,
														"id": 2515,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "894:1:10",
														"nodeType": "VariableDeclaration",
														"scope": 2547,
														"src": "887:8:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2514,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "887:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2528,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2516,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2507,
																	"src": "899:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2517,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2509,
																	"src": "903:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "899:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2519,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "898:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2525,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2522,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2520,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2507,
																				"src": "910:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2521,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2509,
																				"src": "914:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "910:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2523,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "909:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2524,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "920:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "909:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2526,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "908:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "898:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "887:35:10"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2529,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2515,
														"src": "940:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2543,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2537,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2534,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2515,
																						"src": "960:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 2533,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "952:7:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 2532,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "952:7:10",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2535,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "952:10:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 2536,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "966:3:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "952:17:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2531,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "945:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 2530,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "945:6:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2538,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "945:25:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2541,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2539,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2507,
																				"src": "974:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2540,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2509,
																				"src": "978:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "974:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2542,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "973:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "945:35:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2544,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "944:37:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "940:41:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2513,
												"id": 2546,
												"nodeType": "Return",
												"src": "933:48:10"
											}
										]
									},
									"documentation": {
										"id": 2505,
										"nodeType": "StructuredDocumentation",
										"src": "620:129:10",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 2548,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "764:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2507,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "779:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2548,
												"src": "772:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2506,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "772:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2509,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "789:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2548,
												"src": "782:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2508,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "782:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "771:20:10"
									},
									"returnParameters": {
										"id": 2513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2512,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2548,
												"src": "815:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2511,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "815:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "814:8:10"
									},
									"scope": 2570,
									"src": "755:234:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2568,
										"nodeType": "Block",
										"src": "1138:163:10",
										"statements": [
											{
												"id": 2567,
												"nodeType": "UncheckedBlock",
												"src": "1149:145:10",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2560,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2558,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2551,
																			"src": "1266:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2559,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1271:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1266:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 2563,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1279:2:10",
																		"subExpression": {
																			"id": 2562,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2551,
																			"src": "1280:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 2564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1266:15:10",
																	"trueExpression": {
																		"id": 2561,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2551,
																		"src": "1275:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 2557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1258:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2556,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1258:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2565,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1258:24:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2555,
														"id": 2566,
														"nodeType": "Return",
														"src": "1251:31:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2549,
										"nodeType": "StructuredDocumentation",
										"src": "997:80:10",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 2569,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1092:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2551,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1103:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2569,
												"src": "1096:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2550,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1096:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1095:10:10"
									},
									"returnParameters": {
										"id": 2555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2554,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2569,
												"src": "1129:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1129:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1128:9:10"
									},
									"scope": 2570,
									"src": "1083:218:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2571,
							"src": "223:1081:10",
							"usedErrors": []
						}
					],
					"src": "112:1192:10"
				},
				"id": 10
			},
			"libraries/Strings.sol": {
				"ast": {
					"absolutePath": "libraries/Strings.sol",
					"exportedSymbols": {
						"Math": [
							2465
						],
						"SignedMath": [
							2570
						],
						"Strings": [
							2799
						]
					},
					"id": 2800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2572,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "104:23:11"
						},
						{
							"absolutePath": "libraries/Math.sol",
							"file": "./Math.sol",
							"id": 2573,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2800,
							"sourceUnit": 2466,
							"src": "131:20:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "libraries/SignedMath.sol",
							"file": "./SignedMath.sol",
							"id": 2574,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2800,
							"sourceUnit": 2571,
							"src": "153:26:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2575,
								"nodeType": "StructuredDocumentation",
								"src": "183:36:11",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 2799,
							"linearizedBaseContracts": [
								2799
							],
							"name": "Strings",
							"nameLocation": "229:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 2578,
									"mutability": "constant",
									"name": "_SYMBOLS",
									"nameLocation": "269:8:11",
									"nodeType": "VariableDeclaration",
									"scope": 2799,
									"src": "244:54:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 2576,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "244:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 2577,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "280:18:11",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 2581,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "328:15:11",
									"nodeType": "VariableDeclaration",
									"scope": 2799,
									"src": "305:43:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 2579,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "305:5:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 2580,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "346:2:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2628,
										"nodeType": "Block",
										"src": "526:645:11",
										"statements": [
											{
												"id": 2627,
												"nodeType": "UncheckedBlock",
												"src": "537:627:11",
												"statements": [
													{
														"assignments": [
															2590
														],
														"declarations": [
															{
																"constant": false,
																"id": 2590,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "570:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 2627,
																"src": "562:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2589,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "562:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2597,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2596,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 2593,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2584,
																		"src": "590:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2591,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2465,
																		"src": "579:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2465_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 2592,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2302,
																	"src": "579:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 2594,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "579:17:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 2595,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "599:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "579:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "562:38:11"
													},
													{
														"assignments": [
															2599
														],
														"declarations": [
															{
																"constant": false,
																"id": 2599,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "629:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 2627,
																"src": "615:20:11",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 2598,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "615:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2604,
														"initialValue": {
															"arguments": [
																{
																	"id": 2602,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2590,
																	"src": "649:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2601,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "638:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 2600,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "642:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 2603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "638:18:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "615:41:11"
													},
													{
														"assignments": [
															2606
														],
														"declarations": [
															{
																"constant": false,
																"id": 2606,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "679:3:11",
																"nodeType": "VariableDeclaration",
																"scope": 2627,
																"src": "671:11:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2605,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "671:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2607,
														"nodeType": "VariableDeclarationStatement",
														"src": "671:11:11"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "754:69:11",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "773:35:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nodeType": "YulIdentifier",
																				"src": "784:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "796:2:11",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "800:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "792:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "792:15:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "780:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "780:28:11"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:11"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 2599,
																"isOffset": false,
																"isSlot": false,
																"src": "784:6:11",
																"valueSize": 1
															},
															{
																"declaration": 2590,
																"isOffset": false,
																"isSlot": false,
																"src": "800:6:11",
																"valueSize": 1
															},
															{
																"declaration": 2606,
																"isOffset": false,
																"isSlot": false,
																"src": "773:3:11",
																"valueSize": 1
															}
														],
														"id": 2608,
														"nodeType": "InlineAssembly",
														"src": "745:78:11"
													},
													{
														"body": {
															"id": 2623,
															"nodeType": "Block",
															"src": "850:275:11",
															"statements": [
																{
																	"expression": {
																		"id": 2611,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "869:5:11",
																		"subExpression": {
																			"id": 2610,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2606,
																			"src": "869:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2612,
																	"nodeType": "ExpressionStatement",
																	"src": "869:5:11"
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "954:86:11",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "985:3:11"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "999:5:11"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "1006:2:11",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nodeType": "YulIdentifier",
																										"src": "995:3:11"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "995:14:11"
																								},
																								{
																									"name": "_SYMBOLS",
																									"nodeType": "YulIdentifier",
																									"src": "1011:8:11"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nodeType": "YulIdentifier",
																								"src": "990:4:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "990:30:11"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nodeType": "YulIdentifier",
																						"src": "977:7:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "977:44:11"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "977:44:11"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "london",
																	"externalReferences": [
																		{
																			"declaration": 2578,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1011:8:11",
																			"valueSize": 1
																		},
																		{
																			"declaration": 2606,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "985:3:11",
																			"valueSize": 1
																		},
																		{
																			"declaration": 2584,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "999:5:11",
																			"valueSize": 1
																		}
																	],
																	"id": 2613,
																	"nodeType": "InlineAssembly",
																	"src": "945:95:11"
																},
																{
																	"expression": {
																		"id": 2616,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2614,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2584,
																			"src": "1058:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 2615,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1067:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1058:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2617,
																	"nodeType": "ExpressionStatement",
																	"src": "1058:11:11"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2620,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2618,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2584,
																			"src": "1092:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2619,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1101:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1092:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2622,
																	"nodeType": "IfStatement",
																	"src": "1088:21:11",
																	"trueBody": {
																		"id": 2621,
																		"nodeType": "Break",
																		"src": "1104:5:11"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 2609,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "844:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 2624,
														"nodeType": "WhileStatement",
														"src": "837:288:11"
													},
													{
														"expression": {
															"id": 2625,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2599,
															"src": "1146:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 2588,
														"id": 2626,
														"nodeType": "Return",
														"src": "1139:13:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2582,
										"nodeType": "StructuredDocumentation",
										"src": "357:92:11",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 2629,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "464:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2584,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "481:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2629,
												"src": "473:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "473:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:15:11"
									},
									"returnParameters": {
										"id": 2588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2587,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2629,
												"src": "511:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2586,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "511:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "510:15:11"
									},
									"scope": 2799,
									"src": "455:716:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2656,
										"nodeType": "Block",
										"src": "1346:105:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2643,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2641,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2632,
																			"src": "1388:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2642,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1396:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1388:9:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"hexValue": "",
																		"id": 2645,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1406:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	},
																	"id": 2646,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1388:20:11",
																	"trueExpression": {
																		"hexValue": "2d",
																		"id": 2644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1400:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																			"typeString": "literal_string \"-\""
																		},
																		"value": "-"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 2650,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2632,
																					"src": "1434:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				],
																				"expression": {
																					"id": 2648,
																					"name": "SignedMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2570,
																					"src": "1419:10:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SignedMath_$2570_$",
																						"typeString": "type(library SignedMath)"
																					}
																				},
																				"id": 2649,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "abs",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2569,
																				"src": "1419:14:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																					"typeString": "function (int256) pure returns (uint256)"
																				}
																			},
																			"id": 2651,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1419:21:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2647,
																		"name": "toString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2629,
																			2657
																		],
																		"referencedDeclaration": 2629,
																		"src": "1410:8:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (string memory)"
																		}
																	},
																	"id": 2652,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1410:31:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 2639,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1371:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2640,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "1371:16:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2653,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1371:71:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2638,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1364:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 2637,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1364:6:11",
															"typeDescriptions": {}
														}
													},
													"id": 2654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1364:79:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2636,
												"id": 2655,
												"nodeType": "Return",
												"src": "1357:86:11"
											}
										]
									},
									"documentation": {
										"id": 2630,
										"nodeType": "StructuredDocumentation",
										"src": "1179:91:11",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 2657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "1285:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2632,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1301:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2657,
												"src": "1294:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2631,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1294:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1293:14:11"
									},
									"returnParameters": {
										"id": 2636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2635,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2657,
												"src": "1331:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2634,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1331:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1330:15:11"
									},
									"scope": 2799,
									"src": "1276:175:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2676,
										"nodeType": "Block",
										"src": "1635:104:11",
										"statements": [
											{
												"id": 2675,
												"nodeType": "UncheckedBlock",
												"src": "1646:86:11",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 2666,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2660,
																	"src": "1690:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2672,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 2669,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2660,
																				"src": "1709:5:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 2667,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2465,
																				"src": "1697:4:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$2465_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 2668,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2425,
																			"src": "1697:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2670,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1697:18:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 2671,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1718:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1697:22:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2665,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2677,
																	2753,
																	2773
																],
																"referencedDeclaration": 2753,
																"src": "1678:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 2673,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1678:42:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 2664,
														"id": 2674,
														"nodeType": "Return",
														"src": "1671:49:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2658,
										"nodeType": "StructuredDocumentation",
										"src": "1459:96:11",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 2677,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1570:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2660,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1590:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2677,
												"src": "1582:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1581:15:11"
									},
									"returnParameters": {
										"id": 2664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2663,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2677,
												"src": "1620:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2662,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1620:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1619:15:11"
									},
									"scope": 2799,
									"src": "1561:178:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2752,
										"nodeType": "Block",
										"src": "1957:357:11",
										"statements": [
											{
												"assignments": [
													2688
												],
												"declarations": [
													{
														"constant": false,
														"id": 2688,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1981:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2752,
														"src": "1968:19:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2687,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1968:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2697,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2695,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2693,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2691,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2000:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2692,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2682,
																	"src": "2004:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2000:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 2694,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2013:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2000:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2690,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1990:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 2689,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1994:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 2696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1990:25:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1968:47:11"
											},
											{
												"expression": {
													"id": 2702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2698,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2688,
															"src": "2026:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2700,
														"indexExpression": {
															"hexValue": "30",
															"id": 2699,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2033:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2026:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2701,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2038:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2026:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2703,
												"nodeType": "ExpressionStatement",
												"src": "2026:15:11"
											},
											{
												"expression": {
													"id": 2708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2704,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2688,
															"src": "2052:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2706,
														"indexExpression": {
															"hexValue": "31",
															"id": 2705,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2059:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2052:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 2707,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2064:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2052:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2709,
												"nodeType": "ExpressionStatement",
												"src": "2052:15:11"
											},
											{
												"body": {
													"id": 2738,
													"nodeType": "Block",
													"src": "2123:86:11",
													"statements": [
														{
															"expression": {
																"id": 2732,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2724,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2688,
																		"src": "2138:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2726,
																	"indexExpression": {
																		"id": 2725,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2711,
																		"src": "2145:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2138:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 2727,
																		"name": "_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2578,
																		"src": "2150:8:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 2731,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2730,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2728,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2680,
																			"src": "2159:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 2729,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2167:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2159:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2150:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2138:33:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 2733,
															"nodeType": "ExpressionStatement",
															"src": "2138:33:11"
														},
														{
															"expression": {
																"id": 2736,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2734,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2680,
																	"src": "2186:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 2735,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2196:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2186:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2737,
															"nodeType": "ExpressionStatement",
															"src": "2186:11:11"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2718,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2711,
														"src": "2111:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 2719,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2115:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2111:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2739,
												"initializationExpression": {
													"assignments": [
														2711
													],
													"declarations": [
														{
															"constant": false,
															"id": 2711,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2091:1:11",
															"nodeType": "VariableDeclaration",
															"scope": 2739,
															"src": "2083:9:11",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2710,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2083:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2717,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2716,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2714,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 2712,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2095:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2713,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2682,
																"src": "2099:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2095:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2715,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2108:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2095:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2083:26:11"
												},
												"loopExpression": {
													"expression": {
														"id": 2722,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2118:3:11",
														"subExpression": {
															"id": 2721,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2711,
															"src": "2120:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2723,
													"nodeType": "ExpressionStatement",
													"src": "2118:3:11"
												},
												"nodeType": "ForStatement",
												"src": "2078:131:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2743,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2741,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2680,
																"src": "2227:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2742,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2236:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2227:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 2744,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2239:34:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 2740,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2219:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2219:55:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2746,
												"nodeType": "ExpressionStatement",
												"src": "2219:55:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2749,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2688,
															"src": "2299:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2748,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2292:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 2747,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2292:6:11",
															"typeDescriptions": {}
														}
													},
													"id": 2750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2292:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2686,
												"id": 2751,
												"nodeType": "Return",
												"src": "2285:21:11"
											}
										]
									},
									"documentation": {
										"id": 2678,
										"nodeType": "StructuredDocumentation",
										"src": "1747:114:11",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 2753,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1876:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2680,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1896:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2753,
												"src": "1888:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1888:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2682,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1911:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2753,
												"src": "1903:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1903:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1887:31:11"
									},
									"returnParameters": {
										"id": 2686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2685,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2753,
												"src": "1942:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2684,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1942:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1941:15:11"
									},
									"scope": 2799,
									"src": "1867:447:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2772,
										"nodeType": "Block",
										"src": "2544:78:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2766,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2756,
																			"src": "2590:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2765,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2582:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 2764,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2582:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2767,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2582:13:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 2763,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2574:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2762,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2574:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2768,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2574:22:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2769,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2581,
															"src": "2598:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 2761,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2677,
															2753,
															2773
														],
														"referencedDeclaration": 2753,
														"src": "2562:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 2770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2562:52:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2760,
												"id": 2771,
												"nodeType": "Return",
												"src": "2555:59:11"
											}
										]
									},
									"documentation": {
										"id": 2754,
										"nodeType": "StructuredDocumentation",
										"src": "2322:143:11",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 2773,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2480:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2756,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2500:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2773,
												"src": "2492:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2755,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2492:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2491:14:11"
									},
									"returnParameters": {
										"id": 2760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2759,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2773,
												"src": "2529:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2758,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2529:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2528:15:11"
									},
									"scope": 2799,
									"src": "2471:151:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2797,
										"nodeType": "Block",
										"src": "2782:68:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 2795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2786,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2776,
																		"src": "2816:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2785,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2810:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2784,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2810:5:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 2787,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2810:8:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 2783,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2800:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 2788,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2800:19:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2792,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2778,
																		"src": "2839:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2791,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2833:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2790,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2833:5:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 2793,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2833:8:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 2789,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2823:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 2794,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2823:19:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2800:42:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2782,
												"id": 2796,
												"nodeType": "Return",
												"src": "2793:49:11"
											}
										]
									},
									"documentation": {
										"id": 2774,
										"nodeType": "StructuredDocumentation",
										"src": "2630:68:11",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 2798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2713:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2776,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2733:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2798,
												"src": "2719:15:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2775,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2719:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2778,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2750:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2798,
												"src": "2736:15:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2777,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2736:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2718:34:11"
									},
									"returnParameters": {
										"id": 2782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2781,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2798,
												"src": "2776:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2780,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2776:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2775:6:11"
									},
									"scope": 2799,
									"src": "2704:146:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2800,
							"src": "221:2632:11",
							"usedErrors": []
						}
					],
					"src": "104:2749:11"
				},
				"id": 11
			}
		}
	}
}