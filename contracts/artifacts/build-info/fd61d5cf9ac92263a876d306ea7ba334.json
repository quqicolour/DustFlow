{
	"id": "fd61d5cf9ac92263a876d306ea7ba334",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.19",
	"solcLongVersion": "0.8.19+commit.7dd6d404",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/TimeMarket.sol": {
				"content": "//SPDX-License-Identifier:MIT\r\npragma solidity ^0.8.9;\r\npragma abicoder v2;\r\nimport \"../libraries/SafeERC20.sol\";\r\nimport \"../interfaces/ITimeMarket.sol\";\r\nimport \"../libraries/TimeLibrary.sol\";\r\nimport \"../interfaces/IERC20Metadata.sol\";\r\nimport \"../interfaces/ITimeFactory.sol\";\r\n\r\n//aave v3\r\nimport \"../interfaces/AaveV3/IPool.sol\";\r\n\r\n//计算个人获得的利息=个人质押数量/总质押数量*利息总数量+个人质押数量\r\n\r\ncontract TimeMarket is ITimeMarket{\r\n    using SafeERC20 for IERC20;\r\n    uint32 private id;  //交易订单次数\r\n    uint56 private clearingTime; //清算时间\r\n    address private factoryOwner;  //工厂为该合约所有者\r\n    uint256 private totalStable;  //总质押的稳定币数量\r\n    address private rewardPool;  //奖励池\r\n    address private airdropToken;  //空投代币地址\r\n    address private AUSDT=0xaA8E23Fb1079EA71e0a56F48a2aA51851D8433D0;   //aave usdt=0xaA8E23Fb1079EA71e0a56F48a2aA51851D8433D0\r\n    address private AEthUsdt=0xAF0F6e8b0Dc5c913bbF4d14c22B4E78Dd14310B6;\r\n\r\n    //AAVE V3 (sepolia)\r\n    IPool private AaveV3Pool=IPool(0x6Ae43d3271ff6888e7Fc43Fd7321a503ff738951);\r\n\r\n    constructor(address _airdropToken){\r\n        airdropToken=_airdropToken;\r\n        factoryOwner=msg.sender;\r\n    }\r\n\r\n    //记录对应下的交易信息\r\n    mapping(uint32=>tradeMes)private _tradeMes;\r\n    //\r\n    mapping(uint32=>mapping(address=>userDeposite))private _userDeposite;\r\n    //记录用户的流动性数量\r\n    mapping(address=>mapping(uint64=>uint)) private userLiquidity;\r\n\r\n    modifier onlyOwner{\r\n        address thisOwner=ITimeFactory(factoryOwner).thisOwner();\r\n        require(msg.sender==thisOwner,\"Not Owner\");\r\n        _;\r\n    }\r\n\r\n    //设置奖励池,设置清算时间\r\n    function setRewardPool(address _rewardPool,uint56 _clearingTime)external onlyOwner{\r\n        rewardPool=_rewardPool;\r\n        clearingTime=_clearingTime;\r\n    }\r\n\r\n    //挂单(买卖)\r\n    function putTrade(address _tokenAddress,uint32 _price,uint128 _amount,doState _doState)external{\r\n        //小数点后标志位\r\n        uint8 decimals=IERC20Metadata(_tokenAddress).decimals();\r\n        uint256 oneToken=10**decimals;\r\n        uint256 total = TimeLibrary.getTotalStable(_price,_amount,oneToken);\r\n        require(total>=10*oneToken);\r\n\r\n        address buyer;\r\n        address seller;\r\n\r\n        tradeState newTradeState;\r\n        if(_doState==doState.buy){\r\n            buyer=msg.sender;\r\n            newTradeState=tradeState.buying;\r\n        }else if(_doState==doState.sell){\r\n            newTradeState=tradeState.selling;\r\n            seller=msg.sender;\r\n        }else{\r\n            revert();\r\n        }\r\n\r\n        //清算时间24h前不能挂单\r\n        if(block.timestamp>clearingTime-1 days){revert OverTime();}\r\n        \r\n        //将代币转入该合约\r\n        IERC20(_tokenAddress).safeTransferFrom(msg.sender,address(this),total);\r\n        //授权给AAVE V3的pool\r\n        IERC20(_tokenAddress).approve(address(AaveV3Pool),total);\r\n        //供应到AAVE V3\r\n        AaveV3Pool.supply(\r\n            _tokenAddress,       //供应的token地址\r\n            total,               //供应数量\r\n            address(this),       //接收a token地址\r\n            0                    //当前referralCode=0\r\n        );\r\n\r\n        _tradeMes[id].tradeId=id;\r\n        _tradeMes[id].price=_price;\r\n        _tradeMes[id].time=uint56(block.timestamp);\r\n        _tradeMes[id].amount=_amount;\r\n        _tradeMes[id].tokenOneAmount=oneToken;\r\n        _tradeMes[id].tokenAddress=_tokenAddress;\r\n        _tradeMes[id].buyerAddress=buyer;\r\n        _tradeMes[id].solderAddress=seller;\r\n        _tradeMes[id]._tradeState=newTradeState;\r\n\r\n        _userDeposite[id][msg.sender].tradeId=id;\r\n        _userDeposite[id][msg.sender].startTime=_tradeMes[id].time;\r\n        _userDeposite[id][msg.sender].endTime=0;\r\n        _userDeposite[id][msg.sender].depositeAmount=total;\r\n        _userDeposite[id][msg.sender].earnAmount=0;\r\n        _userDeposite[id][msg.sender].user=msg.sender;\r\n        \r\n        //总质押稳定币数量相加新的质押数量\r\n        totalStable+=total;\r\n        id++;\r\n    }\r\n\r\n    //匹配订单\r\n    function matchTrade(uint32 _id) external{\r\n        //清算时间24h前不能买入或卖出\r\n        if(block.timestamp>clearingTime-1 days){revert OverTime();}\r\n        tradeMes memory maxTradeMes=_tradeMes[_id];\r\n        address _tokenAddress=maxTradeMes.tokenAddress;\r\n        uint256 _tokenOneAmount=maxTradeMes.tokenOneAmount;\r\n        uint256 total=TimeLibrary.getTotalStable(maxTradeMes.price,maxTradeMes.amount,_tokenOneAmount);\r\n        //质押违约金\r\n        IERC20(_tokenAddress).safeTransferFrom(\r\n            msg.sender,\r\n            address(this),\r\n            total\r\n        );\r\n\r\n        //授权给AAVE V3的pool\r\n        IERC20(_tokenAddress).approve(address(AaveV3Pool),total);\r\n        //供应到AAVE V3\r\n        AaveV3Pool.supply(\r\n            _tokenAddress,       //供应的token地址\r\n            total,               //供应数量\r\n            address(this),       //接收a token地址\r\n            0                    //当前referralCode=0\r\n        );\r\n        if(maxTradeMes._tradeState==tradeState.buying){\r\n            _tradeMes[_id].solderAddress=msg.sender;\r\n        }else if(maxTradeMes._tradeState==tradeState.selling){\r\n            _tradeMes[_id].buyerAddress=msg.sender;\r\n        }else{\r\n            revert(\"Trade error\");\r\n        }\r\n        \r\n        _tradeMes[_id]._tradeState=tradeState.found;\r\n        _userDeposite[_id][msg.sender].tradeId=_id;\r\n        _userDeposite[_id][msg.sender].startTime=uint56(block.timestamp);\r\n        _userDeposite[_id][msg.sender].endTime=0;\r\n        _userDeposite[_id][msg.sender].depositeAmount=total;\r\n        _userDeposite[_id][msg.sender].earnAmount=0;\r\n        _userDeposite[_id][msg.sender].user=msg.sender;\r\n        totalStable+=total;\r\n    }\r\n\r\n    //取消订单\r\n    function cancelOrder(uint32 _id)external{\r\n        \r\n    }\r\n\r\n    //退款（未产生交易退回money）\r\n    function refund(uint32 _id)external{\r\n        \r\n    }\r\n   \r\n    //根据交易id获取到购买者\r\n    function getBuyer(uint32 _id)private view returns(address){\r\n        return _tradeMes[_id].buyerAddress;\r\n    }\r\n\r\n    //根据交易id获取到出售者\r\n    function getSolder(uint32 _id)private view returns(address){\r\n        return _tradeMes[_id].solderAddress;\r\n    }\r\n\r\n    //根据交易id得到_tradeMes\r\n    function getTradeMes(uint32 _id)external view returns(tradeMes memory){\r\n        return _tradeMes[_id];\r\n    }\r\n\r\n    //得到奖励池地址\r\n    function rewardPoolAddress()external view returns(address){\r\n        return rewardPool;\r\n    }\r\n\r\n    // //返回当前清算时间\r\n    function getClearTime()external view returns(uint56){\r\n        return clearingTime;\r\n    }\r\n\r\n}"
			},
			"interfaces/AaveV3/IPool.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0\r\npragma solidity ^0.8.0;\r\n\r\nimport {IPoolAddressesProvider} from './IPoolAddressesProvider.sol';\r\nimport {DataTypes} from '../../libraries/DataTypes.sol';\r\n\r\n/**\r\n * @title IPool\r\n * @author Aave\r\n * @notice Defines the basic interface for an Aave Pool.\r\n */\r\ninterface IPool {\r\n  /**\r\n   * @dev Emitted on mintUnbacked()\r\n   * @param reserve The address of the underlying asset of the reserve\r\n   * @param user The address initiating the supply\r\n   * @param onBehalfOf The beneficiary of the supplied assets, receiving the aTokens\r\n   * @param amount The amount of supplied assets\r\n   * @param referralCode The referral code used\r\n   */\r\n  event MintUnbacked(\r\n    address indexed reserve,\r\n    address user,\r\n    address indexed onBehalfOf,\r\n    uint256 amount,\r\n    uint16 indexed referralCode\r\n  );\r\n\r\n  /**\r\n   * @dev Emitted on backUnbacked()\r\n   * @param reserve The address of the underlying asset of the reserve\r\n   * @param backer The address paying for the backing\r\n   * @param amount The amount added as backing\r\n   * @param fee The amount paid in fees\r\n   */\r\n  event BackUnbacked(address indexed reserve, address indexed backer, uint256 amount, uint256 fee);\r\n\r\n  /**\r\n   * @dev Emitted on supply()\r\n   * @param reserve The address of the underlying asset of the reserve\r\n   * @param user The address initiating the supply\r\n   * @param onBehalfOf The beneficiary of the supply, receiving the aTokens\r\n   * @param amount The amount supplied\r\n   * @param referralCode The referral code used\r\n   */\r\n  event Supply(\r\n    address indexed reserve,\r\n    address user,\r\n    address indexed onBehalfOf,\r\n    uint256 amount,\r\n    uint16 indexed referralCode\r\n  );\r\n\r\n  /**\r\n   * @dev Emitted on withdraw()\r\n   * @param reserve The address of the underlying asset being withdrawn\r\n   * @param user The address initiating the withdrawal, owner of aTokens\r\n   * @param to The address that will receive the underlying\r\n   * @param amount The amount to be withdrawn\r\n   */\r\n  event Withdraw(address indexed reserve, address indexed user, address indexed to, uint256 amount);\r\n\r\n  /**\r\n   * @dev Emitted on borrow() and flashLoan() when debt needs to be opened\r\n   * @param reserve The address of the underlying asset being borrowed\r\n   * @param user The address of the user initiating the borrow(), receiving the funds on borrow() or just\r\n   * initiator of the transaction on flashLoan()\r\n   * @param onBehalfOf The address that will be getting the debt\r\n   * @param amount The amount borrowed out\r\n   * @param interestRateMode The rate mode: 1 for Stable, 2 for Variable\r\n   * @param borrowRate The numeric rate at which the user has borrowed, expressed in ray\r\n   * @param referralCode The referral code used\r\n   */\r\n  event Borrow(\r\n    address indexed reserve,\r\n    address user,\r\n    address indexed onBehalfOf,\r\n    uint256 amount,\r\n    DataTypes.InterestRateMode interestRateMode,\r\n    uint256 borrowRate,\r\n    uint16 indexed referralCode\r\n  );\r\n\r\n  /**\r\n   * @dev Emitted on repay()\r\n   * @param reserve The address of the underlying asset of the reserve\r\n   * @param user The beneficiary of the repayment, getting his debt reduced\r\n   * @param repayer The address of the user initiating the repay(), providing the funds\r\n   * @param amount The amount repaid\r\n   * @param useATokens True if the repayment is done using aTokens, `false` if done with underlying asset directly\r\n   */\r\n  event Repay(\r\n    address indexed reserve,\r\n    address indexed user,\r\n    address indexed repayer,\r\n    uint256 amount,\r\n    bool useATokens\r\n  );\r\n\r\n  /**\r\n   * @dev Emitted on swapBorrowRateMode()\r\n   * @param reserve The address of the underlying asset of the reserve\r\n   * @param user The address of the user swapping his rate mode\r\n   * @param interestRateMode The current interest rate mode of the position being swapped: 1 for Stable, 2 for Variable\r\n   */\r\n  event SwapBorrowRateMode(\r\n    address indexed reserve,\r\n    address indexed user,\r\n    DataTypes.InterestRateMode interestRateMode\r\n  );\r\n\r\n  /**\r\n   * @dev Emitted on borrow(), repay() and liquidationCall() when using isolated assets\r\n   * @param asset The address of the underlying asset of the reserve\r\n   * @param totalDebt The total isolation mode debt for the reserve\r\n   */\r\n  event IsolationModeTotalDebtUpdated(address indexed asset, uint256 totalDebt);\r\n\r\n  /**\r\n   * @dev Emitted when the user selects a certain asset category for eMode\r\n   * @param user The address of the user\r\n   * @param categoryId The category id\r\n   */\r\n  event UserEModeSet(address indexed user, uint8 categoryId);\r\n\r\n  /**\r\n   * @dev Emitted on setUserUseReserveAsCollateral()\r\n   * @param reserve The address of the underlying asset of the reserve\r\n   * @param user The address of the user enabling the usage as collateral\r\n   */\r\n  event ReserveUsedAsCollateralEnabled(address indexed reserve, address indexed user);\r\n\r\n  /**\r\n   * @dev Emitted on setUserUseReserveAsCollateral()\r\n   * @param reserve The address of the underlying asset of the reserve\r\n   * @param user The address of the user enabling the usage as collateral\r\n   */\r\n  event ReserveUsedAsCollateralDisabled(address indexed reserve, address indexed user);\r\n\r\n  /**\r\n   * @dev Emitted on rebalanceStableBorrowRate()\r\n   * @param reserve The address of the underlying asset of the reserve\r\n   * @param user The address of the user for which the rebalance has been executed\r\n   */\r\n  event RebalanceStableBorrowRate(address indexed reserve, address indexed user);\r\n\r\n  /**\r\n   * @dev Emitted on flashLoan()\r\n   * @param target The address of the flash loan receiver contract\r\n   * @param initiator The address initiating the flash loan\r\n   * @param asset The address of the asset being flash borrowed\r\n   * @param amount The amount flash borrowed\r\n   * @param interestRateMode The flashloan mode: 0 for regular flashloan, 1 for Stable debt, 2 for Variable debt\r\n   * @param premium The fee flash borrowed\r\n   * @param referralCode The referral code used\r\n   */\r\n  event FlashLoan(\r\n    address indexed target,\r\n    address initiator,\r\n    address indexed asset,\r\n    uint256 amount,\r\n    DataTypes.InterestRateMode interestRateMode,\r\n    uint256 premium,\r\n    uint16 indexed referralCode\r\n  );\r\n\r\n  /**\r\n   * @dev Emitted when a borrower is liquidated.\r\n   * @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\r\n   * @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\r\n   * @param user The address of the borrower getting liquidated\r\n   * @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\r\n   * @param liquidatedCollateralAmount The amount of collateral received by the liquidator\r\n   * @param liquidator The address of the liquidator\r\n   * @param receiveAToken True if the liquidators wants to receive the collateral aTokens, `false` if he wants\r\n   * to receive the underlying collateral asset directly\r\n   */\r\n  event LiquidationCall(\r\n    address indexed collateralAsset,\r\n    address indexed debtAsset,\r\n    address indexed user,\r\n    uint256 debtToCover,\r\n    uint256 liquidatedCollateralAmount,\r\n    address liquidator,\r\n    bool receiveAToken\r\n  );\r\n\r\n  /**\r\n   * @dev Emitted when the state of a reserve is updated.\r\n   * @param reserve The address of the underlying asset of the reserve\r\n   * @param liquidityRate The next liquidity rate\r\n   * @param stableBorrowRate The next stable borrow rate\r\n   * @param variableBorrowRate The next variable borrow rate\r\n   * @param liquidityIndex The next liquidity index\r\n   * @param variableBorrowIndex The next variable borrow index\r\n   */\r\n  event ReserveDataUpdated(\r\n    address indexed reserve,\r\n    uint256 liquidityRate,\r\n    uint256 stableBorrowRate,\r\n    uint256 variableBorrowRate,\r\n    uint256 liquidityIndex,\r\n    uint256 variableBorrowIndex\r\n  );\r\n\r\n  /**\r\n   * @dev Emitted when the protocol treasury receives minted aTokens from the accrued interest.\r\n   * @param reserve The address of the reserve\r\n   * @param amountMinted The amount minted to the treasury\r\n   */\r\n  event MintedToTreasury(address indexed reserve, uint256 amountMinted);\r\n\r\n  /**\r\n   * @notice Mints an `amount` of aTokens to the `onBehalfOf`\r\n   * @param asset The address of the underlying asset to mint\r\n   * @param amount The amount to mint\r\n   * @param onBehalfOf The address that will receive the aTokens\r\n   * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\r\n   *   0 if the action is executed directly by the user, without any middle-man\r\n   */\r\n  function mintUnbacked(\r\n    address asset,\r\n    uint256 amount,\r\n    address onBehalfOf,\r\n    uint16 referralCode\r\n  ) external;\r\n\r\n  /**\r\n   * @notice Back the current unbacked underlying with `amount` and pay `fee`.\r\n   * @param asset The address of the underlying asset to back\r\n   * @param amount The amount to back\r\n   * @param fee The amount paid in fees\r\n   * @return The backed amount\r\n   */\r\n  function backUnbacked(address asset, uint256 amount, uint256 fee) external returns (uint256);\r\n\r\n  /**\r\n   * @notice Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens.\r\n   * - E.g. User supplies 100 USDC and gets in return 100 aUSDC\r\n   * @param asset The address of the underlying asset to supply\r\n   * @param amount The amount to be supplied\r\n   * @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\r\n   *   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\r\n   *   is a different wallet\r\n   * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\r\n   *   0 if the action is executed directly by the user, without any middle-man\r\n   */\r\n  function supply(address asset, uint256 amount, address onBehalfOf, uint16 referralCode) external;\r\n\r\n  /**\r\n   * @notice Supply with transfer approval of asset to be supplied done via permit function\r\n   * see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713\r\n   * @param asset The address of the underlying asset to supply\r\n   * @param amount The amount to be supplied\r\n   * @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\r\n   *   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\r\n   *   is a different wallet\r\n   * @param deadline The deadline timestamp that the permit is valid\r\n   * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\r\n   *   0 if the action is executed directly by the user, without any middle-man\r\n   * @param permitV The V parameter of ERC712 permit sig\r\n   * @param permitR The R parameter of ERC712 permit sig\r\n   * @param permitS The S parameter of ERC712 permit sig\r\n   */\r\n  function supplyWithPermit(\r\n    address asset,\r\n    uint256 amount,\r\n    address onBehalfOf,\r\n    uint16 referralCode,\r\n    uint256 deadline,\r\n    uint8 permitV,\r\n    bytes32 permitR,\r\n    bytes32 permitS\r\n  ) external;\r\n\r\n  /**\r\n   * @notice Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned\r\n   * E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC\r\n   * @param asset The address of the underlying asset to withdraw\r\n   * @param amount The underlying amount to be withdrawn\r\n   *   - Send the value type(uint256).max in order to withdraw the whole aToken balance\r\n   * @param to The address that will receive the underlying, same as msg.sender if the user\r\n   *   wants to receive it on his own wallet, or a different address if the beneficiary is a\r\n   *   different wallet\r\n   * @return The final amount withdrawn\r\n   */\r\n  function withdraw(address asset, uint256 amount, address to) external returns (uint256);\r\n\r\n  /**\r\n   * @notice Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower\r\n   * already supplied enough collateral, or he was given enough allowance by a credit delegator on the\r\n   * corresponding debt token (StableDebtToken or VariableDebtToken)\r\n   * - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet\r\n   *   and 100 stable/variable debt tokens, depending on the `interestRateMode`\r\n   * @param asset The address of the underlying asset to borrow\r\n   * @param amount The amount to be borrowed\r\n   * @param interestRateMode The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable\r\n   * @param referralCode The code used to register the integrator originating the operation, for potential rewards.\r\n   *   0 if the action is executed directly by the user, without any middle-man\r\n   * @param onBehalfOf The address of the user who will receive the debt. Should be the address of the borrower itself\r\n   * calling the function if he wants to borrow against his own collateral, or the address of the credit delegator\r\n   * if he has been given credit delegation allowance\r\n   */\r\n  function borrow(\r\n    address asset,\r\n    uint256 amount,\r\n    uint256 interestRateMode,\r\n    uint16 referralCode,\r\n    address onBehalfOf\r\n  ) external;\r\n\r\n  /**\r\n   * @notice Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned\r\n   * - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address\r\n   * @param asset The address of the borrowed underlying asset previously borrowed\r\n   * @param amount The amount to repay\r\n   * - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\r\n   * @param interestRateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\r\n   * @param onBehalfOf The address of the user who will get his debt reduced/removed. Should be the address of the\r\n   * user calling the function if he wants to reduce/remove his own debt, or the address of any other\r\n   * other borrower whose debt should be removed\r\n   * @return The final amount repaid\r\n   */\r\n  function repay(\r\n    address asset,\r\n    uint256 amount,\r\n    uint256 interestRateMode,\r\n    address onBehalfOf\r\n  ) external returns (uint256);\r\n\r\n  /**\r\n   * @notice Repay with transfer approval of asset to be repaid done via permit function\r\n   * see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713\r\n   * @param asset The address of the borrowed underlying asset previously borrowed\r\n   * @param amount The amount to repay\r\n   * - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\r\n   * @param interestRateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\r\n   * @param onBehalfOf Address of the user who will get his debt reduced/removed. Should be the address of the\r\n   * user calling the function if he wants to reduce/remove his own debt, or the address of any other\r\n   * other borrower whose debt should be removed\r\n   * @param deadline The deadline timestamp that the permit is valid\r\n   * @param permitV The V parameter of ERC712 permit sig\r\n   * @param permitR The R parameter of ERC712 permit sig\r\n   * @param permitS The S parameter of ERC712 permit sig\r\n   * @return The final amount repaid\r\n   */\r\n  function repayWithPermit(\r\n    address asset,\r\n    uint256 amount,\r\n    uint256 interestRateMode,\r\n    address onBehalfOf,\r\n    uint256 deadline,\r\n    uint8 permitV,\r\n    bytes32 permitR,\r\n    bytes32 permitS\r\n  ) external returns (uint256);\r\n\r\n  /**\r\n   * @notice Repays a borrowed `amount` on a specific reserve using the reserve aTokens, burning the\r\n   * equivalent debt tokens\r\n   * - E.g. User repays 100 USDC using 100 aUSDC, burning 100 variable/stable debt tokens\r\n   * @dev  Passing uint256.max as amount will clean up any residual aToken dust balance, if the user aToken\r\n   * balance is not enough to cover the whole debt\r\n   * @param asset The address of the borrowed underlying asset previously borrowed\r\n   * @param amount The amount to repay\r\n   * - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\r\n   * @param interestRateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\r\n   * @return The final amount repaid\r\n   */\r\n  function repayWithATokens(\r\n    address asset,\r\n    uint256 amount,\r\n    uint256 interestRateMode\r\n  ) external returns (uint256);\r\n\r\n  /**\r\n   * @notice Allows a borrower to swap his debt between stable and variable mode, or vice versa\r\n   * @param asset The address of the underlying asset borrowed\r\n   * @param interestRateMode The current interest rate mode of the position being swapped: 1 for Stable, 2 for Variable\r\n   */\r\n  function swapBorrowRateMode(address asset, uint256 interestRateMode) external;\r\n\r\n  /**\r\n   * @notice Rebalances the stable interest rate of a user to the current stable rate defined on the reserve.\r\n   * - Users can be rebalanced if the following conditions are satisfied:\r\n   *     1. Usage ratio is above 95%\r\n   *     2. the current supply APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too\r\n   *        much has been borrowed at a stable rate and suppliers are not earning enough\r\n   * @param asset The address of the underlying asset borrowed\r\n   * @param user The address of the user to be rebalanced\r\n   */\r\n  function rebalanceStableBorrowRate(address asset, address user) external;\r\n\r\n  /**\r\n   * @notice Allows suppliers to enable/disable a specific supplied asset as collateral\r\n   * @param asset The address of the underlying asset supplied\r\n   * @param useAsCollateral True if the user wants to use the supply as collateral, false otherwise\r\n   */\r\n  function setUserUseReserveAsCollateral(address asset, bool useAsCollateral) external;\r\n\r\n  /**\r\n   * @notice Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1\r\n   * - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives\r\n   *   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk\r\n   * @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\r\n   * @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\r\n   * @param user The address of the borrower getting liquidated\r\n   * @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\r\n   * @param receiveAToken True if the liquidators wants to receive the collateral aTokens, `false` if he wants\r\n   * to receive the underlying collateral asset directly\r\n   */\r\n  function liquidationCall(\r\n    address collateralAsset,\r\n    address debtAsset,\r\n    address user,\r\n    uint256 debtToCover,\r\n    bool receiveAToken\r\n  ) external;\r\n\r\n  /**\r\n   * @notice Allows smartcontracts to access the liquidity of the pool within one transaction,\r\n   * as long as the amount taken plus a fee is returned.\r\n   * @dev IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept\r\n   * into consideration. For further details please visit https://docs.aave.com/developers/\r\n   * @param receiverAddress The address of the contract receiving the funds, implementing IFlashLoanReceiver interface\r\n   * @param assets The addresses of the assets being flash-borrowed\r\n   * @param amounts The amounts of the assets being flash-borrowed\r\n   * @param interestRateModes Types of the debt to open if the flash loan is not returned:\r\n   *   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver\r\n   *   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\r\n   *   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\r\n   * @param onBehalfOf The address  that will receive the debt in the case of using on `modes` 1 or 2\r\n   * @param params Variadic packed params to pass to the receiver as extra information\r\n   * @param referralCode The code used to register the integrator originating the operation, for potential rewards.\r\n   *   0 if the action is executed directly by the user, without any middle-man\r\n   */\r\n  function flashLoan(\r\n    address receiverAddress,\r\n    address[] calldata assets,\r\n    uint256[] calldata amounts,\r\n    uint256[] calldata interestRateModes,\r\n    address onBehalfOf,\r\n    bytes calldata params,\r\n    uint16 referralCode\r\n  ) external;\r\n\r\n  /**\r\n   * @notice Allows smartcontracts to access the liquidity of the pool within one transaction,\r\n   * as long as the amount taken plus a fee is returned.\r\n   * @dev IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept\r\n   * into consideration. For further details please visit https://docs.aave.com/developers/\r\n   * @param receiverAddress The address of the contract receiving the funds, implementing IFlashLoanSimpleReceiver interface\r\n   * @param asset The address of the asset being flash-borrowed\r\n   * @param amount The amount of the asset being flash-borrowed\r\n   * @param params Variadic packed params to pass to the receiver as extra information\r\n   * @param referralCode The code used to register the integrator originating the operation, for potential rewards.\r\n   *   0 if the action is executed directly by the user, without any middle-man\r\n   */\r\n  function flashLoanSimple(\r\n    address receiverAddress,\r\n    address asset,\r\n    uint256 amount,\r\n    bytes calldata params,\r\n    uint16 referralCode\r\n  ) external;\r\n\r\n  /**\r\n   * @notice Returns the user account data across all the reserves\r\n   * @param user The address of the user\r\n   * @return totalCollateralBase The total collateral of the user in the base currency used by the price feed\r\n   * @return totalDebtBase The total debt of the user in the base currency used by the price feed\r\n   * @return availableBorrowsBase The borrowing power left of the user in the base currency used by the price feed\r\n   * @return currentLiquidationThreshold The liquidation threshold of the user\r\n   * @return ltv The loan to value of The user\r\n   * @return healthFactor The current health factor of the user\r\n   */\r\n  function getUserAccountData(\r\n    address user\r\n  )\r\n    external\r\n    view\r\n    returns (\r\n      uint256 totalCollateralBase,\r\n      uint256 totalDebtBase,\r\n      uint256 availableBorrowsBase,\r\n      uint256 currentLiquidationThreshold,\r\n      uint256 ltv,\r\n      uint256 healthFactor\r\n    );\r\n\r\n  /**\r\n   * @notice Initializes a reserve, activating it, assigning an aToken and debt tokens and an\r\n   * interest rate strategy\r\n   * @dev Only callable by the PoolConfigurator contract\r\n   * @param asset The address of the underlying asset of the reserve\r\n   * @param aTokenAddress The address of the aToken that will be assigned to the reserve\r\n   * @param stableDebtAddress The address of the StableDebtToken that will be assigned to the reserve\r\n   * @param variableDebtAddress The address of the VariableDebtToken that will be assigned to the reserve\r\n   * @param interestRateStrategyAddress The address of the interest rate strategy contract\r\n   */\r\n  function initReserve(\r\n    address asset,\r\n    address aTokenAddress,\r\n    address stableDebtAddress,\r\n    address variableDebtAddress,\r\n    address interestRateStrategyAddress\r\n  ) external;\r\n\r\n  /**\r\n   * @notice Drop a reserve\r\n   * @dev Only callable by the PoolConfigurator contract\r\n   * @param asset The address of the underlying asset of the reserve\r\n   */\r\n  function dropReserve(address asset) external;\r\n\r\n  /**\r\n   * @notice Updates the address of the interest rate strategy contract\r\n   * @dev Only callable by the PoolConfigurator contract\r\n   * @param asset The address of the underlying asset of the reserve\r\n   * @param rateStrategyAddress The address of the interest rate strategy contract\r\n   */\r\n  function setReserveInterestRateStrategyAddress(\r\n    address asset,\r\n    address rateStrategyAddress\r\n  ) external;\r\n\r\n  /**\r\n   * @notice Sets the configuration bitmap of the reserve as a whole\r\n   * @dev Only callable by the PoolConfigurator contract\r\n   * @param asset The address of the underlying asset of the reserve\r\n   * @param configuration The new configuration bitmap\r\n   */\r\n  function setConfiguration(\r\n    address asset,\r\n    DataTypes.ReserveConfigurationMap calldata configuration\r\n  ) external;\r\n\r\n  /**\r\n   * @notice Returns the configuration of the reserve\r\n   * @param asset The address of the underlying asset of the reserve\r\n   * @return The configuration of the reserve\r\n   */\r\n  function getConfiguration(\r\n    address asset\r\n  ) external view returns (DataTypes.ReserveConfigurationMap memory);\r\n\r\n  /**\r\n   * @notice Returns the configuration of the user across all the reserves\r\n   * @param user The user address\r\n   * @return The configuration of the user\r\n   */\r\n  function getUserConfiguration(\r\n    address user\r\n  ) external view returns (DataTypes.UserConfigurationMap memory);\r\n\r\n  /**\r\n   * @notice Returns the normalized income of the reserve\r\n   * @param asset The address of the underlying asset of the reserve\r\n   * @return The reserve's normalized income\r\n   */\r\n  function getReserveNormalizedIncome(address asset) external view returns (uint256);\r\n\r\n  /**\r\n   * @notice Returns the normalized variable debt per unit of asset\r\n   * @dev WARNING: This function is intended to be used primarily by the protocol itself to get a\r\n   * \"dynamic\" variable index based on time, current stored index and virtual rate at the current\r\n   * moment (approx. a borrower would get if opening a position). This means that is always used in\r\n   * combination with variable debt supply/balances.\r\n   * If using this function externally, consider that is possible to have an increasing normalized\r\n   * variable debt that is not equivalent to how the variable debt index would be updated in storage\r\n   * (e.g. only updates with non-zero variable debt supply)\r\n   * @param asset The address of the underlying asset of the reserve\r\n   * @return The reserve normalized variable debt\r\n   */\r\n  function getReserveNormalizedVariableDebt(address asset) external view returns (uint256);\r\n\r\n  /**\r\n   * @notice Returns the state and configuration of the reserve\r\n   * @param asset The address of the underlying asset of the reserve\r\n   * @return The state and configuration data of the reserve\r\n   */\r\n  function getReserveData(address asset) external view returns (DataTypes.ReserveData memory);\r\n\r\n  /**\r\n   * @notice Validates and finalizes an aToken transfer\r\n   * @dev Only callable by the overlying aToken of the `asset`\r\n   * @param asset The address of the underlying asset of the aToken\r\n   * @param from The user from which the aTokens are transferred\r\n   * @param to The user receiving the aTokens\r\n   * @param amount The amount being transferred/withdrawn\r\n   * @param balanceFromBefore The aToken balance of the `from` user before the transfer\r\n   * @param balanceToBefore The aToken balance of the `to` user before the transfer\r\n   */\r\n  function finalizeTransfer(\r\n    address asset,\r\n    address from,\r\n    address to,\r\n    uint256 amount,\r\n    uint256 balanceFromBefore,\r\n    uint256 balanceToBefore\r\n  ) external;\r\n\r\n  /**\r\n   * @notice Returns the list of the underlying assets of all the initialized reserves\r\n   * @dev It does not include dropped reserves\r\n   * @return The addresses of the underlying assets of the initialized reserves\r\n   */\r\n  function getReservesList() external view returns (address[] memory);\r\n\r\n  /**\r\n   * @notice Returns the address of the underlying asset of a reserve by the reserve id as stored in the DataTypes.ReserveData struct\r\n   * @param id The id of the reserve as stored in the DataTypes.ReserveData struct\r\n   * @return The address of the reserve associated with id\r\n   */\r\n  function getReserveAddressById(uint16 id) external view returns (address);\r\n\r\n  /**\r\n   * @notice Returns the PoolAddressesProvider connected to this contract\r\n   * @return The address of the PoolAddressesProvider\r\n   */\r\n  function ADDRESSES_PROVIDER() external view returns (IPoolAddressesProvider);\r\n\r\n  /**\r\n   * @notice Updates the protocol fee on the bridging\r\n   * @param bridgeProtocolFee The part of the premium sent to the protocol treasury\r\n   */\r\n  function updateBridgeProtocolFee(uint256 bridgeProtocolFee) external;\r\n\r\n  /**\r\n   * @notice Updates flash loan premiums. Flash loan premium consists of two parts:\r\n   * - A part is sent to aToken holders as extra, one time accumulated interest\r\n   * - A part is collected by the protocol treasury\r\n   * @dev The total premium is calculated on the total borrowed amount\r\n   * @dev The premium to protocol is calculated on the total premium, being a percentage of `flashLoanPremiumTotal`\r\n   * @dev Only callable by the PoolConfigurator contract\r\n   * @param flashLoanPremiumTotal The total premium, expressed in bps\r\n   * @param flashLoanPremiumToProtocol The part of the premium sent to the protocol treasury, expressed in bps\r\n   */\r\n  function updateFlashloanPremiums(\r\n    uint128 flashLoanPremiumTotal,\r\n    uint128 flashLoanPremiumToProtocol\r\n  ) external;\r\n\r\n  /**\r\n   * @notice Configures a new category for the eMode.\r\n   * @dev In eMode, the protocol allows very high borrowing power to borrow assets of the same category.\r\n   * The category 0 is reserved as it's the default for volatile assets\r\n   * @param id The id of the category\r\n   * @param config The configuration of the category\r\n   */\r\n  function configureEModeCategory(uint8 id, DataTypes.EModeCategory memory config) external;\r\n\r\n  /**\r\n   * @notice Returns the data of an eMode category\r\n   * @param id The id of the category\r\n   * @return The configuration data of the category\r\n   */\r\n  function getEModeCategoryData(uint8 id) external view returns (DataTypes.EModeCategory memory);\r\n\r\n  /**\r\n   * @notice Allows a user to use the protocol in eMode\r\n   * @param categoryId The id of the category\r\n   */\r\n  function setUserEMode(uint8 categoryId) external;\r\n\r\n  /**\r\n   * @notice Returns the eMode the user is using\r\n   * @param user The address of the user\r\n   * @return The eMode id\r\n   */\r\n  function getUserEMode(address user) external view returns (uint256);\r\n\r\n  /**\r\n   * @notice Resets the isolation mode total debt of the given asset to zero\r\n   * @dev It requires the given asset has zero debt ceiling\r\n   * @param asset The address of the underlying asset to reset the isolationModeTotalDebt\r\n   */\r\n  function resetIsolationModeTotalDebt(address asset) external;\r\n\r\n  /**\r\n   * @notice Returns the percentage of available liquidity that can be borrowed at once at stable rate\r\n   * @return The percentage of available liquidity to borrow, expressed in bps\r\n   */\r\n  function MAX_STABLE_RATE_BORROW_SIZE_PERCENT() external view returns (uint256);\r\n\r\n  /**\r\n   * @notice Returns the total fee on flash loans\r\n   * @return The total fee on flashloans\r\n   */\r\n  function FLASHLOAN_PREMIUM_TOTAL() external view returns (uint128);\r\n\r\n  /**\r\n   * @notice Returns the part of the bridge fees sent to protocol\r\n   * @return The bridge fee sent to the protocol treasury\r\n   */\r\n  function BRIDGE_PROTOCOL_FEE() external view returns (uint256);\r\n\r\n  /**\r\n   * @notice Returns the part of the flashloan fees sent to protocol\r\n   * @return The flashloan fee sent to the protocol treasury\r\n   */\r\n  function FLASHLOAN_PREMIUM_TO_PROTOCOL() external view returns (uint128);\r\n\r\n  /**\r\n   * @notice Returns the maximum number of reserves supported to be listed in this Pool\r\n   * @return The maximum number of reserves supported\r\n   */\r\n  function MAX_NUMBER_RESERVES() external view returns (uint16);\r\n\r\n  /**\r\n   * @notice Mints the assets accrued through the reserve factor to the treasury in the form of aTokens\r\n   * @param assets The list of reserves for which the minting needs to be executed\r\n   */\r\n  function mintToTreasury(address[] calldata assets) external;\r\n\r\n  /**\r\n   * @notice Rescue and transfer tokens locked in this contract\r\n   * @param token The address of the token\r\n   * @param to The address of the recipient\r\n   * @param amount The amount of token to transfer\r\n   */\r\n  function rescueTokens(address token, address to, uint256 amount) external;\r\n\r\n  /**\r\n   * @notice Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens.\r\n   * - E.g. User supplies 100 USDC and gets in return 100 aUSDC\r\n   * @dev Deprecated: Use the `supply` function instead\r\n   * @param asset The address of the underlying asset to supply\r\n   * @param amount The amount to be supplied\r\n   * @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\r\n   *   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\r\n   *   is a different wallet\r\n   * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\r\n   *   0 if the action is executed directly by the user, without any middle-man\r\n   */\r\n  function deposit(address asset, uint256 amount, address onBehalfOf, uint16 referralCode) external;\r\n}"
			},
			"interfaces/ITimeFactory.sol": {
				"content": "//SPDX-License-Identifier:MIT\r\npragma solidity ^0.8.9;\r\n\r\ninterface ITimeFactory{\r\n    //得到最新的id\r\n    function getLastId()external view returns(uint256);\r\n\r\n    //根据id得到已经创建的合约信息\r\n    function getContractMes(uint256 _id)external view returns(address);\r\n    \r\n    //费用地址\r\n    function thisFeeAddress()external view returns(address);\r\n\r\n    //所有者\r\n    function thisOwner()external view returns(address);\r\n}"
			},
			"interfaces/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../interfaces/IERC20.sol\";\r\n\r\n/**\r\n * @dev Interface for the optional metadata functions from the ERC20 standard.\r\n *\r\n * _Available since v4.1._\r\n */\r\ninterface IERC20Metadata is IERC20 {\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the decimals places of the token.\r\n     */\r\n    function decimals() external view returns (uint8);\r\n}"
			},
			"libraries/TimeLibrary.sol": {
				"content": "//SPDX-License-Identifier:MIT\r\npragma solidity >=0.8.9;\r\n\r\nlibrary TimeLibrary{\r\n    \r\n\r\n\r\n    /*\r\n        *  100 ether<=amount<1000 ether, 1%\r\n        *  1000 ether<=amount<10000 ether,0.8%\r\n        *  amount>10000 ether,0.5%\r\n        * other error\r\n    */\r\n    function fee(uint256 _tokenOneAmount,uint256 stableAmount)internal pure returns(uint256 stableFee){\r\n        if(stableAmount>=100*_tokenOneAmount && stableAmount<1000*_tokenOneAmount){\r\n            return stableAmount/100;\r\n        }else if(stableAmount>=1000*_tokenOneAmount && stableAmount<10000*_tokenOneAmount){\r\n            return stableAmount/125;\r\n        }else if(stableAmount>=10000*_tokenOneAmount){\r\n            return stableAmount/200;\r\n        }else{\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    //计算出售者需要质押的违约金(稳定币)\r\n    function getPenal(uint32 _soldPrice, uint128 _soldAmount,uint256 _tokenOneAmount)internal pure returns (uint256){\r\n        uint256 thisAmount = (_soldPrice*_tokenOneAmount)/1000*_soldAmount;\r\n        if (thisAmount >= 100*_tokenOneAmount && thisAmount < 1000*_tokenOneAmount) {\r\n            return (thisAmount * 50) / 100;\r\n        } else if (thisAmount >= 1000*_tokenOneAmount && thisAmount < 10000*_tokenOneAmount) {\r\n            return (thisAmount * 40) / 100;\r\n        } else if (thisAmount > 10000*_tokenOneAmount) {\r\n            return (thisAmount * 25) / 100;\r\n        } else {\r\n            revert(\"NotEnoughAmount\");\r\n        }\r\n    }\r\n\r\n    //计算总质押稳定币数量\r\n    function getTotalStable(uint32 _soldPrice, uint128 _soldAmount,uint256 _tokenOneAmount)internal pure returns(uint256){\r\n        return _soldAmount*_soldPrice/1000*_tokenOneAmount;\r\n    }\r\n}"
			},
			"interfaces/ITimeMarket.sol": {
				"content": "//SPDX-License-Identifier:MIT\r\npragma solidity >=0.8.0;\r\n\r\ninterface ITimeMarket{\r\n    enum doState{buy,sell,repay}\r\n\r\n    enum tradeState{buying,selling,found,done,inexistence}\r\n\r\n    //struct\r\n    struct tradeMes{\r\n        uint32 tradeId;\r\n        uint32 price;       //buyPrice/1000=当前价格\r\n        uint56 time;        //购买时的时间\r\n        uint128 amount; //预期空投代币数量\r\n        uint256 tokenOneAmount;  //1单位数量\r\n        address tokenAddress;\r\n        address buyerAddress;\r\n        address solderAddress;\r\n        tradeState _tradeState;\r\n    }\r\n\r\n    struct userDeposite{\r\n        uint32 tradeId;\r\n        uint56 startTime;\r\n        uint56 endTime;\r\n        uint256 depositeAmount;\r\n        uint256 earnAmount;\r\n        address user;\r\n    }\r\n\r\n    //error\r\n    //购买数量<100\r\n    error NotEnoughAmount();\r\n    //已经放入约定的空投代币数量\r\n    error AlreadyInjectToken();\r\n    //没有放入约定的空投代币数量\r\n    error NotInjectToken();\r\n    //超过清算时间-12h前\r\n    error OverTime();\r\n    //未到清算时间\r\n    error NotEndTime();\r\n    //不是购买者\r\n    error NotBuyer();\r\n    //不是出售者\r\n    error NorSolder();\r\n    //交易成功\r\n    error TradeSuccess();\r\n    //交易失败\r\n    error FailTrade();\r\n    //注入aave错误\r\n    error InjectAaveError();\r\n    //已经提取代币\r\n    error AlreadyWithdraw();\r\n    //token转移失败\r\n    error FailTransfer();\r\n\r\n    //event\r\n    event withdrawAipdrop(uint256 _amount,uint256 _time,address _userAddress);\r\n    event Mint(address indexed sender, uint amount0, uint amount1);\r\n    event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\r\n}"
			},
			"libraries/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\r\n\r\npragma solidity >=0.8.0;\r\n\r\nimport {IERC20} from \"../interfaces/IERC20.sol\";\r\nimport {IERC20Permit} from \"../interfaces/IERC20Permit.sol\";\r\nimport {Address} from \"../libraries/Address.sol\";\r\n\r\n/**\r\n * @title SafeERC20\r\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\r\n * contract returns false). Tokens that return no value (and instead revert or\r\n * throw on failure) are also supported, non-reverting calls are assumed to be\r\n * successful.\r\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\r\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\r\n */\r\nlibrary SafeERC20 {\r\n    using Address for address;\r\n\r\n    /**\r\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\r\n     * non-reverting calls are assumed to be successful.\r\n     */\r\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\r\n    }\r\n\r\n    /**\r\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\r\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\r\n     */\r\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\r\n    }\r\n\r\n    /**\r\n     * @dev Deprecated. This function has issues similar to the ones found in\r\n     * {IERC20-approve}, and its usage is discouraged.\r\n     *\r\n     * Whenever possible, use {safeIncreaseAllowance} and\r\n     * {safeDecreaseAllowance} instead.\r\n     */\r\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\r\n        // safeApprove should only be called when setting an initial allowance,\r\n        // or when resetting it to zero. To increase and decrease it, use\r\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\r\n        require(\r\n            (value == 0) || (token.allowance(address(this), spender) == 0),\r\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\r\n        );\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\r\n    }\r\n\r\n    /**\r\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\r\n     * non-reverting calls are assumed to be successful.\r\n     */\r\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\r\n        uint256 oldAllowance = token.allowance(address(this), spender);\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\r\n    }\r\n\r\n    /**\r\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\r\n     * non-reverting calls are assumed to be successful.\r\n     */\r\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\r\n        unchecked {\r\n            uint256 oldAllowance = token.allowance(address(this), spender);\r\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\r\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\r\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\r\n     * to be set to zero before setting it to a non-zero value, such as USDT.\r\n     */\r\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\r\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\r\n\r\n        if (!_callOptionalReturnBool(token, approvalCall)) {\r\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\r\n            _callOptionalReturn(token, approvalCall);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\r\n     * Revert on invalid signature.\r\n     */\r\n    function safePermit(\r\n        IERC20Permit token,\r\n        address owner,\r\n        address spender,\r\n        uint256 value,\r\n        uint256 deadline,\r\n        uint8 v,\r\n        bytes32 r,\r\n        bytes32 s\r\n    ) internal {\r\n        uint256 nonceBefore = token.nonces(owner);\r\n        token.permit(owner, spender, value, deadline, v, r, s);\r\n        uint256 nonceAfter = token.nonces(owner);\r\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\r\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\r\n     * @param token The token targeted by the call.\r\n     * @param data The call data (encoded using abi.encode or one of its variants).\r\n     */\r\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\r\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\r\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\r\n        // the target address contains contract code and also asserts for success in the low-level call.\r\n\r\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\r\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\r\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\r\n     * @param token The token targeted by the call.\r\n     * @param data The call data (encoded using abi.encode or one of its variants).\r\n     *\r\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\r\n     */\r\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\r\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\r\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\r\n        // and not revert is the subcall reverts.\r\n\r\n        (bool success, bytes memory returndata) = address(token).call(data);\r\n        return\r\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\r\n    }\r\n}\r\n"
			},
			"libraries/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\r\n\r\npragma solidity >=0.8.0;\r\n\r\n/**\r\n * @dev Collection of functions related to the address type\r\n */\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     *\r\n     * Furthermore, `isContract` will also return true if the target contract within\r\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\r\n     * which only has an effect at the end of a transaction.\r\n     * ====\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\r\n     *\r\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\r\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\r\n     * constructor.\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize/address.code.length, which returns 0\r\n        // for contracts in construction, since the code is only stored at the end\r\n        // of the constructor execution.\r\n\r\n        return account.code.length > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        (bool success, ) = recipient.call{value: amount}(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain `call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\r\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        (bool success, bytes memory returndata) = target.delegatecall(data);\r\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\r\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\r\n     *\r\n     * _Available since v4.8._\r\n     */\r\n    function verifyCallResultFromTarget(\r\n        address target,\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        if (success) {\r\n            if (returndata.length == 0) {\r\n                // only check isContract if the call was successful and the return data is empty\r\n                // otherwise we already know that it was a contract\r\n                require(isContract(target), \"Address: call to non-contract\");\r\n            }\r\n            return returndata;\r\n        } else {\r\n            _revert(returndata, errorMessage);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\r\n     * revert reason or using the provided one.\r\n     *\r\n     * _Available since v4.3._\r\n     */\r\n    function verifyCallResult(\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal pure returns (bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            _revert(returndata, errorMessage);\r\n        }\r\n    }\r\n\r\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\r\n        // Look for revert reason and bubble it up if present\r\n        if (returndata.length > 0) {\r\n            // The easiest way to bubble the revert reason is using memory via assembly\r\n            /// @solidity memory-safe-assembly\r\n            assembly {\r\n                let returndata_size := mload(returndata)\r\n                revert(add(32, returndata), returndata_size)\r\n            }\r\n        } else {\r\n            revert(errorMessage);\r\n        }\r\n    }\r\n}\r\n"
			},
			"interfaces/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\r\n\r\npragma solidity >=0.8.0;\r\n\r\n/**\r\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\r\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\r\n *\r\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\r\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\r\n * need to send a transaction, and thus is not required to hold Ether at all.\r\n *\r\n * ==== Security Considerations\r\n *\r\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\r\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\r\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\r\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\r\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\r\n * generally recommended is:\r\n *\r\n * ```solidity\r\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\r\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\r\n *     doThing(..., value);\r\n * }\r\n *\r\n * function doThing(..., uint256 value) public {\r\n *     token.safeTransferFrom(msg.sender, address(this), value);\r\n *     ...\r\n * }\r\n * ```\r\n *\r\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\r\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\r\n * {SafeERC20-safeTransferFrom}).\r\n *\r\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\r\n * contracts should have entry points that don't rely on permit.\r\n */\r\ninterface IERC20Permit {\r\n    /**\r\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\r\n     * given ``owner``'s signed approval.\r\n     *\r\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\r\n     * ordering also apply here.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     * - `deadline` must be a timestamp in the future.\r\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\r\n     * over the EIP712-formatted function arguments.\r\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\r\n     *\r\n     * For more information on the signature format, see the\r\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\r\n     * section].\r\n     *\r\n     * CAUTION: See Security Considerations above.\r\n     */\r\n    function permit(\r\n        address owner,\r\n        address spender,\r\n        uint256 value,\r\n        uint256 deadline,\r\n        uint8 v,\r\n        bytes32 r,\r\n        bytes32 s\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Returns the current nonce for `owner`. This value must be\r\n     * included whenever a signature is generated for {permit}.\r\n     *\r\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\r\n     * prevents a signature from being used multiple times.\r\n     */\r\n    function nonces(address owner) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\r\n     */\r\n    // solhint-disable-next-line func-name-mixedcase\r\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\r\n}\r\n"
			},
			"interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `to`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address to, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `from` to `to` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\r\n}\r\n"
			},
			"libraries/DataTypes.sol": {
				"content": "// SPDX-License-Identifier: BUSL-1.1\r\npragma solidity ^0.8.0;\r\n\r\nlibrary DataTypes {\r\n  struct ReserveData {\r\n    //stores the reserve configuration\r\n    ReserveConfigurationMap configuration;\r\n    //the liquidity index. Expressed in ray\r\n    uint128 liquidityIndex;\r\n    //the current supply rate. Expressed in ray\r\n    uint128 currentLiquidityRate;\r\n    //variable borrow index. Expressed in ray\r\n    uint128 variableBorrowIndex;\r\n    //the current variable borrow rate. Expressed in ray\r\n    uint128 currentVariableBorrowRate;\r\n    //the current stable borrow rate. Expressed in ray\r\n    uint128 currentStableBorrowRate;\r\n    //timestamp of last update\r\n    uint40 lastUpdateTimestamp;\r\n    //the id of the reserve. Represents the position in the list of the active reserves\r\n    uint16 id;\r\n    //aToken address\r\n    address aTokenAddress;\r\n    //stableDebtToken address\r\n    address stableDebtTokenAddress;\r\n    //variableDebtToken address\r\n    address variableDebtTokenAddress;\r\n    //address of the interest rate strategy\r\n    address interestRateStrategyAddress;\r\n    //the current treasury balance, scaled\r\n    uint128 accruedToTreasury;\r\n    //the outstanding unbacked aTokens minted through the bridging feature\r\n    uint128 unbacked;\r\n    //the outstanding debt borrowed against this asset in isolation mode\r\n    uint128 isolationModeTotalDebt;\r\n  }\r\n\r\n  struct ReserveConfigurationMap {\r\n    //bit 0-15: LTV\r\n    //bit 16-31: Liq. threshold\r\n    //bit 32-47: Liq. bonus\r\n    //bit 48-55: Decimals\r\n    //bit 56: reserve is active\r\n    //bit 57: reserve is frozen\r\n    //bit 58: borrowing is enabled\r\n    //bit 59: stable rate borrowing enabled\r\n    //bit 60: asset is paused\r\n    //bit 61: borrowing in isolation mode is enabled\r\n    //bit 62: siloed borrowing enabled\r\n    //bit 63: flashloaning enabled\r\n    //bit 64-79: reserve factor\r\n    //bit 80-115 borrow cap in whole tokens, borrowCap == 0 => no cap\r\n    //bit 116-151 supply cap in whole tokens, supplyCap == 0 => no cap\r\n    //bit 152-167 liquidation protocol fee\r\n    //bit 168-175 eMode category\r\n    //bit 176-211 unbacked mint cap in whole tokens, unbackedMintCap == 0 => minting disabled\r\n    //bit 212-251 debt ceiling for isolation mode with (ReserveConfiguration::DEBT_CEILING_DECIMALS) decimals\r\n    //bit 252-255 unused\r\n\r\n    uint256 data;\r\n  }\r\n\r\n  struct UserConfigurationMap {\r\n    /**\r\n     * @dev Bitmap of the users collaterals and borrows. It is divided in pairs of bits, one pair per asset.\r\n     * The first bit indicates if an asset is used as collateral by the user, the second whether an\r\n     * asset is borrowed by the user.\r\n     */\r\n    uint256 data;\r\n  }\r\n\r\n  struct EModeCategory {\r\n    // each eMode category has a custom ltv and liquidation threshold\r\n    uint16 ltv;\r\n    uint16 liquidationThreshold;\r\n    uint16 liquidationBonus;\r\n    // each eMode category may or may not have a custom oracle to override the individual assets price oracles\r\n    address priceSource;\r\n    string label;\r\n  }\r\n\r\n  enum InterestRateMode {NONE, STABLE, VARIABLE}\r\n\r\n  struct ReserveCache {\r\n    uint256 currScaledVariableDebt;\r\n    uint256 nextScaledVariableDebt;\r\n    uint256 currPrincipalStableDebt;\r\n    uint256 currAvgStableBorrowRate;\r\n    uint256 currTotalStableDebt;\r\n    uint256 nextAvgStableBorrowRate;\r\n    uint256 nextTotalStableDebt;\r\n    uint256 currLiquidityIndex;\r\n    uint256 nextLiquidityIndex;\r\n    uint256 currVariableBorrowIndex;\r\n    uint256 nextVariableBorrowIndex;\r\n    uint256 currLiquidityRate;\r\n    uint256 currVariableBorrowRate;\r\n    uint256 reserveFactor;\r\n    ReserveConfigurationMap reserveConfiguration;\r\n    address aTokenAddress;\r\n    address stableDebtTokenAddress;\r\n    address variableDebtTokenAddress;\r\n    uint40 reserveLastUpdateTimestamp;\r\n    uint40 stableDebtLastUpdateTimestamp;\r\n  }\r\n\r\n  struct ExecuteLiquidationCallParams {\r\n    uint256 reservesCount;\r\n    uint256 debtToCover;\r\n    address collateralAsset;\r\n    address debtAsset;\r\n    address user;\r\n    bool receiveAToken;\r\n    address priceOracle;\r\n    uint8 userEModeCategory;\r\n    address priceOracleSentinel;\r\n  }\r\n\r\n  struct ExecuteSupplyParams {\r\n    address asset;\r\n    uint256 amount;\r\n    address onBehalfOf;\r\n    uint16 referralCode;\r\n  }\r\n\r\n  struct ExecuteBorrowParams {\r\n    address asset;\r\n    address user;\r\n    address onBehalfOf;\r\n    uint256 amount;\r\n    InterestRateMode interestRateMode;\r\n    uint16 referralCode;\r\n    bool releaseUnderlying;\r\n    uint256 maxStableRateBorrowSizePercent;\r\n    uint256 reservesCount;\r\n    address oracle;\r\n    uint8 userEModeCategory;\r\n    address priceOracleSentinel;\r\n  }\r\n\r\n  struct ExecuteRepayParams {\r\n    address asset;\r\n    uint256 amount;\r\n    InterestRateMode interestRateMode;\r\n    address onBehalfOf;\r\n    bool useATokens;\r\n  }\r\n\r\n  struct ExecuteWithdrawParams {\r\n    address asset;\r\n    uint256 amount;\r\n    address to;\r\n    uint256 reservesCount;\r\n    address oracle;\r\n    uint8 userEModeCategory;\r\n  }\r\n\r\n  struct ExecuteSetUserEModeParams {\r\n    uint256 reservesCount;\r\n    address oracle;\r\n    uint8 categoryId;\r\n  }\r\n\r\n  struct FinalizeTransferParams {\r\n    address asset;\r\n    address from;\r\n    address to;\r\n    uint256 amount;\r\n    uint256 balanceFromBefore;\r\n    uint256 balanceToBefore;\r\n    uint256 reservesCount;\r\n    address oracle;\r\n    uint8 fromEModeCategory;\r\n  }\r\n\r\n  struct FlashloanParams {\r\n    address receiverAddress;\r\n    address[] assets;\r\n    uint256[] amounts;\r\n    uint256[] interestRateModes;\r\n    address onBehalfOf;\r\n    bytes params;\r\n    uint16 referralCode;\r\n    uint256 flashLoanPremiumToProtocol;\r\n    uint256 flashLoanPremiumTotal;\r\n    uint256 maxStableRateBorrowSizePercent;\r\n    uint256 reservesCount;\r\n    address addressesProvider;\r\n    uint8 userEModeCategory;\r\n    bool isAuthorizedFlashBorrower;\r\n  }\r\n\r\n  struct FlashloanSimpleParams {\r\n    address receiverAddress;\r\n    address asset;\r\n    uint256 amount;\r\n    bytes params;\r\n    uint16 referralCode;\r\n    uint256 flashLoanPremiumToProtocol;\r\n    uint256 flashLoanPremiumTotal;\r\n  }\r\n\r\n  struct FlashLoanRepaymentParams {\r\n    uint256 amount;\r\n    uint256 totalPremium;\r\n    uint256 flashLoanPremiumToProtocol;\r\n    address asset;\r\n    address receiverAddress;\r\n    uint16 referralCode;\r\n  }\r\n\r\n  struct CalculateUserAccountDataParams {\r\n    UserConfigurationMap userConfig;\r\n    uint256 reservesCount;\r\n    address user;\r\n    address oracle;\r\n    uint8 userEModeCategory;\r\n  }\r\n\r\n  struct ValidateBorrowParams {\r\n    ReserveCache reserveCache;\r\n    UserConfigurationMap userConfig;\r\n    address asset;\r\n    address userAddress;\r\n    uint256 amount;\r\n    InterestRateMode interestRateMode;\r\n    uint256 maxStableLoanPercent;\r\n    uint256 reservesCount;\r\n    address oracle;\r\n    uint8 userEModeCategory;\r\n    address priceOracleSentinel;\r\n    bool isolationModeActive;\r\n    address isolationModeCollateralAddress;\r\n    uint256 isolationModeDebtCeiling;\r\n  }\r\n\r\n  struct ValidateLiquidationCallParams {\r\n    ReserveCache debtReserveCache;\r\n    uint256 totalDebt;\r\n    uint256 healthFactor;\r\n    address priceOracleSentinel;\r\n  }\r\n\r\n  struct CalculateInterestRatesParams {\r\n    uint256 unbacked;\r\n    uint256 liquidityAdded;\r\n    uint256 liquidityTaken;\r\n    uint256 totalStableDebt;\r\n    uint256 totalVariableDebt;\r\n    uint256 averageStableBorrowRate;\r\n    uint256 reserveFactor;\r\n    address reserve;\r\n    address aToken;\r\n  }\r\n\r\n  struct InitReserveParams {\r\n    address asset;\r\n    address aTokenAddress;\r\n    address stableDebtAddress;\r\n    address variableDebtAddress;\r\n    address interestRateStrategyAddress;\r\n    uint16 reservesCount;\r\n    uint16 maxNumberReserves;\r\n  }\r\n}"
			},
			"interfaces/AaveV3/IPoolAddressesProvider.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @title IPoolAddressesProvider\r\n * @author Aave\r\n * @notice Defines the basic interface for a Pool Addresses Provider.\r\n */\r\ninterface IPoolAddressesProvider {\r\n  /**\r\n   * @dev Emitted when the market identifier is updated.\r\n   * @param oldMarketId The old id of the market\r\n   * @param newMarketId The new id of the market\r\n   */\r\n  event MarketIdSet(string indexed oldMarketId, string indexed newMarketId);\r\n\r\n  /**\r\n   * @dev Emitted when the pool is updated.\r\n   * @param oldAddress The old address of the Pool\r\n   * @param newAddress The new address of the Pool\r\n   */\r\n  event PoolUpdated(address indexed oldAddress, address indexed newAddress);\r\n\r\n  /**\r\n   * @dev Emitted when the pool configurator is updated.\r\n   * @param oldAddress The old address of the PoolConfigurator\r\n   * @param newAddress The new address of the PoolConfigurator\r\n   */\r\n  event PoolConfiguratorUpdated(address indexed oldAddress, address indexed newAddress);\r\n\r\n  /**\r\n   * @dev Emitted when the price oracle is updated.\r\n   * @param oldAddress The old address of the PriceOracle\r\n   * @param newAddress The new address of the PriceOracle\r\n   */\r\n  event PriceOracleUpdated(address indexed oldAddress, address indexed newAddress);\r\n\r\n  /**\r\n   * @dev Emitted when the ACL manager is updated.\r\n   * @param oldAddress The old address of the ACLManager\r\n   * @param newAddress The new address of the ACLManager\r\n   */\r\n  event ACLManagerUpdated(address indexed oldAddress, address indexed newAddress);\r\n\r\n  /**\r\n   * @dev Emitted when the ACL admin is updated.\r\n   * @param oldAddress The old address of the ACLAdmin\r\n   * @param newAddress The new address of the ACLAdmin\r\n   */\r\n  event ACLAdminUpdated(address indexed oldAddress, address indexed newAddress);\r\n\r\n  /**\r\n   * @dev Emitted when the price oracle sentinel is updated.\r\n   * @param oldAddress The old address of the PriceOracleSentinel\r\n   * @param newAddress The new address of the PriceOracleSentinel\r\n   */\r\n  event PriceOracleSentinelUpdated(address indexed oldAddress, address indexed newAddress);\r\n\r\n  /**\r\n   * @dev Emitted when the pool data provider is updated.\r\n   * @param oldAddress The old address of the PoolDataProvider\r\n   * @param newAddress The new address of the PoolDataProvider\r\n   */\r\n  event PoolDataProviderUpdated(address indexed oldAddress, address indexed newAddress);\r\n\r\n  /**\r\n   * @dev Emitted when a new proxy is created.\r\n   * @param id The identifier of the proxy\r\n   * @param proxyAddress The address of the created proxy contract\r\n   * @param implementationAddress The address of the implementation contract\r\n   */\r\n  event ProxyCreated(\r\n    bytes32 indexed id,\r\n    address indexed proxyAddress,\r\n    address indexed implementationAddress\r\n  );\r\n\r\n  /**\r\n   * @dev Emitted when a new non-proxied contract address is registered.\r\n   * @param id The identifier of the contract\r\n   * @param oldAddress The address of the old contract\r\n   * @param newAddress The address of the new contract\r\n   */\r\n  event AddressSet(bytes32 indexed id, address indexed oldAddress, address indexed newAddress);\r\n\r\n  /**\r\n   * @dev Emitted when the implementation of the proxy registered with id is updated\r\n   * @param id The identifier of the contract\r\n   * @param proxyAddress The address of the proxy contract\r\n   * @param oldImplementationAddress The address of the old implementation contract\r\n   * @param newImplementationAddress The address of the new implementation contract\r\n   */\r\n  event AddressSetAsProxy(\r\n    bytes32 indexed id,\r\n    address indexed proxyAddress,\r\n    address oldImplementationAddress,\r\n    address indexed newImplementationAddress\r\n  );\r\n\r\n  /**\r\n   * @notice Returns the id of the Aave market to which this contract points to.\r\n   * @return The market id\r\n   */\r\n  function getMarketId() external view returns (string memory);\r\n\r\n  /**\r\n   * @notice Associates an id with a specific PoolAddressesProvider.\r\n   * @dev This can be used to create an onchain registry of PoolAddressesProviders to\r\n   * identify and validate multiple Aave markets.\r\n   * @param newMarketId The market id\r\n   */\r\n  function setMarketId(string calldata newMarketId) external;\r\n\r\n  /**\r\n   * @notice Returns an address by its identifier.\r\n   * @dev The returned address might be an EOA or a contract, potentially proxied\r\n   * @dev It returns ZERO if there is no registered address with the given id\r\n   * @param id The id\r\n   * @return The address of the registered for the specified id\r\n   */\r\n  function getAddress(bytes32 id) external view returns (address);\r\n\r\n  /**\r\n   * @notice General function to update the implementation of a proxy registered with\r\n   * certain `id`. If there is no proxy registered, it will instantiate one and\r\n   * set as implementation the `newImplementationAddress`.\r\n   * @dev IMPORTANT Use this function carefully, only for ids that don't have an explicit\r\n   * setter function, in order to avoid unexpected consequences\r\n   * @param id The id\r\n   * @param newImplementationAddress The address of the new implementation\r\n   */\r\n  function setAddressAsProxy(bytes32 id, address newImplementationAddress) external;\r\n\r\n  /**\r\n   * @notice Sets an address for an id replacing the address saved in the addresses map.\r\n   * @dev IMPORTANT Use this function carefully, as it will do a hard replacement\r\n   * @param id The id\r\n   * @param newAddress The address to set\r\n   */\r\n  function setAddress(bytes32 id, address newAddress) external;\r\n\r\n  /**\r\n   * @notice Returns the address of the Pool proxy.\r\n   * @return The Pool proxy address\r\n   */\r\n  function getPool() external view returns (address);\r\n\r\n  /**\r\n   * @notice Updates the implementation of the Pool, or creates a proxy\r\n   * setting the new `pool` implementation when the function is called for the first time.\r\n   * @param newPoolImpl The new Pool implementation\r\n   */\r\n  function setPoolImpl(address newPoolImpl) external;\r\n\r\n  /**\r\n   * @notice Returns the address of the PoolConfigurator proxy.\r\n   * @return The PoolConfigurator proxy address\r\n   */\r\n  function getPoolConfigurator() external view returns (address);\r\n\r\n  /**\r\n   * @notice Updates the implementation of the PoolConfigurator, or creates a proxy\r\n   * setting the new `PoolConfigurator` implementation when the function is called for the first time.\r\n   * @param newPoolConfiguratorImpl The new PoolConfigurator implementation\r\n   */\r\n  function setPoolConfiguratorImpl(address newPoolConfiguratorImpl) external;\r\n\r\n  /**\r\n   * @notice Returns the address of the price oracle.\r\n   * @return The address of the PriceOracle\r\n   */\r\n  function getPriceOracle() external view returns (address);\r\n\r\n  /**\r\n   * @notice Updates the address of the price oracle.\r\n   * @param newPriceOracle The address of the new PriceOracle\r\n   */\r\n  function setPriceOracle(address newPriceOracle) external;\r\n\r\n  /**\r\n   * @notice Returns the address of the ACL manager.\r\n   * @return The address of the ACLManager\r\n   */\r\n  function getACLManager() external view returns (address);\r\n\r\n  /**\r\n   * @notice Updates the address of the ACL manager.\r\n   * @param newAclManager The address of the new ACLManager\r\n   */\r\n  function setACLManager(address newAclManager) external;\r\n\r\n  /**\r\n   * @notice Returns the address of the ACL admin.\r\n   * @return The address of the ACL admin\r\n   */\r\n  function getACLAdmin() external view returns (address);\r\n\r\n  /**\r\n   * @notice Updates the address of the ACL admin.\r\n   * @param newAclAdmin The address of the new ACL admin\r\n   */\r\n  function setACLAdmin(address newAclAdmin) external;\r\n\r\n  /**\r\n   * @notice Returns the address of the price oracle sentinel.\r\n   * @return The address of the PriceOracleSentinel\r\n   */\r\n  function getPriceOracleSentinel() external view returns (address);\r\n\r\n  /**\r\n   * @notice Updates the address of the price oracle sentinel.\r\n   * @param newPriceOracleSentinel The address of the new PriceOracleSentinel\r\n   */\r\n  function setPriceOracleSentinel(address newPriceOracleSentinel) external;\r\n\r\n  /**\r\n   * @notice Returns the address of the data provider.\r\n   * @return The address of the DataProvider\r\n   */\r\n  function getPoolDataProvider() external view returns (address);\r\n\r\n  /**\r\n   * @notice Updates the address of the data provider.\r\n   * @param newDataProvider The address of the new DataProvider\r\n   */\r\n  function setPoolDataProvider(address newDataProvider) external;\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/TimeMarket.sol": {
				"TimeMarket": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_airdropToken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AlreadyInjectToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "AlreadyWithdraw",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailTrade",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailTransfer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InjectAaveError",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NorSolder",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotBuyer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotEndTime",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotEnoughAmount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInjectToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OverTime",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TradeSuccess",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_time",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								}
							],
							"name": "withdrawAipdrop",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "_id",
									"type": "uint32"
								}
							],
							"name": "cancelOrder",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getClearTime",
							"outputs": [
								{
									"internalType": "uint56",
									"name": "",
									"type": "uint56"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "_id",
									"type": "uint32"
								}
							],
							"name": "getTradeMes",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint32",
											"name": "tradeId",
											"type": "uint32"
										},
										{
											"internalType": "uint32",
											"name": "price",
											"type": "uint32"
										},
										{
											"internalType": "uint56",
											"name": "time",
											"type": "uint56"
										},
										{
											"internalType": "uint128",
											"name": "amount",
											"type": "uint128"
										},
										{
											"internalType": "uint256",
											"name": "tokenOneAmount",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "tokenAddress",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "buyerAddress",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "solderAddress",
											"type": "address"
										},
										{
											"internalType": "enum ITimeMarket.tradeState",
											"name": "_tradeState",
											"type": "uint8"
										}
									],
									"internalType": "struct ITimeMarket.tradeMes",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "_id",
									"type": "uint32"
								}
							],
							"name": "matchTrade",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenAddress",
									"type": "address"
								},
								{
									"internalType": "uint32",
									"name": "_price",
									"type": "uint32"
								},
								{
									"internalType": "uint128",
									"name": "_amount",
									"type": "uint128"
								},
								{
									"internalType": "enum ITimeMarket.doState",
									"name": "_doState",
									"type": "uint8"
								}
							],
							"name": "putTrade",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "_id",
									"type": "uint32"
								}
							],
							"name": "refund",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardPoolAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_rewardPool",
									"type": "address"
								},
								{
									"internalType": "uint56",
									"name": "_clearingTime",
									"type": "uint56"
								}
							],
							"name": "setRewardPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/TimeMarket.sol\":442:6872  contract TimeMarket is ITimeMarket{... */\n  mstore(0x40, 0x80)\n    /* \"contracts/TimeMarket.sol\":867:909  0xaA8E23Fb1079EA71e0a56F48a2aA51851D8433D0 */\n  0xaa8e23fb1079ea71e0a56f48a2aa51851d8433d0\n    /* \"contracts/TimeMarket.sol\":845:909  address private AUSDT=0xaA8E23Fb1079EA71e0a56F48a2aA51851D8433D0 */\n  0x04\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/TimeMarket.sol\":998:1040  0xAF0F6e8b0Dc5c913bbF4d14c22B4E78Dd14310B6 */\n  0xaf0f6e8b0dc5c913bbf4d14c22b4e78dd14310b6\n    /* \"contracts/TimeMarket.sol\":973:1040  address private AEthUsdt=0xAF0F6e8b0Dc5c913bbF4d14c22B4E78Dd14310B6 */\n  0x05\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/TimeMarket.sol\":1105:1147  0x6Ae43d3271ff6888e7Fc43Fd7321a503ff738951 */\n  0x6ae43d3271ff6888e7fc43fd7321a503ff738951\n    /* \"contracts/TimeMarket.sol\":1074:1148  IPool private AaveV3Pool=IPool(0x6Ae43d3271ff6888e7Fc43Fd7321a503ff738951) */\n  0x06\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/TimeMarket.sol\":1157:1270  constructor(address _airdropToken){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/TimeMarket.sol\":1215:1228  _airdropToken */\n  dup1\n    /* \"contracts/TimeMarket.sol\":1202:1214  airdropToken */\n  0x03\n  0x00\n    /* \"contracts/TimeMarket.sol\":1202:1228  airdropToken=_airdropToken */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/TimeMarket.sol\":1252:1262  msg.sender */\n  caller\n    /* \"contracts/TimeMarket.sol\":1239:1251  factoryOwner */\n  0x00\n  0x0b\n    /* \"contracts/TimeMarket.sol\":1239:1262  factoryOwner=msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/TimeMarket.sol\":1157:1270  constructor(address _airdropToken){... */\n  pop\n    /* \"contracts/TimeMarket.sol\":442:6872  contract TimeMarket is ITimeMarket{... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":932:1051   */\ntag_27:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_29\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/TimeMarket.sol\":442:6872  contract TimeMarket is ITimeMarket{... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/TimeMarket.sol\":442:6872  contract TimeMarket is ITimeMarket{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8acd6272\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x8acd6272\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xb7252e8f\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xb9eb8992\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xcd83432d\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_11:\n      dup1\n      0x1b92468d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1c48c074\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x635b9a0f\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x845a51ec\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/TimeMarket.sol\":5960:6018  function cancelOrder(uint32 _id)external{... */\n    tag_3:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      stop\n        /* \"contracts/TimeMarket.sol\":6072:6125  function refund(uint32 _id)external{... */\n    tag_4:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_17:\n      tag_18\n      jump\t// in\n    tag_16:\n      stop\n        /* \"contracts/TimeMarket.sol\":1764:1924  function setRewardPool(address _rewardPool,uint56 _clearingTime)external onlyOwner{... */\n    tag_5:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      stop\n        /* \"contracts/TimeMarket.sol\":6640:6734  function rewardPoolAddress()external view returns(address){... */\n    tag_6:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TimeMarket.sol\":1954:4173  function putTrade(address _tokenAddress,uint32 _price,uint128 _amount,doState _doState)external{... */\n    tag_7:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      stop\n        /* \"contracts/TimeMarket.sol\":4201:5932  function matchTrade(uint32 _id) external{... */\n    tag_8:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_32:\n      tag_33\n      jump\t// in\n    tag_31:\n      stop\n        /* \"contracts/TimeMarket.sol\":6493:6603  function getTradeMes(uint32 _id)external view returns(tradeMes memory){... */\n    tag_9:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_35:\n      tag_36\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TimeMarket.sol\":6777:6867  function getClearTime()external view returns(uint56){... */\n    tag_10:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TimeMarket.sol\":5960:6018  function cancelOrder(uint32 _id)external{... */\n    tag_15:\n      pop\n      jump\t// out\n        /* \"contracts/TimeMarket.sol\":6072:6125  function refund(uint32 _id)external{... */\n    tag_18:\n      pop\n      jump\t// out\n        /* \"contracts/TimeMarket.sol\":1764:1924  function setRewardPool(address _rewardPool,uint56 _clearingTime)external onlyOwner{... */\n    tag_22:\n        /* \"contracts/TimeMarket.sol\":1585:1602  address thisOwner */\n      0x00\n        /* \"contracts/TimeMarket.sol\":1616:1628  factoryOwner */\n      dup1\n      0x0b\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TimeMarket.sol\":1603:1639  ITimeFactory(factoryOwner).thisOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe7c9922f\n        /* \"contracts/TimeMarket.sol\":1603:1641  ITimeFactory(factoryOwner).thisOwner() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_47\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_47:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n        /* \"contracts/TimeMarket.sol\":1585:1641  address thisOwner=ITimeFactory(factoryOwner).thisOwner() */\n      swap1\n      pop\n        /* \"contracts/TimeMarket.sol\":1672:1681  thisOwner */\n      dup1\n        /* \"contracts/TimeMarket.sol\":1660:1681  msg.sender==thisOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TimeMarket.sol\":1660:1670  msg.sender */\n      caller\n        /* \"contracts/TimeMarket.sol\":1660:1681  msg.sender==thisOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/TimeMarket.sol\":1652:1694  require(msg.sender==thisOwner,\"Not Owner\") */\n      tag_50\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_51\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_50:\n        /* \"contracts/TimeMarket.sol\":1868:1879  _rewardPool */\n      dup3\n        /* \"contracts/TimeMarket.sol\":1857:1867  rewardPool */\n      0x02\n      0x00\n        /* \"contracts/TimeMarket.sol\":1857:1879  rewardPool=_rewardPool */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/TimeMarket.sol\":1903:1916  _clearingTime */\n      dup2\n        /* \"contracts/TimeMarket.sol\":1890:1902  clearingTime */\n      0x00\n      0x04\n        /* \"contracts/TimeMarket.sol\":1890:1916  clearingTime=_clearingTime */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/TimeMarket.sol\":1574:1714  {... */\n      pop\n        /* \"contracts/TimeMarket.sol\":1764:1924  function setRewardPool(address _rewardPool,uint56 _clearingTime)external onlyOwner{... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TimeMarket.sol\":6640:6734  function rewardPoolAddress()external view returns(address){... */\n    tag_24:\n        /* \"contracts/TimeMarket.sol\":6690:6697  address */\n      0x00\n        /* \"contracts/TimeMarket.sol\":6716:6726  rewardPool */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TimeMarket.sol\":6709:6726  return rewardPool */\n      swap1\n      pop\n        /* \"contracts/TimeMarket.sol\":6640:6734  function rewardPoolAddress()external view returns(address){... */\n      swap1\n      jump\t// out\n        /* \"contracts/TimeMarket.sol\":1954:4173  function putTrade(address _tokenAddress,uint32 _price,uint128 _amount,doState _doState)external{... */\n    tag_30:\n        /* \"contracts/TimeMarket.sol\":2093:2107  uint8 decimals */\n      0x00\n        /* \"contracts/TimeMarket.sol\":2123:2136  _tokenAddress */\n      dup5\n        /* \"contracts/TimeMarket.sol\":2108:2146  IERC20Metadata(_tokenAddress).decimals */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x313ce567\n        /* \"contracts/TimeMarket.sol\":2108:2148  IERC20Metadata(_tokenAddress).decimals() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_57\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_57:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n        /* \"contracts/TimeMarket.sol\":2093:2148  uint8 decimals=IERC20Metadata(_tokenAddress).decimals() */\n      swap1\n      pop\n        /* \"contracts/TimeMarket.sol\":2159:2175  uint256 oneToken */\n      0x00\n        /* \"contracts/TimeMarket.sol\":2180:2188  decimals */\n      dup2\n        /* \"contracts/TimeMarket.sol\":2176:2178  10 */\n      0x0a\n        /* \"contracts/TimeMarket.sol\":2176:2188  10**decimals */\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n        /* \"contracts/TimeMarket.sol\":2159:2188  uint256 oneToken=10**decimals */\n      swap1\n      pop\n        /* \"contracts/TimeMarket.sol\":2199:2212  uint256 total */\n      0x00\n        /* \"contracts/TimeMarket.sol\":2215:2266  TimeLibrary.getTotalStable(_price,_amount,oneToken) */\n      tag_62\n        /* \"contracts/TimeMarket.sol\":2242:2248  _price */\n      dup7\n        /* \"contracts/TimeMarket.sol\":2249:2256  _amount */\n      dup7\n        /* \"contracts/TimeMarket.sol\":2257:2265  oneToken */\n      dup5\n        /* \"contracts/TimeMarket.sol\":2215:2241  TimeLibrary.getTotalStable */\n      tag_63\n        /* \"contracts/TimeMarket.sol\":2215:2266  TimeLibrary.getTotalStable(_price,_amount,oneToken) */\n      jump\t// in\n    tag_62:\n        /* \"contracts/TimeMarket.sol\":2199:2266  uint256 total = TimeLibrary.getTotalStable(_price,_amount,oneToken) */\n      swap1\n      pop\n        /* \"contracts/TimeMarket.sol\":2295:2303  oneToken */\n      dup2\n        /* \"contracts/TimeMarket.sol\":2292:2294  10 */\n      0x0a\n        /* \"contracts/TimeMarket.sol\":2292:2303  10*oneToken */\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n        /* \"contracts/TimeMarket.sol\":2285:2290  total */\n      dup2\n        /* \"contracts/TimeMarket.sol\":2285:2303  total>=10*oneToken */\n      lt\n      iszero\n        /* \"contracts/TimeMarket.sol\":2277:2304  require(total>=10*oneToken) */\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n        /* \"contracts/TimeMarket.sol\":2317:2330  address buyer */\n      0x00\n        /* \"contracts/TimeMarket.sol\":2341:2355  address seller */\n      dup1\n        /* \"contracts/TimeMarket.sol\":2368:2392  tradeState newTradeState */\n      0x00\n        /* \"contracts/TimeMarket.sol\":2416:2427  doState.buy */\n      dup1\n        /* \"contracts/TimeMarket.sol\":2406:2427  _doState==doState.buy */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_67\n      jumpi\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n    tag_67:\n        /* \"contracts/TimeMarket.sol\":2406:2414  _doState */\n      dup8\n        /* \"contracts/TimeMarket.sol\":2406:2427  _doState==doState.buy */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_70\n      jumpi\n      tag_71\n      tag_69\n      jump\t// in\n    tag_71:\n    tag_70:\n      sub\n        /* \"contracts/TimeMarket.sol\":2403:2678  if(_doState==doState.buy){... */\n      tag_72\n      jumpi\n        /* \"contracts/TimeMarket.sol\":2449:2459  msg.sender */\n      caller\n        /* \"contracts/TimeMarket.sol\":2443:2459  buyer=msg.sender */\n      swap3\n      pop\n        /* \"contracts/TimeMarket.sol\":2488:2505  tradeState.buying */\n      0x00\n        /* \"contracts/TimeMarket.sol\":2474:2505  newTradeState=tradeState.buying */\n      swap1\n      pop\n        /* \"contracts/TimeMarket.sol\":2403:2678  if(_doState==doState.buy){... */\n      jump(tag_73)\n    tag_72:\n        /* \"contracts/TimeMarket.sol\":2535:2547  doState.sell */\n      0x01\n        /* \"contracts/TimeMarket.sol\":2525:2547  _doState==doState.sell */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_74\n      jumpi\n      tag_75\n      tag_69\n      jump\t// in\n    tag_75:\n    tag_74:\n        /* \"contracts/TimeMarket.sol\":2525:2533  _doState */\n      dup8\n        /* \"contracts/TimeMarket.sol\":2525:2547  _doState==doState.sell */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_76\n      jumpi\n      tag_77\n      tag_69\n      jump\t// in\n    tag_77:\n    tag_76:\n      sub\n        /* \"contracts/TimeMarket.sol\":2522:2678  if(_doState==doState.sell){... */\n      tag_78\n      jumpi\n        /* \"contracts/TimeMarket.sol\":2577:2595  tradeState.selling */\n      0x01\n        /* \"contracts/TimeMarket.sol\":2563:2595  newTradeState=tradeState.selling */\n      swap1\n      pop\n        /* \"contracts/TimeMarket.sol\":2617:2627  msg.sender */\n      caller\n        /* \"contracts/TimeMarket.sol\":2610:2627  seller=msg.sender */\n      swap2\n      pop\n        /* \"contracts/TimeMarket.sol\":2522:2678  if(_doState==doState.sell){... */\n      jump(tag_79)\n    tag_78:\n        /* \"contracts/TimeMarket.sol\":2658:2666  revert() */\n      0x00\n      dup1\n      revert\n        /* \"contracts/TimeMarket.sol\":2522:2678  if(_doState==doState.sell){... */\n    tag_79:\n        /* \"contracts/TimeMarket.sol\":2403:2678  if(_doState==doState.buy){... */\n    tag_73:\n        /* \"contracts/TimeMarket.sol\":2764:2770  1 days */\n      0x015180\n        /* \"contracts/TimeMarket.sol\":2751:2763  clearingTime */\n      0x00\n      0x04\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffff\n      and\n        /* \"contracts/TimeMarket.sol\":2751:2770  clearingTime-1 days */\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n        /* \"contracts/TimeMarket.sol\":2735:2770  block.timestamp>clearingTime-1 days */\n      0xffffffffffffff\n      and\n        /* \"contracts/TimeMarket.sol\":2735:2750  block.timestamp */\n      timestamp\n        /* \"contracts/TimeMarket.sol\":2735:2770  block.timestamp>clearingTime-1 days */\n      gt\n        /* \"contracts/TimeMarket.sol\":2732:2791  if(block.timestamp>clearingTime-1 days){revert OverTime();} */\n      iszero\n      tag_82\n      jumpi\n        /* \"contracts/TimeMarket.sol\":2779:2789  OverTime() */\n      mload(0x40)\n      0xee1ea89500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/TimeMarket.sol\":2732:2791  if(block.timestamp>clearingTime-1 days){revert OverTime();} */\n    tag_82:\n        /* \"contracts/TimeMarket.sol\":2847:2917  IERC20(_tokenAddress).safeTransferFrom(msg.sender,address(this),total) */\n      tag_83\n        /* \"contracts/TimeMarket.sol\":2886:2896  msg.sender */\n      caller\n        /* \"contracts/TimeMarket.sol\":2905:2909  this */\n      address\n        /* \"contracts/TimeMarket.sol\":2911:2916  total */\n      dup7\n        /* \"contracts/TimeMarket.sol\":2854:2867  _tokenAddress */\n      dup14\n        /* \"contracts/TimeMarket.sol\":2847:2885  IERC20(_tokenAddress).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_84\n      swap1\n        /* \"contracts/TimeMarket.sol\":2847:2917  IERC20(_tokenAddress).safeTransferFrom(msg.sender,address(this),total) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_83:\n        /* \"contracts/TimeMarket.sol\":2970:2983  _tokenAddress */\n      dup10\n        /* \"contracts/TimeMarket.sol\":2963:2992  IERC20(_tokenAddress).approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x095ea7b3\n        /* \"contracts/TimeMarket.sol\":3001:3011  AaveV3Pool */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TimeMarket.sol\":3013:3018  total */\n      dup7\n        /* \"contracts/TimeMarket.sol\":2963:3019  IERC20(_tokenAddress).approve(address(AaveV3Pool),total) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_85\n      swap3\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_88\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_88:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      pop\n        /* \"contracts/TimeMarket.sol\":3058:3068  AaveV3Pool */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TimeMarket.sol\":3058:3075  AaveV3Pool.supply */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x617ba037\n        /* \"contracts/TimeMarket.sol\":3090:3103  _tokenAddress */\n      dup12\n        /* \"contracts/TimeMarket.sol\":3147:3152  total */\n      dup7\n        /* \"contracts/TimeMarket.sol\":3204:3208  this */\n      address\n        /* \"contracts/TimeMarket.sol\":3252:3253  0 */\n      0x00\n        /* \"contracts/TimeMarket.sol\":3058:3306  AaveV3Pool.supply(... */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_95\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_95:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/TimeMarket.sol\":3341:3343  id */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/TimeMarket.sol\":3319:3328  _tradeMes */\n      0x07\n        /* \"contracts/TimeMarket.sol\":3319:3332  _tradeMes[id] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":3329:3331  id */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/TimeMarket.sol\":3319:3332  _tradeMes[id] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeMarket.sol\":3319:3340  _tradeMes[id].tradeId */\n      0x00\n      add\n      0x00\n        /* \"contracts/TimeMarket.sol\":3319:3343  _tradeMes[id].tradeId=id */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/TimeMarket.sol\":3374:3380  _price */\n      dup9\n        /* \"contracts/TimeMarket.sol\":3354:3363  _tradeMes */\n      0x07\n        /* \"contracts/TimeMarket.sol\":3354:3367  _tradeMes[id] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":3364:3366  id */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/TimeMarket.sol\":3354:3367  _tradeMes[id] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeMarket.sol\":3354:3373  _tradeMes[id].price */\n      0x00\n      add\n      0x04\n        /* \"contracts/TimeMarket.sol\":3354:3380  _tradeMes[id].price=_price */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/TimeMarket.sol\":3417:3432  block.timestamp */\n      timestamp\n        /* \"contracts/TimeMarket.sol\":3391:3400  _tradeMes */\n      0x07\n        /* \"contracts/TimeMarket.sol\":3391:3404  _tradeMes[id] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":3401:3403  id */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/TimeMarket.sol\":3391:3404  _tradeMes[id] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeMarket.sol\":3391:3409  _tradeMes[id].time */\n      0x00\n      add\n      0x08\n        /* \"contracts/TimeMarket.sol\":3391:3433  _tradeMes[id].time=uint56(block.timestamp) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/TimeMarket.sol\":3465:3472  _amount */\n      dup8\n        /* \"contracts/TimeMarket.sol\":3444:3453  _tradeMes */\n      0x07\n        /* \"contracts/TimeMarket.sol\":3444:3457  _tradeMes[id] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":3454:3456  id */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/TimeMarket.sol\":3444:3457  _tradeMes[id] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeMarket.sol\":3444:3464  _tradeMes[id].amount */\n      0x00\n      add\n      0x0f\n        /* \"contracts/TimeMarket.sol\":3444:3472  _tradeMes[id].amount=_amount */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/TimeMarket.sol\":3512:3520  oneToken */\n      dup5\n        /* \"contracts/TimeMarket.sol\":3483:3492  _tradeMes */\n      0x07\n        /* \"contracts/TimeMarket.sol\":3483:3496  _tradeMes[id] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":3493:3495  id */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/TimeMarket.sol\":3483:3496  _tradeMes[id] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeMarket.sol\":3483:3511  _tradeMes[id].tokenOneAmount */\n      0x01\n      add\n        /* \"contracts/TimeMarket.sol\":3483:3520  _tradeMes[id].tokenOneAmount=oneToken */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TimeMarket.sol\":3558:3571  _tokenAddress */\n      dup10\n        /* \"contracts/TimeMarket.sol\":3531:3540  _tradeMes */\n      0x07\n        /* \"contracts/TimeMarket.sol\":3531:3544  _tradeMes[id] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":3541:3543  id */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/TimeMarket.sol\":3531:3544  _tradeMes[id] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeMarket.sol\":3531:3557  _tradeMes[id].tokenAddress */\n      0x02\n      add\n      0x00\n        /* \"contracts/TimeMarket.sol\":3531:3571  _tradeMes[id].tokenAddress=_tokenAddress */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/TimeMarket.sol\":3609:3614  buyer */\n      dup3\n        /* \"contracts/TimeMarket.sol\":3582:3591  _tradeMes */\n      0x07\n        /* \"contracts/TimeMarket.sol\":3582:3595  _tradeMes[id] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":3592:3594  id */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/TimeMarket.sol\":3582:3595  _tradeMes[id] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeMarket.sol\":3582:3608  _tradeMes[id].buyerAddress */\n      0x03\n      add\n      0x00\n        /* \"contracts/TimeMarket.sol\":3582:3614  _tradeMes[id].buyerAddress=buyer */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/TimeMarket.sol\":3653:3659  seller */\n      dup2\n        /* \"contracts/TimeMarket.sol\":3625:3634  _tradeMes */\n      0x07\n        /* \"contracts/TimeMarket.sol\":3625:3638  _tradeMes[id] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":3635:3637  id */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/TimeMarket.sol\":3625:3638  _tradeMes[id] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeMarket.sol\":3625:3652  _tradeMes[id].solderAddress */\n      0x04\n      add\n      0x00\n        /* \"contracts/TimeMarket.sol\":3625:3659  _tradeMes[id].solderAddress=seller */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/TimeMarket.sol\":3696:3709  newTradeState */\n      dup1\n        /* \"contracts/TimeMarket.sol\":3670:3679  _tradeMes */\n      0x07\n        /* \"contracts/TimeMarket.sol\":3670:3683  _tradeMes[id] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":3680:3682  id */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/TimeMarket.sol\":3670:3683  _tradeMes[id] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeMarket.sol\":3670:3695  _tradeMes[id]._tradeState */\n      0x04\n      add\n      0x14\n        /* \"contracts/TimeMarket.sol\":3670:3709  _tradeMes[id]._tradeState=newTradeState */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x04\n      dup2\n      gt\n      iszero\n      tag_96\n      jumpi\n      tag_97\n      tag_69\n      jump\t// in\n    tag_97:\n    tag_96:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/TimeMarket.sol\":3760:3762  id */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/TimeMarket.sol\":3722:3735  _userDeposite */\n      0x08\n        /* \"contracts/TimeMarket.sol\":3722:3739  _userDeposite[id] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":3736:3738  id */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/TimeMarket.sol\":3722:3739  _userDeposite[id] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeMarket.sol\":3722:3751  _userDeposite[id][msg.sender] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":3740:3750  msg.sender */\n      caller\n        /* \"contracts/TimeMarket.sol\":3722:3751  _userDeposite[id][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeMarket.sol\":3722:3759  _userDeposite[id][msg.sender].tradeId */\n      0x00\n      add\n      0x00\n        /* \"contracts/TimeMarket.sol\":3722:3762  _userDeposite[id][msg.sender].tradeId=id */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/TimeMarket.sol\":3813:3822  _tradeMes */\n      0x07\n        /* \"contracts/TimeMarket.sol\":3813:3826  _tradeMes[id] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":3823:3825  id */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/TimeMarket.sol\":3813:3826  _tradeMes[id] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeMarket.sol\":3813:3831  _tradeMes[id].time */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffff\n      and\n        /* \"contracts/TimeMarket.sol\":3773:3786  _userDeposite */\n      0x08\n        /* \"contracts/TimeMarket.sol\":3773:3790  _userDeposite[id] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":3787:3789  id */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/TimeMarket.sol\":3773:3790  _userDeposite[id] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeMarket.sol\":3773:3802  _userDeposite[id][msg.sender] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":3791:3801  msg.sender */\n      caller\n        /* \"contracts/TimeMarket.sol\":3773:3802  _userDeposite[id][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeMarket.sol\":3773:3812  _userDeposite[id][msg.sender].startTime */\n      0x00\n      add\n      0x04\n        /* \"contracts/TimeMarket.sol\":3773:3831  _userDeposite[id][msg.sender].startTime=_tradeMes[id].time */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/TimeMarket.sol\":3880:3881  0 */\n      0x00\n        /* \"contracts/TimeMarket.sol\":3842:3855  _userDeposite */\n      0x08\n        /* \"contracts/TimeMarket.sol\":3842:3859  _userDeposite[id] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":3856:3858  id */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/TimeMarket.sol\":3842:3859  _userDeposite[id] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeMarket.sol\":3842:3871  _userDeposite[id][msg.sender] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":3860:3870  msg.sender */\n      caller\n        /* \"contracts/TimeMarket.sol\":3842:3871  _userDeposite[id][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeMarket.sol\":3842:3879  _userDeposite[id][msg.sender].endTime */\n      0x00\n      add\n      0x0b\n        /* \"contracts/TimeMarket.sol\":3842:3881  _userDeposite[id][msg.sender].endTime=0 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/TimeMarket.sol\":3937:3942  total */\n      dup4\n        /* \"contracts/TimeMarket.sol\":3892:3905  _userDeposite */\n      0x08\n        /* \"contracts/TimeMarket.sol\":3892:3909  _userDeposite[id] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":3906:3908  id */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/TimeMarket.sol\":3892:3909  _userDeposite[id] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeMarket.sol\":3892:3921  _userDeposite[id][msg.sender] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":3910:3920  msg.sender */\n      caller\n        /* \"contracts/TimeMarket.sol\":3892:3921  _userDeposite[id][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeMarket.sol\":3892:3936  _userDeposite[id][msg.sender].depositeAmount */\n      0x01\n      add\n        /* \"contracts/TimeMarket.sol\":3892:3942  _userDeposite[id][msg.sender].depositeAmount=total */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TimeMarket.sol\":3994:3995  0 */\n      0x00\n        /* \"contracts/TimeMarket.sol\":3953:3966  _userDeposite */\n      0x08\n        /* \"contracts/TimeMarket.sol\":3953:3970  _userDeposite[id] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":3967:3969  id */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/TimeMarket.sol\":3953:3970  _userDeposite[id] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeMarket.sol\":3953:3982  _userDeposite[id][msg.sender] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":3971:3981  msg.sender */\n      caller\n        /* \"contracts/TimeMarket.sol\":3953:3982  _userDeposite[id][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeMarket.sol\":3953:3993  _userDeposite[id][msg.sender].earnAmount */\n      0x02\n      add\n        /* \"contracts/TimeMarket.sol\":3953:3995  _userDeposite[id][msg.sender].earnAmount=0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TimeMarket.sol\":4041:4051  msg.sender */\n      caller\n        /* \"contracts/TimeMarket.sol\":4006:4019  _userDeposite */\n      0x08\n        /* \"contracts/TimeMarket.sol\":4006:4023  _userDeposite[id] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":4020:4022  id */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/TimeMarket.sol\":4006:4023  _userDeposite[id] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeMarket.sol\":4006:4035  _userDeposite[id][msg.sender] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":4024:4034  msg.sender */\n      caller\n        /* \"contracts/TimeMarket.sol\":4006:4035  _userDeposite[id][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeMarket.sol\":4006:4040  _userDeposite[id][msg.sender].user */\n      0x03\n      add\n      0x00\n        /* \"contracts/TimeMarket.sol\":4006:4051  _userDeposite[id][msg.sender].user=msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/TimeMarket.sol\":4145:4150  total */\n      dup4\n        /* \"contracts/TimeMarket.sol\":4132:4143  totalStable */\n      0x01\n      0x00\n        /* \"contracts/TimeMarket.sol\":4132:4150  totalStable+=total */\n      dup3\n      dup3\n      sload\n      tag_98\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TimeMarket.sol\":4161:4163  id */\n      0x00\n      dup1\n        /* \"contracts/TimeMarket.sol\":4161:4165  id++ */\n      dup2\n      dup2\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_100\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      swap2\n      swap1\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n        /* \"contracts/TimeMarket.sol\":2049:4173  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/TimeMarket.sol\":1954:4173  function putTrade(address _tokenAddress,uint32 _price,uint128 _amount,doState _doState)external{... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TimeMarket.sol\":4201:5932  function matchTrade(uint32 _id) external{... */\n    tag_33:\n        /* \"contracts/TimeMarket.sol\":4335:4341  1 days */\n      0x015180\n        /* \"contracts/TimeMarket.sol\":4322:4334  clearingTime */\n      0x00\n      0x04\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffff\n      and\n        /* \"contracts/TimeMarket.sol\":4322:4341  clearingTime-1 days */\n      tag_103\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_103:\n        /* \"contracts/TimeMarket.sol\":4306:4341  block.timestamp>clearingTime-1 days */\n      0xffffffffffffff\n      and\n        /* \"contracts/TimeMarket.sol\":4306:4321  block.timestamp */\n      timestamp\n        /* \"contracts/TimeMarket.sol\":4306:4341  block.timestamp>clearingTime-1 days */\n      gt\n        /* \"contracts/TimeMarket.sol\":4303:4362  if(block.timestamp>clearingTime-1 days){revert OverTime();} */\n      iszero\n      tag_104\n      jumpi\n        /* \"contracts/TimeMarket.sol\":4350:4360  OverTime() */\n      mload(0x40)\n      0xee1ea89500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/TimeMarket.sol\":4303:4362  if(block.timestamp>clearingTime-1 days){revert OverTime();} */\n    tag_104:\n        /* \"contracts/TimeMarket.sol\":4372:4399  tradeMes memory maxTradeMes */\n      0x00\n        /* \"contracts/TimeMarket.sol\":4400:4409  _tradeMes */\n      0x07\n        /* \"contracts/TimeMarket.sol\":4400:4414  _tradeMes[_id] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":4410:4413  _id */\n      dup4\n        /* \"contracts/TimeMarket.sol\":4400:4414  _tradeMes[_id] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeMarket.sol\":4372:4414  tradeMes memory maxTradeMes=_tradeMes[_id] */\n      mload(0x40)\n      dup1\n      0x0120\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x04\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffff\n      and\n      0xffffffffffffff\n      and\n      0xffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x0f\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      0x04\n      dup2\n      gt\n      iszero\n      tag_105\n      jumpi\n      tag_106\n      tag_69\n      jump\t// in\n    tag_106:\n    tag_105:\n      0x04\n      dup2\n      gt\n      iszero\n      tag_107\n      jumpi\n      tag_108\n      tag_69\n      jump\t// in\n    tag_108:\n    tag_107:\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/TimeMarket.sol\":4425:4446  address _tokenAddress */\n      0x00\n        /* \"contracts/TimeMarket.sol\":4447:4458  maxTradeMes */\n      dup2\n        /* \"contracts/TimeMarket.sol\":4447:4471  maxTradeMes.tokenAddress */\n      0xa0\n      add\n      mload\n        /* \"contracts/TimeMarket.sol\":4425:4471  address _tokenAddress=maxTradeMes.tokenAddress */\n      swap1\n      pop\n        /* \"contracts/TimeMarket.sol\":4482:4505  uint256 _tokenOneAmount */\n      0x00\n        /* \"contracts/TimeMarket.sol\":4506:4517  maxTradeMes */\n      dup3\n        /* \"contracts/TimeMarket.sol\":4506:4532  maxTradeMes.tokenOneAmount */\n      0x80\n      add\n      mload\n        /* \"contracts/TimeMarket.sol\":4482:4532  uint256 _tokenOneAmount=maxTradeMes.tokenOneAmount */\n      swap1\n      pop\n        /* \"contracts/TimeMarket.sol\":4543:4556  uint256 total */\n      0x00\n        /* \"contracts/TimeMarket.sol\":4557:4637  TimeLibrary.getTotalStable(maxTradeMes.price,maxTradeMes.amount,_tokenOneAmount) */\n      tag_109\n        /* \"contracts/TimeMarket.sol\":4584:4595  maxTradeMes */\n      dup5\n        /* \"contracts/TimeMarket.sol\":4584:4601  maxTradeMes.price */\n      0x20\n      add\n      mload\n        /* \"contracts/TimeMarket.sol\":4602:4613  maxTradeMes */\n      dup6\n        /* \"contracts/TimeMarket.sol\":4602:4620  maxTradeMes.amount */\n      0x60\n      add\n      mload\n        /* \"contracts/TimeMarket.sol\":4621:4636  _tokenOneAmount */\n      dup5\n        /* \"contracts/TimeMarket.sol\":4557:4583  TimeLibrary.getTotalStable */\n      tag_63\n        /* \"contracts/TimeMarket.sol\":4557:4637  TimeLibrary.getTotalStable(maxTradeMes.price,maxTradeMes.amount,_tokenOneAmount) */\n      jump\t// in\n    tag_109:\n        /* \"contracts/TimeMarket.sol\":4543:4637  uint256 total=TimeLibrary.getTotalStable(maxTradeMes.price,maxTradeMes.amount,_tokenOneAmount) */\n      swap1\n      pop\n        /* \"contracts/TimeMarket.sol\":4675:4797  IERC20(_tokenAddress).safeTransferFrom(... */\n      tag_110\n        /* \"contracts/TimeMarket.sol\":4728:4738  msg.sender */\n      caller\n        /* \"contracts/TimeMarket.sol\":4761:4765  this */\n      address\n        /* \"contracts/TimeMarket.sol\":4781:4786  total */\n      dup4\n        /* \"contracts/TimeMarket.sol\":4682:4695  _tokenAddress */\n      dup7\n        /* \"contracts/TimeMarket.sol\":4675:4713  IERC20(_tokenAddress).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_84\n      swap1\n        /* \"contracts/TimeMarket.sol\":4675:4797  IERC20(_tokenAddress).safeTransferFrom(... */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_110:\n        /* \"contracts/TimeMarket.sol\":4852:4865  _tokenAddress */\n      dup3\n        /* \"contracts/TimeMarket.sol\":4845:4874  IERC20(_tokenAddress).approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x095ea7b3\n        /* \"contracts/TimeMarket.sol\":4883:4893  AaveV3Pool */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TimeMarket.sol\":4895:4900  total */\n      dup4\n        /* \"contracts/TimeMarket.sol\":4845:4901  IERC20(_tokenAddress).approve(address(AaveV3Pool),total) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_111\n      swap3\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_111:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_113\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_113:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_114\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_114:\n      pop\n        /* \"contracts/TimeMarket.sol\":4940:4950  AaveV3Pool */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TimeMarket.sol\":4940:4957  AaveV3Pool.supply */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x617ba037\n        /* \"contracts/TimeMarket.sol\":4972:4985  _tokenAddress */\n      dup5\n        /* \"contracts/TimeMarket.sol\":5029:5034  total */\n      dup4\n        /* \"contracts/TimeMarket.sol\":5086:5090  this */\n      address\n        /* \"contracts/TimeMarket.sol\":5134:5135  0 */\n      0x00\n        /* \"contracts/TimeMarket.sol\":4940:5188  AaveV3Pool.supply(... */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_115\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_115:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_116\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_116:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_118\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_118:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/TimeMarket.sol\":5227:5244  tradeState.buying */\n      0x00\n        /* \"contracts/TimeMarket.sol\":5202:5244  maxTradeMes._tradeState==tradeState.buying */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_119\n      jumpi\n      tag_120\n      tag_69\n      jump\t// in\n    tag_120:\n    tag_119:\n        /* \"contracts/TimeMarket.sol\":5202:5213  maxTradeMes */\n      dup5\n        /* \"contracts/TimeMarket.sol\":5202:5225  maxTradeMes._tradeState */\n      0x0100\n      add\n      mload\n        /* \"contracts/TimeMarket.sol\":5202:5244  maxTradeMes._tradeState==tradeState.buying */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_121\n      jumpi\n      tag_122\n      tag_69\n      jump\t// in\n    tag_122:\n    tag_121:\n      sub\n        /* \"contracts/TimeMarket.sol\":5199:5480  if(maxTradeMes._tradeState==tradeState.buying){... */\n      tag_123\n      jumpi\n        /* \"contracts/TimeMarket.sol\":5289:5299  msg.sender */\n      caller\n        /* \"contracts/TimeMarket.sol\":5260:5269  _tradeMes */\n      0x07\n        /* \"contracts/TimeMarket.sol\":5260:5274  _tradeMes[_id] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":5270:5273  _id */\n      dup8\n        /* \"contracts/TimeMarket.sol\":5260:5274  _tradeMes[_id] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeMarket.sol\":5260:5288  _tradeMes[_id].solderAddress */\n      0x04\n      add\n      0x00\n        /* \"contracts/TimeMarket.sol\":5260:5299  _tradeMes[_id].solderAddress=msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/TimeMarket.sol\":5199:5480  if(maxTradeMes._tradeState==tradeState.buying){... */\n      jump(tag_124)\n    tag_123:\n        /* \"contracts/TimeMarket.sol\":5344:5362  tradeState.selling */\n      0x01\n        /* \"contracts/TimeMarket.sol\":5319:5362  maxTradeMes._tradeState==tradeState.selling */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_125\n      jumpi\n      tag_126\n      tag_69\n      jump\t// in\n    tag_126:\n    tag_125:\n        /* \"contracts/TimeMarket.sol\":5319:5330  maxTradeMes */\n      dup5\n        /* \"contracts/TimeMarket.sol\":5319:5342  maxTradeMes._tradeState */\n      0x0100\n      add\n      mload\n        /* \"contracts/TimeMarket.sol\":5319:5362  maxTradeMes._tradeState==tradeState.selling */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_127\n      jumpi\n      tag_128\n      tag_69\n      jump\t// in\n    tag_128:\n    tag_127:\n      sub\n        /* \"contracts/TimeMarket.sol\":5316:5480  if(maxTradeMes._tradeState==tradeState.selling){... */\n      tag_129\n      jumpi\n        /* \"contracts/TimeMarket.sol\":5406:5416  msg.sender */\n      caller\n        /* \"contracts/TimeMarket.sol\":5378:5387  _tradeMes */\n      0x07\n        /* \"contracts/TimeMarket.sol\":5378:5392  _tradeMes[_id] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":5388:5391  _id */\n      dup8\n        /* \"contracts/TimeMarket.sol\":5378:5392  _tradeMes[_id] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeMarket.sol\":5378:5405  _tradeMes[_id].buyerAddress */\n      0x03\n      add\n      0x00\n        /* \"contracts/TimeMarket.sol\":5378:5416  _tradeMes[_id].buyerAddress=msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/TimeMarket.sol\":5316:5480  if(maxTradeMes._tradeState==tradeState.selling){... */\n      jump(tag_130)\n    tag_129:\n        /* \"contracts/TimeMarket.sol\":5447:5468  revert(\"Trade error\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_131\n      swap1\n      tag_132\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/TimeMarket.sol\":5316:5480  if(maxTradeMes._tradeState==tradeState.selling){... */\n    tag_130:\n        /* \"contracts/TimeMarket.sol\":5199:5480  if(maxTradeMes._tradeState==tradeState.buying){... */\n    tag_124:\n        /* \"contracts/TimeMarket.sol\":5527:5543  tradeState.found */\n      0x02\n        /* \"contracts/TimeMarket.sol\":5500:5509  _tradeMes */\n      0x07\n        /* \"contracts/TimeMarket.sol\":5500:5514  _tradeMes[_id] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":5510:5513  _id */\n      dup8\n        /* \"contracts/TimeMarket.sol\":5500:5514  _tradeMes[_id] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeMarket.sol\":5500:5526  _tradeMes[_id]._tradeState */\n      0x04\n      add\n      0x14\n        /* \"contracts/TimeMarket.sol\":5500:5543  _tradeMes[_id]._tradeState=tradeState.found */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x04\n      dup2\n      gt\n      iszero\n      tag_133\n      jumpi\n      tag_134\n      tag_69\n      jump\t// in\n    tag_134:\n    tag_133:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/TimeMarket.sol\":5593:5596  _id */\n      dup5\n        /* \"contracts/TimeMarket.sol\":5554:5567  _userDeposite */\n      0x08\n        /* \"contracts/TimeMarket.sol\":5554:5572  _userDeposite[_id] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":5568:5571  _id */\n      dup8\n        /* \"contracts/TimeMarket.sol\":5554:5572  _userDeposite[_id] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeMarket.sol\":5554:5584  _userDeposite[_id][msg.sender] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":5573:5583  msg.sender */\n      caller\n        /* \"contracts/TimeMarket.sol\":5554:5584  _userDeposite[_id][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeMarket.sol\":5554:5592  _userDeposite[_id][msg.sender].tradeId */\n      0x00\n      add\n      0x00\n        /* \"contracts/TimeMarket.sol\":5554:5596  _userDeposite[_id][msg.sender].tradeId=_id */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/TimeMarket.sol\":5655:5670  block.timestamp */\n      timestamp\n        /* \"contracts/TimeMarket.sol\":5607:5620  _userDeposite */\n      0x08\n        /* \"contracts/TimeMarket.sol\":5607:5625  _userDeposite[_id] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":5621:5624  _id */\n      dup8\n        /* \"contracts/TimeMarket.sol\":5607:5625  _userDeposite[_id] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeMarket.sol\":5607:5637  _userDeposite[_id][msg.sender] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":5626:5636  msg.sender */\n      caller\n        /* \"contracts/TimeMarket.sol\":5607:5637  _userDeposite[_id][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeMarket.sol\":5607:5647  _userDeposite[_id][msg.sender].startTime */\n      0x00\n      add\n      0x04\n        /* \"contracts/TimeMarket.sol\":5607:5671  _userDeposite[_id][msg.sender].startTime=uint56(block.timestamp) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/TimeMarket.sol\":5721:5722  0 */\n      0x00\n        /* \"contracts/TimeMarket.sol\":5682:5695  _userDeposite */\n      0x08\n        /* \"contracts/TimeMarket.sol\":5682:5700  _userDeposite[_id] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":5696:5699  _id */\n      dup8\n        /* \"contracts/TimeMarket.sol\":5682:5700  _userDeposite[_id] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeMarket.sol\":5682:5712  _userDeposite[_id][msg.sender] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":5701:5711  msg.sender */\n      caller\n        /* \"contracts/TimeMarket.sol\":5682:5712  _userDeposite[_id][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeMarket.sol\":5682:5720  _userDeposite[_id][msg.sender].endTime */\n      0x00\n      add\n      0x0b\n        /* \"contracts/TimeMarket.sol\":5682:5722  _userDeposite[_id][msg.sender].endTime=0 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/TimeMarket.sol\":5779:5784  total */\n      dup1\n        /* \"contracts/TimeMarket.sol\":5733:5746  _userDeposite */\n      0x08\n        /* \"contracts/TimeMarket.sol\":5733:5751  _userDeposite[_id] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":5747:5750  _id */\n      dup8\n        /* \"contracts/TimeMarket.sol\":5733:5751  _userDeposite[_id] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeMarket.sol\":5733:5763  _userDeposite[_id][msg.sender] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":5752:5762  msg.sender */\n      caller\n        /* \"contracts/TimeMarket.sol\":5733:5763  _userDeposite[_id][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeMarket.sol\":5733:5778  _userDeposite[_id][msg.sender].depositeAmount */\n      0x01\n      add\n        /* \"contracts/TimeMarket.sol\":5733:5784  _userDeposite[_id][msg.sender].depositeAmount=total */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TimeMarket.sol\":5837:5838  0 */\n      0x00\n        /* \"contracts/TimeMarket.sol\":5795:5808  _userDeposite */\n      0x08\n        /* \"contracts/TimeMarket.sol\":5795:5813  _userDeposite[_id] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":5809:5812  _id */\n      dup8\n        /* \"contracts/TimeMarket.sol\":5795:5813  _userDeposite[_id] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeMarket.sol\":5795:5825  _userDeposite[_id][msg.sender] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":5814:5824  msg.sender */\n      caller\n        /* \"contracts/TimeMarket.sol\":5795:5825  _userDeposite[_id][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeMarket.sol\":5795:5836  _userDeposite[_id][msg.sender].earnAmount */\n      0x02\n      add\n        /* \"contracts/TimeMarket.sol\":5795:5838  _userDeposite[_id][msg.sender].earnAmount=0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TimeMarket.sol\":5885:5895  msg.sender */\n      caller\n        /* \"contracts/TimeMarket.sol\":5849:5862  _userDeposite */\n      0x08\n        /* \"contracts/TimeMarket.sol\":5849:5867  _userDeposite[_id] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":5863:5866  _id */\n      dup8\n        /* \"contracts/TimeMarket.sol\":5849:5867  _userDeposite[_id] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeMarket.sol\":5849:5879  _userDeposite[_id][msg.sender] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":5868:5878  msg.sender */\n      caller\n        /* \"contracts/TimeMarket.sol\":5849:5879  _userDeposite[_id][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeMarket.sol\":5849:5884  _userDeposite[_id][msg.sender].user */\n      0x03\n      add\n      0x00\n        /* \"contracts/TimeMarket.sol\":5849:5895  _userDeposite[_id][msg.sender].user=msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/TimeMarket.sol\":5919:5924  total */\n      dup1\n        /* \"contracts/TimeMarket.sol\":5906:5917  totalStable */\n      0x01\n      0x00\n        /* \"contracts/TimeMarket.sol\":5906:5924  totalStable+=total */\n      dup3\n      dup3\n      sload\n      tag_135\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_135:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TimeMarket.sol\":4241:5932  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/TimeMarket.sol\":4201:5932  function matchTrade(uint32 _id) external{... */\n      pop\n      jump\t// out\n        /* \"contracts/TimeMarket.sol\":6493:6603  function getTradeMes(uint32 _id)external view returns(tradeMes memory){... */\n    tag_36:\n        /* \"contracts/TimeMarket.sol\":6547:6562  tradeMes memory */\n      tag_136\n      tag_137\n      jump\t// in\n    tag_136:\n        /* \"contracts/TimeMarket.sol\":6581:6590  _tradeMes */\n      0x07\n        /* \"contracts/TimeMarket.sol\":6581:6595  _tradeMes[_id] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":6591:6594  _id */\n      dup4\n        /* \"contracts/TimeMarket.sol\":6581:6595  _tradeMes[_id] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeMarket.sol\":6574:6595  return _tradeMes[_id] */\n      mload(0x40)\n      dup1\n      0x0120\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x04\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffff\n      and\n      0xffffffffffffff\n      and\n      0xffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x0f\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      0x04\n      dup2\n      gt\n      iszero\n      tag_139\n      jumpi\n      tag_140\n      tag_69\n      jump\t// in\n    tag_140:\n    tag_139:\n      0x04\n      dup2\n      gt\n      iszero\n      tag_141\n      jumpi\n      tag_142\n      tag_69\n      jump\t// in\n    tag_142:\n    tag_141:\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/TimeMarket.sol\":6493:6603  function getTradeMes(uint32 _id)external view returns(tradeMes memory){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/TimeMarket.sol\":6777:6867  function getClearTime()external view returns(uint56){... */\n    tag_40:\n        /* \"contracts/TimeMarket.sol\":6822:6828  uint56 */\n      0x00\n        /* \"contracts/TimeMarket.sol\":6847:6859  clearingTime */\n      dup1\n      0x04\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffff\n      and\n        /* \"contracts/TimeMarket.sol\":6840:6859  return clearingTime */\n      swap1\n      pop\n        /* \"contracts/TimeMarket.sol\":6777:6867  function getClearTime()external view returns(uint56){... */\n      swap1\n      jump\t// out\n        /* \"libraries/TimeLibrary.sol\":1521:1707  function getTotalStable(uint32 _soldPrice, uint128 _soldAmount,uint256 _tokenOneAmount)internal pure returns(uint256){... */\n    tag_63:\n        /* \"libraries/TimeLibrary.sol\":1630:1637  uint256 */\n      0x00\n        /* \"libraries/TimeLibrary.sol\":1684:1699  _tokenOneAmount */\n      dup2\n        /* \"libraries/TimeLibrary.sol\":1679:1683  1000 */\n      0x03e8\n        /* \"libraries/TimeLibrary.sol\":1668:1678  _soldPrice */\n      dup6\n        /* \"libraries/TimeLibrary.sol\":1656:1678  _soldAmount*_soldPrice */\n      0xffffffff\n      and\n        /* \"libraries/TimeLibrary.sol\":1656:1667  _soldAmount */\n      dup6\n        /* \"libraries/TimeLibrary.sol\":1656:1678  _soldAmount*_soldPrice */\n      tag_145\n      swap2\n      swap1\n      tag_146\n      jump\t// in\n    tag_145:\n        /* \"libraries/TimeLibrary.sol\":1656:1683  _soldAmount*_soldPrice/1000 */\n      tag_147\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_147:\n        /* \"libraries/TimeLibrary.sol\":1656:1699  _soldAmount*_soldPrice/1000*_tokenOneAmount */\n      0xffffffffffffffffffffffffffffffff\n      and\n      tag_149\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_149:\n        /* \"libraries/TimeLibrary.sol\":1649:1699  return _soldAmount*_soldPrice/1000*_tokenOneAmount */\n      swap1\n      pop\n        /* \"libraries/TimeLibrary.sol\":1521:1707  function getTotalStable(uint32 _soldPrice, uint128 _soldAmount,uint256 _tokenOneAmount)internal pure returns(uint256){... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"libraries/SafeERC20.sol\":1447:1652  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_84:\n        /* \"libraries/SafeERC20.sol\":1548:1644  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_151\n        /* \"libraries/SafeERC20.sol\":1568:1573  token */\n      dup5\n        /* \"libraries/SafeERC20.sol\":1598:1625  token.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"libraries/SafeERC20.sol\":1627:1631  from */\n      dup6\n        /* \"libraries/SafeERC20.sol\":1633:1635  to */\n      dup6\n        /* \"libraries/SafeERC20.sol\":1637:1642  value */\n      dup6\n        /* \"libraries/SafeERC20.sol\":1575:1643  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_152\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_153\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"libraries/SafeERC20.sol\":1548:1567  _callOptionalReturn */\n      tag_154\n        /* \"libraries/SafeERC20.sol\":1548:1644  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_151:\n        /* \"libraries/SafeERC20.sol\":1447:1652  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"libraries/SafeERC20.sol\":5371:6020  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_154:\n        /* \"libraries/SafeERC20.sol\":5795:5818  bytes memory returndata */\n      0x00\n        /* \"libraries/SafeERC20.sol\":5821:5890  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_156\n        /* \"libraries/SafeERC20.sol\":5849:5853  data */\n      dup3\n        /* \"libraries/SafeERC20.sol\":5821:5890  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"libraries/SafeERC20.sol\":5829:5834  token */\n      dup6\n        /* \"libraries/SafeERC20.sol\":5821:5848  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_157\n      swap1\n        /* \"libraries/SafeERC20.sol\":5821:5890  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_156:\n        /* \"libraries/SafeERC20.sol\":5795:5890  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      pop\n        /* \"libraries/SafeERC20.sol\":5930:5931  0 */\n      0x00\n        /* \"libraries/SafeERC20.sol\":5909:5919  returndata */\n      dup2\n        /* \"libraries/SafeERC20.sol\":5909:5926  returndata.length */\n      mload\n        /* \"libraries/SafeERC20.sol\":5909:5931  returndata.length == 0 */\n      eq\n        /* \"libraries/SafeERC20.sol\":5909:5965  returndata.length == 0 || abi.decode(returndata, (bool)) */\n      dup1\n      tag_158\n      jumpi\n      pop\n        /* \"libraries/SafeERC20.sol\":5946:5956  returndata */\n      dup1\n        /* \"libraries/SafeERC20.sol\":5935:5965  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_159\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_159:\n        /* \"libraries/SafeERC20.sol\":5909:5965  returndata.length == 0 || abi.decode(returndata, (bool)) */\n    tag_158:\n        /* \"libraries/SafeERC20.sol\":5901:6012  require(returndata.length == 0 || abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_160\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_161\n      swap1\n      tag_162\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_160:\n        /* \"libraries/SafeERC20.sol\":5441:6020  {... */\n      pop\n        /* \"libraries/SafeERC20.sol\":5371:6020  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"libraries/Address.sol\":4207:4436  function functionCall(... */\n    tag_157:\n        /* \"libraries/Address.sol\":4344:4356  bytes memory */\n      0x60\n        /* \"libraries/Address.sol\":4376:4428  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_164\n        /* \"libraries/Address.sol\":4398:4404  target */\n      dup5\n        /* \"libraries/Address.sol\":4406:4410  data */\n      dup5\n        /* \"libraries/Address.sol\":4412:4413  0 */\n      0x00\n        /* \"libraries/Address.sol\":4415:4427  errorMessage */\n      dup6\n        /* \"libraries/Address.sol\":4376:4397  functionCallWithValue */\n      tag_165\n        /* \"libraries/Address.sol\":4376:4428  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_164:\n        /* \"libraries/Address.sol\":4369:4428  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"libraries/Address.sol\":4207:4436  function functionCall(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"libraries/Address.sol\":5293:5748  function functionCallWithValue(... */\n    tag_165:\n        /* \"libraries/Address.sol\":5463:5475  bytes memory */\n      0x60\n        /* \"libraries/Address.sol\":5521:5526  value */\n      dup3\n        /* \"libraries/Address.sol\":5496:5517  address(this).balance */\n      selfbalance\n        /* \"libraries/Address.sol\":5496:5526  address(this).balance >= value */\n      lt\n      iszero\n        /* \"libraries/Address.sol\":5488:5569  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_167\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap1\n      tag_169\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_167:\n        /* \"libraries/Address.sol\":5581:5593  bool success */\n      0x00\n        /* \"libraries/Address.sol\":5595:5618  bytes memory returndata */\n      dup1\n        /* \"libraries/Address.sol\":5622:5628  target */\n      dup7\n        /* \"libraries/Address.sol\":5622:5633  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"libraries/Address.sol\":5641:5646  value */\n      dup6\n        /* \"libraries/Address.sol\":5648:5652  data */\n      dup8\n        /* \"libraries/Address.sol\":5622:5653  target.call{value: value}(data) */\n      mload(0x40)\n      tag_170\n      swap2\n      swap1\n      tag_171\n      jump\t// in\n    tag_170:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_174\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_173)\n    tag_174:\n      0x60\n      swap2\n      pop\n    tag_173:\n      pop\n        /* \"libraries/Address.sol\":5580:5653  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"libraries/Address.sol\":5671:5740  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      tag_175\n        /* \"libraries/Address.sol\":5698:5704  target */\n      dup8\n        /* \"libraries/Address.sol\":5706:5713  success */\n      dup4\n        /* \"libraries/Address.sol\":5715:5725  returndata */\n      dup4\n        /* \"libraries/Address.sol\":5727:5739  errorMessage */\n      dup8\n        /* \"libraries/Address.sol\":5671:5697  verifyCallResultFromTarget */\n      tag_176\n        /* \"libraries/Address.sol\":5671:5740  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      jump\t// in\n    tag_175:\n        /* \"libraries/Address.sol\":5664:5740  return verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"libraries/Address.sol\":5293:5748  function functionCallWithValue(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"libraries/Address.sol\":7866:8510  function verifyCallResultFromTarget(... */\n    tag_176:\n        /* \"libraries/Address.sol\":8051:8063  bytes memory */\n      0x60\n        /* \"libraries/Address.sol\":8080:8087  success */\n      dup4\n        /* \"libraries/Address.sol\":8076:8503  if (success) {... */\n      iszero\n      tag_178\n      jumpi\n        /* \"libraries/Address.sol\":8129:8130  0 */\n      0x00\n        /* \"libraries/Address.sol\":8108:8118  returndata */\n      dup4\n        /* \"libraries/Address.sol\":8108:8125  returndata.length */\n      mload\n        /* \"libraries/Address.sol\":8108:8130  returndata.length == 0 */\n      sub\n        /* \"libraries/Address.sol\":8104:8394  if (returndata.length == 0) {... */\n      tag_179\n      jumpi\n        /* \"libraries/Address.sol\":8326:8344  isContract(target) */\n      tag_180\n        /* \"libraries/Address.sol\":8337:8343  target */\n      dup6\n        /* \"libraries/Address.sol\":8326:8336  isContract */\n      tag_181\n        /* \"libraries/Address.sol\":8326:8344  isContract(target) */\n      jump\t// in\n    tag_180:\n        /* \"libraries/Address.sol\":8318:8378  require(isContract(target), \"Address: call to non-contract\") */\n      tag_182\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_183\n      swap1\n      tag_184\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_182:\n        /* \"libraries/Address.sol\":8104:8394  if (returndata.length == 0) {... */\n    tag_179:\n        /* \"libraries/Address.sol\":8415:8425  returndata */\n      dup3\n        /* \"libraries/Address.sol\":8408:8425  return returndata */\n      swap1\n      pop\n      jump(tag_177)\n        /* \"libraries/Address.sol\":8076:8503  if (success) {... */\n    tag_178:\n        /* \"libraries/Address.sol\":8458:8491  _revert(returndata, errorMessage) */\n      tag_186\n        /* \"libraries/Address.sol\":8466:8476  returndata */\n      dup4\n        /* \"libraries/Address.sol\":8478:8490  errorMessage */\n      dup4\n        /* \"libraries/Address.sol\":8458:8465  _revert */\n      tag_187\n        /* \"libraries/Address.sol\":8458:8491  _revert(returndata, errorMessage) */\n      jump\t// in\n    tag_186:\n        /* \"libraries/Address.sol\":7866:8510  function verifyCallResultFromTarget(... */\n    tag_177:\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"libraries/Address.sol\":1452:1778  function isContract(address account) internal view returns (bool) {... */\n    tag_181:\n        /* \"libraries/Address.sol\":1512:1516  bool */\n      0x00\n        /* \"libraries/Address.sol\":1769:1770  0 */\n      dup1\n        /* \"libraries/Address.sol\":1747:1754  account */\n      dup3\n        /* \"libraries/Address.sol\":1747:1766  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"libraries/Address.sol\":1747:1770  account.code.length > 0 */\n      gt\n        /* \"libraries/Address.sol\":1740:1770  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"libraries/Address.sol\":1452:1778  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"libraries/Address.sol\":9052:9604  function _revert(bytes memory returndata, string memory errorMessage) private pure {... */\n    tag_187:\n        /* \"libraries/Address.sol\":9233:9234  0 */\n      0x00\n        /* \"libraries/Address.sol\":9213:9223  returndata */\n      dup3\n        /* \"libraries/Address.sol\":9213:9230  returndata.length */\n      mload\n        /* \"libraries/Address.sol\":9213:9234  returndata.length > 0 */\n      gt\n        /* \"libraries/Address.sol\":9209:9597  if (returndata.length > 0) {... */\n      iszero\n      tag_190\n      jumpi\n        /* \"libraries/Address.sol\":9445:9455  returndata */\n      dup2\n        /* \"libraries/Address.sol\":9439:9456  mload(returndata) */\n      mload\n        /* \"libraries/Address.sol\":9502:9517  returndata_size */\n      dup1\n        /* \"libraries/Address.sol\":9489:9499  returndata */\n      dup4\n        /* \"libraries/Address.sol\":9485:9487  32 */\n      0x20\n        /* \"libraries/Address.sol\":9481:9500  add(32, returndata) */\n      add\n        /* \"libraries/Address.sol\":9474:9518  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"libraries/Address.sol\":9209:9597  if (returndata.length > 0) {... */\n    tag_190:\n        /* \"libraries/Address.sol\":9572:9584  errorMessage */\n      dup1\n        /* \"libraries/Address.sol\":9565:9585  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_192\n      swap2\n      swap1\n      tag_193\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_137:\n      mload(0x40)\n      dup1\n      0x0120\n      add\n      0x40\n      mstore\n      dup1\n      and(0xffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      0x04\n      dup2\n      gt\n      iszero\n      tag_194\n      jumpi\n      tag_195\n      tag_69\n      jump\t// in\n    tag_195:\n    tag_194:\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_197:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:427   */\n    tag_199:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:420   */\n      0xffffffff\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:421   */\n      and\n        /* \"#utility.yul\":388:421   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:427   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":433:553   */\n    tag_200:\n        /* \"#utility.yul\":505:528   */\n      tag_269\n        /* \"#utility.yul\":522:527   */\n      dup2\n        /* \"#utility.yul\":505:528   */\n      tag_199\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":498:503   */\n      dup2\n        /* \"#utility.yul\":495:529   */\n      eq\n        /* \"#utility.yul\":485:547   */\n      tag_270\n      jumpi\n        /* \"#utility.yul\":543:544   */\n      0x00\n        /* \"#utility.yul\":540:541   */\n      dup1\n        /* \"#utility.yul\":533:545   */\n      revert\n        /* \"#utility.yul\":485:547   */\n    tag_270:\n        /* \"#utility.yul\":433:553   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":559:696   */\n    tag_201:\n        /* \"#utility.yul\":604:609   */\n      0x00\n        /* \"#utility.yul\":642:648   */\n      dup2\n        /* \"#utility.yul\":629:649   */\n      calldataload\n        /* \"#utility.yul\":620:649   */\n      swap1\n      pop\n        /* \"#utility.yul\":658:690   */\n      tag_272\n        /* \"#utility.yul\":684:689   */\n      dup2\n        /* \"#utility.yul\":658:690   */\n      tag_200\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":559:696   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":702:1029   */\n    tag_14:\n        /* \"#utility.yul\":760:766   */\n      0x00\n        /* \"#utility.yul\":809:811   */\n      0x20\n        /* \"#utility.yul\":797:806   */\n      dup3\n        /* \"#utility.yul\":788:795   */\n      dup5\n        /* \"#utility.yul\":784:807   */\n      sub\n        /* \"#utility.yul\":780:812   */\n      slt\n        /* \"#utility.yul\":777:896   */\n      iszero\n      tag_274\n      jumpi\n        /* \"#utility.yul\":815:894   */\n      tag_275\n      tag_197\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":777:896   */\n    tag_274:\n        /* \"#utility.yul\":935:936   */\n      0x00\n        /* \"#utility.yul\":960:1012   */\n      tag_276\n        /* \"#utility.yul\":1004:1011   */\n      dup5\n        /* \"#utility.yul\":995:1001   */\n      dup3\n        /* \"#utility.yul\":984:993   */\n      dup6\n        /* \"#utility.yul\":980:1002   */\n      add\n        /* \"#utility.yul\":960:1012   */\n      tag_201\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":950:1012   */\n      swap2\n      pop\n        /* \"#utility.yul\":906:1022   */\n      pop\n        /* \"#utility.yul\":702:1029   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1035:1161   */\n    tag_202:\n        /* \"#utility.yul\":1072:1079   */\n      0x00\n        /* \"#utility.yul\":1112:1154   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1105:1110   */\n      dup3\n        /* \"#utility.yul\":1101:1155   */\n      and\n        /* \"#utility.yul\":1090:1155   */\n      swap1\n      pop\n        /* \"#utility.yul\":1035:1161   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1167:1263   */\n    tag_203:\n        /* \"#utility.yul\":1204:1211   */\n      0x00\n        /* \"#utility.yul\":1233:1257   */\n      tag_279\n        /* \"#utility.yul\":1251:1256   */\n      dup3\n        /* \"#utility.yul\":1233:1257   */\n      tag_202\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":1222:1257   */\n      swap1\n      pop\n        /* \"#utility.yul\":1167:1263   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1269:1391   */\n    tag_204:\n        /* \"#utility.yul\":1342:1366   */\n      tag_281\n        /* \"#utility.yul\":1360:1365   */\n      dup2\n        /* \"#utility.yul\":1342:1366   */\n      tag_203\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":1335:1340   */\n      dup2\n        /* \"#utility.yul\":1332:1367   */\n      eq\n        /* \"#utility.yul\":1322:1385   */\n      tag_282\n      jumpi\n        /* \"#utility.yul\":1381:1382   */\n      0x00\n        /* \"#utility.yul\":1378:1379   */\n      dup1\n        /* \"#utility.yul\":1371:1383   */\n      revert\n        /* \"#utility.yul\":1322:1385   */\n    tag_282:\n        /* \"#utility.yul\":1269:1391   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1397:1536   */\n    tag_205:\n        /* \"#utility.yul\":1443:1448   */\n      0x00\n        /* \"#utility.yul\":1481:1487   */\n      dup2\n        /* \"#utility.yul\":1468:1488   */\n      calldataload\n        /* \"#utility.yul\":1459:1488   */\n      swap1\n      pop\n        /* \"#utility.yul\":1497:1530   */\n      tag_284\n        /* \"#utility.yul\":1524:1529   */\n      dup2\n        /* \"#utility.yul\":1497:1530   */\n      tag_204\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":1397:1536   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1542:1641   */\n    tag_206:\n        /* \"#utility.yul\":1578:1585   */\n      0x00\n        /* \"#utility.yul\":1618:1634   */\n      0xffffffffffffff\n        /* \"#utility.yul\":1611:1616   */\n      dup3\n        /* \"#utility.yul\":1607:1635   */\n      and\n        /* \"#utility.yul\":1596:1635   */\n      swap1\n      pop\n        /* \"#utility.yul\":1542:1641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1647:1767   */\n    tag_207:\n        /* \"#utility.yul\":1719:1742   */\n      tag_287\n        /* \"#utility.yul\":1736:1741   */\n      dup2\n        /* \"#utility.yul\":1719:1742   */\n      tag_206\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":1712:1717   */\n      dup2\n        /* \"#utility.yul\":1709:1743   */\n      eq\n        /* \"#utility.yul\":1699:1761   */\n      tag_288\n      jumpi\n        /* \"#utility.yul\":1757:1758   */\n      0x00\n        /* \"#utility.yul\":1754:1755   */\n      dup1\n        /* \"#utility.yul\":1747:1759   */\n      revert\n        /* \"#utility.yul\":1699:1761   */\n    tag_288:\n        /* \"#utility.yul\":1647:1767   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1773:1910   */\n    tag_208:\n        /* \"#utility.yul\":1818:1823   */\n      0x00\n        /* \"#utility.yul\":1856:1862   */\n      dup2\n        /* \"#utility.yul\":1843:1863   */\n      calldataload\n        /* \"#utility.yul\":1834:1863   */\n      swap1\n      pop\n        /* \"#utility.yul\":1872:1904   */\n      tag_290\n        /* \"#utility.yul\":1898:1903   */\n      dup2\n        /* \"#utility.yul\":1872:1904   */\n      tag_207\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":1773:1910   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1916:2388   */\n    tag_21:\n        /* \"#utility.yul\":1983:1989   */\n      0x00\n        /* \"#utility.yul\":1991:1997   */\n      dup1\n        /* \"#utility.yul\":2040:2042   */\n      0x40\n        /* \"#utility.yul\":2028:2037   */\n      dup4\n        /* \"#utility.yul\":2019:2026   */\n      dup6\n        /* \"#utility.yul\":2015:2038   */\n      sub\n        /* \"#utility.yul\":2011:2043   */\n      slt\n        /* \"#utility.yul\":2008:2127   */\n      iszero\n      tag_292\n      jumpi\n        /* \"#utility.yul\":2046:2125   */\n      tag_293\n      tag_197\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":2008:2127   */\n    tag_292:\n        /* \"#utility.yul\":2166:2167   */\n      0x00\n        /* \"#utility.yul\":2191:2244   */\n      tag_294\n        /* \"#utility.yul\":2236:2243   */\n      dup6\n        /* \"#utility.yul\":2227:2233   */\n      dup3\n        /* \"#utility.yul\":2216:2225   */\n      dup7\n        /* \"#utility.yul\":2212:2234   */\n      add\n        /* \"#utility.yul\":2191:2244   */\n      tag_205\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":2181:2244   */\n      swap3\n      pop\n        /* \"#utility.yul\":2137:2254   */\n      pop\n        /* \"#utility.yul\":2293:2295   */\n      0x20\n        /* \"#utility.yul\":2319:2371   */\n      tag_295\n        /* \"#utility.yul\":2363:2370   */\n      dup6\n        /* \"#utility.yul\":2354:2360   */\n      dup3\n        /* \"#utility.yul\":2343:2352   */\n      dup7\n        /* \"#utility.yul\":2339:2361   */\n      add\n        /* \"#utility.yul\":2319:2371   */\n      tag_208\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":2309:2371   */\n      swap2\n      pop\n        /* \"#utility.yul\":2264:2381   */\n      pop\n        /* \"#utility.yul\":1916:2388   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2394:2512   */\n    tag_209:\n        /* \"#utility.yul\":2481:2505   */\n      tag_297\n        /* \"#utility.yul\":2499:2504   */\n      dup2\n        /* \"#utility.yul\":2481:2505   */\n      tag_203\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":2476:2479   */\n      dup3\n        /* \"#utility.yul\":2469:2506   */\n      mstore\n        /* \"#utility.yul\":2394:2512   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2518:2740   */\n    tag_26:\n        /* \"#utility.yul\":2611:2615   */\n      0x00\n        /* \"#utility.yul\":2649:2651   */\n      0x20\n        /* \"#utility.yul\":2638:2647   */\n      dup3\n        /* \"#utility.yul\":2634:2652   */\n      add\n        /* \"#utility.yul\":2626:2652   */\n      swap1\n      pop\n        /* \"#utility.yul\":2662:2733   */\n      tag_299\n        /* \"#utility.yul\":2730:2731   */\n      0x00\n        /* \"#utility.yul\":2719:2728   */\n      dup4\n        /* \"#utility.yul\":2715:2732   */\n      add\n        /* \"#utility.yul\":2706:2712   */\n      dup5\n        /* \"#utility.yul\":2662:2733   */\n      tag_209\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":2518:2740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2746:2864   */\n    tag_210:\n        /* \"#utility.yul\":2783:2790   */\n      0x00\n        /* \"#utility.yul\":2823:2857   */\n      0xffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2816:2821   */\n      dup3\n        /* \"#utility.yul\":2812:2858   */\n      and\n        /* \"#utility.yul\":2801:2858   */\n      swap1\n      pop\n        /* \"#utility.yul\":2746:2864   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2870:2992   */\n    tag_211:\n        /* \"#utility.yul\":2943:2967   */\n      tag_302\n        /* \"#utility.yul\":2961:2966   */\n      dup2\n        /* \"#utility.yul\":2943:2967   */\n      tag_210\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":2936:2941   */\n      dup2\n        /* \"#utility.yul\":2933:2968   */\n      eq\n        /* \"#utility.yul\":2923:2986   */\n      tag_303\n      jumpi\n        /* \"#utility.yul\":2982:2983   */\n      0x00\n        /* \"#utility.yul\":2979:2980   */\n      dup1\n        /* \"#utility.yul\":2972:2984   */\n      revert\n        /* \"#utility.yul\":2923:2986   */\n    tag_303:\n        /* \"#utility.yul\":2870:2992   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2998:3137   */\n    tag_212:\n        /* \"#utility.yul\":3044:3049   */\n      0x00\n        /* \"#utility.yul\":3082:3088   */\n      dup2\n        /* \"#utility.yul\":3069:3089   */\n      calldataload\n        /* \"#utility.yul\":3060:3089   */\n      swap1\n      pop\n        /* \"#utility.yul\":3098:3131   */\n      tag_305\n        /* \"#utility.yul\":3125:3130   */\n      dup2\n        /* \"#utility.yul\":3098:3131   */\n      tag_211\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":2998:3137   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3143:3254   */\n    tag_213:\n        /* \"#utility.yul\":3228:3229   */\n      0x03\n        /* \"#utility.yul\":3221:3226   */\n      dup2\n        /* \"#utility.yul\":3218:3230   */\n      lt\n        /* \"#utility.yul\":3208:3248   */\n      tag_307\n      jumpi\n        /* \"#utility.yul\":3244:3245   */\n      0x00\n        /* \"#utility.yul\":3241:3242   */\n      dup1\n        /* \"#utility.yul\":3234:3246   */\n      revert\n        /* \"#utility.yul\":3208:3248   */\n    tag_307:\n        /* \"#utility.yul\":3143:3254   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3260:3423   */\n    tag_214:\n        /* \"#utility.yul\":3318:3323   */\n      0x00\n        /* \"#utility.yul\":3356:3362   */\n      dup2\n        /* \"#utility.yul\":3343:3363   */\n      calldataload\n        /* \"#utility.yul\":3334:3363   */\n      swap1\n      pop\n        /* \"#utility.yul\":3372:3417   */\n      tag_309\n        /* \"#utility.yul\":3411:3416   */\n      dup2\n        /* \"#utility.yul\":3372:3417   */\n      tag_213\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":3260:3423   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3429:4216   */\n    tag_29:\n        /* \"#utility.yul\":3526:3532   */\n      0x00\n        /* \"#utility.yul\":3534:3540   */\n      dup1\n        /* \"#utility.yul\":3542:3548   */\n      0x00\n        /* \"#utility.yul\":3550:3556   */\n      dup1\n        /* \"#utility.yul\":3599:3602   */\n      0x80\n        /* \"#utility.yul\":3587:3596   */\n      dup6\n        /* \"#utility.yul\":3578:3585   */\n      dup8\n        /* \"#utility.yul\":3574:3597   */\n      sub\n        /* \"#utility.yul\":3570:3603   */\n      slt\n        /* \"#utility.yul\":3567:3687   */\n      iszero\n      tag_311\n      jumpi\n        /* \"#utility.yul\":3606:3685   */\n      tag_312\n      tag_197\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":3567:3687   */\n    tag_311:\n        /* \"#utility.yul\":3726:3727   */\n      0x00\n        /* \"#utility.yul\":3751:3804   */\n      tag_313\n        /* \"#utility.yul\":3796:3803   */\n      dup8\n        /* \"#utility.yul\":3787:3793   */\n      dup3\n        /* \"#utility.yul\":3776:3785   */\n      dup9\n        /* \"#utility.yul\":3772:3794   */\n      add\n        /* \"#utility.yul\":3751:3804   */\n      tag_205\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":3741:3804   */\n      swap5\n      pop\n        /* \"#utility.yul\":3697:3814   */\n      pop\n        /* \"#utility.yul\":3853:3855   */\n      0x20\n        /* \"#utility.yul\":3879:3931   */\n      tag_314\n        /* \"#utility.yul\":3923:3930   */\n      dup8\n        /* \"#utility.yul\":3914:3920   */\n      dup3\n        /* \"#utility.yul\":3903:3912   */\n      dup9\n        /* \"#utility.yul\":3899:3921   */\n      add\n        /* \"#utility.yul\":3879:3931   */\n      tag_201\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":3869:3931   */\n      swap4\n      pop\n        /* \"#utility.yul\":3824:3941   */\n      pop\n        /* \"#utility.yul\":3980:3982   */\n      0x40\n        /* \"#utility.yul\":4006:4059   */\n      tag_315\n        /* \"#utility.yul\":4051:4058   */\n      dup8\n        /* \"#utility.yul\":4042:4048   */\n      dup3\n        /* \"#utility.yul\":4031:4040   */\n      dup9\n        /* \"#utility.yul\":4027:4049   */\n      add\n        /* \"#utility.yul\":4006:4059   */\n      tag_212\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":3996:4059   */\n      swap3\n      pop\n        /* \"#utility.yul\":3951:4069   */\n      pop\n        /* \"#utility.yul\":4108:4110   */\n      0x60\n        /* \"#utility.yul\":4134:4199   */\n      tag_316\n        /* \"#utility.yul\":4191:4198   */\n      dup8\n        /* \"#utility.yul\":4182:4188   */\n      dup3\n        /* \"#utility.yul\":4171:4180   */\n      dup9\n        /* \"#utility.yul\":4167:4189   */\n      add\n        /* \"#utility.yul\":4134:4199   */\n      tag_214\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":4124:4199   */\n      swap2\n      pop\n        /* \"#utility.yul\":4079:4209   */\n      pop\n        /* \"#utility.yul\":3429:4216   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4222:4327   */\n    tag_215:\n        /* \"#utility.yul\":4297:4320   */\n      tag_318\n        /* \"#utility.yul\":4314:4319   */\n      dup2\n        /* \"#utility.yul\":4297:4320   */\n      tag_199\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":4292:4295   */\n      dup3\n        /* \"#utility.yul\":4285:4321   */\n      mstore\n        /* \"#utility.yul\":4222:4327   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4333:4438   */\n    tag_216:\n        /* \"#utility.yul\":4408:4431   */\n      tag_320\n        /* \"#utility.yul\":4425:4430   */\n      dup2\n        /* \"#utility.yul\":4408:4431   */\n      tag_206\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":4403:4406   */\n      dup3\n        /* \"#utility.yul\":4396:4432   */\n      mstore\n        /* \"#utility.yul\":4333:4438   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4444:4552   */\n    tag_217:\n        /* \"#utility.yul\":4521:4545   */\n      tag_322\n        /* \"#utility.yul\":4539:4544   */\n      dup2\n        /* \"#utility.yul\":4521:4545   */\n      tag_210\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":4516:4519   */\n      dup3\n        /* \"#utility.yul\":4509:4546   */\n      mstore\n        /* \"#utility.yul\":4444:4552   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4558:4635   */\n    tag_218:\n        /* \"#utility.yul\":4595:4602   */\n      0x00\n        /* \"#utility.yul\":4624:4629   */\n      dup2\n        /* \"#utility.yul\":4613:4629   */\n      swap1\n      pop\n        /* \"#utility.yul\":4558:4635   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4641:4749   */\n    tag_219:\n        /* \"#utility.yul\":4718:4742   */\n      tag_325\n        /* \"#utility.yul\":4736:4741   */\n      dup2\n        /* \"#utility.yul\":4718:4742   */\n      tag_218\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":4713:4716   */\n      dup3\n        /* \"#utility.yul\":4706:4743   */\n      mstore\n        /* \"#utility.yul\":4641:4749   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4755:4863   */\n    tag_220:\n        /* \"#utility.yul\":4832:4856   */\n      tag_327\n        /* \"#utility.yul\":4850:4855   */\n      dup2\n        /* \"#utility.yul\":4832:4856   */\n      tag_203\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":4827:4830   */\n      dup3\n        /* \"#utility.yul\":4820:4857   */\n      mstore\n        /* \"#utility.yul\":4755:4863   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4869:5049   */\n    tag_69:\n        /* \"#utility.yul\":4917:4994   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4914:4915   */\n      0x00\n        /* \"#utility.yul\":4907:4995   */\n      mstore\n        /* \"#utility.yul\":5014:5018   */\n      0x21\n        /* \"#utility.yul\":5011:5012   */\n      0x04\n        /* \"#utility.yul\":5004:5019   */\n      mstore\n        /* \"#utility.yul\":5038:5042   */\n      0x24\n        /* \"#utility.yul\":5035:5036   */\n      0x00\n        /* \"#utility.yul\":5028:5043   */\n      revert\n        /* \"#utility.yul\":5055:5175   */\n    tag_221:\n        /* \"#utility.yul\":5143:5144   */\n      0x05\n        /* \"#utility.yul\":5136:5141   */\n      dup2\n        /* \"#utility.yul\":5133:5145   */\n      lt\n        /* \"#utility.yul\":5123:5169   */\n      tag_330\n      jumpi\n        /* \"#utility.yul\":5149:5167   */\n      tag_331\n      tag_69\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":5123:5169   */\n    tag_330:\n        /* \"#utility.yul\":5055:5175   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5181:5322   */\n    tag_222:\n        /* \"#utility.yul\":5233:5240   */\n      0x00\n        /* \"#utility.yul\":5262:5267   */\n      dup2\n        /* \"#utility.yul\":5251:5267   */\n      swap1\n      pop\n        /* \"#utility.yul\":5268:5316   */\n      tag_333\n        /* \"#utility.yul\":5310:5315   */\n      dup3\n        /* \"#utility.yul\":5268:5316   */\n      tag_221\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":5181:5322   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5328:5469   */\n    tag_223:\n        /* \"#utility.yul\":5391:5400   */\n      0x00\n        /* \"#utility.yul\":5424:5463   */\n      tag_335\n        /* \"#utility.yul\":5457:5462   */\n      dup3\n        /* \"#utility.yul\":5424:5463   */\n      tag_222\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":5411:5463   */\n      swap1\n      pop\n        /* \"#utility.yul\":5328:5469   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5475:5622   */\n    tag_224:\n        /* \"#utility.yul\":5565:5615   */\n      tag_337\n        /* \"#utility.yul\":5609:5614   */\n      dup2\n        /* \"#utility.yul\":5565:5615   */\n      tag_223\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":5560:5563   */\n      dup3\n        /* \"#utility.yul\":5553:5616   */\n      mstore\n        /* \"#utility.yul\":5475:5622   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5694:7482   */\n    tag_225:\n        /* \"#utility.yul\":5843:5849   */\n      0x0120\n        /* \"#utility.yul\":5838:5841   */\n      dup3\n        /* \"#utility.yul\":5834:5850   */\n      add\n        /* \"#utility.yul\":5935:5939   */\n      0x00\n        /* \"#utility.yul\":5928:5933   */\n      dup3\n        /* \"#utility.yul\":5924:5940   */\n      add\n        /* \"#utility.yul\":5918:5941   */\n      mload\n        /* \"#utility.yul\":5954:6015   */\n      tag_339\n        /* \"#utility.yul\":6009:6013   */\n      0x00\n        /* \"#utility.yul\":6004:6007   */\n      dup6\n        /* \"#utility.yul\":6000:6014   */\n      add\n        /* \"#utility.yul\":5986:5998   */\n      dup3\n        /* \"#utility.yul\":5954:6015   */\n      tag_215\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":5860:6025   */\n      pop\n        /* \"#utility.yul\":6108:6112   */\n      0x20\n        /* \"#utility.yul\":6101:6106   */\n      dup3\n        /* \"#utility.yul\":6097:6113   */\n      add\n        /* \"#utility.yul\":6091:6114   */\n      mload\n        /* \"#utility.yul\":6127:6188   */\n      tag_340\n        /* \"#utility.yul\":6182:6186   */\n      0x20\n        /* \"#utility.yul\":6177:6180   */\n      dup6\n        /* \"#utility.yul\":6173:6187   */\n      add\n        /* \"#utility.yul\":6159:6171   */\n      dup3\n        /* \"#utility.yul\":6127:6188   */\n      tag_215\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":6035:6198   */\n      pop\n        /* \"#utility.yul\":6280:6284   */\n      0x40\n        /* \"#utility.yul\":6273:6278   */\n      dup3\n        /* \"#utility.yul\":6269:6285   */\n      add\n        /* \"#utility.yul\":6263:6286   */\n      mload\n        /* \"#utility.yul\":6299:6360   */\n      tag_341\n        /* \"#utility.yul\":6354:6358   */\n      0x40\n        /* \"#utility.yul\":6349:6352   */\n      dup6\n        /* \"#utility.yul\":6345:6359   */\n      add\n        /* \"#utility.yul\":6331:6343   */\n      dup3\n        /* \"#utility.yul\":6299:6360   */\n      tag_216\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":6208:6370   */\n      pop\n        /* \"#utility.yul\":6454:6458   */\n      0x60\n        /* \"#utility.yul\":6447:6452   */\n      dup3\n        /* \"#utility.yul\":6443:6459   */\n      add\n        /* \"#utility.yul\":6437:6460   */\n      mload\n        /* \"#utility.yul\":6473:6536   */\n      tag_342\n        /* \"#utility.yul\":6530:6534   */\n      0x60\n        /* \"#utility.yul\":6525:6528   */\n      dup6\n        /* \"#utility.yul\":6521:6535   */\n      add\n        /* \"#utility.yul\":6507:6519   */\n      dup3\n        /* \"#utility.yul\":6473:6536   */\n      tag_217\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":6380:6546   */\n      pop\n        /* \"#utility.yul\":6638:6642   */\n      0x80\n        /* \"#utility.yul\":6631:6636   */\n      dup3\n        /* \"#utility.yul\":6627:6643   */\n      add\n        /* \"#utility.yul\":6621:6644   */\n      mload\n        /* \"#utility.yul\":6657:6720   */\n      tag_343\n        /* \"#utility.yul\":6714:6718   */\n      0x80\n        /* \"#utility.yul\":6709:6712   */\n      dup6\n        /* \"#utility.yul\":6705:6719   */\n      add\n        /* \"#utility.yul\":6691:6703   */\n      dup3\n        /* \"#utility.yul\":6657:6720   */\n      tag_219\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":6556:6730   */\n      pop\n        /* \"#utility.yul\":6820:6824   */\n      0xa0\n        /* \"#utility.yul\":6813:6818   */\n      dup3\n        /* \"#utility.yul\":6809:6825   */\n      add\n        /* \"#utility.yul\":6803:6826   */\n      mload\n        /* \"#utility.yul\":6839:6902   */\n      tag_344\n        /* \"#utility.yul\":6896:6900   */\n      0xa0\n        /* \"#utility.yul\":6891:6894   */\n      dup6\n        /* \"#utility.yul\":6887:6901   */\n      add\n        /* \"#utility.yul\":6873:6885   */\n      dup3\n        /* \"#utility.yul\":6839:6902   */\n      tag_220\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":6740:6912   */\n      pop\n        /* \"#utility.yul\":7002:7006   */\n      0xc0\n        /* \"#utility.yul\":6995:7000   */\n      dup3\n        /* \"#utility.yul\":6991:7007   */\n      add\n        /* \"#utility.yul\":6985:7008   */\n      mload\n        /* \"#utility.yul\":7021:7084   */\n      tag_345\n        /* \"#utility.yul\":7078:7082   */\n      0xc0\n        /* \"#utility.yul\":7073:7076   */\n      dup6\n        /* \"#utility.yul\":7069:7083   */\n      add\n        /* \"#utility.yul\":7055:7067   */\n      dup3\n        /* \"#utility.yul\":7021:7084   */\n      tag_220\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":6922:7094   */\n      pop\n        /* \"#utility.yul\":7185:7189   */\n      0xe0\n        /* \"#utility.yul\":7178:7183   */\n      dup3\n        /* \"#utility.yul\":7174:7190   */\n      add\n        /* \"#utility.yul\":7168:7191   */\n      mload\n        /* \"#utility.yul\":7204:7267   */\n      tag_346\n        /* \"#utility.yul\":7261:7265   */\n      0xe0\n        /* \"#utility.yul\":7256:7259   */\n      dup6\n        /* \"#utility.yul\":7252:7266   */\n      add\n        /* \"#utility.yul\":7238:7250   */\n      dup3\n        /* \"#utility.yul\":7204:7267   */\n      tag_220\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":7104:7277   */\n      pop\n        /* \"#utility.yul\":7366:7372   */\n      0x0100\n        /* \"#utility.yul\":7359:7364   */\n      dup3\n        /* \"#utility.yul\":7355:7373   */\n      add\n        /* \"#utility.yul\":7349:7374   */\n      mload\n        /* \"#utility.yul\":7387:7465   */\n      tag_347\n        /* \"#utility.yul\":7457:7463   */\n      0x0100\n        /* \"#utility.yul\":7452:7455   */\n      dup6\n        /* \"#utility.yul\":7448:7464   */\n      add\n        /* \"#utility.yul\":7434:7446   */\n      dup3\n        /* \"#utility.yul\":7387:7465   */\n      tag_224\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":7287:7475   */\n      pop\n        /* \"#utility.yul\":5812:7482   */\n      pop\n        /* \"#utility.yul\":5694:7482   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7488:7815   */\n    tag_38:\n        /* \"#utility.yul\":7633:7637   */\n      0x00\n        /* \"#utility.yul\":7671:7674   */\n      0x0120\n        /* \"#utility.yul\":7660:7669   */\n      dup3\n        /* \"#utility.yul\":7656:7675   */\n      add\n        /* \"#utility.yul\":7648:7675   */\n      swap1\n      pop\n        /* \"#utility.yul\":7685:7808   */\n      tag_349\n        /* \"#utility.yul\":7805:7806   */\n      0x00\n        /* \"#utility.yul\":7794:7803   */\n      dup4\n        /* \"#utility.yul\":7790:7807   */\n      add\n        /* \"#utility.yul\":7781:7787   */\n      dup5\n        /* \"#utility.yul\":7685:7808   */\n      tag_225\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":7488:7815   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7821:7936   */\n    tag_226:\n        /* \"#utility.yul\":7906:7929   */\n      tag_351\n        /* \"#utility.yul\":7923:7928   */\n      dup2\n        /* \"#utility.yul\":7906:7929   */\n      tag_206\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":7901:7904   */\n      dup3\n        /* \"#utility.yul\":7894:7930   */\n      mstore\n        /* \"#utility.yul\":7821:7936   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7942:8160   */\n    tag_42:\n        /* \"#utility.yul\":8033:8037   */\n      0x00\n        /* \"#utility.yul\":8071:8073   */\n      0x20\n        /* \"#utility.yul\":8060:8069   */\n      dup3\n        /* \"#utility.yul\":8056:8074   */\n      add\n        /* \"#utility.yul\":8048:8074   */\n      swap1\n      pop\n        /* \"#utility.yul\":8084:8153   */\n      tag_353\n        /* \"#utility.yul\":8150:8151   */\n      0x00\n        /* \"#utility.yul\":8139:8148   */\n      dup4\n        /* \"#utility.yul\":8135:8152   */\n      add\n        /* \"#utility.yul\":8126:8132   */\n      dup5\n        /* \"#utility.yul\":8084:8153   */\n      tag_226\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":7942:8160   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8166:8309   */\n    tag_227:\n        /* \"#utility.yul\":8223:8228   */\n      0x00\n        /* \"#utility.yul\":8254:8260   */\n      dup2\n        /* \"#utility.yul\":8248:8261   */\n      mload\n        /* \"#utility.yul\":8239:8261   */\n      swap1\n      pop\n        /* \"#utility.yul\":8270:8303   */\n      tag_355\n        /* \"#utility.yul\":8297:8302   */\n      dup2\n        /* \"#utility.yul\":8270:8303   */\n      tag_204\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":8166:8309   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8315:8666   */\n    tag_49:\n        /* \"#utility.yul\":8385:8391   */\n      0x00\n        /* \"#utility.yul\":8434:8436   */\n      0x20\n        /* \"#utility.yul\":8422:8431   */\n      dup3\n        /* \"#utility.yul\":8413:8420   */\n      dup5\n        /* \"#utility.yul\":8409:8432   */\n      sub\n        /* \"#utility.yul\":8405:8437   */\n      slt\n        /* \"#utility.yul\":8402:8521   */\n      iszero\n      tag_357\n      jumpi\n        /* \"#utility.yul\":8440:8519   */\n      tag_358\n      tag_197\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":8402:8521   */\n    tag_357:\n        /* \"#utility.yul\":8560:8561   */\n      0x00\n        /* \"#utility.yul\":8585:8649   */\n      tag_359\n        /* \"#utility.yul\":8641:8648   */\n      dup5\n        /* \"#utility.yul\":8632:8638   */\n      dup3\n        /* \"#utility.yul\":8621:8630   */\n      dup6\n        /* \"#utility.yul\":8617:8639   */\n      add\n        /* \"#utility.yul\":8585:8649   */\n      tag_227\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":8575:8649   */\n      swap2\n      pop\n        /* \"#utility.yul\":8531:8659   */\n      pop\n        /* \"#utility.yul\":8315:8666   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8672:8841   */\n    tag_228:\n        /* \"#utility.yul\":8756:8767   */\n      0x00\n        /* \"#utility.yul\":8790:8796   */\n      dup3\n        /* \"#utility.yul\":8785:8788   */\n      dup3\n        /* \"#utility.yul\":8778:8797   */\n      mstore\n        /* \"#utility.yul\":8830:8834   */\n      0x20\n        /* \"#utility.yul\":8825:8828   */\n      dup3\n        /* \"#utility.yul\":8821:8835   */\n      add\n        /* \"#utility.yul\":8806:8835   */\n      swap1\n      pop\n        /* \"#utility.yul\":8672:8841   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8847:9006   */\n    tag_229:\n        /* \"#utility.yul\":8987:8998   */\n      0x4e6f74204f776e65720000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8983:8984   */\n      0x00\n        /* \"#utility.yul\":8975:8981   */\n      dup3\n        /* \"#utility.yul\":8971:8985   */\n      add\n        /* \"#utility.yul\":8964:8999   */\n      mstore\n        /* \"#utility.yul\":8847:9006   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9012:9377   */\n    tag_230:\n        /* \"#utility.yul\":9154:9157   */\n      0x00\n        /* \"#utility.yul\":9175:9241   */\n      tag_363\n        /* \"#utility.yul\":9239:9240   */\n      0x09\n        /* \"#utility.yul\":9234:9237   */\n      dup4\n        /* \"#utility.yul\":9175:9241   */\n      tag_228\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":9168:9241   */\n      swap2\n      pop\n        /* \"#utility.yul\":9250:9343   */\n      tag_364\n        /* \"#utility.yul\":9339:9342   */\n      dup3\n        /* \"#utility.yul\":9250:9343   */\n      tag_229\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":9368:9370   */\n      0x20\n        /* \"#utility.yul\":9363:9366   */\n      dup3\n        /* \"#utility.yul\":9359:9371   */\n      add\n        /* \"#utility.yul\":9352:9371   */\n      swap1\n      pop\n        /* \"#utility.yul\":9012:9377   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9383:9802   */\n    tag_52:\n        /* \"#utility.yul\":9549:9553   */\n      0x00\n        /* \"#utility.yul\":9587:9589   */\n      0x20\n        /* \"#utility.yul\":9576:9585   */\n      dup3\n        /* \"#utility.yul\":9572:9590   */\n      add\n        /* \"#utility.yul\":9564:9590   */\n      swap1\n      pop\n        /* \"#utility.yul\":9636:9645   */\n      dup2\n        /* \"#utility.yul\":9630:9634   */\n      dup2\n        /* \"#utility.yul\":9626:9646   */\n      sub\n        /* \"#utility.yul\":9622:9623   */\n      0x00\n        /* \"#utility.yul\":9611:9620   */\n      dup4\n        /* \"#utility.yul\":9607:9624   */\n      add\n        /* \"#utility.yul\":9600:9647   */\n      mstore\n        /* \"#utility.yul\":9664:9795   */\n      tag_366\n        /* \"#utility.yul\":9790:9794   */\n      dup2\n        /* \"#utility.yul\":9664:9795   */\n      tag_230\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":9656:9795   */\n      swap1\n      pop\n        /* \"#utility.yul\":9383:9802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9808:9894   */\n    tag_231:\n        /* \"#utility.yul\":9843:9850   */\n      0x00\n        /* \"#utility.yul\":9883:9887   */\n      0xff\n        /* \"#utility.yul\":9876:9881   */\n      dup3\n        /* \"#utility.yul\":9872:9888   */\n      and\n        /* \"#utility.yul\":9861:9888   */\n      swap1\n      pop\n        /* \"#utility.yul\":9808:9894   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9900:10018   */\n    tag_232:\n        /* \"#utility.yul\":9971:9993   */\n      tag_369\n        /* \"#utility.yul\":9987:9992   */\n      dup2\n        /* \"#utility.yul\":9971:9993   */\n      tag_231\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":9964:9969   */\n      dup2\n        /* \"#utility.yul\":9961:9994   */\n      eq\n        /* \"#utility.yul\":9951:10012   */\n      tag_370\n      jumpi\n        /* \"#utility.yul\":10008:10009   */\n      0x00\n        /* \"#utility.yul\":10005:10006   */\n      dup1\n        /* \"#utility.yul\":9998:10010   */\n      revert\n        /* \"#utility.yul\":9951:10012   */\n    tag_370:\n        /* \"#utility.yul\":9900:10018   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10024:10163   */\n    tag_233:\n        /* \"#utility.yul\":10079:10084   */\n      0x00\n        /* \"#utility.yul\":10110:10116   */\n      dup2\n        /* \"#utility.yul\":10104:10117   */\n      mload\n        /* \"#utility.yul\":10095:10117   */\n      swap1\n      pop\n        /* \"#utility.yul\":10126:10157   */\n      tag_372\n        /* \"#utility.yul\":10151:10156   */\n      dup2\n        /* \"#utility.yul\":10126:10157   */\n      tag_232\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":10024:10163   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10169:10516   */\n    tag_59:\n        /* \"#utility.yul\":10237:10243   */\n      0x00\n        /* \"#utility.yul\":10286:10288   */\n      0x20\n        /* \"#utility.yul\":10274:10283   */\n      dup3\n        /* \"#utility.yul\":10265:10272   */\n      dup5\n        /* \"#utility.yul\":10261:10284   */\n      sub\n        /* \"#utility.yul\":10257:10289   */\n      slt\n        /* \"#utility.yul\":10254:10373   */\n      iszero\n      tag_374\n      jumpi\n        /* \"#utility.yul\":10292:10371   */\n      tag_375\n      tag_197\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":10254:10373   */\n    tag_374:\n        /* \"#utility.yul\":10412:10413   */\n      0x00\n        /* \"#utility.yul\":10437:10499   */\n      tag_376\n        /* \"#utility.yul\":10491:10498   */\n      dup5\n        /* \"#utility.yul\":10482:10488   */\n      dup3\n        /* \"#utility.yul\":10471:10480   */\n      dup6\n        /* \"#utility.yul\":10467:10489   */\n      add\n        /* \"#utility.yul\":10437:10499   */\n      tag_233\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":10427:10499   */\n      swap2\n      pop\n        /* \"#utility.yul\":10383:10509   */\n      pop\n        /* \"#utility.yul\":10169:10516   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10522:10702   */\n    tag_234:\n        /* \"#utility.yul\":10570:10647   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10567:10568   */\n      0x00\n        /* \"#utility.yul\":10560:10648   */\n      mstore\n        /* \"#utility.yul\":10667:10671   */\n      0x11\n        /* \"#utility.yul\":10664:10665   */\n      0x04\n        /* \"#utility.yul\":10657:10672   */\n      mstore\n        /* \"#utility.yul\":10691:10695   */\n      0x24\n        /* \"#utility.yul\":10688:10689   */\n      0x00\n        /* \"#utility.yul\":10681:10696   */\n      revert\n        /* \"#utility.yul\":10708:10810   */\n    tag_235:\n        /* \"#utility.yul\":10750:10758   */\n      0x00\n        /* \"#utility.yul\":10797:10802   */\n      dup2\n        /* \"#utility.yul\":10794:10795   */\n      0x01\n        /* \"#utility.yul\":10790:10803   */\n      shr\n        /* \"#utility.yul\":10769:10803   */\n      swap1\n      pop\n        /* \"#utility.yul\":10708:10810   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10816:11664   */\n    tag_236:\n        /* \"#utility.yul\":10877:10882   */\n      0x00\n        /* \"#utility.yul\":10884:10888   */\n      dup1\n        /* \"#utility.yul\":10908:10914   */\n      dup3\n        /* \"#utility.yul\":10899:10914   */\n      swap2\n      pop\n        /* \"#utility.yul\":10932:10937   */\n      dup4\n        /* \"#utility.yul\":10923:10937   */\n      swap1\n      pop\n        /* \"#utility.yul\":10946:11658   */\n    tag_380:\n        /* \"#utility.yul\":10967:10968   */\n      0x01\n        /* \"#utility.yul\":10957:10965   */\n      dup6\n        /* \"#utility.yul\":10954:10969   */\n      gt\n        /* \"#utility.yul\":10946:11658   */\n      iszero\n      tag_382\n      jumpi\n        /* \"#utility.yul\":11062:11066   */\n      dup1\n        /* \"#utility.yul\":11057:11060   */\n      dup7\n        /* \"#utility.yul\":11053:11067   */\n      div\n        /* \"#utility.yul\":11047:11051   */\n      dup2\n        /* \"#utility.yul\":11044:11068   */\n      gt\n        /* \"#utility.yul\":11041:11091   */\n      iszero\n      tag_383\n      jumpi\n        /* \"#utility.yul\":11071:11089   */\n      tag_384\n      tag_234\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":11041:11091   */\n    tag_383:\n        /* \"#utility.yul\":11121:11122   */\n      0x01\n        /* \"#utility.yul\":11111:11119   */\n      dup6\n        /* \"#utility.yul\":11107:11123   */\n      and\n        /* \"#utility.yul\":11104:11555   */\n      iszero\n      tag_385\n      jumpi\n        /* \"#utility.yul\":11536:11540   */\n      dup1\n        /* \"#utility.yul\":11529:11534   */\n      dup3\n        /* \"#utility.yul\":11525:11541   */\n      mul\n        /* \"#utility.yul\":11516:11541   */\n      swap2\n      pop\n        /* \"#utility.yul\":11104:11555   */\n    tag_385:\n        /* \"#utility.yul\":11586:11590   */\n      dup1\n        /* \"#utility.yul\":11580:11584   */\n      dup2\n        /* \"#utility.yul\":11576:11591   */\n      mul\n        /* \"#utility.yul\":11568:11591   */\n      swap1\n      pop\n        /* \"#utility.yul\":11616:11648   */\n      tag_386\n        /* \"#utility.yul\":11639:11647   */\n      dup6\n        /* \"#utility.yul\":11616:11648   */\n      tag_235\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":11604:11648   */\n      swap5\n      pop\n        /* \"#utility.yul\":10946:11658   */\n      jump(tag_380)\n    tag_382:\n        /* \"#utility.yul\":10816:11664   */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11670:12743   */\n    tag_237:\n        /* \"#utility.yul\":11724:11729   */\n      0x00\n        /* \"#utility.yul\":11915:11923   */\n      dup3\n        /* \"#utility.yul\":11905:11945   */\n      tag_388\n      jumpi\n        /* \"#utility.yul\":11936:11937   */\n      0x01\n        /* \"#utility.yul\":11927:11937   */\n      swap1\n      pop\n        /* \"#utility.yul\":11938:11943   */\n      jump(tag_387)\n        /* \"#utility.yul\":11905:11945   */\n    tag_388:\n        /* \"#utility.yul\":11964:11968   */\n      dup2\n        /* \"#utility.yul\":11954:11990   */\n      tag_389\n      jumpi\n        /* \"#utility.yul\":11981:11982   */\n      0x00\n        /* \"#utility.yul\":11972:11982   */\n      swap1\n      pop\n        /* \"#utility.yul\":11983:11988   */\n      jump(tag_387)\n        /* \"#utility.yul\":11954:11990   */\n    tag_389:\n        /* \"#utility.yul\":12050:12054   */\n      dup2\n        /* \"#utility.yul\":12098:12099   */\n      0x01\n        /* \"#utility.yul\":12093:12120   */\n      dup2\n      eq\n      tag_391\n      jumpi\n        /* \"#utility.yul\":12134:12135   */\n      0x02\n        /* \"#utility.yul\":12129:12320   */\n      dup2\n      eq\n      tag_392\n      jumpi\n        /* \"#utility.yul\":12043:12320   */\n      jump(tag_390)\n        /* \"#utility.yul\":12093:12120   */\n    tag_391:\n        /* \"#utility.yul\":12111:12112   */\n      0x01\n        /* \"#utility.yul\":12102:12112   */\n      swap2\n      pop\n        /* \"#utility.yul\":12113:12118   */\n      pop\n      jump(tag_387)\n        /* \"#utility.yul\":12129:12320   */\n    tag_392:\n        /* \"#utility.yul\":12174:12177   */\n      0xff\n        /* \"#utility.yul\":12164:12172   */\n      dup5\n        /* \"#utility.yul\":12161:12178   */\n      gt\n        /* \"#utility.yul\":12158:12201   */\n      iszero\n      tag_393\n      jumpi\n        /* \"#utility.yul\":12181:12199   */\n      tag_394\n      tag_234\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":12158:12201   */\n    tag_393:\n        /* \"#utility.yul\":12230:12238   */\n      dup4\n        /* \"#utility.yul\":12227:12228   */\n      0x02\n        /* \"#utility.yul\":12223:12239   */\n      exp\n        /* \"#utility.yul\":12214:12239   */\n      swap2\n      pop\n        /* \"#utility.yul\":12265:12268   */\n      dup5\n        /* \"#utility.yul\":12258:12263   */\n      dup3\n        /* \"#utility.yul\":12255:12269   */\n      gt\n        /* \"#utility.yul\":12252:12292   */\n      iszero\n      tag_395\n      jumpi\n        /* \"#utility.yul\":12272:12290   */\n      tag_396\n      tag_234\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":12252:12292   */\n    tag_395:\n        /* \"#utility.yul\":12305:12310   */\n      pop\n      jump(tag_387)\n        /* \"#utility.yul\":12043:12320   */\n    tag_390:\n      pop\n        /* \"#utility.yul\":12429:12431   */\n      0x20\n        /* \"#utility.yul\":12419:12427   */\n      dup4\n        /* \"#utility.yul\":12416:12432   */\n      lt\n        /* \"#utility.yul\":12410:12413   */\n      0x0133\n        /* \"#utility.yul\":12404:12408   */\n      dup4\n        /* \"#utility.yul\":12401:12414   */\n      lt\n        /* \"#utility.yul\":12397:12433   */\n      and\n        /* \"#utility.yul\":12379:12381   */\n      0x4e\n        /* \"#utility.yul\":12369:12377   */\n      dup5\n        /* \"#utility.yul\":12366:12382   */\n      lt\n        /* \"#utility.yul\":12361:12363   */\n      0x0b\n        /* \"#utility.yul\":12355:12359   */\n      dup5\n        /* \"#utility.yul\":12352:12364   */\n      lt\n        /* \"#utility.yul\":12348:12383   */\n      and\n        /* \"#utility.yul\":12332:12443   */\n      or\n        /* \"#utility.yul\":12329:12575   */\n      iszero\n      tag_397\n      jumpi\n        /* \"#utility.yul\":12485:12493   */\n      dup3\n        /* \"#utility.yul\":12479:12483   */\n      dup3\n        /* \"#utility.yul\":12475:12494   */\n      exp\n        /* \"#utility.yul\":12466:12494   */\n      swap1\n      pop\n        /* \"#utility.yul\":12520:12523   */\n      dup4\n        /* \"#utility.yul\":12513:12518   */\n      dup2\n        /* \"#utility.yul\":12510:12524   */\n      gt\n        /* \"#utility.yul\":12507:12547   */\n      iszero\n      tag_398\n      jumpi\n        /* \"#utility.yul\":12527:12545   */\n      tag_399\n      tag_234\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":12507:12547   */\n    tag_398:\n        /* \"#utility.yul\":12560:12565   */\n      jump(tag_387)\n        /* \"#utility.yul\":12329:12575   */\n    tag_397:\n        /* \"#utility.yul\":12600:12642   */\n      tag_400\n        /* \"#utility.yul\":12638:12641   */\n      dup5\n        /* \"#utility.yul\":12628:12636   */\n      dup5\n        /* \"#utility.yul\":12622:12626   */\n      dup5\n        /* \"#utility.yul\":12619:12620   */\n      0x01\n        /* \"#utility.yul\":12600:12642   */\n      tag_236\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":12585:12642   */\n      swap3\n      pop\n      swap1\n      pop\n        /* \"#utility.yul\":12674:12678   */\n      dup2\n        /* \"#utility.yul\":12669:12672   */\n      dup5\n        /* \"#utility.yul\":12665:12679   */\n      div\n        /* \"#utility.yul\":12658:12663   */\n      dup2\n        /* \"#utility.yul\":12655:12680   */\n      gt\n        /* \"#utility.yul\":12652:12703   */\n      iszero\n      tag_401\n      jumpi\n        /* \"#utility.yul\":12683:12701   */\n      tag_402\n      tag_234\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":12652:12703   */\n    tag_401:\n        /* \"#utility.yul\":12732:12736   */\n      dup2\n        /* \"#utility.yul\":12725:12730   */\n      dup2\n        /* \"#utility.yul\":12721:12737   */\n      mul\n        /* \"#utility.yul\":12712:12737   */\n      swap1\n      pop\n        /* \"#utility.yul\":11670:12743   */\n    tag_387:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12749:13030   */\n    tag_61:\n        /* \"#utility.yul\":12807:12812   */\n      0x00\n        /* \"#utility.yul\":12831:12854   */\n      tag_404\n        /* \"#utility.yul\":12849:12853   */\n      dup3\n        /* \"#utility.yul\":12831:12854   */\n      tag_218\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":12823:12854   */\n      swap2\n      pop\n        /* \"#utility.yul\":12875:12900   */\n      tag_405\n        /* \"#utility.yul\":12891:12899   */\n      dup4\n        /* \"#utility.yul\":12875:12900   */\n      tag_231\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":12863:12900   */\n      swap3\n      pop\n        /* \"#utility.yul\":12919:13023   */\n      tag_406\n        /* \"#utility.yul\":12956:13022   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":12946:12954   */\n      dup5\n        /* \"#utility.yul\":12940:12944   */\n      dup5\n        /* \"#utility.yul\":12919:13023   */\n      tag_237\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":12910:13023   */\n      swap1\n      pop\n        /* \"#utility.yul\":12749:13030   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13036:13446   */\n    tag_65:\n        /* \"#utility.yul\":13076:13083   */\n      0x00\n        /* \"#utility.yul\":13099:13119   */\n      tag_408\n        /* \"#utility.yul\":13117:13118   */\n      dup3\n        /* \"#utility.yul\":13099:13119   */\n      tag_218\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":13094:13119   */\n      swap2\n      pop\n        /* \"#utility.yul\":13133:13153   */\n      tag_409\n        /* \"#utility.yul\":13151:13152   */\n      dup4\n        /* \"#utility.yul\":13133:13153   */\n      tag_218\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":13128:13153   */\n      swap3\n      pop\n        /* \"#utility.yul\":13188:13189   */\n      dup3\n        /* \"#utility.yul\":13185:13186   */\n      dup3\n        /* \"#utility.yul\":13181:13190   */\n      mul\n        /* \"#utility.yul\":13210:13240   */\n      tag_410\n        /* \"#utility.yul\":13228:13239   */\n      dup2\n        /* \"#utility.yul\":13210:13240   */\n      tag_218\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":13199:13240   */\n      swap2\n      pop\n        /* \"#utility.yul\":13389:13390   */\n      dup3\n        /* \"#utility.yul\":13380:13387   */\n      dup3\n        /* \"#utility.yul\":13376:13391   */\n      div\n        /* \"#utility.yul\":13373:13374   */\n      dup5\n        /* \"#utility.yul\":13370:13392   */\n      eq\n        /* \"#utility.yul\":13350:13351   */\n      dup4\n        /* \"#utility.yul\":13343:13352   */\n      iszero\n        /* \"#utility.yul\":13323:13406   */\n      or\n        /* \"#utility.yul\":13300:13439   */\n      tag_411\n      jumpi\n        /* \"#utility.yul\":13419:13437   */\n      tag_412\n      tag_234\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":13300:13439   */\n    tag_411:\n        /* \"#utility.yul\":13084:13446   */\n      pop\n        /* \"#utility.yul\":13036:13446   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13452:13658   */\n    tag_81:\n        /* \"#utility.yul\":13491:13495   */\n      0x00\n        /* \"#utility.yul\":13511:13530   */\n      tag_414\n        /* \"#utility.yul\":13528:13529   */\n      dup3\n        /* \"#utility.yul\":13511:13530   */\n      tag_206\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":13506:13530   */\n      swap2\n      pop\n        /* \"#utility.yul\":13544:13563   */\n      tag_415\n        /* \"#utility.yul\":13561:13562   */\n      dup4\n        /* \"#utility.yul\":13544:13563   */\n      tag_206\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":13539:13563   */\n      swap3\n      pop\n        /* \"#utility.yul\":13587:13588   */\n      dup3\n        /* \"#utility.yul\":13584:13585   */\n      dup3\n        /* \"#utility.yul\":13580:13589   */\n      sub\n        /* \"#utility.yul\":13572:13589   */\n      swap1\n      pop\n        /* \"#utility.yul\":13611:13627   */\n      0xffffffffffffff\n        /* \"#utility.yul\":13605:13609   */\n      dup2\n        /* \"#utility.yul\":13602:13628   */\n      gt\n        /* \"#utility.yul\":13599:13651   */\n      iszero\n      tag_416\n      jumpi\n        /* \"#utility.yul\":13631:13649   */\n      tag_417\n      tag_234\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":13599:13651   */\n    tag_416:\n        /* \"#utility.yul\":13452:13658   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13664:13782   */\n    tag_238:\n        /* \"#utility.yul\":13751:13775   */\n      tag_419\n        /* \"#utility.yul\":13769:13774   */\n      dup2\n        /* \"#utility.yul\":13751:13775   */\n      tag_218\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":13746:13749   */\n      dup3\n        /* \"#utility.yul\":13739:13776   */\n      mstore\n        /* \"#utility.yul\":13664:13782   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13788:14120   */\n    tag_86:\n        /* \"#utility.yul\":13909:13913   */\n      0x00\n        /* \"#utility.yul\":13947:13949   */\n      0x40\n        /* \"#utility.yul\":13936:13945   */\n      dup3\n        /* \"#utility.yul\":13932:13950   */\n      add\n        /* \"#utility.yul\":13924:13950   */\n      swap1\n      pop\n        /* \"#utility.yul\":13960:14031   */\n      tag_421\n        /* \"#utility.yul\":14028:14029   */\n      0x00\n        /* \"#utility.yul\":14017:14026   */\n      dup4\n        /* \"#utility.yul\":14013:14030   */\n      add\n        /* \"#utility.yul\":14004:14010   */\n      dup6\n        /* \"#utility.yul\":13960:14031   */\n      tag_209\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":14041:14113   */\n      tag_422\n        /* \"#utility.yul\":14109:14111   */\n      0x20\n        /* \"#utility.yul\":14098:14107   */\n      dup4\n        /* \"#utility.yul\":14094:14112   */\n      add\n        /* \"#utility.yul\":14085:14091   */\n      dup5\n        /* \"#utility.yul\":14041:14113   */\n      tag_238\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":13788:14120   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14126:14216   */\n    tag_239:\n        /* \"#utility.yul\":14160:14167   */\n      0x00\n        /* \"#utility.yul\":14203:14208   */\n      dup2\n        /* \"#utility.yul\":14196:14209   */\n      iszero\n        /* \"#utility.yul\":14189:14210   */\n      iszero\n        /* \"#utility.yul\":14178:14210   */\n      swap1\n      pop\n        /* \"#utility.yul\":14126:14216   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14222:14338   */\n    tag_240:\n        /* \"#utility.yul\":14292:14313   */\n      tag_425\n        /* \"#utility.yul\":14307:14312   */\n      dup2\n        /* \"#utility.yul\":14292:14313   */\n      tag_239\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":14285:14290   */\n      dup2\n        /* \"#utility.yul\":14282:14314   */\n      eq\n        /* \"#utility.yul\":14272:14332   */\n      tag_426\n      jumpi\n        /* \"#utility.yul\":14328:14329   */\n      0x00\n        /* \"#utility.yul\":14325:14326   */\n      dup1\n        /* \"#utility.yul\":14318:14330   */\n      revert\n        /* \"#utility.yul\":14272:14332   */\n    tag_426:\n        /* \"#utility.yul\":14222:14338   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14344:14481   */\n    tag_241:\n        /* \"#utility.yul\":14398:14403   */\n      0x00\n        /* \"#utility.yul\":14429:14435   */\n      dup2\n        /* \"#utility.yul\":14423:14436   */\n      mload\n        /* \"#utility.yul\":14414:14436   */\n      swap1\n      pop\n        /* \"#utility.yul\":14445:14475   */\n      tag_428\n        /* \"#utility.yul\":14469:14474   */\n      dup2\n        /* \"#utility.yul\":14445:14475   */\n      tag_240\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":14344:14481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14487:14832   */\n    tag_90:\n        /* \"#utility.yul\":14554:14560   */\n      0x00\n        /* \"#utility.yul\":14603:14605   */\n      0x20\n        /* \"#utility.yul\":14591:14600   */\n      dup3\n        /* \"#utility.yul\":14582:14589   */\n      dup5\n        /* \"#utility.yul\":14578:14601   */\n      sub\n        /* \"#utility.yul\":14574:14606   */\n      slt\n        /* \"#utility.yul\":14571:14690   */\n      iszero\n      tag_430\n      jumpi\n        /* \"#utility.yul\":14609:14688   */\n      tag_431\n      tag_197\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":14571:14690   */\n    tag_430:\n        /* \"#utility.yul\":14729:14730   */\n      0x00\n        /* \"#utility.yul\":14754:14815   */\n      tag_432\n        /* \"#utility.yul\":14807:14814   */\n      dup5\n        /* \"#utility.yul\":14798:14804   */\n      dup3\n        /* \"#utility.yul\":14787:14796   */\n      dup6\n        /* \"#utility.yul\":14783:14805   */\n      add\n        /* \"#utility.yul\":14754:14815   */\n      tag_241\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":14744:14815   */\n      swap2\n      pop\n        /* \"#utility.yul\":14700:14825   */\n      pop\n        /* \"#utility.yul\":14487:14832   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14838:14923   */\n    tag_242:\n        /* \"#utility.yul\":14883:14890   */\n      0x00\n        /* \"#utility.yul\":14912:14917   */\n      dup2\n        /* \"#utility.yul\":14901:14917   */\n      swap1\n      pop\n        /* \"#utility.yul\":14838:14923   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14929:15018   */\n    tag_243:\n        /* \"#utility.yul\":14965:14972   */\n      0x00\n        /* \"#utility.yul\":15005:15011   */\n      0xffff\n        /* \"#utility.yul\":14998:15003   */\n      dup3\n        /* \"#utility.yul\":14994:15012   */\n      and\n        /* \"#utility.yul\":14983:15012   */\n      swap1\n      pop\n        /* \"#utility.yul\":14929:15018   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15024:15084   */\n    tag_244:\n        /* \"#utility.yul\":15052:15055   */\n      0x00\n        /* \"#utility.yul\":15073:15078   */\n      dup2\n        /* \"#utility.yul\":15066:15078   */\n      swap1\n      pop\n        /* \"#utility.yul\":15024:15084   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15090:15246   */\n    tag_245:\n        /* \"#utility.yul\":15147:15156   */\n      0x00\n        /* \"#utility.yul\":15180:15240   */\n      tag_437\n        /* \"#utility.yul\":15197:15239   */\n      tag_438\n        /* \"#utility.yul\":15206:15238   */\n      tag_439\n        /* \"#utility.yul\":15232:15237   */\n      dup5\n        /* \"#utility.yul\":15206:15238   */\n      tag_242\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":15197:15239   */\n      tag_244\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":15180:15240   */\n      tag_243\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":15167:15240   */\n      swap1\n      pop\n        /* \"#utility.yul\":15090:15246   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15252:15397   */\n    tag_246:\n        /* \"#utility.yul\":15346:15390   */\n      tag_441\n        /* \"#utility.yul\":15384:15389   */\n      dup2\n        /* \"#utility.yul\":15346:15390   */\n      tag_245\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":15341:15344   */\n      dup3\n        /* \"#utility.yul\":15334:15391   */\n      mstore\n        /* \"#utility.yul\":15252:15397   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15403:15970   */\n    tag_92:\n        /* \"#utility.yul\":15587:15591   */\n      0x00\n        /* \"#utility.yul\":15625:15628   */\n      0x80\n        /* \"#utility.yul\":15614:15623   */\n      dup3\n        /* \"#utility.yul\":15610:15629   */\n      add\n        /* \"#utility.yul\":15602:15629   */\n      swap1\n      pop\n        /* \"#utility.yul\":15639:15710   */\n      tag_443\n        /* \"#utility.yul\":15707:15708   */\n      0x00\n        /* \"#utility.yul\":15696:15705   */\n      dup4\n        /* \"#utility.yul\":15692:15709   */\n      add\n        /* \"#utility.yul\":15683:15689   */\n      dup8\n        /* \"#utility.yul\":15639:15710   */\n      tag_209\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":15720:15792   */\n      tag_444\n        /* \"#utility.yul\":15788:15790   */\n      0x20\n        /* \"#utility.yul\":15777:15786   */\n      dup4\n        /* \"#utility.yul\":15773:15791   */\n      add\n        /* \"#utility.yul\":15764:15770   */\n      dup7\n        /* \"#utility.yul\":15720:15792   */\n      tag_238\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":15802:15874   */\n      tag_445\n        /* \"#utility.yul\":15870:15872   */\n      0x40\n        /* \"#utility.yul\":15859:15868   */\n      dup4\n        /* \"#utility.yul\":15855:15873   */\n      add\n        /* \"#utility.yul\":15846:15852   */\n      dup6\n        /* \"#utility.yul\":15802:15874   */\n      tag_209\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":15884:15963   */\n      tag_446\n        /* \"#utility.yul\":15959:15961   */\n      0x60\n        /* \"#utility.yul\":15948:15957   */\n      dup4\n        /* \"#utility.yul\":15944:15962   */\n      add\n        /* \"#utility.yul\":15935:15941   */\n      dup5\n        /* \"#utility.yul\":15884:15963   */\n      tag_246\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":15403:15970   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15976:16167   */\n    tag_99:\n        /* \"#utility.yul\":16016:16019   */\n      0x00\n        /* \"#utility.yul\":16035:16055   */\n      tag_448\n        /* \"#utility.yul\":16053:16054   */\n      dup3\n        /* \"#utility.yul\":16035:16055   */\n      tag_218\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":16030:16055   */\n      swap2\n      pop\n        /* \"#utility.yul\":16069:16089   */\n      tag_449\n        /* \"#utility.yul\":16087:16088   */\n      dup4\n        /* \"#utility.yul\":16069:16089   */\n      tag_218\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":16064:16089   */\n      swap3\n      pop\n        /* \"#utility.yul\":16112:16113   */\n      dup3\n        /* \"#utility.yul\":16109:16110   */\n      dup3\n        /* \"#utility.yul\":16105:16114   */\n      add\n        /* \"#utility.yul\":16098:16114   */\n      swap1\n      pop\n        /* \"#utility.yul\":16133:16136   */\n      dup1\n        /* \"#utility.yul\":16130:16131   */\n      dup3\n        /* \"#utility.yul\":16127:16137   */\n      gt\n        /* \"#utility.yul\":16124:16160   */\n      iszero\n      tag_450\n      jumpi\n        /* \"#utility.yul\":16140:16158   */\n      tag_451\n      tag_234\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":16124:16160   */\n    tag_450:\n        /* \"#utility.yul\":15976:16167   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16173:16348   */\n    tag_101:\n        /* \"#utility.yul\":16211:16214   */\n      0x00\n        /* \"#utility.yul\":16234:16257   */\n      tag_453\n        /* \"#utility.yul\":16251:16256   */\n      dup3\n        /* \"#utility.yul\":16234:16257   */\n      tag_199\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":16225:16257   */\n      swap2\n      pop\n        /* \"#utility.yul\":16279:16289   */\n      0xffffffff\n        /* \"#utility.yul\":16272:16277   */\n      dup3\n        /* \"#utility.yul\":16269:16290   */\n      sub\n        /* \"#utility.yul\":16266:16313   */\n      tag_454\n      jumpi\n        /* \"#utility.yul\":16293:16311   */\n      tag_455\n      tag_234\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":16266:16313   */\n    tag_454:\n        /* \"#utility.yul\":16340:16341   */\n      0x01\n        /* \"#utility.yul\":16333:16338   */\n      dup3\n        /* \"#utility.yul\":16329:16342   */\n      add\n        /* \"#utility.yul\":16322:16342   */\n      swap1\n      pop\n        /* \"#utility.yul\":16173:16348   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16354:16515   */\n    tag_247:\n        /* \"#utility.yul\":16494:16507   */\n      0x5472616465206572726f72000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16490:16491   */\n      0x00\n        /* \"#utility.yul\":16482:16488   */\n      dup3\n        /* \"#utility.yul\":16478:16492   */\n      add\n        /* \"#utility.yul\":16471:16508   */\n      mstore\n        /* \"#utility.yul\":16354:16515   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16521:16887   */\n    tag_248:\n        /* \"#utility.yul\":16663:16666   */\n      0x00\n        /* \"#utility.yul\":16684:16751   */\n      tag_458\n        /* \"#utility.yul\":16748:16750   */\n      0x0b\n        /* \"#utility.yul\":16743:16746   */\n      dup4\n        /* \"#utility.yul\":16684:16751   */\n      tag_228\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":16677:16751   */\n      swap2\n      pop\n        /* \"#utility.yul\":16760:16853   */\n      tag_459\n        /* \"#utility.yul\":16849:16852   */\n      dup3\n        /* \"#utility.yul\":16760:16853   */\n      tag_247\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":16878:16880   */\n      0x20\n        /* \"#utility.yul\":16873:16876   */\n      dup3\n        /* \"#utility.yul\":16869:16881   */\n      add\n        /* \"#utility.yul\":16862:16881   */\n      swap1\n      pop\n        /* \"#utility.yul\":16521:16887   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16893:17312   */\n    tag_132:\n        /* \"#utility.yul\":17059:17063   */\n      0x00\n        /* \"#utility.yul\":17097:17099   */\n      0x20\n        /* \"#utility.yul\":17086:17095   */\n      dup3\n        /* \"#utility.yul\":17082:17100   */\n      add\n        /* \"#utility.yul\":17074:17100   */\n      swap1\n      pop\n        /* \"#utility.yul\":17146:17155   */\n      dup2\n        /* \"#utility.yul\":17140:17144   */\n      dup2\n        /* \"#utility.yul\":17136:17156   */\n      sub\n        /* \"#utility.yul\":17132:17133   */\n      0x00\n        /* \"#utility.yul\":17121:17130   */\n      dup4\n        /* \"#utility.yul\":17117:17134   */\n      add\n        /* \"#utility.yul\":17110:17157   */\n      mstore\n        /* \"#utility.yul\":17174:17305   */\n      tag_461\n        /* \"#utility.yul\":17300:17304   */\n      dup2\n        /* \"#utility.yul\":17174:17305   */\n      tag_248\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":17166:17305   */\n      swap1\n      pop\n        /* \"#utility.yul\":16893:17312   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17318:17597   */\n    tag_146:\n        /* \"#utility.yul\":17358:17365   */\n      0x00\n        /* \"#utility.yul\":17381:17401   */\n      tag_463\n        /* \"#utility.yul\":17399:17400   */\n      dup3\n        /* \"#utility.yul\":17381:17401   */\n      tag_210\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":17376:17401   */\n      swap2\n      pop\n        /* \"#utility.yul\":17415:17435   */\n      tag_464\n        /* \"#utility.yul\":17433:17434   */\n      dup4\n        /* \"#utility.yul\":17415:17435   */\n      tag_210\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":17410:17435   */\n      swap3\n      pop\n        /* \"#utility.yul\":17470:17471   */\n      dup3\n        /* \"#utility.yul\":17467:17468   */\n      dup3\n        /* \"#utility.yul\":17463:17472   */\n      mul\n        /* \"#utility.yul\":17492:17522   */\n      tag_465\n        /* \"#utility.yul\":17510:17521   */\n      dup2\n        /* \"#utility.yul\":17492:17522   */\n      tag_210\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":17481:17522   */\n      swap2\n      pop\n        /* \"#utility.yul\":17554:17565   */\n      dup1\n        /* \"#utility.yul\":17545:17552   */\n      dup3\n        /* \"#utility.yul\":17542:17566   */\n      eq\n        /* \"#utility.yul\":17532:17590   */\n      tag_466\n      jumpi\n        /* \"#utility.yul\":17570:17588   */\n      tag_467\n      tag_234\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":17532:17590   */\n    tag_466:\n        /* \"#utility.yul\":17366:17597   */\n      pop\n        /* \"#utility.yul\":17318:17597   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17603:17783   */\n    tag_249:\n        /* \"#utility.yul\":17651:17728   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17648:17649   */\n      0x00\n        /* \"#utility.yul\":17641:17729   */\n      mstore\n        /* \"#utility.yul\":17748:17752   */\n      0x12\n        /* \"#utility.yul\":17745:17746   */\n      0x04\n        /* \"#utility.yul\":17738:17753   */\n      mstore\n        /* \"#utility.yul\":17772:17776   */\n      0x24\n        /* \"#utility.yul\":17769:17770   */\n      0x00\n        /* \"#utility.yul\":17762:17777   */\n      revert\n        /* \"#utility.yul\":17789:17974   */\n    tag_148:\n        /* \"#utility.yul\":17829:17830   */\n      0x00\n        /* \"#utility.yul\":17846:17866   */\n      tag_470\n        /* \"#utility.yul\":17864:17865   */\n      dup3\n        /* \"#utility.yul\":17846:17866   */\n      tag_210\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":17841:17866   */\n      swap2\n      pop\n        /* \"#utility.yul\":17880:17900   */\n      tag_471\n        /* \"#utility.yul\":17898:17899   */\n      dup4\n        /* \"#utility.yul\":17880:17900   */\n      tag_210\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":17875:17900   */\n      swap3\n      pop\n        /* \"#utility.yul\":17919:17920   */\n      dup3\n        /* \"#utility.yul\":17909:17944   */\n      tag_472\n      jumpi\n        /* \"#utility.yul\":17924:17942   */\n      tag_473\n      tag_249\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":17909:17944   */\n    tag_472:\n        /* \"#utility.yul\":17966:17967   */\n      dup3\n        /* \"#utility.yul\":17963:17964   */\n      dup3\n        /* \"#utility.yul\":17959:17968   */\n      div\n        /* \"#utility.yul\":17954:17968   */\n      swap1\n      pop\n        /* \"#utility.yul\":17789:17974   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17980:18422   */\n    tag_153:\n        /* \"#utility.yul\":18129:18133   */\n      0x00\n        /* \"#utility.yul\":18167:18169   */\n      0x60\n        /* \"#utility.yul\":18156:18165   */\n      dup3\n        /* \"#utility.yul\":18152:18170   */\n      add\n        /* \"#utility.yul\":18144:18170   */\n      swap1\n      pop\n        /* \"#utility.yul\":18180:18251   */\n      tag_475\n        /* \"#utility.yul\":18248:18249   */\n      0x00\n        /* \"#utility.yul\":18237:18246   */\n      dup4\n        /* \"#utility.yul\":18233:18250   */\n      add\n        /* \"#utility.yul\":18224:18230   */\n      dup7\n        /* \"#utility.yul\":18180:18251   */\n      tag_209\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":18261:18333   */\n      tag_476\n        /* \"#utility.yul\":18329:18331   */\n      0x20\n        /* \"#utility.yul\":18318:18327   */\n      dup4\n        /* \"#utility.yul\":18314:18332   */\n      add\n        /* \"#utility.yul\":18305:18311   */\n      dup6\n        /* \"#utility.yul\":18261:18333   */\n      tag_209\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":18343:18415   */\n      tag_477\n        /* \"#utility.yul\":18411:18413   */\n      0x40\n        /* \"#utility.yul\":18400:18409   */\n      dup4\n        /* \"#utility.yul\":18396:18414   */\n      add\n        /* \"#utility.yul\":18387:18393   */\n      dup5\n        /* \"#utility.yul\":18343:18415   */\n      tag_238\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":17980:18422   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18428:18657   */\n    tag_250:\n        /* \"#utility.yul\":18568:18602   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":18564:18565   */\n      0x00\n        /* \"#utility.yul\":18556:18562   */\n      dup3\n        /* \"#utility.yul\":18552:18566   */\n      add\n        /* \"#utility.yul\":18545:18603   */\n      mstore\n        /* \"#utility.yul\":18637:18649   */\n      0x6f74207375636365656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18632:18634   */\n      0x20\n        /* \"#utility.yul\":18624:18630   */\n      dup3\n        /* \"#utility.yul\":18620:18635   */\n      add\n        /* \"#utility.yul\":18613:18650   */\n      mstore\n        /* \"#utility.yul\":18428:18657   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18663:19029   */\n    tag_251:\n        /* \"#utility.yul\":18805:18808   */\n      0x00\n        /* \"#utility.yul\":18826:18893   */\n      tag_480\n        /* \"#utility.yul\":18890:18892   */\n      0x2a\n        /* \"#utility.yul\":18885:18888   */\n      dup4\n        /* \"#utility.yul\":18826:18893   */\n      tag_228\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":18819:18893   */\n      swap2\n      pop\n        /* \"#utility.yul\":18902:18995   */\n      tag_481\n        /* \"#utility.yul\":18991:18994   */\n      dup3\n        /* \"#utility.yul\":18902:18995   */\n      tag_250\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":19020:19022   */\n      0x40\n        /* \"#utility.yul\":19015:19018   */\n      dup3\n        /* \"#utility.yul\":19011:19023   */\n      add\n        /* \"#utility.yul\":19004:19023   */\n      swap1\n      pop\n        /* \"#utility.yul\":18663:19029   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19035:19454   */\n    tag_162:\n        /* \"#utility.yul\":19201:19205   */\n      0x00\n        /* \"#utility.yul\":19239:19241   */\n      0x20\n        /* \"#utility.yul\":19228:19237   */\n      dup3\n        /* \"#utility.yul\":19224:19242   */\n      add\n        /* \"#utility.yul\":19216:19242   */\n      swap1\n      pop\n        /* \"#utility.yul\":19288:19297   */\n      dup2\n        /* \"#utility.yul\":19282:19286   */\n      dup2\n        /* \"#utility.yul\":19278:19298   */\n      sub\n        /* \"#utility.yul\":19274:19275   */\n      0x00\n        /* \"#utility.yul\":19263:19272   */\n      dup4\n        /* \"#utility.yul\":19259:19276   */\n      add\n        /* \"#utility.yul\":19252:19299   */\n      mstore\n        /* \"#utility.yul\":19316:19447   */\n      tag_483\n        /* \"#utility.yul\":19442:19446   */\n      dup2\n        /* \"#utility.yul\":19316:19447   */\n      tag_251\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":19308:19447   */\n      swap1\n      pop\n        /* \"#utility.yul\":19035:19454   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19460:19685   */\n    tag_252:\n        /* \"#utility.yul\":19600:19634   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":19596:19597   */\n      0x00\n        /* \"#utility.yul\":19588:19594   */\n      dup3\n        /* \"#utility.yul\":19584:19598   */\n      add\n        /* \"#utility.yul\":19577:19635   */\n      mstore\n        /* \"#utility.yul\":19669:19677   */\n      0x722063616c6c0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19664:19666   */\n      0x20\n        /* \"#utility.yul\":19656:19662   */\n      dup3\n        /* \"#utility.yul\":19652:19667   */\n      add\n        /* \"#utility.yul\":19645:19678   */\n      mstore\n        /* \"#utility.yul\":19460:19685   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19691:20057   */\n    tag_253:\n        /* \"#utility.yul\":19833:19836   */\n      0x00\n        /* \"#utility.yul\":19854:19921   */\n      tag_486\n        /* \"#utility.yul\":19918:19920   */\n      0x26\n        /* \"#utility.yul\":19913:19916   */\n      dup4\n        /* \"#utility.yul\":19854:19921   */\n      tag_228\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":19847:19921   */\n      swap2\n      pop\n        /* \"#utility.yul\":19930:20023   */\n      tag_487\n        /* \"#utility.yul\":20019:20022   */\n      dup3\n        /* \"#utility.yul\":19930:20023   */\n      tag_252\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":20048:20050   */\n      0x40\n        /* \"#utility.yul\":20043:20046   */\n      dup3\n        /* \"#utility.yul\":20039:20051   */\n      add\n        /* \"#utility.yul\":20032:20051   */\n      swap1\n      pop\n        /* \"#utility.yul\":19691:20057   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20063:20482   */\n    tag_169:\n        /* \"#utility.yul\":20229:20233   */\n      0x00\n        /* \"#utility.yul\":20267:20269   */\n      0x20\n        /* \"#utility.yul\":20256:20265   */\n      dup3\n        /* \"#utility.yul\":20252:20270   */\n      add\n        /* \"#utility.yul\":20244:20270   */\n      swap1\n      pop\n        /* \"#utility.yul\":20316:20325   */\n      dup2\n        /* \"#utility.yul\":20310:20314   */\n      dup2\n        /* \"#utility.yul\":20306:20326   */\n      sub\n        /* \"#utility.yul\":20302:20303   */\n      0x00\n        /* \"#utility.yul\":20291:20300   */\n      dup4\n        /* \"#utility.yul\":20287:20304   */\n      add\n        /* \"#utility.yul\":20280:20327   */\n      mstore\n        /* \"#utility.yul\":20344:20475   */\n      tag_489\n        /* \"#utility.yul\":20470:20474   */\n      dup2\n        /* \"#utility.yul\":20344:20475   */\n      tag_253\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":20336:20475   */\n      swap1\n      pop\n        /* \"#utility.yul\":20063:20482   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20488:20586   */\n    tag_254:\n        /* \"#utility.yul\":20539:20545   */\n      0x00\n        /* \"#utility.yul\":20573:20578   */\n      dup2\n        /* \"#utility.yul\":20567:20579   */\n      mload\n        /* \"#utility.yul\":20557:20579   */\n      swap1\n      pop\n        /* \"#utility.yul\":20488:20586   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20592:20739   */\n    tag_255:\n        /* \"#utility.yul\":20693:20704   */\n      0x00\n        /* \"#utility.yul\":20730:20733   */\n      dup2\n        /* \"#utility.yul\":20715:20733   */\n      swap1\n      pop\n        /* \"#utility.yul\":20592:20739   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20745:20991   */\n    tag_256:\n        /* \"#utility.yul\":20826:20827   */\n      0x00\n        /* \"#utility.yul\":20836:20949   */\n    tag_493:\n        /* \"#utility.yul\":20850:20856   */\n      dup4\n        /* \"#utility.yul\":20847:20848   */\n      dup2\n        /* \"#utility.yul\":20844:20857   */\n      lt\n        /* \"#utility.yul\":20836:20949   */\n      iszero\n      tag_495\n      jumpi\n        /* \"#utility.yul\":20935:20936   */\n      dup1\n        /* \"#utility.yul\":20930:20933   */\n      dup3\n        /* \"#utility.yul\":20926:20937   */\n      add\n        /* \"#utility.yul\":20920:20938   */\n      mload\n        /* \"#utility.yul\":20916:20917   */\n      dup2\n        /* \"#utility.yul\":20911:20914   */\n      dup5\n        /* \"#utility.yul\":20907:20918   */\n      add\n        /* \"#utility.yul\":20900:20939   */\n      mstore\n        /* \"#utility.yul\":20872:20874   */\n      0x20\n        /* \"#utility.yul\":20869:20870   */\n      dup2\n        /* \"#utility.yul\":20865:20875   */\n      add\n        /* \"#utility.yul\":20860:20875   */\n      swap1\n      pop\n        /* \"#utility.yul\":20836:20949   */\n      jump(tag_493)\n    tag_495:\n        /* \"#utility.yul\":20983:20984   */\n      0x00\n        /* \"#utility.yul\":20974:20980   */\n      dup5\n        /* \"#utility.yul\":20969:20972   */\n      dup5\n        /* \"#utility.yul\":20965:20981   */\n      add\n        /* \"#utility.yul\":20958:20985   */\n      mstore\n        /* \"#utility.yul\":20807:20991   */\n      pop\n        /* \"#utility.yul\":20745:20991   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20997:21383   */\n    tag_257:\n        /* \"#utility.yul\":21101:21104   */\n      0x00\n        /* \"#utility.yul\":21129:21167   */\n      tag_497\n        /* \"#utility.yul\":21161:21166   */\n      dup3\n        /* \"#utility.yul\":21129:21167   */\n      tag_254\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":21183:21271   */\n      tag_498\n        /* \"#utility.yul\":21264:21270   */\n      dup2\n        /* \"#utility.yul\":21259:21262   */\n      dup6\n        /* \"#utility.yul\":21183:21271   */\n      tag_255\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":21176:21271   */\n      swap4\n      pop\n        /* \"#utility.yul\":21280:21345   */\n      tag_499\n        /* \"#utility.yul\":21338:21344   */\n      dup2\n        /* \"#utility.yul\":21333:21336   */\n      dup6\n        /* \"#utility.yul\":21326:21330   */\n      0x20\n        /* \"#utility.yul\":21319:21324   */\n      dup7\n        /* \"#utility.yul\":21315:21331   */\n      add\n        /* \"#utility.yul\":21280:21345   */\n      tag_256\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":21370:21376   */\n      dup1\n        /* \"#utility.yul\":21365:21368   */\n      dup5\n        /* \"#utility.yul\":21361:21377   */\n      add\n        /* \"#utility.yul\":21354:21377   */\n      swap2\n      pop\n        /* \"#utility.yul\":21105:21383   */\n      pop\n        /* \"#utility.yul\":20997:21383   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21389:21660   */\n    tag_171:\n        /* \"#utility.yul\":21519:21522   */\n      0x00\n        /* \"#utility.yul\":21541:21634   */\n      tag_501\n        /* \"#utility.yul\":21630:21633   */\n      dup3\n        /* \"#utility.yul\":21621:21627   */\n      dup5\n        /* \"#utility.yul\":21541:21634   */\n      tag_257\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":21534:21634   */\n      swap2\n      pop\n        /* \"#utility.yul\":21651:21654   */\n      dup2\n        /* \"#utility.yul\":21644:21654   */\n      swap1\n      pop\n        /* \"#utility.yul\":21389:21660   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21666:21845   */\n    tag_258:\n        /* \"#utility.yul\":21806:21837   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":21802:21803   */\n      0x00\n        /* \"#utility.yul\":21794:21800   */\n      dup3\n        /* \"#utility.yul\":21790:21804   */\n      add\n        /* \"#utility.yul\":21783:21838   */\n      mstore\n        /* \"#utility.yul\":21666:21845   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21851:22217   */\n    tag_259:\n        /* \"#utility.yul\":21993:21996   */\n      0x00\n        /* \"#utility.yul\":22014:22081   */\n      tag_504\n        /* \"#utility.yul\":22078:22080   */\n      0x1d\n        /* \"#utility.yul\":22073:22076   */\n      dup4\n        /* \"#utility.yul\":22014:22081   */\n      tag_228\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":22007:22081   */\n      swap2\n      pop\n        /* \"#utility.yul\":22090:22183   */\n      tag_505\n        /* \"#utility.yul\":22179:22182   */\n      dup3\n        /* \"#utility.yul\":22090:22183   */\n      tag_258\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":22208:22210   */\n      0x20\n        /* \"#utility.yul\":22203:22206   */\n      dup3\n        /* \"#utility.yul\":22199:22211   */\n      add\n        /* \"#utility.yul\":22192:22211   */\n      swap1\n      pop\n        /* \"#utility.yul\":21851:22217   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22223:22642   */\n    tag_184:\n        /* \"#utility.yul\":22389:22393   */\n      0x00\n        /* \"#utility.yul\":22427:22429   */\n      0x20\n        /* \"#utility.yul\":22416:22425   */\n      dup3\n        /* \"#utility.yul\":22412:22430   */\n      add\n        /* \"#utility.yul\":22404:22430   */\n      swap1\n      pop\n        /* \"#utility.yul\":22476:22485   */\n      dup2\n        /* \"#utility.yul\":22470:22474   */\n      dup2\n        /* \"#utility.yul\":22466:22486   */\n      sub\n        /* \"#utility.yul\":22462:22463   */\n      0x00\n        /* \"#utility.yul\":22451:22460   */\n      dup4\n        /* \"#utility.yul\":22447:22464   */\n      add\n        /* \"#utility.yul\":22440:22487   */\n      mstore\n        /* \"#utility.yul\":22504:22635   */\n      tag_507\n        /* \"#utility.yul\":22630:22634   */\n      dup2\n        /* \"#utility.yul\":22504:22635   */\n      tag_259\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":22496:22635   */\n      swap1\n      pop\n        /* \"#utility.yul\":22223:22642   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22648:22747   */\n    tag_260:\n        /* \"#utility.yul\":22700:22706   */\n      0x00\n        /* \"#utility.yul\":22734:22739   */\n      dup2\n        /* \"#utility.yul\":22728:22740   */\n      mload\n        /* \"#utility.yul\":22718:22740   */\n      swap1\n      pop\n        /* \"#utility.yul\":22648:22747   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22753:22855   */\n    tag_261:\n        /* \"#utility.yul\":22794:22800   */\n      0x00\n        /* \"#utility.yul\":22845:22847   */\n      0x1f\n        /* \"#utility.yul\":22841:22848   */\n      not\n        /* \"#utility.yul\":22836:22838   */\n      0x1f\n        /* \"#utility.yul\":22829:22834   */\n      dup4\n        /* \"#utility.yul\":22825:22839   */\n      add\n        /* \"#utility.yul\":22821:22849   */\n      and\n        /* \"#utility.yul\":22811:22849   */\n      swap1\n      pop\n        /* \"#utility.yul\":22753:22855   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22861:23238   */\n    tag_262:\n        /* \"#utility.yul\":22949:22952   */\n      0x00\n        /* \"#utility.yul\":22977:23016   */\n      tag_511\n        /* \"#utility.yul\":23010:23015   */\n      dup3\n        /* \"#utility.yul\":22977:23016   */\n      tag_260\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":23032:23103   */\n      tag_512\n        /* \"#utility.yul\":23096:23102   */\n      dup2\n        /* \"#utility.yul\":23091:23094   */\n      dup6\n        /* \"#utility.yul\":23032:23103   */\n      tag_228\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":23025:23103   */\n      swap4\n      pop\n        /* \"#utility.yul\":23112:23177   */\n      tag_513\n        /* \"#utility.yul\":23170:23176   */\n      dup2\n        /* \"#utility.yul\":23165:23168   */\n      dup6\n        /* \"#utility.yul\":23158:23162   */\n      0x20\n        /* \"#utility.yul\":23151:23156   */\n      dup7\n        /* \"#utility.yul\":23147:23163   */\n      add\n        /* \"#utility.yul\":23112:23177   */\n      tag_256\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":23202:23231   */\n      tag_514\n        /* \"#utility.yul\":23224:23230   */\n      dup2\n        /* \"#utility.yul\":23202:23231   */\n      tag_261\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":23197:23200   */\n      dup5\n        /* \"#utility.yul\":23193:23232   */\n      add\n        /* \"#utility.yul\":23186:23232   */\n      swap2\n      pop\n        /* \"#utility.yul\":22953:23238   */\n      pop\n        /* \"#utility.yul\":22861:23238   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23244:23557   */\n    tag_193:\n        /* \"#utility.yul\":23357:23361   */\n      0x00\n        /* \"#utility.yul\":23395:23397   */\n      0x20\n        /* \"#utility.yul\":23384:23393   */\n      dup3\n        /* \"#utility.yul\":23380:23398   */\n      add\n        /* \"#utility.yul\":23372:23398   */\n      swap1\n      pop\n        /* \"#utility.yul\":23444:23453   */\n      dup2\n        /* \"#utility.yul\":23438:23442   */\n      dup2\n        /* \"#utility.yul\":23434:23454   */\n      sub\n        /* \"#utility.yul\":23430:23431   */\n      0x00\n        /* \"#utility.yul\":23419:23428   */\n      dup4\n        /* \"#utility.yul\":23415:23432   */\n      add\n        /* \"#utility.yul\":23408:23455   */\n      mstore\n        /* \"#utility.yul\":23472:23550   */\n      tag_516\n        /* \"#utility.yul\":23545:23549   */\n      dup2\n        /* \"#utility.yul\":23536:23542   */\n      dup5\n        /* \"#utility.yul\":23472:23550   */\n      tag_262\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":23464:23550   */\n      swap1\n      pop\n        /* \"#utility.yul\":23244:23557   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212201a4abd5f4564cf4c6f2778b331a087bf5e7322c6237a6f33f16117af6c6b74d164736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_53": {
									"entryPoint": null,
									"id": 53,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 530,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 553,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 484,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 452,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 447,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 504,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:12",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:12",
														"type": ""
													}
												],
												"src": "334:126:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:12",
														"type": ""
													}
												],
												"src": "466:96:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:12"
															},
															"nodeType": "YulIf",
															"src": "621:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:12",
														"type": ""
													}
												],
												"src": "568:122:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:12"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:12",
														"type": ""
													}
												],
												"src": "696:143:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:12"
															},
															"nodeType": "YulIf",
															"src": "932:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:12",
														"type": ""
													}
												],
												"src": "845:351:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405273aa8e23fb1079ea71e0a56f48a2aa51851d8433d0600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073af0f6e8b0dc5c913bbf4d14c22b4e78dd14310b6600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550736ae43d3271ff6888e7fc43fd7321a503ff738951600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503480156200011057600080fd5b5060405162002c6338038062002c63833981810160405281019062000136919062000229565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550336000600b6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200025b565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001f182620001c4565b9050919050565b6200020381620001e4565b81146200020f57600080fd5b50565b6000815190506200022381620001f8565b92915050565b600060208284031215620002425762000241620001bf565b5b6000620002528482850162000212565b91505092915050565b6129f8806200026b6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638acd62721161005b5780638acd6272146100ff578063b7252e8f1461011b578063b9eb899214610137578063cd83432d1461016757610088565b80631b92468d1461008d5780631c48c074146100a9578063635b9a0f146100c5578063845a51ec146100e1575b600080fd5b6100a760048036038101906100a29190611d3e565b610185565b005b6100c360048036038101906100be9190611d3e565b610188565b005b6100df60048036038101906100da9190611e08565b61018b565b005b6100e96102fa565b6040516100f69190611e57565b60405180910390f35b61011960048036038101906101149190611edf565b610324565b005b61013560048036038101906101309190611d3e565b610d80565b005b610151600480360381019061014c9190611d3e565b61166f565b60405161015e91906120c9565b60405180910390f35b61016f6118b5565b60405161017c91906120f4565b60405180910390f35b50565b50565b600080600b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e7c9922f6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021d9190612124565b90508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461028d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610284906121ae565b60405180910390fd5b82600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600060046101000a81548166ffffffffffffff021916908366ffffffffffffff160217905550505050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008473ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610371573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103959190612207565b9050600081600a6103a69190612396565b905060006103b58686846118d1565b905081600a6103c491906123e1565b8110156103d057600080fd5b60008060008060028111156103e8576103e7611f9b565b5b8760028111156103fb576103fa611f9b565b5b0361040c573392506000905061044a565b600160028111156104205761041f611f9b565b5b87600281111561043357610432611f9b565b5b036104445760019050339150610449565b600080fd5b5b62015180600060049054906101000a900466ffffffffffffff1661046e9190612423565b66ffffffffffffff164211156104b0576040517fee1ea89500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104dd3330868d73ffffffffffffffffffffffffffffffffffffffff16611918909392919063ffffffff16565b8973ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16866040518363ffffffff1660e01b815260040161053a92919061246d565b6020604051808303816000875af1158015610559573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057d91906124ce565b50600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663617ba0378b863060006040518563ffffffff1660e01b81526004016105e0949392919061254e565b600060405180830381600087803b1580156105fa57600080fd5b505af115801561060e573d6000803e3d6000fd5b5050505060008054906101000a900463ffffffff16600760008060009054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200190815260200160002060000160006101000a81548163ffffffff021916908363ffffffff16021790555088600760008060009054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200190815260200160002060000160046101000a81548163ffffffff021916908363ffffffff16021790555042600760008060009054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200190815260200160002060000160086101000a81548166ffffffffffffff021916908366ffffffffffffff16021790555087600760008060009054906101000a900463ffffffff1663ffffffff1663ffffffff168152602001908152602001600020600001600f6101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555084600760008060009054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020019081526020016000206001018190555089600760008060009054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200190815260200160002060020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600760008060009054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200190815260200160002060030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600760008060009054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200190815260200160002060040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600760008060009054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200190815260200160002060040160146101000a81548160ff0219169083600481111561096c5761096b611f9b565b5b021790555060008054906101000a900463ffffffff16600860008060009054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548163ffffffff021916908363ffffffff160217905550600760008060009054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200190815260200160002060000160089054906101000a900466ffffffffffffff16600860008060009054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160046101000a81548166ffffffffffffff021916908366ffffffffffffff1602179055506000600860008060009054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600b6101000a81548166ffffffffffffff021916908366ffffffffffffff16021790555083600860008060009054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506000600860008060009054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555033600860008060009054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508360016000828254610d2d9190612593565b9250508190555060008081819054906101000a900463ffffffff1680929190610d55906125c7565b91906101000a81548163ffffffff021916908363ffffffff1602179055505050505050505050505050565b62015180600060049054906101000a900466ffffffffffffff16610da49190612423565b66ffffffffffffff16421115610de6576040517fee1ea89500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600760008363ffffffff1663ffffffff168152602001908152602001600020604051806101200160405290816000820160009054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160049054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160089054906101000a900466ffffffffffffff1666ffffffffffffff1666ffffffffffffff16815260200160008201600f9054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff168152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160149054906101000a900460ff16600481111561100957611008611f9b565b5b600481111561101b5761101a611f9b565b5b81525050905060008160a001519050600082608001519050600061104884602001518560600151846118d1565b90506110773330838673ffffffffffffffffffffffffffffffffffffffff16611918909392919063ffffffff16565b8273ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b81526004016110d492919061246d565b6020604051808303816000875af11580156110f3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061111791906124ce565b50600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663617ba03784833060006040518563ffffffff1660e01b815260040161117a949392919061254e565b600060405180830381600087803b15801561119457600080fd5b505af11580156111a8573d6000803e3d6000fd5b50505050600060048111156111c0576111bf611f9b565b5b84610100015160048111156111d8576111d7611f9b565b5b036112435733600760008763ffffffff1663ffffffff16815260200190815260200160002060040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611316565b6001600481111561125757611256611f9b565b5b846101000151600481111561126f5761126e611f9b565b5b036112da5733600760008763ffffffff1663ffffffff16815260200190815260200160002060030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611315565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161130c9061263f565b60405180910390fd5b5b6002600760008763ffffffff1663ffffffff16815260200190815260200160002060040160146101000a81548160ff0219169083600481111561135c5761135b611f9b565b5b021790555084600860008763ffffffff1663ffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548163ffffffff021916908363ffffffff16021790555042600860008763ffffffff1663ffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160046101000a81548166ffffffffffffff021916908366ffffffffffffff1602179055506000600860008763ffffffff1663ffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600b6101000a81548166ffffffffffffff021916908366ffffffffffffff16021790555080600860008763ffffffff1663ffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506000600860008763ffffffff1663ffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555033600860008763ffffffff1663ffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160008282546116619190612593565b925050819055505050505050565b611677611c36565b600760008363ffffffff1663ffffffff168152602001908152602001600020604051806101200160405290816000820160009054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160049054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160089054906101000a900466ffffffffffffff1666ffffffffffffff1666ffffffffffffff16815260200160008201600f9054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff168152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160149054906101000a900460ff16600481111561189857611897611f9b565b5b60048111156118aa576118a9611f9b565b5b815250509050919050565b60008060049054906101000a900466ffffffffffffff16905090565b6000816103e88563ffffffff16856118e9919061265f565b6118f391906126cb565b6fffffffffffffffffffffffffffffffff1661190f91906123e1565b90509392505050565b61199b846323b872dd60e01b858585604051602401611939939291906126fc565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506119a1565b50505050565b6000611a03826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611a699092919063ffffffff16565b9050600081511480611a25575080806020019051810190611a2491906124ce565b5b611a64576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a5b906127a5565b60405180910390fd5b505050565b6060611a788484600085611a81565b90509392505050565b606082471015611ac6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611abd90612837565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611aef91906128c8565b60006040518083038185875af1925050503d8060008114611b2c576040519150601f19603f3d011682016040523d82523d6000602084013e611b31565b606091505b5091509150611b4287838387611b4e565b92505050949350505050565b60608315611bb0576000835103611ba857611b6885611bc3565b611ba7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b9e9061292b565b60405180910390fd5b5b829050611bbb565b611bba8383611be6565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600082511115611bf95781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c2d91906129a0565b60405180910390fd5b604051806101200160405280600063ffffffff168152602001600063ffffffff168152602001600066ffffffffffffff16815260200160006fffffffffffffffffffffffffffffffff16815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160006004811115611cf757611cf6611f9b565b5b81525090565b600080fd5b600063ffffffff82169050919050565b611d1b81611d02565b8114611d2657600080fd5b50565b600081359050611d3881611d12565b92915050565b600060208284031215611d5457611d53611cfd565b5b6000611d6284828501611d29565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611d9682611d6b565b9050919050565b611da681611d8b565b8114611db157600080fd5b50565b600081359050611dc381611d9d565b92915050565b600066ffffffffffffff82169050919050565b611de581611dc9565b8114611df057600080fd5b50565b600081359050611e0281611ddc565b92915050565b60008060408385031215611e1f57611e1e611cfd565b5b6000611e2d85828601611db4565b9250506020611e3e85828601611df3565b9150509250929050565b611e5181611d8b565b82525050565b6000602082019050611e6c6000830184611e48565b92915050565b60006fffffffffffffffffffffffffffffffff82169050919050565b611e9781611e72565b8114611ea257600080fd5b50565b600081359050611eb481611e8e565b92915050565b60038110611ec757600080fd5b50565b600081359050611ed981611eba565b92915050565b60008060008060808587031215611ef957611ef8611cfd565b5b6000611f0787828801611db4565b9450506020611f1887828801611d29565b9350506040611f2987828801611ea5565b9250506060611f3a87828801611eca565b91505092959194509250565b611f4f81611d02565b82525050565b611f5e81611dc9565b82525050565b611f6d81611e72565b82525050565b6000819050919050565b611f8681611f73565b82525050565b611f9581611d8b565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60058110611fdb57611fda611f9b565b5b50565b6000819050611fec82611fca565b919050565b6000611ffc82611fde565b9050919050565b61200c81611ff1565b82525050565b610120820160008201516120296000850182611f46565b50602082015161203c6020850182611f46565b50604082015161204f6040850182611f55565b5060608201516120626060850182611f64565b5060808201516120756080850182611f7d565b5060a082015161208860a0850182611f8c565b5060c082015161209b60c0850182611f8c565b5060e08201516120ae60e0850182611f8c565b506101008201516120c3610100850182612003565b50505050565b6000610120820190506120df6000830184612012565b92915050565b6120ee81611dc9565b82525050565b600060208201905061210960008301846120e5565b92915050565b60008151905061211e81611d9d565b92915050565b60006020828403121561213a57612139611cfd565b5b60006121488482850161210f565b91505092915050565b600082825260208201905092915050565b7f4e6f74204f776e65720000000000000000000000000000000000000000000000600082015250565b6000612198600983612151565b91506121a382612162565b602082019050919050565b600060208201905081810360008301526121c78161218b565b9050919050565b600060ff82169050919050565b6121e4816121ce565b81146121ef57600080fd5b50565b600081519050612201816121db565b92915050565b60006020828403121561221d5761221c611cfd565b5b600061222b848285016121f2565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b60018511156122ba5780860481111561229657612295612234565b5b60018516156122a55780820291505b80810290506122b385612263565b945061227a565b94509492505050565b6000826122d3576001905061238f565b816122e1576000905061238f565b81600181146122f7576002811461230157612330565b600191505061238f565b60ff84111561231357612312612234565b5b8360020a91508482111561232a57612329612234565b5b5061238f565b5060208310610133831016604e8410600b84101617156123655782820a9050838111156123605761235f612234565b5b61238f565b6123728484846001612270565b9250905081840481111561238957612388612234565b5b81810290505b9392505050565b60006123a182611f73565b91506123ac836121ce565b92506123d97fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846122c3565b905092915050565b60006123ec82611f73565b91506123f783611f73565b925082820261240581611f73565b9150828204841483151761241c5761241b612234565b5b5092915050565b600061242e82611dc9565b915061243983611dc9565b9250828203905066ffffffffffffff81111561245857612457612234565b5b92915050565b61246781611f73565b82525050565b60006040820190506124826000830185611e48565b61248f602083018461245e565b9392505050565b60008115159050919050565b6124ab81612496565b81146124b657600080fd5b50565b6000815190506124c8816124a2565b92915050565b6000602082840312156124e4576124e3611cfd565b5b60006124f2848285016124b9565b91505092915050565b6000819050919050565b600061ffff82169050919050565b6000819050919050565b600061253861253361252e846124fb565b612513565b612505565b9050919050565b6125488161251d565b82525050565b60006080820190506125636000830187611e48565b612570602083018661245e565b61257d6040830185611e48565b61258a606083018461253f565b95945050505050565b600061259e82611f73565b91506125a983611f73565b92508282019050808211156125c1576125c0612234565b5b92915050565b60006125d282611d02565b915063ffffffff82036125e8576125e7612234565b5b600182019050919050565b7f5472616465206572726f72000000000000000000000000000000000000000000600082015250565b6000612629600b83612151565b9150612634826125f3565b602082019050919050565b600060208201905081810360008301526126588161261c565b9050919050565b600061266a82611e72565b915061267583611e72565b925082820261268381611e72565b915080821461269557612694612234565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006126d682611e72565b91506126e183611e72565b9250826126f1576126f061269c565b5b828204905092915050565b60006060820190506127116000830186611e48565b61271e6020830185611e48565b61272b604083018461245e565b949350505050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b600061278f602a83612151565b915061279a82612733565b604082019050919050565b600060208201905081810360008301526127be81612782565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000612821602683612151565b915061282c826127c5565b604082019050919050565b6000602082019050818103600083015261285081612814565b9050919050565b600081519050919050565b600081905092915050565b60005b8381101561288b578082015181840152602081019050612870565b60008484015250505050565b60006128a282612857565b6128ac8185612862565b93506128bc81856020860161286d565b80840191505092915050565b60006128d48284612897565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000612915601d83612151565b9150612920826128df565b602082019050919050565b6000602082019050818103600083015261294481612908565b9050919050565b600081519050919050565b6000601f19601f8301169050919050565b60006129728261294b565b61297c8185612151565b935061298c81856020860161286d565b61299581612956565b840191505092915050565b600060208201905081810360008301526129ba8184612967565b90509291505056fea26469706673582212201a4abd5f4564cf4c6f2778b331a087bf5e7322c6237a6f33f16117af6c6b74d164736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0xAA8E23FB1079EA71E0A56F48A2AA51851D8433D0 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0xAF0F6E8B0DC5C913BBF4D14C22B4E78DD14310B6 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0x6AE43D3271FF6888E7FC43FD7321A503FF738951 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH3 0x110 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2C63 CODESIZE SUB DUP1 PUSH3 0x2C63 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x136 SWAP2 SWAP1 PUSH3 0x229 JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x0 PUSH1 0xB PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH3 0x25B JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1F1 DUP3 PUSH3 0x1C4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x203 DUP2 PUSH3 0x1E4 JUMP JUMPDEST DUP2 EQ PUSH3 0x20F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x223 DUP2 PUSH3 0x1F8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x242 JUMPI PUSH3 0x241 PUSH3 0x1BF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x252 DUP5 DUP3 DUP6 ADD PUSH3 0x212 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x29F8 DUP1 PUSH3 0x26B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8ACD6272 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8ACD6272 EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0xB7252E8F EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0xB9EB8992 EQ PUSH2 0x137 JUMPI DUP1 PUSH4 0xCD83432D EQ PUSH2 0x167 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x1B92468D EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x1C48C074 EQ PUSH2 0xA9 JUMPI DUP1 PUSH4 0x635B9A0F EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0x845A51EC EQ PUSH2 0xE1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x1D3E JUMP JUMPDEST PUSH2 0x185 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBE SWAP2 SWAP1 PUSH2 0x1D3E JUMP JUMPDEST PUSH2 0x188 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDA SWAP2 SWAP1 PUSH2 0x1E08 JUMP JUMPDEST PUSH2 0x18B JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE9 PUSH2 0x2FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF6 SWAP2 SWAP1 PUSH2 0x1E57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x119 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x114 SWAP2 SWAP1 PUSH2 0x1EDF JUMP JUMPDEST PUSH2 0x324 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x135 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x1D3E JUMP JUMPDEST PUSH2 0xD80 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x151 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14C SWAP2 SWAP1 PUSH2 0x1D3E JUMP JUMPDEST PUSH2 0x166F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15E SWAP2 SWAP1 PUSH2 0x20C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16F PUSH2 0x18B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17C SWAP2 SWAP1 PUSH2 0x20F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xB SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE7C9922F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x2124 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x28D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x284 SWAP1 PUSH2 0x21AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x0 PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH7 0xFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH7 0xFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x371 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x395 SWAP2 SWAP1 PUSH2 0x2207 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0xA PUSH2 0x3A6 SWAP2 SWAP1 PUSH2 0x2396 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3B5 DUP7 DUP7 DUP5 PUSH2 0x18D1 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0xA PUSH2 0x3C4 SWAP2 SWAP1 PUSH2 0x23E1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x3D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3E8 JUMPI PUSH2 0x3E7 PUSH2 0x1F9B JUMP JUMPDEST JUMPDEST DUP8 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3FB JUMPI PUSH2 0x3FA PUSH2 0x1F9B JUMP JUMPDEST JUMPDEST SUB PUSH2 0x40C JUMPI CALLER SWAP3 POP PUSH1 0x0 SWAP1 POP PUSH2 0x44A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x420 JUMPI PUSH2 0x41F PUSH2 0x1F9B JUMP JUMPDEST JUMPDEST DUP8 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x433 JUMPI PUSH2 0x432 PUSH2 0x1F9B JUMP JUMPDEST JUMPDEST SUB PUSH2 0x444 JUMPI PUSH1 0x1 SWAP1 POP CALLER SWAP2 POP PUSH2 0x449 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST JUMPDEST PUSH3 0x15180 PUSH1 0x0 PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH7 0xFFFFFFFFFFFFFF AND PUSH2 0x46E SWAP2 SWAP1 PUSH2 0x2423 JUMP JUMPDEST PUSH7 0xFFFFFFFFFFFFFF AND TIMESTAMP GT ISZERO PUSH2 0x4B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0xEE1EA89500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4DD CALLER ADDRESS DUP7 DUP14 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1918 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x53A SWAP3 SWAP2 SWAP1 PUSH2 0x246D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x559 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x57D SWAP2 SWAP1 PUSH2 0x24CE JUMP JUMPDEST POP PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x617BA037 DUP12 DUP7 ADDRESS PUSH1 0x0 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E0 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x254E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x60E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x7 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP9 PUSH1 0x7 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x7 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH7 0xFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH7 0xFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP8 PUSH1 0x7 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0xF PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0x7 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP10 PUSH1 0x7 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x7 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x7 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x96C JUMPI PUSH2 0x96B PUSH2 0x1F9B JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x7 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH7 0xFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH7 0xFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH7 0xFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0xB PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH7 0xFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH7 0xFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x8 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH1 0x8 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD2D SWAP2 SWAP1 PUSH2 0x2593 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xD55 SWAP1 PUSH2 0x25C7 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0x15180 PUSH1 0x0 PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH7 0xFFFFFFFFFFFFFF AND PUSH2 0xDA4 SWAP2 SWAP1 PUSH2 0x2423 JUMP JUMPDEST PUSH7 0xFFFFFFFFFFFFFF AND TIMESTAMP GT ISZERO PUSH2 0xDE6 JUMPI PUSH1 0x40 MLOAD PUSH32 0xEE1EA89500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH7 0xFFFFFFFFFFFFFF AND PUSH7 0xFFFFFFFFFFFFFF AND PUSH7 0xFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0xF SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1009 JUMPI PUSH2 0x1008 PUSH2 0x1F9B JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x101B JUMPI PUSH2 0x101A PUSH2 0x1F9B JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0xA0 ADD MLOAD SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x80 ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x1048 DUP5 PUSH1 0x20 ADD MLOAD DUP6 PUSH1 0x60 ADD MLOAD DUP5 PUSH2 0x18D1 JUMP JUMPDEST SWAP1 POP PUSH2 0x1077 CALLER ADDRESS DUP4 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1918 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D4 SWAP3 SWAP2 SWAP1 PUSH2 0x246D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10F3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1117 SWAP2 SWAP1 PUSH2 0x24CE JUMP JUMPDEST POP PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x617BA037 DUP5 DUP4 ADDRESS PUSH1 0x0 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x117A SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x254E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11A8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x11C0 JUMPI PUSH2 0x11BF PUSH2 0x1F9B JUMP JUMPDEST JUMPDEST DUP5 PUSH2 0x100 ADD MLOAD PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x11D8 JUMPI PUSH2 0x11D7 PUSH2 0x1F9B JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1243 JUMPI CALLER PUSH1 0x7 PUSH1 0x0 DUP8 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1316 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1257 JUMPI PUSH2 0x1256 PUSH2 0x1F9B JUMP JUMPDEST JUMPDEST DUP5 PUSH2 0x100 ADD MLOAD PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x126F JUMPI PUSH2 0x126E PUSH2 0x1F9B JUMP JUMPDEST JUMPDEST SUB PUSH2 0x12DA JUMPI CALLER PUSH1 0x7 PUSH1 0x0 DUP8 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1315 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x130C SWAP1 PUSH2 0x263F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x2 PUSH1 0x7 PUSH1 0x0 DUP8 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x135C JUMPI PUSH2 0x135B PUSH2 0x1F9B JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0x8 PUSH1 0x0 DUP8 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x8 PUSH1 0x0 DUP8 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH7 0xFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH7 0xFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP8 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0xB PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH7 0xFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH7 0xFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x8 PUSH1 0x0 DUP8 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP8 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH1 0x8 PUSH1 0x0 DUP8 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1661 SWAP2 SWAP1 PUSH2 0x2593 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1677 PUSH2 0x1C36 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH7 0xFFFFFFFFFFFFFF AND PUSH7 0xFFFFFFFFFFFFFF AND PUSH7 0xFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0xF SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1898 JUMPI PUSH2 0x1897 PUSH2 0x1F9B JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x18AA JUMPI PUSH2 0x18A9 PUSH2 0x1F9B JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH7 0xFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x3E8 DUP6 PUSH4 0xFFFFFFFF AND DUP6 PUSH2 0x18E9 SWAP2 SWAP1 PUSH2 0x265F JUMP JUMPDEST PUSH2 0x18F3 SWAP2 SWAP1 PUSH2 0x26CB JUMP JUMPDEST PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x190F SWAP2 SWAP1 PUSH2 0x23E1 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x199B DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1939 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x26FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x19A1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A03 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A69 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ DUP1 PUSH2 0x1A25 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1A24 SWAP2 SWAP1 PUSH2 0x24CE JUMP JUMPDEST JUMPDEST PUSH2 0x1A64 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A5B SWAP1 PUSH2 0x27A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1A78 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1A81 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1AC6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1ABD SWAP1 PUSH2 0x2837 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1AEF SWAP2 SWAP1 PUSH2 0x28C8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1B2C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1B31 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1B42 DUP8 DUP4 DUP4 DUP8 PUSH2 0x1B4E JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1BB0 JUMPI PUSH1 0x0 DUP4 MLOAD SUB PUSH2 0x1BA8 JUMPI PUSH2 0x1B68 DUP6 PUSH2 0x1BC3 JUMP JUMPDEST PUSH2 0x1BA7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B9E SWAP1 PUSH2 0x292B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x1BBB JUMP JUMPDEST PUSH2 0x1BBA DUP4 DUP4 PUSH2 0x1BE6 JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x1BF9 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C2D SWAP2 SWAP1 PUSH2 0x29A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH7 0xFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1CF7 JUMPI PUSH2 0x1CF6 PUSH2 0x1F9B JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D1B DUP2 PUSH2 0x1D02 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D38 DUP2 PUSH2 0x1D12 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D54 JUMPI PUSH2 0x1D53 PUSH2 0x1CFD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D62 DUP5 DUP3 DUP6 ADD PUSH2 0x1D29 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D96 DUP3 PUSH2 0x1D6B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DA6 DUP2 PUSH2 0x1D8B JUMP JUMPDEST DUP2 EQ PUSH2 0x1DB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1DC3 DUP2 PUSH2 0x1D9D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH7 0xFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DE5 DUP2 PUSH2 0x1DC9 JUMP JUMPDEST DUP2 EQ PUSH2 0x1DF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E02 DUP2 PUSH2 0x1DDC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E1F JUMPI PUSH2 0x1E1E PUSH2 0x1CFD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E2D DUP6 DUP3 DUP7 ADD PUSH2 0x1DB4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E3E DUP6 DUP3 DUP7 ADD PUSH2 0x1DF3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E51 DUP2 PUSH2 0x1D8B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E6C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1E48 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E97 DUP2 PUSH2 0x1E72 JUMP JUMPDEST DUP2 EQ PUSH2 0x1EA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1EB4 DUP2 PUSH2 0x1E8E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x1EC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1ED9 DUP2 PUSH2 0x1EBA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1EF9 JUMPI PUSH2 0x1EF8 PUSH2 0x1CFD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F07 DUP8 DUP3 DUP9 ADD PUSH2 0x1DB4 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1F18 DUP8 DUP3 DUP9 ADD PUSH2 0x1D29 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1F29 DUP8 DUP3 DUP9 ADD PUSH2 0x1EA5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x1F3A DUP8 DUP3 DUP9 ADD PUSH2 0x1ECA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x1F4F DUP2 PUSH2 0x1D02 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1F5E DUP2 PUSH2 0x1DC9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1F6D DUP2 PUSH2 0x1E72 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F86 DUP2 PUSH2 0x1F73 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1F95 DUP2 PUSH2 0x1D8B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0x1FDB JUMPI PUSH2 0x1FDA PUSH2 0x1F9B JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x1FEC DUP3 PUSH2 0x1FCA JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FFC DUP3 PUSH2 0x1FDE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x200C DUP2 PUSH2 0x1FF1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x120 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x2029 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x1F46 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x203C PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x1F46 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x204F PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x1F55 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x2062 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x1F64 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x2075 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x1F7D JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x2088 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x1F8C JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x209B PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x1F8C JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x20AE PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x1F8C JUMP JUMPDEST POP PUSH2 0x100 DUP3 ADD MLOAD PUSH2 0x20C3 PUSH2 0x100 DUP6 ADD DUP3 PUSH2 0x2003 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x20DF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2012 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20EE DUP2 PUSH2 0x1DC9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2109 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x20E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x211E DUP2 PUSH2 0x1D9D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x213A JUMPI PUSH2 0x2139 PUSH2 0x1CFD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2148 DUP5 DUP3 DUP6 ADD PUSH2 0x210F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F74204F776E65720000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2198 PUSH1 0x9 DUP4 PUSH2 0x2151 JUMP JUMPDEST SWAP2 POP PUSH2 0x21A3 DUP3 PUSH2 0x2162 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21C7 DUP2 PUSH2 0x218B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21E4 DUP2 PUSH2 0x21CE JUMP JUMPDEST DUP2 EQ PUSH2 0x21EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2201 DUP2 PUSH2 0x21DB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x221D JUMPI PUSH2 0x221C PUSH2 0x1CFD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x222B DUP5 DUP3 DUP6 ADD PUSH2 0x21F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x22BA JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x2296 JUMPI PUSH2 0x2295 PUSH2 0x2234 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x22A5 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x22B3 DUP6 PUSH2 0x2263 JUMP JUMPDEST SWAP5 POP PUSH2 0x227A JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x22D3 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x238F JUMP JUMPDEST DUP2 PUSH2 0x22E1 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x238F JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x22F7 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x2301 JUMPI PUSH2 0x2330 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x238F JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x2313 JUMPI PUSH2 0x2312 PUSH2 0x2234 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x232A JUMPI PUSH2 0x2329 PUSH2 0x2234 JUMP JUMPDEST JUMPDEST POP PUSH2 0x238F JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x2365 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x2360 JUMPI PUSH2 0x235F PUSH2 0x2234 JUMP JUMPDEST JUMPDEST PUSH2 0x238F JUMP JUMPDEST PUSH2 0x2372 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x2270 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x2389 JUMPI PUSH2 0x2388 PUSH2 0x2234 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23A1 DUP3 PUSH2 0x1F73 JUMP JUMPDEST SWAP2 POP PUSH2 0x23AC DUP4 PUSH2 0x21CE JUMP JUMPDEST SWAP3 POP PUSH2 0x23D9 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x22C3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23EC DUP3 PUSH2 0x1F73 JUMP JUMPDEST SWAP2 POP PUSH2 0x23F7 DUP4 PUSH2 0x1F73 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2405 DUP2 PUSH2 0x1F73 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x241C JUMPI PUSH2 0x241B PUSH2 0x2234 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x242E DUP3 PUSH2 0x1DC9 JUMP JUMPDEST SWAP2 POP PUSH2 0x2439 DUP4 PUSH2 0x1DC9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH7 0xFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2458 JUMPI PUSH2 0x2457 PUSH2 0x2234 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2467 DUP2 PUSH2 0x1F73 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2482 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1E48 JUMP JUMPDEST PUSH2 0x248F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x245E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24AB DUP2 PUSH2 0x2496 JUMP JUMPDEST DUP2 EQ PUSH2 0x24B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x24C8 DUP2 PUSH2 0x24A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24E4 JUMPI PUSH2 0x24E3 PUSH2 0x1CFD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x24F2 DUP5 DUP3 DUP6 ADD PUSH2 0x24B9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2538 PUSH2 0x2533 PUSH2 0x252E DUP5 PUSH2 0x24FB JUMP JUMPDEST PUSH2 0x2513 JUMP JUMPDEST PUSH2 0x2505 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2548 DUP2 PUSH2 0x251D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2563 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1E48 JUMP JUMPDEST PUSH2 0x2570 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x245E JUMP JUMPDEST PUSH2 0x257D PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1E48 JUMP JUMPDEST PUSH2 0x258A PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x253F JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x259E DUP3 PUSH2 0x1F73 JUMP JUMPDEST SWAP2 POP PUSH2 0x25A9 DUP4 PUSH2 0x1F73 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x25C1 JUMPI PUSH2 0x25C0 PUSH2 0x2234 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25D2 DUP3 PUSH2 0x1D02 JUMP JUMPDEST SWAP2 POP PUSH4 0xFFFFFFFF DUP3 SUB PUSH2 0x25E8 JUMPI PUSH2 0x25E7 PUSH2 0x2234 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616465206572726F72000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2629 PUSH1 0xB DUP4 PUSH2 0x2151 JUMP JUMPDEST SWAP2 POP PUSH2 0x2634 DUP3 PUSH2 0x25F3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2658 DUP2 PUSH2 0x261C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x266A DUP3 PUSH2 0x1E72 JUMP JUMPDEST SWAP2 POP PUSH2 0x2675 DUP4 PUSH2 0x1E72 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2683 DUP2 PUSH2 0x1E72 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 EQ PUSH2 0x2695 JUMPI PUSH2 0x2694 PUSH2 0x2234 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x26D6 DUP3 PUSH2 0x1E72 JUMP JUMPDEST SWAP2 POP PUSH2 0x26E1 DUP4 PUSH2 0x1E72 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x26F1 JUMPI PUSH2 0x26F0 PUSH2 0x269C JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2711 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1E48 JUMP JUMPDEST PUSH2 0x271E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1E48 JUMP JUMPDEST PUSH2 0x272B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x245E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x278F PUSH1 0x2A DUP4 PUSH2 0x2151 JUMP JUMPDEST SWAP2 POP PUSH2 0x279A DUP3 PUSH2 0x2733 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x27BE DUP2 PUSH2 0x2782 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2821 PUSH1 0x26 DUP4 PUSH2 0x2151 JUMP JUMPDEST SWAP2 POP PUSH2 0x282C DUP3 PUSH2 0x27C5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2850 DUP2 PUSH2 0x2814 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x288B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2870 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28A2 DUP3 PUSH2 0x2857 JUMP JUMPDEST PUSH2 0x28AC DUP2 DUP6 PUSH2 0x2862 JUMP JUMPDEST SWAP4 POP PUSH2 0x28BC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x286D JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28D4 DUP3 DUP5 PUSH2 0x2897 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2915 PUSH1 0x1D DUP4 PUSH2 0x2151 JUMP JUMPDEST SWAP2 POP PUSH2 0x2920 DUP3 PUSH2 0x28DF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2944 DUP2 PUSH2 0x2908 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2972 DUP3 PUSH2 0x294B JUMP JUMPDEST PUSH2 0x297C DUP2 DUP6 PUSH2 0x2151 JUMP JUMPDEST SWAP4 POP PUSH2 0x298C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x286D JUMP JUMPDEST PUSH2 0x2995 DUP2 PUSH2 0x2956 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x29BA DUP2 DUP5 PUSH2 0x2967 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0x4A 0xBD 0x5F GASLIMIT PUSH5 0xCF4C6F2778 0xB3 BALANCE LOG0 DUP8 0xBF 0x5E PUSH20 0x22C6237A6F33F16117AF6C6B74D164736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "442:6430:0:-:0;;;867:42;845:64;;;;;;;;;;;;;;;;;;;;998:42;973:67;;;;;;;;;;;;;;;;;;;;1105:42;1074:74;;;;;;;;;;;;;;;;;;;;1157:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1215:13;1202:12;;:26;;;;;;;;;;;;;;;;;;1252:10;1239:12;;:23;;;;;;;;;;;;;;;;;;1157:113;442:6430;;88:117:12;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;442:6430:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_2765": {
									"entryPoint": 6561,
									"id": 2765,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_revert_2082": {
									"entryPoint": 7142,
									"id": 2082,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@cancelOrder_583": {
									"entryPoint": 389,
									"id": 583,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@functionCallWithValue_1907": {
									"entryPoint": 6785,
									"id": 1907,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_1843": {
									"entryPoint": 6761,
									"id": 1843,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getClearTime_644": {
									"entryPoint": 6325,
									"id": 644,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getTotalStable_2976": {
									"entryPoint": 6353,
									"id": 2976,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getTradeMes_628": {
									"entryPoint": 5743,
									"id": 628,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isContract_1771": {
									"entryPoint": 7107,
									"id": 1771,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@matchTrade_577": {
									"entryPoint": 3456,
									"id": 577,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@putTrade_384": {
									"entryPoint": 804,
									"id": 384,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@refund_589": {
									"entryPoint": 392,
									"id": 589,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@rewardPoolAddress_636": {
									"entryPoint": 762,
									"id": 636,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@safeTransferFrom_2498": {
									"entryPoint": 6424,
									"id": 2498,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setRewardPool_109": {
									"entryPoint": 395,
									"id": 109,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_2038": {
									"entryPoint": 6990,
									"id": 2038,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 7604,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 8463,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 9401,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_enum$_doState_$1663": {
									"entryPoint": 7882,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint128": {
									"entryPoint": 7845,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint32": {
									"entryPoint": 7465,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint56": {
									"entryPoint": 7667,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8_fromMemory": {
									"entryPoint": 8690,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 8484,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint32t_uint128t_enum$_doState_$1663": {
									"entryPoint": 7903,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_uint56": {
									"entryPoint": 7688,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 9422,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint32": {
									"entryPoint": 7486,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint8_fromMemory": {
									"entryPoint": 8711,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 8076,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7752,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10391,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_enum$_tradeState_$1669_to_t_uint8": {
									"entryPoint": 8195,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_0_by_1_to_t_uint16_fromStack": {
									"entryPoint": 9535,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10599,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8587,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10260,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ca426bfa2827fefdeedc7111ec0137f2bf107ae237d1f8e770fa1907804c1b32_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9756,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10504,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10114,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_tradeMes_$1689_memory_ptr_to_t_struct$_tradeMes_$1689_memory_ptr_fromStack": {
									"entryPoint": 8210,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint128_to_t_uint128": {
									"entryPoint": 8036,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 8061,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 9310,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint32_to_t_uint32": {
									"entryPoint": 8006,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint56_to_t_uint56": {
									"entryPoint": 8021,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint56_to_t_uint56_fromStack": {
									"entryPoint": 8421,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 10440,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7767,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9980,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9325,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address_t_rational_0_by_1__to_t_address_t_uint256_t_address_t_uint16__fromStack_reversed": {
									"entryPoint": 9550,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10656,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8622,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10295,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ca426bfa2827fefdeedc7111ec0137f2bf107ae237d1f8e770fa1907804c1b32__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9791,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10539,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10149,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_tradeMes_$1689_memory_ptr__to_t_struct$_tradeMes_$1689_memory_ptr__fromStack_reversed": {
									"entryPoint": 8393,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint56__to_t_uint56__fromStack_reversed": {
									"entryPoint": 8436,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 10327,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 10571,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10338,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 8529,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 9619,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint128": {
									"entryPoint": 9931,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 8816,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 9110,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 8899,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint128": {
									"entryPoint": 9823,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 9185,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint56": {
									"entryPoint": 9251,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 7563,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 9366,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_enum$_tradeState_$1669": {
									"entryPoint": 8158,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_0_by_1": {
									"entryPoint": 9467,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint128": {
									"entryPoint": 7794,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint16": {
									"entryPoint": 9477,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7531,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 8051,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint32": {
									"entryPoint": 7426,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint56": {
									"entryPoint": 7625,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 8654,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_enum$_tradeState_$1669_to_t_uint8": {
									"entryPoint": 8177,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_0_by_1_to_t_uint16": {
									"entryPoint": 9501,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 10349,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 9491,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint32": {
									"entryPoint": 9671,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8756,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 9884,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 8091,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7421,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 10582,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 8803,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4": {
									"entryPoint": 8546,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c": {
									"entryPoint": 10181,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ca426bfa2827fefdeedc7111ec0137f2bf107ae237d1f8e770fa1907804c1b32": {
									"entryPoint": 9715,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad": {
									"entryPoint": 10463,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd": {
									"entryPoint": 10035,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_assert_t_enum$_tradeState_$1669": {
									"entryPoint": 8138,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 7581,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 9378,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_enum$_doState_$1663": {
									"entryPoint": 7866,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint128": {
									"entryPoint": 7822,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint32": {
									"entryPoint": 7442,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint56": {
									"entryPoint": 7644,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 8667,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:23560:12",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:49:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "388:33:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "410:10:12",
																		"type": "",
																		"value": "0xffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:22:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "360:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "370:7:12",
														"type": ""
													}
												],
												"src": "334:93:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "475:78:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "531:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "540:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "543:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "533:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "533:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "533:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "498:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "522:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint32",
																					"nodeType": "YulIdentifier",
																					"src": "505:16:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "505:23:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "495:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "495:34:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "488:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "488:42:12"
															},
															"nodeType": "YulIf",
															"src": "485:62:12"
														}
													]
												},
												"name": "validator_revert_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "468:5:12",
														"type": ""
													}
												],
												"src": "433:120:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "610:86:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "620:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "642:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "629:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "629:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "620:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "684:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint32",
																	"nodeType": "YulIdentifier",
																	"src": "658:25:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "658:32:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "658:32:12"
														}
													]
												},
												"name": "abi_decode_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "588:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "596:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:12",
														"type": ""
													}
												],
												"src": "559:137:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "767:262:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "813:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "815:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "815:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "815:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "788:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "797:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "784:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "784:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "809:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "780:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "780:32:12"
															},
															"nodeType": "YulIf",
															"src": "777:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "906:116:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "921:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "935:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "925:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "950:62:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "984:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "995:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "980:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "980:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1004:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint32",
																			"nodeType": "YulIdentifier",
																			"src": "960:19:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "960:52:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "950:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "737:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "748:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "760:6:12",
														"type": ""
													}
												],
												"src": "702:327:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1080:81:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1090:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1105:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1112:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1101:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1101:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1090:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1062:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1072:7:12",
														"type": ""
													}
												],
												"src": "1035:126:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1212:51:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1222:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1251:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1233:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1233:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1222:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1194:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1204:7:12",
														"type": ""
													}
												],
												"src": "1167:96:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1312:79:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1369:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1378:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1381:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1371:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1371:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1371:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1335:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1360:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1342:17:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1342:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1332:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1332:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1325:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1325:43:12"
															},
															"nodeType": "YulIf",
															"src": "1322:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1305:5:12",
														"type": ""
													}
												],
												"src": "1269:122:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1449:87:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1459:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1481:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1468:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1468:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1459:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1524:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1497:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1497:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1497:33:12"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1427:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1435:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1443:5:12",
														"type": ""
													}
												],
												"src": "1397:139:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1586:55:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1596:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1611:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1618:16:12",
																		"type": "",
																		"value": "0xffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1607:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1607:28:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1596:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint56",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1568:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1578:7:12",
														"type": ""
													}
												],
												"src": "1542:99:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1689:78:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1745:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1754:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1757:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1747:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1747:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1747:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1712:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1736:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint56",
																					"nodeType": "YulIdentifier",
																					"src": "1719:16:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1719:23:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1709:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1709:34:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1702:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1702:42:12"
															},
															"nodeType": "YulIf",
															"src": "1699:62:12"
														}
													]
												},
												"name": "validator_revert_t_uint56",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1682:5:12",
														"type": ""
													}
												],
												"src": "1647:120:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1824:86:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1834:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1856:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1843:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1843:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1834:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1898:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint56",
																	"nodeType": "YulIdentifier",
																	"src": "1872:25:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1872:32:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1872:32:12"
														}
													]
												},
												"name": "abi_decode_t_uint56",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1802:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1810:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1818:5:12",
														"type": ""
													}
												],
												"src": "1773:137:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1998:390:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2044:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2046:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2046:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2046:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2019:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2028:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2015:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2015:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2040:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2011:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2011:32:12"
															},
															"nodeType": "YulIf",
															"src": "2008:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "2137:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2152:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2166:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2156:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2181:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2216:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2227:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2212:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2212:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2236:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2191:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2191:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2181:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2264:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2279:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2293:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2283:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2309:62:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2343:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2354:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2339:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2339:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2363:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint56",
																			"nodeType": "YulIdentifier",
																			"src": "2319:19:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2319:52:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2309:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint56",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1960:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1971:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1983:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1991:6:12",
														"type": ""
													}
												],
												"src": "1916:472:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2459:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2476:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2499:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2481:17:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2481:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2469:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2469:37:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2469:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2447:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2454:3:12",
														"type": ""
													}
												],
												"src": "2394:118:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2616:124:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2626:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2638:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2649:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2634:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2634:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2626:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2706:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2719:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2730:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2715:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2715:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2662:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2662:71:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2662:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2588:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2600:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2611:4:12",
														"type": ""
													}
												],
												"src": "2518:222:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2791:73:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2801:57:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2816:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2823:34:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2812:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2812:46:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2801:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint128",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2773:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2783:7:12",
														"type": ""
													}
												],
												"src": "2746:118:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2913:79:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2970:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2979:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2982:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2972:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2972:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2972:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2936:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2961:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint128",
																					"nodeType": "YulIdentifier",
																					"src": "2943:17:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2943:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2933:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2933:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2926:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2926:43:12"
															},
															"nodeType": "YulIf",
															"src": "2923:63:12"
														}
													]
												},
												"name": "validator_revert_t_uint128",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2906:5:12",
														"type": ""
													}
												],
												"src": "2870:122:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3050:87:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3060:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3082:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3069:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3069:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3060:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3125:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint128",
																	"nodeType": "YulIdentifier",
																	"src": "3098:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3098:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3098:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint128",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3028:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3036:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3044:5:12",
														"type": ""
													}
												],
												"src": "2998:139:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3198:56:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3232:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3241:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3244:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3234:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3234:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3234:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3221:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3228:1:12",
																				"type": "",
																				"value": "3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3218:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3218:12:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3211:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3211:20:12"
															},
															"nodeType": "YulIf",
															"src": "3208:40:12"
														}
													]
												},
												"name": "validator_revert_t_enum$_doState_$1663",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3191:5:12",
														"type": ""
													}
												],
												"src": "3143:111:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3324:99:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3334:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3356:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3343:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3343:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3334:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3411:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_enum$_doState_$1663",
																	"nodeType": "YulIdentifier",
																	"src": "3372:38:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3372:45:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3372:45:12"
														}
													]
												},
												"name": "abi_decode_t_enum$_doState_$1663",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3302:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3310:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3318:5:12",
														"type": ""
													}
												],
												"src": "3260:163:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3557:659:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3604:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3606:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3606:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3606:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3578:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3587:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3574:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3574:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3599:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3570:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3570:33:12"
															},
															"nodeType": "YulIf",
															"src": "3567:120:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "3697:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3712:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3726:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3716:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3741:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3776:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3787:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3772:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3772:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3796:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3751:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3751:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3741:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3824:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3839:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3853:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3843:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3869:62:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3903:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3914:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3899:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3899:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3923:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint32",
																			"nodeType": "YulIdentifier",
																			"src": "3879:19:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3879:52:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3869:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3951:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3966:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3980:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3970:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3996:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4031:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4042:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4027:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4027:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4051:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint128",
																			"nodeType": "YulIdentifier",
																			"src": "4006:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4006:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "3996:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4079:130:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4094:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4108:2:12",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4098:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4124:75:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4171:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4182:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4167:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4167:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4191:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_enum$_doState_$1663",
																			"nodeType": "YulIdentifier",
																			"src": "4134:32:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4134:65:12"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "4124:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint32t_uint128t_enum$_doState_$1663",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3503:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3514:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3526:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3534:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3542:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3550:6:12",
														"type": ""
													}
												],
												"src": "3429:787:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4275:52:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4292:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4314:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint32",
																			"nodeType": "YulIdentifier",
																			"src": "4297:16:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4297:23:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4285:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4285:36:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4285:36:12"
														}
													]
												},
												"name": "abi_encode_t_uint32_to_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4263:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4270:3:12",
														"type": ""
													}
												],
												"src": "4222:105:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4386:52:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4403:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4425:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint56",
																			"nodeType": "YulIdentifier",
																			"src": "4408:16:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4408:23:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4396:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4396:36:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4396:36:12"
														}
													]
												},
												"name": "abi_encode_t_uint56_to_t_uint56",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4374:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4381:3:12",
														"type": ""
													}
												],
												"src": "4333:105:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4499:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4516:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4539:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint128",
																			"nodeType": "YulIdentifier",
																			"src": "4521:17:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4521:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4509:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4509:37:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4509:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint128_to_t_uint128",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4487:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4494:3:12",
														"type": ""
													}
												],
												"src": "4444:108:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4603:32:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4613:16:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4624:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4613:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4585:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4595:7:12",
														"type": ""
													}
												],
												"src": "4558:77:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4696:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4713:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4736:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4718:17:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4718:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4706:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4706:37:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4706:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4684:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4691:3:12",
														"type": ""
													}
												],
												"src": "4641:108:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4810:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4827:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4850:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4832:17:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4832:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4820:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4820:37:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4820:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4798:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4805:3:12",
														"type": ""
													}
												],
												"src": "4755:108:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4897:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4914:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4917:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4907:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4907:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4907:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5011:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5014:4:12",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5004:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5004:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5004:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5035:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5038:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5028:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5028:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5028:15:12"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "4869:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5113:62:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5147:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x21",
																				"nodeType": "YulIdentifier",
																				"src": "5149:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5149:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5149:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5136:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5143:1:12",
																				"type": "",
																				"value": "5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5133:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5133:12:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5126:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5126:20:12"
															},
															"nodeType": "YulIf",
															"src": "5123:46:12"
														}
													]
												},
												"name": "validator_assert_t_enum$_tradeState_$1669",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5106:5:12",
														"type": ""
													}
												],
												"src": "5055:120:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5241:81:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5251:16:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5262:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5251:7:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5310:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_assert_t_enum$_tradeState_$1669",
																	"nodeType": "YulIdentifier",
																	"src": "5268:41:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5268:48:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5268:48:12"
														}
													]
												},
												"name": "cleanup_t_enum$_tradeState_$1669",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5223:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5233:7:12",
														"type": ""
													}
												],
												"src": "5181:141:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5401:68:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5411:52:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5457:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_enum$_tradeState_$1669",
																	"nodeType": "YulIdentifier",
																	"src": "5424:32:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5424:39:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5411:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_enum$_tradeState_$1669_to_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5381:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5391:9:12",
														"type": ""
													}
												],
												"src": "5328:141:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5543:79:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5560:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5609:5:12"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_enum$_tradeState_$1669_to_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "5565:43:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5565:50:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5553:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5553:63:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5553:63:12"
														}
													]
												},
												"name": "abi_encode_t_enum$_tradeState_$1669_to_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5531:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5538:3:12",
														"type": ""
													}
												],
												"src": "5475:147:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5812:1670:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5822:28:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5838:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5843:6:12",
																		"type": "",
																		"value": "0x0120"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5834:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5834:16:12"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "5826:4:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5860:165:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5898:43:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5928:5:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5935:4:12",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5924:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5924:16:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "5918:5:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5918:23:12"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "5902:12:12",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "5986:12:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "6004:3:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6009:4:12",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6000:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6000:14:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint32_to_t_uint32",
																			"nodeType": "YulIdentifier",
																			"src": "5954:31:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5954:61:12"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "5954:61:12"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6035:163:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6071:43:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6101:5:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6108:4:12",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6097:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6097:16:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "6091:5:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6091:23:12"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "6075:12:12",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "6159:12:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "6177:3:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6182:4:12",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6173:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6173:14:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint32_to_t_uint32",
																			"nodeType": "YulIdentifier",
																			"src": "6127:31:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6127:61:12"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "6127:61:12"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6208:162:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6243:43:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6273:5:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6280:4:12",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6269:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6269:16:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "6263:5:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6263:23:12"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "6247:12:12",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "6331:12:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "6349:3:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6354:4:12",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6345:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6345:14:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint56_to_t_uint56",
																			"nodeType": "YulIdentifier",
																			"src": "6299:31:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6299:61:12"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "6299:61:12"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6380:166:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6417:43:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6447:5:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6454:4:12",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6443:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6443:16:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "6437:5:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6437:23:12"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "6421:12:12",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "6507:12:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "6525:3:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6530:4:12",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6521:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6521:14:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint128_to_t_uint128",
																			"nodeType": "YulIdentifier",
																			"src": "6473:33:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6473:63:12"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "6473:63:12"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6556:174:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6601:43:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6631:5:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6638:4:12",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6627:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6627:16:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "6621:5:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6621:23:12"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "6605:12:12",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "6691:12:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "6709:3:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6714:4:12",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6705:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6705:14:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6657:33:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6657:63:12"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "6657:63:12"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6740:172:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6783:43:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6813:5:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6820:4:12",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6809:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6809:16:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "6803:5:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6803:23:12"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "6787:12:12",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "6873:12:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "6891:3:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6896:4:12",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6887:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6887:14:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6839:33:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6839:63:12"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "6839:63:12"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6922:172:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6965:43:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6995:5:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7002:4:12",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6991:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6991:16:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "6985:5:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6985:23:12"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "6969:12:12",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "7055:12:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "7073:3:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7078:4:12",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7069:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7069:14:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7021:33:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7021:63:12"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "7021:63:12"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7104:173:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7148:43:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7178:5:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7185:4:12",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7174:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7174:16:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "7168:5:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7168:23:12"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "7152:12:12",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "7238:12:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "7256:3:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7261:4:12",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7252:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7252:14:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7204:33:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7204:63:12"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "7204:63:12"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7287:188:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7329:45:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7359:5:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7366:6:12",
																						"type": "",
																						"value": "0x0100"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7355:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7355:18:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "7349:5:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7349:25:12"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "7333:12:12",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "7434:12:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "7452:3:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7457:6:12",
																						"type": "",
																						"value": "0x0100"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7448:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7448:16:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_enum$_tradeState_$1669_to_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "7387:46:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7387:78:12"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "7387:78:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_tradeMes_$1689_memory_ptr_to_t_struct$_tradeMes_$1689_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5799:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5806:3:12",
														"type": ""
													}
												],
												"src": "5694:1788:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7638:177:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7648:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7660:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7671:3:12",
																		"type": "",
																		"value": "288"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7656:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7656:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7648:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7781:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7794:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7805:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7790:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7790:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_tradeMes_$1689_memory_ptr_to_t_struct$_tradeMes_$1689_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7685:95:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7685:123:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7685:123:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_tradeMes_$1689_memory_ptr__to_t_struct$_tradeMes_$1689_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7610:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7622:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7633:4:12",
														"type": ""
													}
												],
												"src": "7488:327:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7884:52:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7901:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7923:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint56",
																			"nodeType": "YulIdentifier",
																			"src": "7906:16:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7906:23:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7894:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7894:36:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7894:36:12"
														}
													]
												},
												"name": "abi_encode_t_uint56_to_t_uint56_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7872:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7879:3:12",
														"type": ""
													}
												],
												"src": "7821:115:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8038:122:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8048:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8060:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8071:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8056:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8056:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8048:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8126:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8139:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8150:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8135:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8135:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint56_to_t_uint56_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8084:41:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8084:69:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8084:69:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint56__to_t_uint56__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8010:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8022:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8033:4:12",
														"type": ""
													}
												],
												"src": "7942:218:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8229:80:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8239:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8254:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8248:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8248:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "8239:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8297:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "8270:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8270:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8270:33:12"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8207:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8215:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8223:5:12",
														"type": ""
													}
												],
												"src": "8166:143:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8392:274:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8438:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8440:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8440:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8440:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8413:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8422:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8409:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8409:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8434:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8405:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8405:32:12"
															},
															"nodeType": "YulIf",
															"src": "8402:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "8531:128:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8546:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8560:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8550:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8575:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8621:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8632:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8617:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8617:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8641:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "8585:31:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8585:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8575:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8362:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8373:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8385:6:12",
														"type": ""
													}
												],
												"src": "8315:351:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8768:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8785:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8790:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8778:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8778:19:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8778:19:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8806:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8825:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8830:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8821:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8821:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "8806:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8740:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8745:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "8756:11:12",
														"type": ""
													}
												],
												"src": "8672:169:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8953:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8975:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8983:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8971:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8971:14:12"
																	},
																	{
																		"hexValue": "4e6f74204f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8987:11:12",
																		"type": "",
																		"value": "Not Owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8964:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8964:35:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8964:35:12"
														}
													]
												},
												"name": "store_literal_in_memory_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8945:6:12",
														"type": ""
													}
												],
												"src": "8847:159:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9158:219:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9168:73:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9234:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9239:1:12",
																		"type": "",
																		"value": "9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9175:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9175:66:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9168:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9339:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4",
																	"nodeType": "YulIdentifier",
																	"src": "9250:88:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9250:93:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9250:93:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9352:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9363:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9368:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9359:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9359:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9352:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9146:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9154:3:12",
														"type": ""
													}
												],
												"src": "9012:365:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9554:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9564:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9576:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9587:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9572:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9572:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9564:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9611:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9622:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9607:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9607:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9630:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9636:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9626:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9626:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9600:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9600:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9600:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9656:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9790:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9664:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9664:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9656:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9534:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9549:4:12",
														"type": ""
													}
												],
												"src": "9383:419:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9851:43:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9861:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9876:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9883:4:12",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9872:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9872:16:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "9861:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9833:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "9843:7:12",
														"type": ""
													}
												],
												"src": "9808:86:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9941:77:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9996:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10005:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10008:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9998:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9998:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9998:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9964:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9987:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nodeType": "YulIdentifier",
																					"src": "9971:15:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9971:22:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9961:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9961:33:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9954:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9954:41:12"
															},
															"nodeType": "YulIf",
															"src": "9951:61:12"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9934:5:12",
														"type": ""
													}
												],
												"src": "9900:118:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10085:78:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10095:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "10110:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10104:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10104:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "10095:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10151:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "10126:24:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10126:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10126:31:12"
														}
													]
												},
												"name": "abi_decode_t_uint8_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "10063:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10071:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10079:5:12",
														"type": ""
													}
												],
												"src": "10024:139:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10244:272:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10290:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "10292:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10292:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10292:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10265:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10274:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10261:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10261:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10286:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10257:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10257:32:12"
															},
															"nodeType": "YulIf",
															"src": "10254:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "10383:126:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10398:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10412:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10402:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10427:72:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10471:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10482:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10467:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10467:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10491:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "10437:29:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10437:62:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "10427:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10214:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10225:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10237:6:12",
														"type": ""
													}
												],
												"src": "10169:347:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10550:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10567:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10570:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10560:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10560:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10560:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10664:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10667:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10657:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10657:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10657:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10688:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10691:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10681:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10681:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10681:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "10522:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10759:51:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10769:34:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10794:1:12",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10797:5:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "10790:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10790:13:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "10769:8:12"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10740:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "10750:8:12",
														"type": ""
													}
												],
												"src": "10708:102:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10889:775:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10899:15:12",
															"value": {
																"name": "_power",
																"nodeType": "YulIdentifier",
																"src": "10908:6:12"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "10899:5:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10923:14:12",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "10932:5:12"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "10923:4:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10981:677:12",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "11069:22:12",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "11071:16:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11071:18:12"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "11071:18:12"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "11047:4:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nodeType": "YulIdentifier",
																							"src": "11057:3:12"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "11062:4:12"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "11053:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11053:14:12"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "11044:2:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11044:24:12"
																		},
																		"nodeType": "YulIf",
																		"src": "11041:50:12"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "11136:419:12",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "11516:25:12",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "11529:5:12"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "11536:4:12"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "11525:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11525:16:12"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "11516:5:12"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "11111:8:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11121:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "11107:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11107:16:12"
																		},
																		"nodeType": "YulIf",
																		"src": "11104:451:12"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "11568:23:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "11580:4:12"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "11586:4:12"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "11576:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11576:15:12"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "11568:4:12"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "11604:44:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "11639:8:12"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nodeType": "YulIdentifier",
																				"src": "11616:22:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11616:32:12"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "11604:8:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "10957:8:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10967:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10954:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10954:15:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "10970:2:12",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "10950:3:12",
																"statements": []
															},
															"src": "10946:712:12"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nodeType": "YulTypedName",
														"src": "10844:6:12",
														"type": ""
													},
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "10852:5:12",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "10859:8:12",
														"type": ""
													},
													{
														"name": "max",
														"nodeType": "YulTypedName",
														"src": "10869:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "10877:5:12",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "10884:4:12",
														"type": ""
													}
												],
												"src": "10816:848:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11730:1013:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11925:20:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "11927:10:12",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "11936:1:12",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "11927:5:12"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "11938:5:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "11915:8:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11908:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11908:16:12"
															},
															"nodeType": "YulIf",
															"src": "11905:40:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11970:20:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "11972:10:12",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "11981:1:12",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "11972:5:12"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "11983:5:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "11964:4:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11957:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11957:12:12"
															},
															"nodeType": "YulIf",
															"src": "11954:36:12"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "12100:20:12",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "12102:10:12",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12111:1:12",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "12102:5:12"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "12113:5:12"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "12093:27:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12098:1:12",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "12144:176:12",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "12179:22:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "12181:16:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "12181:18:12"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "12181:18:12"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "12164:8:12"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "12174:3:12",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "12161:2:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12161:17:12"
																				},
																				"nodeType": "YulIf",
																				"src": "12158:43:12"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "12214:25:12",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "12227:1:12",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "12230:8:12"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nodeType": "YulIdentifier",
																						"src": "12223:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12223:16:12"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "12214:5:12"
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "12270:22:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "12272:16:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "12272:18:12"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "12272:18:12"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "12258:5:12"
																						},
																						{
																							"name": "max",
																							"nodeType": "YulIdentifier",
																							"src": "12265:3:12"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "12255:2:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12255:14:12"
																				},
																				"nodeType": "YulIf",
																				"src": "12252:40:12"
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "12305:5:12"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "12129:191:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12134:1:12",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "12050:4:12"
															},
															"nodeType": "YulSwitch",
															"src": "12043:277:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12452:123:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "12466:28:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "12479:4:12"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "12485:8:12"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "12475:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12475:19:12"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "12466:5:12"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "12525:22:12",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "12527:16:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12527:18:12"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "12527:18:12"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nodeType": "YulIdentifier",
																					"src": "12513:5:12"
																				},
																				{
																					"name": "max",
																					"nodeType": "YulIdentifier",
																					"src": "12520:3:12"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "12510:2:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12510:14:12"
																		},
																		"nodeType": "YulIf",
																		"src": "12507:40:12"
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "12560:5:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "12355:4:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12361:2:12",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "12352:2:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12352:12:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "12369:8:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12379:2:12",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "12366:2:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12366:16:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12348:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12348:35:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "12404:4:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12410:3:12",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "12401:2:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12401:13:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "12419:8:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12429:2:12",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "12416:2:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12416:16:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12397:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12397:36:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "12332:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12332:111:12"
															},
															"nodeType": "YulIf",
															"src": "12329:246:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12585:57:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12619:1:12",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "12622:4:12"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "12628:8:12"
																	},
																	{
																		"name": "max",
																		"nodeType": "YulIdentifier",
																		"src": "12638:3:12"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "12600:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12600:42:12"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "12585:5:12"
																},
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "12592:4:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12681:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12683:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12683:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12683:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "12658:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nodeType": "YulIdentifier",
																				"src": "12669:3:12"
																			},
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "12674:4:12"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "12665:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12665:14:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12655:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12655:25:12"
															},
															"nodeType": "YulIf",
															"src": "12652:51:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12712:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "12725:5:12"
																	},
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "12732:4:12"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "12721:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12721:16:12"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "12712:5:12"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "11700:4:12",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "11706:8:12",
														"type": ""
													},
													{
														"name": "max",
														"nodeType": "YulTypedName",
														"src": "11716:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "11724:5:12",
														"type": ""
													}
												],
												"src": "11670:1073:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12813:217:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12823:31:12",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "12849:4:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12831:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12831:23:12"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "12823:4:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12863:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "12891:8:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "12875:15:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12875:25:12"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nodeType": "YulIdentifier",
																	"src": "12863:8:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12910:113:12",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "12940:4:12"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "12946:8:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12956:66:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "12919:20:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12919:104:12"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "12910:5:12"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "12788:4:12",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "12794:8:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "12807:5:12",
														"type": ""
													}
												],
												"src": "12749:281:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13084:362:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13094:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13117:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13099:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13099:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "13094:1:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13128:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13151:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13133:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13133:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "13128:1:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13162:28:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13185:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13188:1:12"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "13181:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13181:9:12"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "13166:11:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13199:41:12",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "13228:11:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13210:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13210:30:12"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "13199:7:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13417:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13419:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13419:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13419:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "13350:1:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "13343:6:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13343:9:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "13373:1:12"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "13380:7:12"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "13389:1:12"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "13376:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13376:15:12"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "13370:2:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13370:22:12"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "13323:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13323:83:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13303:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13303:113:12"
															},
															"nodeType": "YulIf",
															"src": "13300:139:12"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13067:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13070:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "13076:7:12",
														"type": ""
													}
												],
												"src": "13036:410:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13496:162:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13506:24:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13528:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint56",
																	"nodeType": "YulIdentifier",
																	"src": "13511:16:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13511:19:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "13506:1:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13539:24:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13561:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint56",
																	"nodeType": "YulIdentifier",
																	"src": "13544:16:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13544:19:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "13539:1:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13572:17:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13584:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13587:1:12"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "13580:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13580:9:12"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "13572:4:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13629:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13631:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13631:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13631:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "13605:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13611:16:12",
																		"type": "",
																		"value": "0xffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "13602:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13602:26:12"
															},
															"nodeType": "YulIf",
															"src": "13599:52:12"
														}
													]
												},
												"name": "checked_sub_t_uint56",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13482:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13485:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "13491:4:12",
														"type": ""
													}
												],
												"src": "13452:206:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13729:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13746:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13769:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "13751:17:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13751:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13739:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13739:37:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13739:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13717:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13724:3:12",
														"type": ""
													}
												],
												"src": "13664:118:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13914:206:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13924:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13936:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13947:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13932:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13932:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13924:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14004:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14017:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14028:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14013:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14013:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13960:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13960:71:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13960:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "14085:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14098:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14109:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14094:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14094:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14041:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14041:72:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14041:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13878:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13890:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13898:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13909:4:12",
														"type": ""
													}
												],
												"src": "13788:332:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14168:48:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14178:32:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14203:5:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "14196:6:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14196:13:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14189:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14189:21:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "14178:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14150:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "14160:7:12",
														"type": ""
													}
												],
												"src": "14126:90:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14262:76:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14316:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14325:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14328:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14318:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14318:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14318:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14285:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "14307:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "14292:14:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14292:21:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "14282:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14282:32:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14275:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14275:40:12"
															},
															"nodeType": "YulIf",
															"src": "14272:60:12"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14255:5:12",
														"type": ""
													}
												],
												"src": "14222:116:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14404:77:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14414:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "14429:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14423:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14423:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "14414:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14469:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "14445:23:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14445:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14445:30:12"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "14382:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14390:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14398:5:12",
														"type": ""
													}
												],
												"src": "14344:137:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14561:271:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14607:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "14609:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14609:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14609:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14582:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14591:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14578:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14578:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14603:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "14574:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14574:32:12"
															},
															"nodeType": "YulIf",
															"src": "14571:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "14700:125:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "14715:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14729:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "14719:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "14744:71:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "14787:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "14798:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14783:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14783:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14807:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "14754:28:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14754:61:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "14744:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14531:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "14542:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14554:6:12",
														"type": ""
													}
												],
												"src": "14487:345:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14891:32:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14901:16:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "14912:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "14901:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_0_by_1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14873:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "14883:7:12",
														"type": ""
													}
												],
												"src": "14838:85:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14973:45:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14983:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14998:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15005:6:12",
																		"type": "",
																		"value": "0xffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "14994:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14994:18:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "14983:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14955:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "14965:7:12",
														"type": ""
													}
												],
												"src": "14929:89:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15056:28:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15066:12:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "15073:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "15066:3:12"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15042:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "15052:3:12",
														"type": ""
													}
												],
												"src": "15024:60:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15157:89:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15167:73:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "15232:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_0_by_1",
																					"nodeType": "YulIdentifier",
																					"src": "15206:25:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15206:32:12"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "15197:8:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15197:42:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint16",
																	"nodeType": "YulIdentifier",
																	"src": "15180:16:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15180:60:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "15167:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_0_by_1_to_t_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15137:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "15147:9:12",
														"type": ""
													}
												],
												"src": "15090:156:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15324:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15341:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15384:5:12"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_0_by_1_to_t_uint16",
																			"nodeType": "YulIdentifier",
																			"src": "15346:37:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15346:44:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15334:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15334:57:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15334:57:12"
														}
													]
												},
												"name": "abi_encode_t_rational_0_by_1_to_t_uint16_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15312:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15319:3:12",
														"type": ""
													}
												],
												"src": "15252:145:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15592:378:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15602:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15614:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15625:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15610:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15610:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15602:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15683:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15696:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15707:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15692:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15692:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15639:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15639:71:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15639:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "15764:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15777:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15788:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15773:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15773:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15720:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15720:72:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15720:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "15846:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15859:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15870:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15855:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15855:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15802:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15802:72:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15802:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "15935:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15948:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15959:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15944:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15944:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint16_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15884:50:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15884:79:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15884:79:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address_t_rational_0_by_1__to_t_address_t_uint256_t_address_t_uint16__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15540:9:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "15552:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "15560:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15568:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15576:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15587:4:12",
														"type": ""
													}
												],
												"src": "15403:567:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16020:147:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16030:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16053:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "16035:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16035:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "16030:1:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16064:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16087:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "16069:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16069:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "16064:1:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16098:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16109:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16112:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16105:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16105:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "16098:3:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16138:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "16140:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16140:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16140:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16130:1:12"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "16133:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "16127:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16127:10:12"
															},
															"nodeType": "YulIf",
															"src": "16124:36:12"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "16007:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "16010:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "16016:3:12",
														"type": ""
													}
												],
												"src": "15976:191:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16215:133:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16225:32:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16251:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint32",
																	"nodeType": "YulIdentifier",
																	"src": "16234:16:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16234:23:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "16225:5:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16291:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "16293:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16293:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16293:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16272:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16279:10:12",
																		"type": "",
																		"value": "0xffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "16269:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16269:21:12"
															},
															"nodeType": "YulIf",
															"src": "16266:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16322:20:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16333:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16340:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16329:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16329:13:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "16322:3:12"
																}
															]
														}
													]
												},
												"name": "increment_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16201:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "16211:3:12",
														"type": ""
													}
												],
												"src": "16173:175:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16460:55:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16482:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16490:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16478:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16478:14:12"
																	},
																	{
																		"hexValue": "5472616465206572726f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16494:13:12",
																		"type": "",
																		"value": "Trade error"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16471:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16471:37:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16471:37:12"
														}
													]
												},
												"name": "store_literal_in_memory_ca426bfa2827fefdeedc7111ec0137f2bf107ae237d1f8e770fa1907804c1b32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16452:6:12",
														"type": ""
													}
												],
												"src": "16354:161:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16667:220:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16677:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16743:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16748:2:12",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16684:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16684:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16677:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16849:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ca426bfa2827fefdeedc7111ec0137f2bf107ae237d1f8e770fa1907804c1b32",
																	"nodeType": "YulIdentifier",
																	"src": "16760:88:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16760:93:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16760:93:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16862:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16873:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16878:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16869:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16869:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16862:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ca426bfa2827fefdeedc7111ec0137f2bf107ae237d1f8e770fa1907804c1b32_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16655:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16663:3:12",
														"type": ""
													}
												],
												"src": "16521:366:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17064:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17074:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17086:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17097:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17082:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17082:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17074:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17121:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17132:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17117:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17117:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17140:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17146:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17136:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17136:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17110:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17110:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17110:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17166:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17300:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ca426bfa2827fefdeedc7111ec0137f2bf107ae237d1f8e770fa1907804c1b32_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17174:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17174:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17166:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ca426bfa2827fefdeedc7111ec0137f2bf107ae237d1f8e770fa1907804c1b32__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17044:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17059:4:12",
														"type": ""
													}
												],
												"src": "16893:419:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17366:231:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17376:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17399:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint128",
																	"nodeType": "YulIdentifier",
																	"src": "17381:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17381:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "17376:1:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17410:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17433:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint128",
																	"nodeType": "YulIdentifier",
																	"src": "17415:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17415:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "17410:1:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17444:28:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17467:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17470:1:12"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "17463:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17463:9:12"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "17448:11:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17481:41:12",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "17510:11:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint128",
																	"nodeType": "YulIdentifier",
																	"src": "17492:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17492:30:12"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "17481:7:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17568:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "17570:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17570:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17570:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "product",
																				"nodeType": "YulIdentifier",
																				"src": "17545:7:12"
																			},
																			{
																				"name": "product_raw",
																				"nodeType": "YulIdentifier",
																				"src": "17554:11:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "17542:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17542:24:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17535:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17535:32:12"
															},
															"nodeType": "YulIf",
															"src": "17532:58:12"
														}
													]
												},
												"name": "checked_mul_t_uint128",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "17349:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "17352:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "17358:7:12",
														"type": ""
													}
												],
												"src": "17318:279:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17631:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17648:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17651:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17641:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17641:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17641:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17745:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17748:4:12",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17738:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17738:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17738:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17769:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17772:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "17762:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17762:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17762:15:12"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "17603:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17831:143:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17841:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17864:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint128",
																	"nodeType": "YulIdentifier",
																	"src": "17846:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17846:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "17841:1:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17875:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17898:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint128",
																	"nodeType": "YulIdentifier",
																	"src": "17880:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17880:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "17875:1:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17922:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "17924:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17924:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17924:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17919:1:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17912:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17912:9:12"
															},
															"nodeType": "YulIf",
															"src": "17909:35:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17954:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17963:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17966:1:12"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "17959:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17959:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "17954:1:12"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint128",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "17820:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "17823:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "17829:1:12",
														"type": ""
													}
												],
												"src": "17789:185:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18134:288:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18144:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18156:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18167:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18152:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18152:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18144:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "18224:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18237:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18248:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18233:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18233:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18180:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18180:71:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18180:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "18305:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18318:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18329:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18314:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18314:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18261:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18261:72:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18261:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "18387:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18400:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18411:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18396:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18396:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18343:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18343:72:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18343:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18090:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "18102:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "18110:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18118:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18129:4:12",
														"type": ""
													}
												],
												"src": "17980:442:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18534:123:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18556:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18564:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18552:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18552:14:12"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18568:34:12",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18545:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18545:58:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18545:58:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18624:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18632:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18620:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18620:15:12"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18637:12:12",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18613:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18613:37:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18613:37:12"
														}
													]
												},
												"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18526:6:12",
														"type": ""
													}
												],
												"src": "18428:229:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18809:220:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18819:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18885:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18890:2:12",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18826:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18826:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18819:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18991:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																	"nodeType": "YulIdentifier",
																	"src": "18902:88:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18902:93:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18902:93:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19004:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19015:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19020:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19011:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19011:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "19004:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18797:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18805:3:12",
														"type": ""
													}
												],
												"src": "18663:366:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19206:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19216:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19228:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19239:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19224:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19224:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19216:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19263:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19274:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19259:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19259:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19282:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19288:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19278:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19278:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19252:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19252:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19252:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19308:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19442:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19316:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19316:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19308:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19186:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19201:4:12",
														"type": ""
													}
												],
												"src": "19035:419:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19566:119:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19588:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19596:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19584:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19584:14:12"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19600:34:12",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19577:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19577:58:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19577:58:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19656:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19664:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19652:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19652:15:12"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19669:8:12",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19645:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19645:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19645:33:12"
														}
													]
												},
												"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "19558:6:12",
														"type": ""
													}
												],
												"src": "19460:225:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19837:220:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19847:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19913:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19918:2:12",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19854:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19854:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "19847:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20019:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																	"nodeType": "YulIdentifier",
																	"src": "19930:88:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19930:93:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19930:93:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20032:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20043:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20048:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20039:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20039:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "20032:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19825:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19833:3:12",
														"type": ""
													}
												],
												"src": "19691:366:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20234:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20244:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20256:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20267:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20252:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20252:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20244:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20291:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20302:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20287:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20287:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20310:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20316:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20306:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20306:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20280:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20280:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20280:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20336:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20470:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20344:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20344:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20336:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20214:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20229:4:12",
														"type": ""
													}
												],
												"src": "20063:419:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20546:40:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20557:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20573:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "20567:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20567:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "20557:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20529:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "20539:6:12",
														"type": ""
													}
												],
												"src": "20488:98:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20705:34:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20715:18:12",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "20730:3:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "20715:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "20677:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "20682:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "20693:11:12",
														"type": ""
													}
												],
												"src": "20592:147:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20807:184:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20817:10:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "20826:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "20821:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20886:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "20911:3:12"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "20916:1:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "20907:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "20907:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "20930:3:12"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "20935:1:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "20926:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "20926:11:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "20920:5:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "20920:18:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "20900:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20900:39:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20900:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "20847:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "20850:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "20844:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20844:13:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "20858:19:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "20860:15:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "20869:1:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20872:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "20865:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20865:10:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "20860:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "20840:3:12",
																"statements": []
															},
															"src": "20836:113:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "20969:3:12"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "20974:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20965:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20965:16:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20983:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20958:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20958:27:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20958:27:12"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "20789:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "20794:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "20799:6:12",
														"type": ""
													}
												],
												"src": "20745:246:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21105:278:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "21115:52:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21161:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "21129:31:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21129:38:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "21119:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "21176:95:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21259:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "21264:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21183:75:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21183:88:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "21176:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "21319:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21326:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21315:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21315:16:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21333:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "21338:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "21280:34:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21280:65:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21280:65:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21354:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21365:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "21370:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21361:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21361:16:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "21354:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21086:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21093:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21101:3:12",
														"type": ""
													}
												],
												"src": "20997:386:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21523:137:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21534:100:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "21621:6:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21630:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21541:79:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21541:93:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "21534:3:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "21644:10:12",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "21651:3:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "21644:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21502:3:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "21508:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21519:3:12",
														"type": ""
													}
												],
												"src": "21389:271:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21772:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21794:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21802:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21790:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21790:14:12"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21806:31:12",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21783:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21783:55:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21783:55:12"
														}
													]
												},
												"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "21764:6:12",
														"type": ""
													}
												],
												"src": "21666:179:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21997:220:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22007:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22073:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22078:2:12",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22014:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22014:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "22007:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22179:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																	"nodeType": "YulIdentifier",
																	"src": "22090:88:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22090:93:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22090:93:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22192:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22203:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22208:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22199:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22199:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "22192:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21985:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21993:3:12",
														"type": ""
													}
												],
												"src": "21851:366:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22394:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22404:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22416:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22427:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22412:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22412:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22404:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22451:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22462:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22447:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22447:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22470:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22476:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22466:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22466:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22440:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22440:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22440:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22496:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "22630:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22504:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22504:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22496:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22374:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22389:4:12",
														"type": ""
													}
												],
												"src": "22223:419:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22707:40:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22718:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "22734:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "22728:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22728:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "22718:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22690:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "22700:6:12",
														"type": ""
													}
												],
												"src": "22648:99:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22801:54:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22811:38:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "22829:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22836:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22825:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22825:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22845:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "22841:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22841:7:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "22821:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22821:28:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "22811:6:12"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22784:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "22794:6:12",
														"type": ""
													}
												],
												"src": "22753:102:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22953:285:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "22963:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23010:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "22977:32:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22977:39:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "22967:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "23025:78:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23091:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "23096:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23032:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "23032:71:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "23025:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "23151:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23158:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23147:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23147:16:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23165:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "23170:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "23112:34:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "23112:65:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23112:65:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23186:46:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23197:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "23224:6:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "23202:21:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23202:29:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23193:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "23193:39:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "23186:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22934:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22941:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "22949:3:12",
														"type": ""
													}
												],
												"src": "22861:377:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23362:195:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23372:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23384:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23395:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23380:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "23380:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23372:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23419:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23430:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23415:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23415:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "23438:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23444:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "23434:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23434:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23408:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "23408:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23408:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23464:86:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "23536:6:12"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "23545:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23472:63:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "23472:78:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23464:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23334:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "23346:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23357:4:12",
														"type": ""
													}
												],
												"src": "23244:313:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_uint32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint56(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffff)\n    }\n\n    function validator_revert_t_uint56(value) {\n        if iszero(eq(value, cleanup_t_uint56(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint56(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint56(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint56(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint56(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint128(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint128(value) {\n        if iszero(eq(value, cleanup_t_uint128(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint128(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint128(value)\n    }\n\n    function validator_revert_t_enum$_doState_$1663(value) {\n        if iszero(lt(value, 3)) { revert(0, 0) }\n    }\n\n    function abi_decode_t_enum$_doState_$1663(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_enum$_doState_$1663(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint32t_uint128t_enum$_doState_$1663(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint128(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_enum$_doState_$1663(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint32_to_t_uint32(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_t_uint56_to_t_uint56(value, pos) {\n        mstore(pos, cleanup_t_uint56(value))\n    }\n\n    function abi_encode_t_uint128_to_t_uint128(value, pos) {\n        mstore(pos, cleanup_t_uint128(value))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_tradeState_$1669(value) {\n        if iszero(lt(value, 5)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_tradeState_$1669(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_tradeState_$1669(value)\n    }\n\n    function convert_t_enum$_tradeState_$1669_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_tradeState_$1669(value)\n    }\n\n    function abi_encode_t_enum$_tradeState_$1669_to_t_uint8(value, pos) {\n        mstore(pos, convert_t_enum$_tradeState_$1669_to_t_uint8(value))\n    }\n\n    // struct ITimeMarket.tradeMes -> struct ITimeMarket.tradeMes\n    function abi_encode_t_struct$_tradeMes_$1689_memory_ptr_to_t_struct$_tradeMes_$1689_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0120)\n\n        {\n            // tradeId\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint32_to_t_uint32(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // price\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint32_to_t_uint32(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // time\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint56_to_t_uint56(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // amount\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint128_to_t_uint128(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // tokenOneAmount\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // tokenAddress\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // buyerAddress\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // solderAddress\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0xe0))\n        }\n\n        {\n            // _tradeState\n\n            let memberValue0 := mload(add(value, 0x0100))\n            abi_encode_t_enum$_tradeState_$1669_to_t_uint8(memberValue0, add(pos, 0x0100))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_tradeMes_$1689_memory_ptr__to_t_struct$_tradeMes_$1689_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 288)\n\n        abi_encode_t_struct$_tradeMes_$1689_memory_ptr_to_t_struct$_tradeMes_$1689_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint56_to_t_uint56_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint56(value))\n    }\n\n    function abi_encode_tuple_t_uint56__to_t_uint56__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint56_to_t_uint56_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not Owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 9)\n        store_literal_in_memory_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint8_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_sub_t_uint56(x, y) -> diff {\n        x := cleanup_t_uint56(x)\n        y := cleanup_t_uint56(y)\n        diff := sub(x, y)\n\n        if gt(diff, 0xffffffffffffff) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_rational_0_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_0_by_1_to_t_uint16(value) -> converted {\n        converted := cleanup_t_uint16(identity(cleanup_t_rational_0_by_1(value)))\n    }\n\n    function abi_encode_t_rational_0_by_1_to_t_uint16_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_0_by_1_to_t_uint16(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address_t_rational_0_by_1__to_t_address_t_uint256_t_address_t_uint16__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_rational_0_by_1_to_t_uint16_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function increment_t_uint32(value) -> ret {\n        value := cleanup_t_uint32(value)\n        if eq(value, 0xffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_ca426bfa2827fefdeedc7111ec0137f2bf107ae237d1f8e770fa1907804c1b32(memPtr) {\n\n        mstore(add(memPtr, 0), \"Trade error\")\n\n    }\n\n    function abi_encode_t_stringliteral_ca426bfa2827fefdeedc7111ec0137f2bf107ae237d1f8e770fa1907804c1b32_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 11)\n        store_literal_in_memory_ca426bfa2827fefdeedc7111ec0137f2bf107ae237d1f8e770fa1907804c1b32(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ca426bfa2827fefdeedc7111ec0137f2bf107ae237d1f8e770fa1907804c1b32__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ca426bfa2827fefdeedc7111ec0137f2bf107ae237d1f8e770fa1907804c1b32_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint128(x, y) -> product {\n        x := cleanup_t_uint128(x)\n        y := cleanup_t_uint128(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint128(product_raw)\n\n        if iszero(eq(product, product_raw)) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint128(x, y) -> r {\n        x := cleanup_t_uint128(x)\n        y := cleanup_t_uint128(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeERC20: ERC20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r call\")\n\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100885760003560e01c80638acd62721161005b5780638acd6272146100ff578063b7252e8f1461011b578063b9eb899214610137578063cd83432d1461016757610088565b80631b92468d1461008d5780631c48c074146100a9578063635b9a0f146100c5578063845a51ec146100e1575b600080fd5b6100a760048036038101906100a29190611d3e565b610185565b005b6100c360048036038101906100be9190611d3e565b610188565b005b6100df60048036038101906100da9190611e08565b61018b565b005b6100e96102fa565b6040516100f69190611e57565b60405180910390f35b61011960048036038101906101149190611edf565b610324565b005b61013560048036038101906101309190611d3e565b610d80565b005b610151600480360381019061014c9190611d3e565b61166f565b60405161015e91906120c9565b60405180910390f35b61016f6118b5565b60405161017c91906120f4565b60405180910390f35b50565b50565b600080600b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e7c9922f6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021d9190612124565b90508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461028d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610284906121ae565b60405180910390fd5b82600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600060046101000a81548166ffffffffffffff021916908366ffffffffffffff160217905550505050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008473ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610371573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103959190612207565b9050600081600a6103a69190612396565b905060006103b58686846118d1565b905081600a6103c491906123e1565b8110156103d057600080fd5b60008060008060028111156103e8576103e7611f9b565b5b8760028111156103fb576103fa611f9b565b5b0361040c573392506000905061044a565b600160028111156104205761041f611f9b565b5b87600281111561043357610432611f9b565b5b036104445760019050339150610449565b600080fd5b5b62015180600060049054906101000a900466ffffffffffffff1661046e9190612423565b66ffffffffffffff164211156104b0576040517fee1ea89500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104dd3330868d73ffffffffffffffffffffffffffffffffffffffff16611918909392919063ffffffff16565b8973ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16866040518363ffffffff1660e01b815260040161053a92919061246d565b6020604051808303816000875af1158015610559573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057d91906124ce565b50600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663617ba0378b863060006040518563ffffffff1660e01b81526004016105e0949392919061254e565b600060405180830381600087803b1580156105fa57600080fd5b505af115801561060e573d6000803e3d6000fd5b5050505060008054906101000a900463ffffffff16600760008060009054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200190815260200160002060000160006101000a81548163ffffffff021916908363ffffffff16021790555088600760008060009054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200190815260200160002060000160046101000a81548163ffffffff021916908363ffffffff16021790555042600760008060009054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200190815260200160002060000160086101000a81548166ffffffffffffff021916908366ffffffffffffff16021790555087600760008060009054906101000a900463ffffffff1663ffffffff1663ffffffff168152602001908152602001600020600001600f6101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555084600760008060009054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020019081526020016000206001018190555089600760008060009054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200190815260200160002060020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600760008060009054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200190815260200160002060030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600760008060009054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200190815260200160002060040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600760008060009054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200190815260200160002060040160146101000a81548160ff0219169083600481111561096c5761096b611f9b565b5b021790555060008054906101000a900463ffffffff16600860008060009054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548163ffffffff021916908363ffffffff160217905550600760008060009054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200190815260200160002060000160089054906101000a900466ffffffffffffff16600860008060009054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160046101000a81548166ffffffffffffff021916908366ffffffffffffff1602179055506000600860008060009054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600b6101000a81548166ffffffffffffff021916908366ffffffffffffff16021790555083600860008060009054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506000600860008060009054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555033600860008060009054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508360016000828254610d2d9190612593565b9250508190555060008081819054906101000a900463ffffffff1680929190610d55906125c7565b91906101000a81548163ffffffff021916908363ffffffff1602179055505050505050505050505050565b62015180600060049054906101000a900466ffffffffffffff16610da49190612423565b66ffffffffffffff16421115610de6576040517fee1ea89500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600760008363ffffffff1663ffffffff168152602001908152602001600020604051806101200160405290816000820160009054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160049054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160089054906101000a900466ffffffffffffff1666ffffffffffffff1666ffffffffffffff16815260200160008201600f9054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff168152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160149054906101000a900460ff16600481111561100957611008611f9b565b5b600481111561101b5761101a611f9b565b5b81525050905060008160a001519050600082608001519050600061104884602001518560600151846118d1565b90506110773330838673ffffffffffffffffffffffffffffffffffffffff16611918909392919063ffffffff16565b8273ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b81526004016110d492919061246d565b6020604051808303816000875af11580156110f3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061111791906124ce565b50600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663617ba03784833060006040518563ffffffff1660e01b815260040161117a949392919061254e565b600060405180830381600087803b15801561119457600080fd5b505af11580156111a8573d6000803e3d6000fd5b50505050600060048111156111c0576111bf611f9b565b5b84610100015160048111156111d8576111d7611f9b565b5b036112435733600760008763ffffffff1663ffffffff16815260200190815260200160002060040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611316565b6001600481111561125757611256611f9b565b5b846101000151600481111561126f5761126e611f9b565b5b036112da5733600760008763ffffffff1663ffffffff16815260200190815260200160002060030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611315565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161130c9061263f565b60405180910390fd5b5b6002600760008763ffffffff1663ffffffff16815260200190815260200160002060040160146101000a81548160ff0219169083600481111561135c5761135b611f9b565b5b021790555084600860008763ffffffff1663ffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548163ffffffff021916908363ffffffff16021790555042600860008763ffffffff1663ffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160046101000a81548166ffffffffffffff021916908366ffffffffffffff1602179055506000600860008763ffffffff1663ffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600b6101000a81548166ffffffffffffff021916908366ffffffffffffff16021790555080600860008763ffffffff1663ffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506000600860008763ffffffff1663ffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555033600860008763ffffffff1663ffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160008282546116619190612593565b925050819055505050505050565b611677611c36565b600760008363ffffffff1663ffffffff168152602001908152602001600020604051806101200160405290816000820160009054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160049054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160089054906101000a900466ffffffffffffff1666ffffffffffffff1666ffffffffffffff16815260200160008201600f9054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff168152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160149054906101000a900460ff16600481111561189857611897611f9b565b5b60048111156118aa576118a9611f9b565b5b815250509050919050565b60008060049054906101000a900466ffffffffffffff16905090565b6000816103e88563ffffffff16856118e9919061265f565b6118f391906126cb565b6fffffffffffffffffffffffffffffffff1661190f91906123e1565b90509392505050565b61199b846323b872dd60e01b858585604051602401611939939291906126fc565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506119a1565b50505050565b6000611a03826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611a699092919063ffffffff16565b9050600081511480611a25575080806020019051810190611a2491906124ce565b5b611a64576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a5b906127a5565b60405180910390fd5b505050565b6060611a788484600085611a81565b90509392505050565b606082471015611ac6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611abd90612837565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611aef91906128c8565b60006040518083038185875af1925050503d8060008114611b2c576040519150601f19603f3d011682016040523d82523d6000602084013e611b31565b606091505b5091509150611b4287838387611b4e565b92505050949350505050565b60608315611bb0576000835103611ba857611b6885611bc3565b611ba7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b9e9061292b565b60405180910390fd5b5b829050611bbb565b611bba8383611be6565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600082511115611bf95781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c2d91906129a0565b60405180910390fd5b604051806101200160405280600063ffffffff168152602001600063ffffffff168152602001600066ffffffffffffff16815260200160006fffffffffffffffffffffffffffffffff16815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160006004811115611cf757611cf6611f9b565b5b81525090565b600080fd5b600063ffffffff82169050919050565b611d1b81611d02565b8114611d2657600080fd5b50565b600081359050611d3881611d12565b92915050565b600060208284031215611d5457611d53611cfd565b5b6000611d6284828501611d29565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611d9682611d6b565b9050919050565b611da681611d8b565b8114611db157600080fd5b50565b600081359050611dc381611d9d565b92915050565b600066ffffffffffffff82169050919050565b611de581611dc9565b8114611df057600080fd5b50565b600081359050611e0281611ddc565b92915050565b60008060408385031215611e1f57611e1e611cfd565b5b6000611e2d85828601611db4565b9250506020611e3e85828601611df3565b9150509250929050565b611e5181611d8b565b82525050565b6000602082019050611e6c6000830184611e48565b92915050565b60006fffffffffffffffffffffffffffffffff82169050919050565b611e9781611e72565b8114611ea257600080fd5b50565b600081359050611eb481611e8e565b92915050565b60038110611ec757600080fd5b50565b600081359050611ed981611eba565b92915050565b60008060008060808587031215611ef957611ef8611cfd565b5b6000611f0787828801611db4565b9450506020611f1887828801611d29565b9350506040611f2987828801611ea5565b9250506060611f3a87828801611eca565b91505092959194509250565b611f4f81611d02565b82525050565b611f5e81611dc9565b82525050565b611f6d81611e72565b82525050565b6000819050919050565b611f8681611f73565b82525050565b611f9581611d8b565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60058110611fdb57611fda611f9b565b5b50565b6000819050611fec82611fca565b919050565b6000611ffc82611fde565b9050919050565b61200c81611ff1565b82525050565b610120820160008201516120296000850182611f46565b50602082015161203c6020850182611f46565b50604082015161204f6040850182611f55565b5060608201516120626060850182611f64565b5060808201516120756080850182611f7d565b5060a082015161208860a0850182611f8c565b5060c082015161209b60c0850182611f8c565b5060e08201516120ae60e0850182611f8c565b506101008201516120c3610100850182612003565b50505050565b6000610120820190506120df6000830184612012565b92915050565b6120ee81611dc9565b82525050565b600060208201905061210960008301846120e5565b92915050565b60008151905061211e81611d9d565b92915050565b60006020828403121561213a57612139611cfd565b5b60006121488482850161210f565b91505092915050565b600082825260208201905092915050565b7f4e6f74204f776e65720000000000000000000000000000000000000000000000600082015250565b6000612198600983612151565b91506121a382612162565b602082019050919050565b600060208201905081810360008301526121c78161218b565b9050919050565b600060ff82169050919050565b6121e4816121ce565b81146121ef57600080fd5b50565b600081519050612201816121db565b92915050565b60006020828403121561221d5761221c611cfd565b5b600061222b848285016121f2565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b60018511156122ba5780860481111561229657612295612234565b5b60018516156122a55780820291505b80810290506122b385612263565b945061227a565b94509492505050565b6000826122d3576001905061238f565b816122e1576000905061238f565b81600181146122f7576002811461230157612330565b600191505061238f565b60ff84111561231357612312612234565b5b8360020a91508482111561232a57612329612234565b5b5061238f565b5060208310610133831016604e8410600b84101617156123655782820a9050838111156123605761235f612234565b5b61238f565b6123728484846001612270565b9250905081840481111561238957612388612234565b5b81810290505b9392505050565b60006123a182611f73565b91506123ac836121ce565b92506123d97fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846122c3565b905092915050565b60006123ec82611f73565b91506123f783611f73565b925082820261240581611f73565b9150828204841483151761241c5761241b612234565b5b5092915050565b600061242e82611dc9565b915061243983611dc9565b9250828203905066ffffffffffffff81111561245857612457612234565b5b92915050565b61246781611f73565b82525050565b60006040820190506124826000830185611e48565b61248f602083018461245e565b9392505050565b60008115159050919050565b6124ab81612496565b81146124b657600080fd5b50565b6000815190506124c8816124a2565b92915050565b6000602082840312156124e4576124e3611cfd565b5b60006124f2848285016124b9565b91505092915050565b6000819050919050565b600061ffff82169050919050565b6000819050919050565b600061253861253361252e846124fb565b612513565b612505565b9050919050565b6125488161251d565b82525050565b60006080820190506125636000830187611e48565b612570602083018661245e565b61257d6040830185611e48565b61258a606083018461253f565b95945050505050565b600061259e82611f73565b91506125a983611f73565b92508282019050808211156125c1576125c0612234565b5b92915050565b60006125d282611d02565b915063ffffffff82036125e8576125e7612234565b5b600182019050919050565b7f5472616465206572726f72000000000000000000000000000000000000000000600082015250565b6000612629600b83612151565b9150612634826125f3565b602082019050919050565b600060208201905081810360008301526126588161261c565b9050919050565b600061266a82611e72565b915061267583611e72565b925082820261268381611e72565b915080821461269557612694612234565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006126d682611e72565b91506126e183611e72565b9250826126f1576126f061269c565b5b828204905092915050565b60006060820190506127116000830186611e48565b61271e6020830185611e48565b61272b604083018461245e565b949350505050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b600061278f602a83612151565b915061279a82612733565b604082019050919050565b600060208201905081810360008301526127be81612782565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000612821602683612151565b915061282c826127c5565b604082019050919050565b6000602082019050818103600083015261285081612814565b9050919050565b600081519050919050565b600081905092915050565b60005b8381101561288b578082015181840152602081019050612870565b60008484015250505050565b60006128a282612857565b6128ac8185612862565b93506128bc81856020860161286d565b80840191505092915050565b60006128d48284612897565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000612915601d83612151565b9150612920826128df565b602082019050919050565b6000602082019050818103600083015261294481612908565b9050919050565b600081519050919050565b6000601f19601f8301169050919050565b60006129728261294b565b61297c8185612151565b935061298c81856020860161286d565b61299581612956565b840191505092915050565b600060208201905081810360008301526129ba8184612967565b90509291505056fea26469706673582212201a4abd5f4564cf4c6f2778b331a087bf5e7322c6237a6f33f16117af6c6b74d164736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8ACD6272 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8ACD6272 EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0xB7252E8F EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0xB9EB8992 EQ PUSH2 0x137 JUMPI DUP1 PUSH4 0xCD83432D EQ PUSH2 0x167 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x1B92468D EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x1C48C074 EQ PUSH2 0xA9 JUMPI DUP1 PUSH4 0x635B9A0F EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0x845A51EC EQ PUSH2 0xE1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x1D3E JUMP JUMPDEST PUSH2 0x185 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBE SWAP2 SWAP1 PUSH2 0x1D3E JUMP JUMPDEST PUSH2 0x188 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDA SWAP2 SWAP1 PUSH2 0x1E08 JUMP JUMPDEST PUSH2 0x18B JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE9 PUSH2 0x2FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF6 SWAP2 SWAP1 PUSH2 0x1E57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x119 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x114 SWAP2 SWAP1 PUSH2 0x1EDF JUMP JUMPDEST PUSH2 0x324 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x135 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x1D3E JUMP JUMPDEST PUSH2 0xD80 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x151 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14C SWAP2 SWAP1 PUSH2 0x1D3E JUMP JUMPDEST PUSH2 0x166F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15E SWAP2 SWAP1 PUSH2 0x20C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16F PUSH2 0x18B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17C SWAP2 SWAP1 PUSH2 0x20F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xB SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE7C9922F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x2124 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x28D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x284 SWAP1 PUSH2 0x21AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x0 PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH7 0xFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH7 0xFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x371 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x395 SWAP2 SWAP1 PUSH2 0x2207 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0xA PUSH2 0x3A6 SWAP2 SWAP1 PUSH2 0x2396 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3B5 DUP7 DUP7 DUP5 PUSH2 0x18D1 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0xA PUSH2 0x3C4 SWAP2 SWAP1 PUSH2 0x23E1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x3D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3E8 JUMPI PUSH2 0x3E7 PUSH2 0x1F9B JUMP JUMPDEST JUMPDEST DUP8 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3FB JUMPI PUSH2 0x3FA PUSH2 0x1F9B JUMP JUMPDEST JUMPDEST SUB PUSH2 0x40C JUMPI CALLER SWAP3 POP PUSH1 0x0 SWAP1 POP PUSH2 0x44A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x420 JUMPI PUSH2 0x41F PUSH2 0x1F9B JUMP JUMPDEST JUMPDEST DUP8 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x433 JUMPI PUSH2 0x432 PUSH2 0x1F9B JUMP JUMPDEST JUMPDEST SUB PUSH2 0x444 JUMPI PUSH1 0x1 SWAP1 POP CALLER SWAP2 POP PUSH2 0x449 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST JUMPDEST PUSH3 0x15180 PUSH1 0x0 PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH7 0xFFFFFFFFFFFFFF AND PUSH2 0x46E SWAP2 SWAP1 PUSH2 0x2423 JUMP JUMPDEST PUSH7 0xFFFFFFFFFFFFFF AND TIMESTAMP GT ISZERO PUSH2 0x4B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0xEE1EA89500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4DD CALLER ADDRESS DUP7 DUP14 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1918 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x53A SWAP3 SWAP2 SWAP1 PUSH2 0x246D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x559 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x57D SWAP2 SWAP1 PUSH2 0x24CE JUMP JUMPDEST POP PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x617BA037 DUP12 DUP7 ADDRESS PUSH1 0x0 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E0 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x254E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x60E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x7 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP9 PUSH1 0x7 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x7 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH7 0xFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH7 0xFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP8 PUSH1 0x7 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0xF PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0x7 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP10 PUSH1 0x7 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x7 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x7 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x96C JUMPI PUSH2 0x96B PUSH2 0x1F9B JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x7 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH7 0xFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH7 0xFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH7 0xFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0xB PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH7 0xFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH7 0xFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x8 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH1 0x8 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD2D SWAP2 SWAP1 PUSH2 0x2593 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xD55 SWAP1 PUSH2 0x25C7 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0x15180 PUSH1 0x0 PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH7 0xFFFFFFFFFFFFFF AND PUSH2 0xDA4 SWAP2 SWAP1 PUSH2 0x2423 JUMP JUMPDEST PUSH7 0xFFFFFFFFFFFFFF AND TIMESTAMP GT ISZERO PUSH2 0xDE6 JUMPI PUSH1 0x40 MLOAD PUSH32 0xEE1EA89500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH7 0xFFFFFFFFFFFFFF AND PUSH7 0xFFFFFFFFFFFFFF AND PUSH7 0xFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0xF SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1009 JUMPI PUSH2 0x1008 PUSH2 0x1F9B JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x101B JUMPI PUSH2 0x101A PUSH2 0x1F9B JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0xA0 ADD MLOAD SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x80 ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x1048 DUP5 PUSH1 0x20 ADD MLOAD DUP6 PUSH1 0x60 ADD MLOAD DUP5 PUSH2 0x18D1 JUMP JUMPDEST SWAP1 POP PUSH2 0x1077 CALLER ADDRESS DUP4 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1918 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D4 SWAP3 SWAP2 SWAP1 PUSH2 0x246D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10F3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1117 SWAP2 SWAP1 PUSH2 0x24CE JUMP JUMPDEST POP PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x617BA037 DUP5 DUP4 ADDRESS PUSH1 0x0 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x117A SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x254E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11A8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x11C0 JUMPI PUSH2 0x11BF PUSH2 0x1F9B JUMP JUMPDEST JUMPDEST DUP5 PUSH2 0x100 ADD MLOAD PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x11D8 JUMPI PUSH2 0x11D7 PUSH2 0x1F9B JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1243 JUMPI CALLER PUSH1 0x7 PUSH1 0x0 DUP8 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1316 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1257 JUMPI PUSH2 0x1256 PUSH2 0x1F9B JUMP JUMPDEST JUMPDEST DUP5 PUSH2 0x100 ADD MLOAD PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x126F JUMPI PUSH2 0x126E PUSH2 0x1F9B JUMP JUMPDEST JUMPDEST SUB PUSH2 0x12DA JUMPI CALLER PUSH1 0x7 PUSH1 0x0 DUP8 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1315 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x130C SWAP1 PUSH2 0x263F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x2 PUSH1 0x7 PUSH1 0x0 DUP8 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x135C JUMPI PUSH2 0x135B PUSH2 0x1F9B JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0x8 PUSH1 0x0 DUP8 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x8 PUSH1 0x0 DUP8 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH7 0xFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH7 0xFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP8 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0xB PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH7 0xFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH7 0xFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x8 PUSH1 0x0 DUP8 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP8 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH1 0x8 PUSH1 0x0 DUP8 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1661 SWAP2 SWAP1 PUSH2 0x2593 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1677 PUSH2 0x1C36 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH7 0xFFFFFFFFFFFFFF AND PUSH7 0xFFFFFFFFFFFFFF AND PUSH7 0xFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0xF SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1898 JUMPI PUSH2 0x1897 PUSH2 0x1F9B JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x18AA JUMPI PUSH2 0x18A9 PUSH2 0x1F9B JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH7 0xFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x3E8 DUP6 PUSH4 0xFFFFFFFF AND DUP6 PUSH2 0x18E9 SWAP2 SWAP1 PUSH2 0x265F JUMP JUMPDEST PUSH2 0x18F3 SWAP2 SWAP1 PUSH2 0x26CB JUMP JUMPDEST PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x190F SWAP2 SWAP1 PUSH2 0x23E1 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x199B DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1939 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x26FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x19A1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A03 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A69 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ DUP1 PUSH2 0x1A25 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1A24 SWAP2 SWAP1 PUSH2 0x24CE JUMP JUMPDEST JUMPDEST PUSH2 0x1A64 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A5B SWAP1 PUSH2 0x27A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1A78 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1A81 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1AC6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1ABD SWAP1 PUSH2 0x2837 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1AEF SWAP2 SWAP1 PUSH2 0x28C8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1B2C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1B31 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1B42 DUP8 DUP4 DUP4 DUP8 PUSH2 0x1B4E JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1BB0 JUMPI PUSH1 0x0 DUP4 MLOAD SUB PUSH2 0x1BA8 JUMPI PUSH2 0x1B68 DUP6 PUSH2 0x1BC3 JUMP JUMPDEST PUSH2 0x1BA7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B9E SWAP1 PUSH2 0x292B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x1BBB JUMP JUMPDEST PUSH2 0x1BBA DUP4 DUP4 PUSH2 0x1BE6 JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x1BF9 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C2D SWAP2 SWAP1 PUSH2 0x29A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH7 0xFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1CF7 JUMPI PUSH2 0x1CF6 PUSH2 0x1F9B JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D1B DUP2 PUSH2 0x1D02 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D38 DUP2 PUSH2 0x1D12 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D54 JUMPI PUSH2 0x1D53 PUSH2 0x1CFD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D62 DUP5 DUP3 DUP6 ADD PUSH2 0x1D29 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D96 DUP3 PUSH2 0x1D6B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DA6 DUP2 PUSH2 0x1D8B JUMP JUMPDEST DUP2 EQ PUSH2 0x1DB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1DC3 DUP2 PUSH2 0x1D9D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH7 0xFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DE5 DUP2 PUSH2 0x1DC9 JUMP JUMPDEST DUP2 EQ PUSH2 0x1DF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E02 DUP2 PUSH2 0x1DDC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E1F JUMPI PUSH2 0x1E1E PUSH2 0x1CFD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E2D DUP6 DUP3 DUP7 ADD PUSH2 0x1DB4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E3E DUP6 DUP3 DUP7 ADD PUSH2 0x1DF3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E51 DUP2 PUSH2 0x1D8B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E6C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1E48 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E97 DUP2 PUSH2 0x1E72 JUMP JUMPDEST DUP2 EQ PUSH2 0x1EA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1EB4 DUP2 PUSH2 0x1E8E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x1EC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1ED9 DUP2 PUSH2 0x1EBA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1EF9 JUMPI PUSH2 0x1EF8 PUSH2 0x1CFD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F07 DUP8 DUP3 DUP9 ADD PUSH2 0x1DB4 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1F18 DUP8 DUP3 DUP9 ADD PUSH2 0x1D29 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1F29 DUP8 DUP3 DUP9 ADD PUSH2 0x1EA5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x1F3A DUP8 DUP3 DUP9 ADD PUSH2 0x1ECA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x1F4F DUP2 PUSH2 0x1D02 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1F5E DUP2 PUSH2 0x1DC9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1F6D DUP2 PUSH2 0x1E72 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F86 DUP2 PUSH2 0x1F73 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1F95 DUP2 PUSH2 0x1D8B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0x1FDB JUMPI PUSH2 0x1FDA PUSH2 0x1F9B JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x1FEC DUP3 PUSH2 0x1FCA JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FFC DUP3 PUSH2 0x1FDE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x200C DUP2 PUSH2 0x1FF1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x120 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x2029 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x1F46 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x203C PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x1F46 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x204F PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x1F55 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x2062 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x1F64 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x2075 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x1F7D JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x2088 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x1F8C JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x209B PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x1F8C JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x20AE PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x1F8C JUMP JUMPDEST POP PUSH2 0x100 DUP3 ADD MLOAD PUSH2 0x20C3 PUSH2 0x100 DUP6 ADD DUP3 PUSH2 0x2003 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x20DF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2012 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20EE DUP2 PUSH2 0x1DC9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2109 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x20E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x211E DUP2 PUSH2 0x1D9D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x213A JUMPI PUSH2 0x2139 PUSH2 0x1CFD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2148 DUP5 DUP3 DUP6 ADD PUSH2 0x210F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F74204F776E65720000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2198 PUSH1 0x9 DUP4 PUSH2 0x2151 JUMP JUMPDEST SWAP2 POP PUSH2 0x21A3 DUP3 PUSH2 0x2162 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21C7 DUP2 PUSH2 0x218B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21E4 DUP2 PUSH2 0x21CE JUMP JUMPDEST DUP2 EQ PUSH2 0x21EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2201 DUP2 PUSH2 0x21DB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x221D JUMPI PUSH2 0x221C PUSH2 0x1CFD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x222B DUP5 DUP3 DUP6 ADD PUSH2 0x21F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x22BA JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x2296 JUMPI PUSH2 0x2295 PUSH2 0x2234 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x22A5 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x22B3 DUP6 PUSH2 0x2263 JUMP JUMPDEST SWAP5 POP PUSH2 0x227A JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x22D3 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x238F JUMP JUMPDEST DUP2 PUSH2 0x22E1 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x238F JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x22F7 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x2301 JUMPI PUSH2 0x2330 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x238F JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x2313 JUMPI PUSH2 0x2312 PUSH2 0x2234 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x232A JUMPI PUSH2 0x2329 PUSH2 0x2234 JUMP JUMPDEST JUMPDEST POP PUSH2 0x238F JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x2365 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x2360 JUMPI PUSH2 0x235F PUSH2 0x2234 JUMP JUMPDEST JUMPDEST PUSH2 0x238F JUMP JUMPDEST PUSH2 0x2372 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x2270 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x2389 JUMPI PUSH2 0x2388 PUSH2 0x2234 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23A1 DUP3 PUSH2 0x1F73 JUMP JUMPDEST SWAP2 POP PUSH2 0x23AC DUP4 PUSH2 0x21CE JUMP JUMPDEST SWAP3 POP PUSH2 0x23D9 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x22C3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23EC DUP3 PUSH2 0x1F73 JUMP JUMPDEST SWAP2 POP PUSH2 0x23F7 DUP4 PUSH2 0x1F73 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2405 DUP2 PUSH2 0x1F73 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x241C JUMPI PUSH2 0x241B PUSH2 0x2234 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x242E DUP3 PUSH2 0x1DC9 JUMP JUMPDEST SWAP2 POP PUSH2 0x2439 DUP4 PUSH2 0x1DC9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH7 0xFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2458 JUMPI PUSH2 0x2457 PUSH2 0x2234 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2467 DUP2 PUSH2 0x1F73 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2482 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1E48 JUMP JUMPDEST PUSH2 0x248F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x245E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24AB DUP2 PUSH2 0x2496 JUMP JUMPDEST DUP2 EQ PUSH2 0x24B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x24C8 DUP2 PUSH2 0x24A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24E4 JUMPI PUSH2 0x24E3 PUSH2 0x1CFD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x24F2 DUP5 DUP3 DUP6 ADD PUSH2 0x24B9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2538 PUSH2 0x2533 PUSH2 0x252E DUP5 PUSH2 0x24FB JUMP JUMPDEST PUSH2 0x2513 JUMP JUMPDEST PUSH2 0x2505 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2548 DUP2 PUSH2 0x251D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2563 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1E48 JUMP JUMPDEST PUSH2 0x2570 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x245E JUMP JUMPDEST PUSH2 0x257D PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1E48 JUMP JUMPDEST PUSH2 0x258A PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x253F JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x259E DUP3 PUSH2 0x1F73 JUMP JUMPDEST SWAP2 POP PUSH2 0x25A9 DUP4 PUSH2 0x1F73 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x25C1 JUMPI PUSH2 0x25C0 PUSH2 0x2234 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25D2 DUP3 PUSH2 0x1D02 JUMP JUMPDEST SWAP2 POP PUSH4 0xFFFFFFFF DUP3 SUB PUSH2 0x25E8 JUMPI PUSH2 0x25E7 PUSH2 0x2234 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616465206572726F72000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2629 PUSH1 0xB DUP4 PUSH2 0x2151 JUMP JUMPDEST SWAP2 POP PUSH2 0x2634 DUP3 PUSH2 0x25F3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2658 DUP2 PUSH2 0x261C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x266A DUP3 PUSH2 0x1E72 JUMP JUMPDEST SWAP2 POP PUSH2 0x2675 DUP4 PUSH2 0x1E72 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2683 DUP2 PUSH2 0x1E72 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 EQ PUSH2 0x2695 JUMPI PUSH2 0x2694 PUSH2 0x2234 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x26D6 DUP3 PUSH2 0x1E72 JUMP JUMPDEST SWAP2 POP PUSH2 0x26E1 DUP4 PUSH2 0x1E72 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x26F1 JUMPI PUSH2 0x26F0 PUSH2 0x269C JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2711 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1E48 JUMP JUMPDEST PUSH2 0x271E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1E48 JUMP JUMPDEST PUSH2 0x272B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x245E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x278F PUSH1 0x2A DUP4 PUSH2 0x2151 JUMP JUMPDEST SWAP2 POP PUSH2 0x279A DUP3 PUSH2 0x2733 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x27BE DUP2 PUSH2 0x2782 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2821 PUSH1 0x26 DUP4 PUSH2 0x2151 JUMP JUMPDEST SWAP2 POP PUSH2 0x282C DUP3 PUSH2 0x27C5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2850 DUP2 PUSH2 0x2814 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x288B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2870 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28A2 DUP3 PUSH2 0x2857 JUMP JUMPDEST PUSH2 0x28AC DUP2 DUP6 PUSH2 0x2862 JUMP JUMPDEST SWAP4 POP PUSH2 0x28BC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x286D JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28D4 DUP3 DUP5 PUSH2 0x2897 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2915 PUSH1 0x1D DUP4 PUSH2 0x2151 JUMP JUMPDEST SWAP2 POP PUSH2 0x2920 DUP3 PUSH2 0x28DF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2944 DUP2 PUSH2 0x2908 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2972 DUP3 PUSH2 0x294B JUMP JUMPDEST PUSH2 0x297C DUP2 DUP6 PUSH2 0x2151 JUMP JUMPDEST SWAP4 POP PUSH2 0x298C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x286D JUMP JUMPDEST PUSH2 0x2995 DUP2 PUSH2 0x2956 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x29BA DUP2 DUP5 PUSH2 0x2967 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0x4A 0xBD 0x5F GASLIMIT PUSH5 0xCF4C6F2778 0xB3 BALANCE LOG0 DUP8 0xBF 0x5E PUSH20 0x22C6237A6F33F16117AF6C6B74D164736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "442:6430:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5960:58;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6072:53;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1764:160;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6640:94;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1954:2219;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4201:1731;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6493:110;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6777:90;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5960:58;;:::o;6072:53::-;;:::o;1764:160::-;1585:17;1616:12;;;;;;;;;;;1603:36;;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1585:56;;1672:9;1660:21;;:10;:21;;;1652:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;1868:11:::1;1857:10;;:22;;;;;;;;;;;;;;;;;;1903:13;1890:12;;:26;;;;;;;;;;;;;;;;;;1574:140:::0;1764:160;;:::o;6640:94::-;6690:7;6716:10;;;;;;;;;;;6709:17;;6640:94;:::o;1954:2219::-;2093:14;2123:13;2108:38;;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2093:55;;2159:16;2180:8;2176:2;:12;;;;:::i;:::-;2159:29;;2199:13;2215:51;2242:6;2249:7;2257:8;2215:26;:51::i;:::-;2199:67;;2295:8;2292:2;:11;;;;:::i;:::-;2285:5;:18;;2277:27;;;;;;2317:13;2341:14;2368:24;2416:11;2406:21;;;;;;;;:::i;:::-;;:8;:21;;;;;;;;:::i;:::-;;;2403:275;;2449:10;2443:16;;2488:17;2474:31;;2403:275;;;2535:12;2525:22;;;;;;;;:::i;:::-;;:8;:22;;;;;;;;:::i;:::-;;;2522:156;;2577:18;2563:32;;2617:10;2610:17;;2522:156;;;2658:8;;;2522:156;2403:275;2764:6;2751:12;;;;;;;;;;;:19;;;;:::i;:::-;2735:35;;:15;:35;2732:59;;;2779:10;;;;;;;;;;;;;;2732:59;2847:70;2886:10;2905:4;2911:5;2854:13;2847:38;;;;:70;;;;;;:::i;:::-;2970:13;2963:29;;;3001:10;;;;;;;;;;;3013:5;2963:56;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3058:10;;;;;;;;;;;:17;;;3090:13;3147:5;3204:4;3252:1;3058:248;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3341:2;;;;;;;;;;3319:9;:13;3329:2;;;;;;;;;;;3319:13;;;;;;;;;;;;;;;:21;;;:24;;;;;;;;;;;;;;;;;;3374:6;3354:9;:13;3364:2;;;;;;;;;;;3354:13;;;;;;;;;;;;;;;:19;;;:26;;;;;;;;;;;;;;;;;;3417:15;3391:9;:13;3401:2;;;;;;;;;;;3391:13;;;;;;;;;;;;;;;:18;;;:42;;;;;;;;;;;;;;;;;;3465:7;3444:9;:13;3454:2;;;;;;;;;;;3444:13;;;;;;;;;;;;;;;:20;;;:28;;;;;;;;;;;;;;;;;;3512:8;3483:9;:13;3493:2;;;;;;;;;;;3483:13;;;;;;;;;;;;;;;:28;;:37;;;;3558:13;3531:9;:13;3541:2;;;;;;;;;;;3531:13;;;;;;;;;;;;;;;:26;;;:40;;;;;;;;;;;;;;;;;;3609:5;3582:9;:13;3592:2;;;;;;;;;;;3582:13;;;;;;;;;;;;;;;:26;;;:32;;;;;;;;;;;;;;;;;;3653:6;3625:9;:13;3635:2;;;;;;;;;;;3625:13;;;;;;;;;;;;;;;:27;;;:34;;;;;;;;;;;;;;;;;;3696:13;3670:9;:13;3680:2;;;;;;;;;;;3670:13;;;;;;;;;;;;;;;:25;;;:39;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;3760:2;;;;;;;;;;3722:13;:17;3736:2;;;;;;;;;;;3722:17;;;;;;;;;;;;;;;:29;3740:10;3722:29;;;;;;;;;;;;;;;:37;;;:40;;;;;;;;;;;;;;;;;;3813:9;:13;3823:2;;;;;;;;;;;3813:13;;;;;;;;;;;;;;;:18;;;;;;;;;;;;3773:13;:17;3787:2;;;;;;;;;;;3773:17;;;;;;;;;;;;;;;:29;3791:10;3773:29;;;;;;;;;;;;;;;:39;;;:58;;;;;;;;;;;;;;;;;;3880:1;3842:13;:17;3856:2;;;;;;;;;;;3842:17;;;;;;;;;;;;;;;:29;3860:10;3842:29;;;;;;;;;;;;;;;:37;;;:39;;;;;;;;;;;;;;;;;;3937:5;3892:13;:17;3906:2;;;;;;;;;;;3892:17;;;;;;;;;;;;;;;:29;3910:10;3892:29;;;;;;;;;;;;;;;:44;;:50;;;;3994:1;3953:13;:17;3967:2;;;;;;;;;;;3953:17;;;;;;;;;;;;;;;:29;3971:10;3953:29;;;;;;;;;;;;;;;:40;;:42;;;;4041:10;4006:13;:17;4020:2;;;;;;;;;;;4006:17;;;;;;;;;;;;;;;:29;4024:10;4006:29;;;;;;;;;;;;;;;:34;;;:45;;;;;;;;;;;;;;;;;;4145:5;4132:11;;:18;;;;;;;:::i;:::-;;;;;;;;4161:2;;:4;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;2049:2124;;;;;;1954:2219;;;;:::o;4201:1731::-;4335:6;4322:12;;;;;;;;;;;:19;;;;:::i;:::-;4306:35;;:15;:35;4303:59;;;4350:10;;;;;;;;;;;;;;4303:59;4372:27;4400:9;:14;4410:3;4400:14;;;;;;;;;;;;;;;4372:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;4425:21;4447:11;:24;;;4425:46;;4482:23;4506:11;:26;;;4482:50;;4543:13;4557:80;4584:11;:17;;;4602:11;:18;;;4621:15;4557:26;:80::i;:::-;4543:94;;4675:122;4728:10;4761:4;4781:5;4682:13;4675:38;;;;:122;;;;;;:::i;:::-;4852:13;4845:29;;;4883:10;;;;;;;;;;;4895:5;4845:56;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4940:10;;;;;;;;;;;:17;;;4972:13;5029:5;5086:4;5134:1;4940:248;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5227:17;5202:42;;;;;;;;:::i;:::-;;:11;:23;;;:42;;;;;;;;:::i;:::-;;;5199:281;;5289:10;5260:9;:14;5270:3;5260:14;;;;;;;;;;;;;;;:28;;;:39;;;;;;;;;;;;;;;;;;5199:281;;;5344:18;5319:43;;;;;;;;:::i;:::-;;:11;:23;;;:43;;;;;;;;:::i;:::-;;;5316:164;;5406:10;5378:9;:14;5388:3;5378:14;;;;;;;;;;;;;;;:27;;;:38;;;;;;;;;;;;;;;;;;5316:164;;;5447:21;;;;;;;;;;:::i;:::-;;;;;;;;5316:164;5199:281;5527:16;5500:9;:14;5510:3;5500:14;;;;;;;;;;;;;;;:26;;;:43;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;5593:3;5554:13;:18;5568:3;5554:18;;;;;;;;;;;;;;;:30;5573:10;5554:30;;;;;;;;;;;;;;;:38;;;:42;;;;;;;;;;;;;;;;;;5655:15;5607:13;:18;5621:3;5607:18;;;;;;;;;;;;;;;:30;5626:10;5607:30;;;;;;;;;;;;;;;:40;;;:64;;;;;;;;;;;;;;;;;;5721:1;5682:13;:18;5696:3;5682:18;;;;;;;;;;;;;;;:30;5701:10;5682:30;;;;;;;;;;;;;;;:38;;;:40;;;;;;;;;;;;;;;;;;5779:5;5733:13;:18;5747:3;5733:18;;;;;;;;;;;;;;;:30;5752:10;5733:30;;;;;;;;;;;;;;;:45;;:51;;;;5837:1;5795:13;:18;5809:3;5795:18;;;;;;;;;;;;;;;:30;5814:10;5795:30;;;;;;;;;;;;;;;:41;;:43;;;;5885:10;5849:13;:18;5863:3;5849:18;;;;;;;;;;;;;;;:30;5868:10;5849:30;;;;;;;;;;;;;;;:35;;;:46;;;;;;;;;;;;;;;;;;5919:5;5906:11;;:18;;;;;;;:::i;:::-;;;;;;;;4241:1691;;;;4201:1731;:::o;6493:110::-;6547:15;;:::i;:::-;6581:9;:14;6591:3;6581:14;;;;;;;;;;;;;;;6574:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;6493:110;;;:::o;6777:90::-;6822:6;6847:12;;;;;;;;;;;6840:19;;6777:90;:::o;1521:186:11:-;1630:7;1684:15;1679:4;1668:10;1656:22;;:11;:22;;;;:::i;:::-;:27;;;;:::i;:::-;:43;;;;;;:::i;:::-;1649:50;;1521:186;;;;;:::o;1447:205:10:-;1548:96;1568:5;1598:27;;;1627:4;1633:2;1637:5;1575:68;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1548:19;:96::i;:::-;1447:205;;;;:::o;5371:649::-;5795:23;5821:69;5849:4;5821:69;;;;;;;;;;;;;;;;;5829:5;5821:27;;;;:69;;;;;:::i;:::-;5795:95;;5930:1;5909:10;:17;:22;:56;;;;5946:10;5935:30;;;;;;;;;;;;:::i;:::-;5909:56;5901:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;5441:579;5371:649;;:::o;4207:229:8:-;4344:12;4376:52;4398:6;4406:4;4412:1;4415:12;4376:21;:52::i;:::-;4369:59;;4207:229;;;;;:::o;5293:455::-;5463:12;5521:5;5496:21;:30;;5488:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;5581:12;5595:23;5622:6;:11;;5641:5;5648:4;5622:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5580:73;;;;5671:69;5698:6;5706:7;5715:10;5727:12;5671:26;:69::i;:::-;5664:76;;;;5293:455;;;;;;:::o;7866:644::-;8051:12;8080:7;8076:427;;;8129:1;8108:10;:17;:22;8104:290;;8326:18;8337:6;8326:10;:18::i;:::-;8318:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;8104:290;8415:10;8408:17;;;;8076:427;8458:33;8466:10;8478:12;8458:7;:33::i;:::-;7866:644;;;;;;;:::o;1452:326::-;1512:4;1769:1;1747:7;:19;;;:23;1740:30;;1452:326;;;:::o;9052:552::-;9233:1;9213:10;:17;:21;9209:388;;;9445:10;9439:17;9502:15;9489:10;9485:2;9481:19;9474:44;9209:388;9572:12;9565:20;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::o;88:117:12:-;197:1;194;187:12;334:93;370:7;410:10;403:5;399:22;388:33;;334:93;;;:::o;433:120::-;505:23;522:5;505:23;:::i;:::-;498:5;495:34;485:62;;543:1;540;533:12;485:62;433:120;:::o;559:137::-;604:5;642:6;629:20;620:29;;658:32;684:5;658:32;:::i;:::-;559:137;;;;:::o;702:327::-;760:6;809:2;797:9;788:7;784:23;780:32;777:119;;;815:79;;:::i;:::-;777:119;935:1;960:52;1004:7;995:6;984:9;980:22;960:52;:::i;:::-;950:62;;906:116;702:327;;;;:::o;1035:126::-;1072:7;1112:42;1105:5;1101:54;1090:65;;1035:126;;;:::o;1167:96::-;1204:7;1233:24;1251:5;1233:24;:::i;:::-;1222:35;;1167:96;;;:::o;1269:122::-;1342:24;1360:5;1342:24;:::i;:::-;1335:5;1332:35;1322:63;;1381:1;1378;1371:12;1322:63;1269:122;:::o;1397:139::-;1443:5;1481:6;1468:20;1459:29;;1497:33;1524:5;1497:33;:::i;:::-;1397:139;;;;:::o;1542:99::-;1578:7;1618:16;1611:5;1607:28;1596:39;;1542:99;;;:::o;1647:120::-;1719:23;1736:5;1719:23;:::i;:::-;1712:5;1709:34;1699:62;;1757:1;1754;1747:12;1699:62;1647:120;:::o;1773:137::-;1818:5;1856:6;1843:20;1834:29;;1872:32;1898:5;1872:32;:::i;:::-;1773:137;;;;:::o;1916:472::-;1983:6;1991;2040:2;2028:9;2019:7;2015:23;2011:32;2008:119;;;2046:79;;:::i;:::-;2008:119;2166:1;2191:53;2236:7;2227:6;2216:9;2212:22;2191:53;:::i;:::-;2181:63;;2137:117;2293:2;2319:52;2363:7;2354:6;2343:9;2339:22;2319:52;:::i;:::-;2309:62;;2264:117;1916:472;;;;;:::o;2394:118::-;2481:24;2499:5;2481:24;:::i;:::-;2476:3;2469:37;2394:118;;:::o;2518:222::-;2611:4;2649:2;2638:9;2634:18;2626:26;;2662:71;2730:1;2719:9;2715:17;2706:6;2662:71;:::i;:::-;2518:222;;;;:::o;2746:118::-;2783:7;2823:34;2816:5;2812:46;2801:57;;2746:118;;;:::o;2870:122::-;2943:24;2961:5;2943:24;:::i;:::-;2936:5;2933:35;2923:63;;2982:1;2979;2972:12;2923:63;2870:122;:::o;2998:139::-;3044:5;3082:6;3069:20;3060:29;;3098:33;3125:5;3098:33;:::i;:::-;2998:139;;;;:::o;3143:111::-;3228:1;3221:5;3218:12;3208:40;;3244:1;3241;3234:12;3208:40;3143:111;:::o;3260:163::-;3318:5;3356:6;3343:20;3334:29;;3372:45;3411:5;3372:45;:::i;:::-;3260:163;;;;:::o;3429:787::-;3526:6;3534;3542;3550;3599:3;3587:9;3578:7;3574:23;3570:33;3567:120;;;3606:79;;:::i;:::-;3567:120;3726:1;3751:53;3796:7;3787:6;3776:9;3772:22;3751:53;:::i;:::-;3741:63;;3697:117;3853:2;3879:52;3923:7;3914:6;3903:9;3899:22;3879:52;:::i;:::-;3869:62;;3824:117;3980:2;4006:53;4051:7;4042:6;4031:9;4027:22;4006:53;:::i;:::-;3996:63;;3951:118;4108:2;4134:65;4191:7;4182:6;4171:9;4167:22;4134:65;:::i;:::-;4124:75;;4079:130;3429:787;;;;;;;:::o;4222:105::-;4297:23;4314:5;4297:23;:::i;:::-;4292:3;4285:36;4222:105;;:::o;4333:::-;4408:23;4425:5;4408:23;:::i;:::-;4403:3;4396:36;4333:105;;:::o;4444:108::-;4521:24;4539:5;4521:24;:::i;:::-;4516:3;4509:37;4444:108;;:::o;4558:77::-;4595:7;4624:5;4613:16;;4558:77;;;:::o;4641:108::-;4718:24;4736:5;4718:24;:::i;:::-;4713:3;4706:37;4641:108;;:::o;4755:::-;4832:24;4850:5;4832:24;:::i;:::-;4827:3;4820:37;4755:108;;:::o;4869:180::-;4917:77;4914:1;4907:88;5014:4;5011:1;5004:15;5038:4;5035:1;5028:15;5055:120;5143:1;5136:5;5133:12;5123:46;;5149:18;;:::i;:::-;5123:46;5055:120;:::o;5181:141::-;5233:7;5262:5;5251:16;;5268:48;5310:5;5268:48;:::i;:::-;5181:141;;;:::o;5328:::-;5391:9;5424:39;5457:5;5424:39;:::i;:::-;5411:52;;5328:141;;;:::o;5475:147::-;5565:50;5609:5;5565:50;:::i;:::-;5560:3;5553:63;5475:147;;:::o;5694:1788::-;5843:6;5838:3;5834:16;5935:4;5928:5;5924:16;5918:23;5954:61;6009:4;6004:3;6000:14;5986:12;5954:61;:::i;:::-;5860:165;6108:4;6101:5;6097:16;6091:23;6127:61;6182:4;6177:3;6173:14;6159:12;6127:61;:::i;:::-;6035:163;6280:4;6273:5;6269:16;6263:23;6299:61;6354:4;6349:3;6345:14;6331:12;6299:61;:::i;:::-;6208:162;6454:4;6447:5;6443:16;6437:23;6473:63;6530:4;6525:3;6521:14;6507:12;6473:63;:::i;:::-;6380:166;6638:4;6631:5;6627:16;6621:23;6657:63;6714:4;6709:3;6705:14;6691:12;6657:63;:::i;:::-;6556:174;6820:4;6813:5;6809:16;6803:23;6839:63;6896:4;6891:3;6887:14;6873:12;6839:63;:::i;:::-;6740:172;7002:4;6995:5;6991:16;6985:23;7021:63;7078:4;7073:3;7069:14;7055:12;7021:63;:::i;:::-;6922:172;7185:4;7178:5;7174:16;7168:23;7204:63;7261:4;7256:3;7252:14;7238:12;7204:63;:::i;:::-;7104:173;7366:6;7359:5;7355:18;7349:25;7387:78;7457:6;7452:3;7448:16;7434:12;7387:78;:::i;:::-;7287:188;5812:1670;5694:1788;;:::o;7488:327::-;7633:4;7671:3;7660:9;7656:19;7648:27;;7685:123;7805:1;7794:9;7790:17;7781:6;7685:123;:::i;:::-;7488:327;;;;:::o;7821:115::-;7906:23;7923:5;7906:23;:::i;:::-;7901:3;7894:36;7821:115;;:::o;7942:218::-;8033:4;8071:2;8060:9;8056:18;8048:26;;8084:69;8150:1;8139:9;8135:17;8126:6;8084:69;:::i;:::-;7942:218;;;;:::o;8166:143::-;8223:5;8254:6;8248:13;8239:22;;8270:33;8297:5;8270:33;:::i;:::-;8166:143;;;;:::o;8315:351::-;8385:6;8434:2;8422:9;8413:7;8409:23;8405:32;8402:119;;;8440:79;;:::i;:::-;8402:119;8560:1;8585:64;8641:7;8632:6;8621:9;8617:22;8585:64;:::i;:::-;8575:74;;8531:128;8315:351;;;;:::o;8672:169::-;8756:11;8790:6;8785:3;8778:19;8830:4;8825:3;8821:14;8806:29;;8672:169;;;;:::o;8847:159::-;8987:11;8983:1;8975:6;8971:14;8964:35;8847:159;:::o;9012:365::-;9154:3;9175:66;9239:1;9234:3;9175:66;:::i;:::-;9168:73;;9250:93;9339:3;9250:93;:::i;:::-;9368:2;9363:3;9359:12;9352:19;;9012:365;;;:::o;9383:419::-;9549:4;9587:2;9576:9;9572:18;9564:26;;9636:9;9630:4;9626:20;9622:1;9611:9;9607:17;9600:47;9664:131;9790:4;9664:131;:::i;:::-;9656:139;;9383:419;;;:::o;9808:86::-;9843:7;9883:4;9876:5;9872:16;9861:27;;9808:86;;;:::o;9900:118::-;9971:22;9987:5;9971:22;:::i;:::-;9964:5;9961:33;9951:61;;10008:1;10005;9998:12;9951:61;9900:118;:::o;10024:139::-;10079:5;10110:6;10104:13;10095:22;;10126:31;10151:5;10126:31;:::i;:::-;10024:139;;;;:::o;10169:347::-;10237:6;10286:2;10274:9;10265:7;10261:23;10257:32;10254:119;;;10292:79;;:::i;:::-;10254:119;10412:1;10437:62;10491:7;10482:6;10471:9;10467:22;10437:62;:::i;:::-;10427:72;;10383:126;10169:347;;;;:::o;10522:180::-;10570:77;10567:1;10560:88;10667:4;10664:1;10657:15;10691:4;10688:1;10681:15;10708:102;10750:8;10797:5;10794:1;10790:13;10769:34;;10708:102;;;:::o;10816:848::-;10877:5;10884:4;10908:6;10899:15;;10932:5;10923:14;;10946:712;10967:1;10957:8;10954:15;10946:712;;;11062:4;11057:3;11053:14;11047:4;11044:24;11041:50;;;11071:18;;:::i;:::-;11041:50;11121:1;11111:8;11107:16;11104:451;;;11536:4;11529:5;11525:16;11516:25;;11104:451;11586:4;11580;11576:15;11568:23;;11616:32;11639:8;11616:32;:::i;:::-;11604:44;;10946:712;;;10816:848;;;;;;;:::o;11670:1073::-;11724:5;11915:8;11905:40;;11936:1;11927:10;;11938:5;;11905:40;11964:4;11954:36;;11981:1;11972:10;;11983:5;;11954:36;12050:4;12098:1;12093:27;;;;12134:1;12129:191;;;;12043:277;;12093:27;12111:1;12102:10;;12113:5;;;12129:191;12174:3;12164:8;12161:17;12158:43;;;12181:18;;:::i;:::-;12158:43;12230:8;12227:1;12223:16;12214:25;;12265:3;12258:5;12255:14;12252:40;;;12272:18;;:::i;:::-;12252:40;12305:5;;;12043:277;;12429:2;12419:8;12416:16;12410:3;12404:4;12401:13;12397:36;12379:2;12369:8;12366:16;12361:2;12355:4;12352:12;12348:35;12332:111;12329:246;;;12485:8;12479:4;12475:19;12466:28;;12520:3;12513:5;12510:14;12507:40;;;12527:18;;:::i;:::-;12507:40;12560:5;;12329:246;12600:42;12638:3;12628:8;12622:4;12619:1;12600:42;:::i;:::-;12585:57;;;;12674:4;12669:3;12665:14;12658:5;12655:25;12652:51;;;12683:18;;:::i;:::-;12652:51;12732:4;12725:5;12721:16;12712:25;;11670:1073;;;;;;:::o;12749:281::-;12807:5;12831:23;12849:4;12831:23;:::i;:::-;12823:31;;12875:25;12891:8;12875:25;:::i;:::-;12863:37;;12919:104;12956:66;12946:8;12940:4;12919:104;:::i;:::-;12910:113;;12749:281;;;;:::o;13036:410::-;13076:7;13099:20;13117:1;13099:20;:::i;:::-;13094:25;;13133:20;13151:1;13133:20;:::i;:::-;13128:25;;13188:1;13185;13181:9;13210:30;13228:11;13210:30;:::i;:::-;13199:41;;13389:1;13380:7;13376:15;13373:1;13370:22;13350:1;13343:9;13323:83;13300:139;;13419:18;;:::i;:::-;13300:139;13084:362;13036:410;;;;:::o;13452:206::-;13491:4;13511:19;13528:1;13511:19;:::i;:::-;13506:24;;13544:19;13561:1;13544:19;:::i;:::-;13539:24;;13587:1;13584;13580:9;13572:17;;13611:16;13605:4;13602:26;13599:52;;;13631:18;;:::i;:::-;13599:52;13452:206;;;;:::o;13664:118::-;13751:24;13769:5;13751:24;:::i;:::-;13746:3;13739:37;13664:118;;:::o;13788:332::-;13909:4;13947:2;13936:9;13932:18;13924:26;;13960:71;14028:1;14017:9;14013:17;14004:6;13960:71;:::i;:::-;14041:72;14109:2;14098:9;14094:18;14085:6;14041:72;:::i;:::-;13788:332;;;;;:::o;14126:90::-;14160:7;14203:5;14196:13;14189:21;14178:32;;14126:90;;;:::o;14222:116::-;14292:21;14307:5;14292:21;:::i;:::-;14285:5;14282:32;14272:60;;14328:1;14325;14318:12;14272:60;14222:116;:::o;14344:137::-;14398:5;14429:6;14423:13;14414:22;;14445:30;14469:5;14445:30;:::i;:::-;14344:137;;;;:::o;14487:345::-;14554:6;14603:2;14591:9;14582:7;14578:23;14574:32;14571:119;;;14609:79;;:::i;:::-;14571:119;14729:1;14754:61;14807:7;14798:6;14787:9;14783:22;14754:61;:::i;:::-;14744:71;;14700:125;14487:345;;;;:::o;14838:85::-;14883:7;14912:5;14901:16;;14838:85;;;:::o;14929:89::-;14965:7;15005:6;14998:5;14994:18;14983:29;;14929:89;;;:::o;15024:60::-;15052:3;15073:5;15066:12;;15024:60;;;:::o;15090:156::-;15147:9;15180:60;15197:42;15206:32;15232:5;15206:32;:::i;:::-;15197:42;:::i;:::-;15180:60;:::i;:::-;15167:73;;15090:156;;;:::o;15252:145::-;15346:44;15384:5;15346:44;:::i;:::-;15341:3;15334:57;15252:145;;:::o;15403:567::-;15587:4;15625:3;15614:9;15610:19;15602:27;;15639:71;15707:1;15696:9;15692:17;15683:6;15639:71;:::i;:::-;15720:72;15788:2;15777:9;15773:18;15764:6;15720:72;:::i;:::-;15802;15870:2;15859:9;15855:18;15846:6;15802:72;:::i;:::-;15884:79;15959:2;15948:9;15944:18;15935:6;15884:79;:::i;:::-;15403:567;;;;;;;:::o;15976:191::-;16016:3;16035:20;16053:1;16035:20;:::i;:::-;16030:25;;16069:20;16087:1;16069:20;:::i;:::-;16064:25;;16112:1;16109;16105:9;16098:16;;16133:3;16130:1;16127:10;16124:36;;;16140:18;;:::i;:::-;16124:36;15976:191;;;;:::o;16173:175::-;16211:3;16234:23;16251:5;16234:23;:::i;:::-;16225:32;;16279:10;16272:5;16269:21;16266:47;;16293:18;;:::i;:::-;16266:47;16340:1;16333:5;16329:13;16322:20;;16173:175;;;:::o;16354:161::-;16494:13;16490:1;16482:6;16478:14;16471:37;16354:161;:::o;16521:366::-;16663:3;16684:67;16748:2;16743:3;16684:67;:::i;:::-;16677:74;;16760:93;16849:3;16760:93;:::i;:::-;16878:2;16873:3;16869:12;16862:19;;16521:366;;;:::o;16893:419::-;17059:4;17097:2;17086:9;17082:18;17074:26;;17146:9;17140:4;17136:20;17132:1;17121:9;17117:17;17110:47;17174:131;17300:4;17174:131;:::i;:::-;17166:139;;16893:419;;;:::o;17318:279::-;17358:7;17381:20;17399:1;17381:20;:::i;:::-;17376:25;;17415:20;17433:1;17415:20;:::i;:::-;17410:25;;17470:1;17467;17463:9;17492:30;17510:11;17492:30;:::i;:::-;17481:41;;17554:11;17545:7;17542:24;17532:58;;17570:18;;:::i;:::-;17532:58;17366:231;17318:279;;;;:::o;17603:180::-;17651:77;17648:1;17641:88;17748:4;17745:1;17738:15;17772:4;17769:1;17762:15;17789:185;17829:1;17846:20;17864:1;17846:20;:::i;:::-;17841:25;;17880:20;17898:1;17880:20;:::i;:::-;17875:25;;17919:1;17909:35;;17924:18;;:::i;:::-;17909:35;17966:1;17963;17959:9;17954:14;;17789:185;;;;:::o;17980:442::-;18129:4;18167:2;18156:9;18152:18;18144:26;;18180:71;18248:1;18237:9;18233:17;18224:6;18180:71;:::i;:::-;18261:72;18329:2;18318:9;18314:18;18305:6;18261:72;:::i;:::-;18343;18411:2;18400:9;18396:18;18387:6;18343:72;:::i;:::-;17980:442;;;;;;:::o;18428:229::-;18568:34;18564:1;18556:6;18552:14;18545:58;18637:12;18632:2;18624:6;18620:15;18613:37;18428:229;:::o;18663:366::-;18805:3;18826:67;18890:2;18885:3;18826:67;:::i;:::-;18819:74;;18902:93;18991:3;18902:93;:::i;:::-;19020:2;19015:3;19011:12;19004:19;;18663:366;;;:::o;19035:419::-;19201:4;19239:2;19228:9;19224:18;19216:26;;19288:9;19282:4;19278:20;19274:1;19263:9;19259:17;19252:47;19316:131;19442:4;19316:131;:::i;:::-;19308:139;;19035:419;;;:::o;19460:225::-;19600:34;19596:1;19588:6;19584:14;19577:58;19669:8;19664:2;19656:6;19652:15;19645:33;19460:225;:::o;19691:366::-;19833:3;19854:67;19918:2;19913:3;19854:67;:::i;:::-;19847:74;;19930:93;20019:3;19930:93;:::i;:::-;20048:2;20043:3;20039:12;20032:19;;19691:366;;;:::o;20063:419::-;20229:4;20267:2;20256:9;20252:18;20244:26;;20316:9;20310:4;20306:20;20302:1;20291:9;20287:17;20280:47;20344:131;20470:4;20344:131;:::i;:::-;20336:139;;20063:419;;;:::o;20488:98::-;20539:6;20573:5;20567:12;20557:22;;20488:98;;;:::o;20592:147::-;20693:11;20730:3;20715:18;;20592:147;;;;:::o;20745:246::-;20826:1;20836:113;20850:6;20847:1;20844:13;20836:113;;;20935:1;20930:3;20926:11;20920:18;20916:1;20911:3;20907:11;20900:39;20872:2;20869:1;20865:10;20860:15;;20836:113;;;20983:1;20974:6;20969:3;20965:16;20958:27;20807:184;20745:246;;;:::o;20997:386::-;21101:3;21129:38;21161:5;21129:38;:::i;:::-;21183:88;21264:6;21259:3;21183:88;:::i;:::-;21176:95;;21280:65;21338:6;21333:3;21326:4;21319:5;21315:16;21280:65;:::i;:::-;21370:6;21365:3;21361:16;21354:23;;21105:278;20997:386;;;;:::o;21389:271::-;21519:3;21541:93;21630:3;21621:6;21541:93;:::i;:::-;21534:100;;21651:3;21644:10;;21389:271;;;;:::o;21666:179::-;21806:31;21802:1;21794:6;21790:14;21783:55;21666:179;:::o;21851:366::-;21993:3;22014:67;22078:2;22073:3;22014:67;:::i;:::-;22007:74;;22090:93;22179:3;22090:93;:::i;:::-;22208:2;22203:3;22199:12;22192:19;;21851:366;;;:::o;22223:419::-;22389:4;22427:2;22416:9;22412:18;22404:26;;22476:9;22470:4;22466:20;22462:1;22451:9;22447:17;22440:47;22504:131;22630:4;22504:131;:::i;:::-;22496:139;;22223:419;;;:::o;22648:99::-;22700:6;22734:5;22728:12;22718:22;;22648:99;;;:::o;22753:102::-;22794:6;22845:2;22841:7;22836:2;22829:5;22825:14;22821:28;22811:38;;22753:102;;;:::o;22861:377::-;22949:3;22977:39;23010:5;22977:39;:::i;:::-;23032:71;23096:6;23091:3;23032:71;:::i;:::-;23025:78;;23112:65;23170:6;23165:3;23158:4;23151:5;23147:16;23112:65;:::i;:::-;23202:29;23224:6;23202:29;:::i;:::-;23197:3;23193:39;23186:46;;22953:285;22861:377;;;;:::o;23244:313::-;23357:4;23395:2;23384:9;23380:18;23372:26;;23444:9;23438:4;23434:20;23430:1;23419:9;23415:17;23408:47;23472:78;23545:4;23536:6;23472:78;:::i;:::-;23464:86;;23244:313;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2148800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"cancelOrder(uint32)": "413",
								"getClearTime()": "2595",
								"getTradeMes(uint32)": "infinite",
								"matchTrade(uint32)": "infinite",
								"putTrade(address,uint32,uint128,uint8)": "infinite",
								"refund(uint32)": "435",
								"rewardPoolAddress()": "2589",
								"setRewardPool(address,uint56)": "infinite"
							},
							"internal": {
								"getBuyer(uint32)": "infinite",
								"getSolder(uint32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 442,
									"end": 6872,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 442,
									"end": 6872,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 442,
									"end": 6872,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 867,
									"end": 909,
									"name": "PUSH",
									"source": 0,
									"value": "AA8E23FB1079EA71E0A56F48A2AA51851D8433D0"
								},
								{
									"begin": 845,
									"end": 909,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 845,
									"end": 909,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 845,
									"end": 909,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 845,
									"end": 909,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 845,
									"end": 909,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 845,
									"end": 909,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 845,
									"end": 909,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 845,
									"end": 909,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 845,
									"end": 909,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 845,
									"end": 909,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 845,
									"end": 909,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 845,
									"end": 909,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 845,
									"end": 909,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 845,
									"end": 909,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 845,
									"end": 909,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 845,
									"end": 909,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 845,
									"end": 909,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 845,
									"end": 909,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 845,
									"end": 909,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 845,
									"end": 909,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 998,
									"end": 1040,
									"name": "PUSH",
									"source": 0,
									"value": "AF0F6E8B0DC5C913BBF4D14C22B4E78DD14310B6"
								},
								{
									"begin": 973,
									"end": 1040,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 973,
									"end": 1040,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 973,
									"end": 1040,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 973,
									"end": 1040,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 973,
									"end": 1040,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 973,
									"end": 1040,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 973,
									"end": 1040,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 973,
									"end": 1040,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 973,
									"end": 1040,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 973,
									"end": 1040,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 973,
									"end": 1040,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 973,
									"end": 1040,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 973,
									"end": 1040,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 973,
									"end": 1040,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 973,
									"end": 1040,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 973,
									"end": 1040,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 973,
									"end": 1040,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 973,
									"end": 1040,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 973,
									"end": 1040,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 973,
									"end": 1040,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1105,
									"end": 1147,
									"name": "PUSH",
									"source": 0,
									"value": "6AE43D3271FF6888E7FC43FD7321A503FF738951"
								},
								{
									"begin": 1074,
									"end": 1148,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1074,
									"end": 1148,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1074,
									"end": 1148,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1074,
									"end": 1148,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1074,
									"end": 1148,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1074,
									"end": 1148,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1074,
									"end": 1148,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1074,
									"end": 1148,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1074,
									"end": 1148,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1074,
									"end": 1148,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1074,
									"end": 1148,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1074,
									"end": 1148,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1074,
									"end": 1148,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1074,
									"end": 1148,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1074,
									"end": 1148,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1074,
									"end": 1148,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1074,
									"end": 1148,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1074,
									"end": 1148,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1074,
									"end": 1148,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1074,
									"end": 1148,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1157,
									"end": 1270,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1157,
									"end": 1270,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1157,
									"end": 1270,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1157,
									"end": 1270,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1157,
									"end": 1270,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1157,
									"end": 1270,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1157,
									"end": 1270,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1157,
									"end": 1270,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1157,
									"end": 1270,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1157,
									"end": 1270,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1157,
									"end": 1270,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1157,
									"end": 1270,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1157,
									"end": 1270,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1157,
									"end": 1270,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1157,
									"end": 1270,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 1157,
									"end": 1270,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1157,
									"end": 1270,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1157,
									"end": 1270,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1157,
									"end": 1270,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1157,
									"end": 1270,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1157,
									"end": 1270,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1157,
									"end": 1270,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1157,
									"end": 1270,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1157,
									"end": 1270,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1157,
									"end": 1270,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1157,
									"end": 1270,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1157,
									"end": 1270,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1157,
									"end": 1270,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1157,
									"end": 1270,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1157,
									"end": 1270,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1157,
									"end": 1270,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1157,
									"end": 1270,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1157,
									"end": 1270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1157,
									"end": 1270,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1157,
									"end": 1270,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1215,
									"end": 1228,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1214,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1202,
									"end": 1214,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1202,
									"end": 1228,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1202,
									"end": 1228,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1228,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1228,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1228,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1228,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1202,
									"end": 1228,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1228,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1228,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1228,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1228,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1228,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1202,
									"end": 1228,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1228,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1228,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1228,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1228,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1228,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1252,
									"end": 1262,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 1239,
									"end": 1251,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1239,
									"end": 1251,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 1239,
									"end": 1262,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1239,
									"end": 1262,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1239,
									"end": 1262,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1239,
									"end": 1262,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1239,
									"end": 1262,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1239,
									"end": 1262,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1239,
									"end": 1262,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1239,
									"end": 1262,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1239,
									"end": 1262,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1239,
									"end": 1262,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1239,
									"end": 1262,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1239,
									"end": 1262,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1239,
									"end": 1262,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1239,
									"end": 1262,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1239,
									"end": 1262,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1239,
									"end": 1262,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1239,
									"end": 1262,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1239,
									"end": 1262,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1157,
									"end": 1270,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 442,
									"end": 6872,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 442,
									"end": 6872,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 12,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 12,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 12,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 442,
									"end": 6872,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 442,
									"end": 6872,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 442,
									"end": 6872,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 442,
									"end": 6872,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 442,
									"end": 6872,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 442,
									"end": 6872,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 442,
									"end": 6872,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 442,
									"end": 6872,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 442,
									"end": 6872,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201a4abd5f4564cf4c6f2778b331a087bf5e7322c6237a6f33f16117af6c6b74d164736f6c63430008130033",
									".code": [
										{
											"begin": 442,
											"end": 6872,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "PUSH",
											"source": 0,
											"value": "8ACD6272"
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "PUSH",
											"source": 0,
											"value": "8ACD6272"
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "PUSH",
											"source": 0,
											"value": "B7252E8F"
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "PUSH",
											"source": 0,
											"value": "B9EB8992"
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "PUSH",
											"source": 0,
											"value": "CD83432D"
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "PUSH",
											"source": 0,
											"value": "1B92468D"
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "PUSH",
											"source": 0,
											"value": "1C48C074"
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "PUSH",
											"source": 0,
											"value": "635B9A0F"
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "PUSH",
											"source": 0,
											"value": "845A51EC"
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 442,
											"end": 6872,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5960,
											"end": 6018,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5960,
											"end": 6018,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5960,
											"end": 6018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 5960,
											"end": 6018,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5960,
											"end": 6018,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5960,
											"end": 6018,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5960,
											"end": 6018,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5960,
											"end": 6018,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5960,
											"end": 6018,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5960,
											"end": 6018,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5960,
											"end": 6018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 5960,
											"end": 6018,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5960,
											"end": 6018,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5960,
											"end": 6018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 5960,
											"end": 6018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5960,
											"end": 6018,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 5960,
											"end": 6018,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5960,
											"end": 6018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 5960,
											"end": 6018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5960,
											"end": 6018,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 5960,
											"end": 6018,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5960,
											"end": 6018,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6125,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6072,
											"end": 6125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 6072,
											"end": 6125,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6072,
											"end": 6125,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6125,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6125,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6125,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6125,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 6072,
											"end": 6125,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 6072,
											"end": 6125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6125,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 6072,
											"end": 6125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 6072,
											"end": 6125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6125,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 6072,
											"end": 6125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6125,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1764,
											"end": 1924,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1764,
											"end": 1924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1764,
											"end": 1924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1764,
											"end": 1924,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1764,
											"end": 1924,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1764,
											"end": 1924,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1764,
											"end": 1924,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1764,
											"end": 1924,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1764,
											"end": 1924,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1764,
											"end": 1924,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1764,
											"end": 1924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1764,
											"end": 1924,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1764,
											"end": 1924,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1764,
											"end": 1924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1764,
											"end": 1924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1764,
											"end": 1924,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1764,
											"end": 1924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1764,
											"end": 1924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1764,
											"end": 1924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1764,
											"end": 1924,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1764,
											"end": 1924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1764,
											"end": 1924,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 6640,
											"end": 6734,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6640,
											"end": 6734,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6640,
											"end": 6734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 6640,
											"end": 6734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 6640,
											"end": 6734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6640,
											"end": 6734,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 6640,
											"end": 6734,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6640,
											"end": 6734,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6640,
											"end": 6734,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6640,
											"end": 6734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 6640,
											"end": 6734,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6640,
											"end": 6734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6640,
											"end": 6734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 6640,
											"end": 6734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6640,
											"end": 6734,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 6640,
											"end": 6734,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6640,
											"end": 6734,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6640,
											"end": 6734,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6640,
											"end": 6734,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6640,
											"end": 6734,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6640,
											"end": 6734,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6640,
											"end": 6734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6640,
											"end": 6734,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1954,
											"end": 4173,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1954,
											"end": 4173,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1954,
											"end": 4173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1954,
											"end": 4173,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1954,
											"end": 4173,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1954,
											"end": 4173,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1954,
											"end": 4173,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1954,
											"end": 4173,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1954,
											"end": 4173,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1954,
											"end": 4173,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1954,
											"end": 4173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1954,
											"end": 4173,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1954,
											"end": 4173,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1954,
											"end": 4173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1954,
											"end": 4173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1954,
											"end": 4173,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1954,
											"end": 4173,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1954,
											"end": 4173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1954,
											"end": 4173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1954,
											"end": 4173,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1954,
											"end": 4173,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1954,
											"end": 4173,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 5932,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4201,
											"end": 5932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4201,
											"end": 5932,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4201,
											"end": 5932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 5932,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 5932,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 5932,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 5932,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 5932,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4201,
											"end": 5932,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 5932,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 4201,
											"end": 5932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 5932,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4201,
											"end": 5932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4201,
											"end": 5932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 5932,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4201,
											"end": 5932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 5932,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 6493,
											"end": 6603,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 6493,
											"end": 6603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6493,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 6493,
											"end": 6603,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6493,
											"end": 6603,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6493,
											"end": 6603,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6493,
											"end": 6603,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6493,
											"end": 6603,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6493,
											"end": 6603,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6493,
											"end": 6603,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6493,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 6493,
											"end": 6603,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6493,
											"end": 6603,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6493,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 6493,
											"end": 6603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6493,
											"end": 6603,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 6493,
											"end": 6603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6493,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 6493,
											"end": 6603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6493,
											"end": 6603,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 6493,
											"end": 6603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6493,
											"end": 6603,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6493,
											"end": 6603,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6493,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 6493,
											"end": 6603,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6493,
											"end": 6603,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6493,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 6493,
											"end": 6603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6493,
											"end": 6603,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 6493,
											"end": 6603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6493,
											"end": 6603,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6493,
											"end": 6603,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6493,
											"end": 6603,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6493,
											"end": 6603,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6493,
											"end": 6603,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6493,
											"end": 6603,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6493,
											"end": 6603,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 6777,
											"end": 6867,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 6777,
											"end": 6867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6777,
											"end": 6867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 6777,
											"end": 6867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6777,
											"end": 6867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6777,
											"end": 6867,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 6777,
											"end": 6867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6777,
											"end": 6867,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6777,
											"end": 6867,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6777,
											"end": 6867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 6777,
											"end": 6867,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6777,
											"end": 6867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6777,
											"end": 6867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 6777,
											"end": 6867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6777,
											"end": 6867,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 6777,
											"end": 6867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6777,
											"end": 6867,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6777,
											"end": 6867,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6777,
											"end": 6867,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6777,
											"end": 6867,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6777,
											"end": 6867,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6777,
											"end": 6867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6777,
											"end": 6867,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5960,
											"end": 6018,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 5960,
											"end": 6018,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5960,
											"end": 6018,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5960,
											"end": 6018,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6125,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 6072,
											"end": 6125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6125,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1764,
											"end": 1924,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1764,
											"end": 1924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1602,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1616,
											"end": 1628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1616,
											"end": 1628,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 1616,
											"end": 1628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1616,
											"end": 1628,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1616,
											"end": 1628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1616,
											"end": 1628,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1616,
											"end": 1628,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1616,
											"end": 1628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1616,
											"end": 1628,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1616,
											"end": 1628,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1616,
											"end": 1628,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1639,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1603,
											"end": 1639,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1639,
											"name": "PUSH",
											"source": 0,
											"value": "E7C9922F"
										},
										{
											"begin": 1603,
											"end": 1641,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1603,
											"end": 1641,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1641,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1641,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1603,
											"end": 1641,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1641,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1603,
											"end": 1641,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1641,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1641,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1641,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1603,
											"end": 1641,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1641,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1603,
											"end": 1641,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1603,
											"end": 1641,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1641,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1641,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1641,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1641,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1641,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1641,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1641,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1641,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1641,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1641,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1603,
											"end": 1641,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1641,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1641,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1603,
											"end": 1641,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1641,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1641,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1641,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1603,
											"end": 1641,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1641,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1603,
											"end": 1641,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1641,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1641,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1641,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1641,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1641,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1603,
											"end": 1641,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1641,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1641,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1603,
											"end": 1641,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1641,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1603,
											"end": 1641,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1641,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1641,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1641,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1641,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1641,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1641,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1603,
											"end": 1641,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1641,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1641,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1641,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1641,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1603,
											"end": 1641,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1641,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1603,
											"end": 1641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1641,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1603,
											"end": 1641,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1641,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1641,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1672,
											"end": 1681,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1660,
											"end": 1681,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1660,
											"end": 1681,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1660,
											"end": 1670,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1660,
											"end": 1681,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1660,
											"end": 1681,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1660,
											"end": 1681,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1652,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1652,
											"end": 1694,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1652,
											"end": 1694,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1652,
											"end": 1694,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1652,
											"end": 1694,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1652,
											"end": 1694,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1652,
											"end": 1694,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1652,
											"end": 1694,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1652,
											"end": 1694,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1652,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1652,
											"end": 1694,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1652,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1652,
											"end": 1694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1652,
											"end": 1694,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1652,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1652,
											"end": 1694,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1652,
											"end": 1694,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1652,
											"end": 1694,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1652,
											"end": 1694,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1652,
											"end": 1694,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1652,
											"end": 1694,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1652,
											"end": 1694,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1652,
											"end": 1694,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1652,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1868,
											"end": 1879,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1857,
											"end": 1867,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1857,
											"end": 1867,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1857,
											"end": 1879,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1857,
											"end": 1879,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1857,
											"end": 1879,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1857,
											"end": 1879,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1857,
											"end": 1879,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1857,
											"end": 1879,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1857,
											"end": 1879,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1857,
											"end": 1879,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1857,
											"end": 1879,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1857,
											"end": 1879,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1857,
											"end": 1879,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1857,
											"end": 1879,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1857,
											"end": 1879,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1857,
											"end": 1879,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1857,
											"end": 1879,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1857,
											"end": 1879,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1857,
											"end": 1879,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1857,
											"end": 1879,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1903,
											"end": 1916,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1902,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1890,
											"end": 1902,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1890,
											"end": 1916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1890,
											"end": 1916,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1916,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1916,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1916,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFF"
										},
										{
											"begin": 1890,
											"end": 1916,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1916,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1916,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1916,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1916,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFF"
										},
										{
											"begin": 1890,
											"end": 1916,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1916,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1916,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1916,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1916,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1916,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1574,
											"end": 1714,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1764,
											"end": 1924,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1764,
											"end": 1924,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1764,
											"end": 1924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6640,
											"end": 6734,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 6640,
											"end": 6734,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6690,
											"end": 6697,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6716,
											"end": 6726,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6716,
											"end": 6726,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6716,
											"end": 6726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6716,
											"end": 6726,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6716,
											"end": 6726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6716,
											"end": 6726,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6716,
											"end": 6726,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6716,
											"end": 6726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6716,
											"end": 6726,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6716,
											"end": 6726,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6716,
											"end": 6726,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6709,
											"end": 6726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6709,
											"end": 6726,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6640,
											"end": 6734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6640,
											"end": 6734,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1954,
											"end": 4173,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1954,
											"end": 4173,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2093,
											"end": 2107,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2123,
											"end": 2136,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 2108,
											"end": 2148,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2108,
											"end": 2148,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2148,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2108,
											"end": 2148,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2148,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 2108,
											"end": 2148,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2148,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2148,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2108,
											"end": 2148,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2148,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2108,
											"end": 2148,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2108,
											"end": 2148,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2148,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2148,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2148,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2148,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2148,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2148,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2148,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2148,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2148,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2108,
											"end": 2148,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2148,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2148,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2108,
											"end": 2148,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2148,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2148,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2148,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2108,
											"end": 2148,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2148,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2108,
											"end": 2148,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2148,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2148,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2148,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2148,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2148,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2108,
											"end": 2148,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2148,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2148,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2108,
											"end": 2148,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2148,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2108,
											"end": 2148,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2148,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2148,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2148,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2148,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2148,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2148,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2108,
											"end": 2148,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2148,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2148,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2148,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2108,
											"end": 2148,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2148,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2108,
											"end": 2148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2148,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2108,
											"end": 2148,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2093,
											"end": 2148,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2093,
											"end": 2148,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2159,
											"end": 2175,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2180,
											"end": 2188,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2178,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 2176,
											"end": 2188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2176,
											"end": 2188,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2176,
											"end": 2188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2188,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2176,
											"end": 2188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2159,
											"end": 2188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2159,
											"end": 2188,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2199,
											"end": 2212,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2215,
											"end": 2266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2242,
											"end": 2248,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2249,
											"end": 2256,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2257,
											"end": 2265,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2215,
											"end": 2241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2215,
											"end": 2266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2215,
											"end": 2266,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2215,
											"end": 2266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2199,
											"end": 2266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2199,
											"end": 2266,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2295,
											"end": 2303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2294,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 2292,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2292,
											"end": 2303,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2292,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2303,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2292,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2285,
											"end": 2290,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2285,
											"end": 2303,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2285,
											"end": 2303,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2277,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2277,
											"end": 2304,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2277,
											"end": 2304,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2277,
											"end": 2304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2277,
											"end": 2304,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2277,
											"end": 2304,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2277,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2330,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2341,
											"end": 2355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2368,
											"end": 2392,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2416,
											"end": 2427,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2406,
											"end": 2427,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2406,
											"end": 2427,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2406,
											"end": 2427,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2406,
											"end": 2427,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2406,
											"end": 2427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2406,
											"end": 2427,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2406,
											"end": 2427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2406,
											"end": 2427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2406,
											"end": 2427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2406,
											"end": 2427,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2406,
											"end": 2427,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2406,
											"end": 2427,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2406,
											"end": 2427,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2406,
											"end": 2414,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2406,
											"end": 2427,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2406,
											"end": 2427,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2406,
											"end": 2427,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2406,
											"end": 2427,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2406,
											"end": 2427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2406,
											"end": 2427,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2406,
											"end": 2427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2406,
											"end": 2427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2406,
											"end": 2427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2406,
											"end": 2427,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2406,
											"end": 2427,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2406,
											"end": 2427,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2406,
											"end": 2427,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2406,
											"end": 2427,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2403,
											"end": 2678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2403,
											"end": 2678,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2449,
											"end": 2459,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2443,
											"end": 2459,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2443,
											"end": 2459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2505,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2474,
											"end": 2505,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2474,
											"end": 2505,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2403,
											"end": 2678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2403,
											"end": 2678,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2403,
											"end": 2678,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2403,
											"end": 2678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2535,
											"end": 2547,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2525,
											"end": 2547,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2525,
											"end": 2547,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2547,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2547,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2525,
											"end": 2547,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2525,
											"end": 2547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2525,
											"end": 2547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2547,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2525,
											"end": 2547,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2547,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2525,
											"end": 2547,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2533,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2547,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2525,
											"end": 2547,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2547,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2547,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2525,
											"end": 2547,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2525,
											"end": 2547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2525,
											"end": 2547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2547,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2525,
											"end": 2547,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2547,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2525,
											"end": 2547,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2547,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2522,
											"end": 2678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2522,
											"end": 2678,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2577,
											"end": 2595,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2563,
											"end": 2595,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2595,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2627,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2627,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2627,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2522,
											"end": 2678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2522,
											"end": 2678,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2522,
											"end": 2678,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2522,
											"end": 2678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2666,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2658,
											"end": 2666,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2666,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2522,
											"end": 2678,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2522,
											"end": 2678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2403,
											"end": 2678,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2403,
											"end": 2678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2764,
											"end": 2770,
											"name": "PUSH",
											"source": 0,
											"value": "15180"
										},
										{
											"begin": 2751,
											"end": 2763,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2751,
											"end": 2763,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2751,
											"end": 2763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2751,
											"end": 2763,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2751,
											"end": 2763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2751,
											"end": 2763,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2751,
											"end": 2763,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2751,
											"end": 2763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2751,
											"end": 2763,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2751,
											"end": 2763,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFF"
										},
										{
											"begin": 2751,
											"end": 2763,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2751,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2751,
											"end": 2770,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2751,
											"end": 2770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2751,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2751,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2751,
											"end": 2770,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2751,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2735,
											"end": 2770,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFF"
										},
										{
											"begin": 2735,
											"end": 2770,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2735,
											"end": 2750,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 2735,
											"end": 2770,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2791,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2732,
											"end": 2791,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2779,
											"end": 2789,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2779,
											"end": 2789,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2779,
											"end": 2789,
											"name": "PUSH",
											"source": 0,
											"value": "EE1EA89500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2779,
											"end": 2789,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2779,
											"end": 2789,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2779,
											"end": 2789,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2779,
											"end": 2789,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2779,
											"end": 2789,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2779,
											"end": 2789,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2779,
											"end": 2789,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2779,
											"end": 2789,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2779,
											"end": 2789,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2779,
											"end": 2789,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2779,
											"end": 2789,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2791,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2732,
											"end": 2791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2847,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2886,
											"end": 2896,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2905,
											"end": 2909,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 2916,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2867,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 2847,
											"end": 2885,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2847,
											"end": 2885,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2847,
											"end": 2885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2847,
											"end": 2885,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2847,
											"end": 2917,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2847,
											"end": 2917,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2847,
											"end": 2917,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2847,
											"end": 2917,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2847,
											"end": 2917,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2847,
											"end": 2917,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2847,
											"end": 2917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2847,
											"end": 2917,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2847,
											"end": 2917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2970,
											"end": 2983,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 2963,
											"end": 2992,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2963,
											"end": 2992,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2963,
											"end": 2992,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 3001,
											"end": 3011,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3001,
											"end": 3011,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3001,
											"end": 3011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3001,
											"end": 3011,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3001,
											"end": 3011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3001,
											"end": 3011,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3001,
											"end": 3011,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3001,
											"end": 3011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3001,
											"end": 3011,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3001,
											"end": 3011,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3001,
											"end": 3011,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3013,
											"end": 3018,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2963,
											"end": 3019,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2963,
											"end": 3019,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2963,
											"end": 3019,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2963,
											"end": 3019,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2963,
											"end": 3019,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2963,
											"end": 3019,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 2963,
											"end": 3019,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2963,
											"end": 3019,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2963,
											"end": 3019,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2963,
											"end": 3019,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2963,
											"end": 3019,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2963,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2963,
											"end": 3019,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2963,
											"end": 3019,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2963,
											"end": 3019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2963,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2963,
											"end": 3019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2963,
											"end": 3019,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2963,
											"end": 3019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2963,
											"end": 3019,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2963,
											"end": 3019,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2963,
											"end": 3019,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2963,
											"end": 3019,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2963,
											"end": 3019,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2963,
											"end": 3019,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2963,
											"end": 3019,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2963,
											"end": 3019,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2963,
											"end": 3019,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2963,
											"end": 3019,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 2963,
											"end": 3019,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 2963,
											"end": 3019,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2963,
											"end": 3019,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2963,
											"end": 3019,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2963,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2963,
											"end": 3019,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2963,
											"end": 3019,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2963,
											"end": 3019,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2963,
											"end": 3019,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2963,
											"end": 3019,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 2963,
											"end": 3019,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2963,
											"end": 3019,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2963,
											"end": 3019,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2963,
											"end": 3019,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2963,
											"end": 3019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2963,
											"end": 3019,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2963,
											"end": 3019,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2963,
											"end": 3019,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2963,
											"end": 3019,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2963,
											"end": 3019,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2963,
											"end": 3019,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2963,
											"end": 3019,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2963,
											"end": 3019,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2963,
											"end": 3019,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2963,
											"end": 3019,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2963,
											"end": 3019,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2963,
											"end": 3019,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2963,
											"end": 3019,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2963,
											"end": 3019,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2963,
											"end": 3019,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2963,
											"end": 3019,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2963,
											"end": 3019,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2963,
											"end": 3019,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2963,
											"end": 3019,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2963,
											"end": 3019,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2963,
											"end": 3019,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2963,
											"end": 3019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2963,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2963,
											"end": 3019,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2963,
											"end": 3019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2963,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2963,
											"end": 3019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2963,
											"end": 3019,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2963,
											"end": 3019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2963,
											"end": 3019,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3068,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3058,
											"end": 3068,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3058,
											"end": 3068,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3068,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3068,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3068,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3058,
											"end": 3068,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3068,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3068,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3068,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3058,
											"end": 3068,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3075,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3058,
											"end": 3075,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3075,
											"name": "PUSH",
											"source": 0,
											"value": "617BA037"
										},
										{
											"begin": 3090,
											"end": 3103,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 3147,
											"end": 3152,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3204,
											"end": 3208,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 3252,
											"end": 3253,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3058,
											"end": 3306,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3058,
											"end": 3306,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3306,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3306,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3058,
											"end": 3306,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3306,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 3058,
											"end": 3306,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3306,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3306,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3306,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3058,
											"end": 3306,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3058,
											"end": 3306,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3306,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3306,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3306,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3306,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3058,
											"end": 3306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3306,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3058,
											"end": 3306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3306,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3058,
											"end": 3306,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3058,
											"end": 3306,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3306,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3306,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3306,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3306,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3306,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3058,
											"end": 3306,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3306,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3306,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3306,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3306,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3306,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3058,
											"end": 3306,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3306,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3058,
											"end": 3306,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3306,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3306,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3058,
											"end": 3306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3306,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3306,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3306,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3306,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3306,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3306,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3058,
											"end": 3306,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3306,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3306,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3058,
											"end": 3306,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3306,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3306,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3306,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3058,
											"end": 3306,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3306,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3058,
											"end": 3306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3306,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3306,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3306,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3306,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3341,
											"end": 3343,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3341,
											"end": 3343,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3341,
											"end": 3343,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3341,
											"end": 3343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3341,
											"end": 3343,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3341,
											"end": 3343,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3341,
											"end": 3343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3341,
											"end": 3343,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3341,
											"end": 3343,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3341,
											"end": 3343,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3319,
											"end": 3328,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3319,
											"end": 3332,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3329,
											"end": 3331,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3331,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3329,
											"end": 3331,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3331,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3331,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3331,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3329,
											"end": 3331,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3331,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3331,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3331,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3329,
											"end": 3331,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3319,
											"end": 3332,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3319,
											"end": 3332,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3319,
											"end": 3332,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3319,
											"end": 3332,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3319,
											"end": 3332,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3319,
											"end": 3332,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3319,
											"end": 3332,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3319,
											"end": 3332,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3319,
											"end": 3332,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3319,
											"end": 3332,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3319,
											"end": 3332,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3319,
											"end": 3332,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3319,
											"end": 3332,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3319,
											"end": 3332,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3319,
											"end": 3332,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3319,
											"end": 3340,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3319,
											"end": 3340,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3319,
											"end": 3340,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3319,
											"end": 3343,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3319,
											"end": 3343,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3319,
											"end": 3343,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3319,
											"end": 3343,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3319,
											"end": 3343,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3319,
											"end": 3343,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3319,
											"end": 3343,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3319,
											"end": 3343,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3319,
											"end": 3343,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3319,
											"end": 3343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3319,
											"end": 3343,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3319,
											"end": 3343,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3319,
											"end": 3343,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3319,
											"end": 3343,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3319,
											"end": 3343,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3319,
											"end": 3343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3319,
											"end": 3343,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3319,
											"end": 3343,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3374,
											"end": 3380,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 3354,
											"end": 3363,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3354,
											"end": 3367,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3364,
											"end": 3366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3366,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3364,
											"end": 3366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3366,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3366,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3364,
											"end": 3366,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3366,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3366,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3364,
											"end": 3366,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3354,
											"end": 3367,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3354,
											"end": 3367,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3354,
											"end": 3367,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3354,
											"end": 3367,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3354,
											"end": 3367,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3354,
											"end": 3367,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3354,
											"end": 3367,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3354,
											"end": 3367,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3354,
											"end": 3367,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3354,
											"end": 3367,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3354,
											"end": 3367,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3354,
											"end": 3367,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3354,
											"end": 3367,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3354,
											"end": 3367,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3354,
											"end": 3367,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3354,
											"end": 3373,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3354,
											"end": 3373,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3354,
											"end": 3373,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3354,
											"end": 3380,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3354,
											"end": 3380,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3354,
											"end": 3380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3354,
											"end": 3380,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3354,
											"end": 3380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3354,
											"end": 3380,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3354,
											"end": 3380,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3354,
											"end": 3380,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3354,
											"end": 3380,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3354,
											"end": 3380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3354,
											"end": 3380,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3354,
											"end": 3380,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3354,
											"end": 3380,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3354,
											"end": 3380,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3354,
											"end": 3380,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3354,
											"end": 3380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3354,
											"end": 3380,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3354,
											"end": 3380,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3417,
											"end": 3432,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 3391,
											"end": 3400,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3391,
											"end": 3404,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3401,
											"end": 3403,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3401,
											"end": 3403,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3401,
											"end": 3403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3401,
											"end": 3403,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3401,
											"end": 3403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3401,
											"end": 3403,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3401,
											"end": 3403,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3401,
											"end": 3403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3401,
											"end": 3403,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3401,
											"end": 3403,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3401,
											"end": 3403,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3391,
											"end": 3404,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3391,
											"end": 3404,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3391,
											"end": 3404,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3391,
											"end": 3404,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3391,
											"end": 3404,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3391,
											"end": 3404,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3391,
											"end": 3404,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3391,
											"end": 3404,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3391,
											"end": 3404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3391,
											"end": 3404,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3391,
											"end": 3404,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3391,
											"end": 3404,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3391,
											"end": 3404,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3391,
											"end": 3404,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3391,
											"end": 3404,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3391,
											"end": 3409,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3391,
											"end": 3409,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3391,
											"end": 3409,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3391,
											"end": 3433,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3391,
											"end": 3433,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3391,
											"end": 3433,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3391,
											"end": 3433,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3391,
											"end": 3433,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3391,
											"end": 3433,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFF"
										},
										{
											"begin": 3391,
											"end": 3433,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3391,
											"end": 3433,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3391,
											"end": 3433,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3391,
											"end": 3433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3391,
											"end": 3433,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3391,
											"end": 3433,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFF"
										},
										{
											"begin": 3391,
											"end": 3433,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3391,
											"end": 3433,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3391,
											"end": 3433,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3391,
											"end": 3433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3391,
											"end": 3433,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3391,
											"end": 3433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3465,
											"end": 3472,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3444,
											"end": 3453,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3444,
											"end": 3457,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3454,
											"end": 3456,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3454,
											"end": 3456,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3454,
											"end": 3456,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3454,
											"end": 3456,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3454,
											"end": 3456,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3454,
											"end": 3456,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3454,
											"end": 3456,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3454,
											"end": 3456,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3454,
											"end": 3456,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3454,
											"end": 3456,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3454,
											"end": 3456,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3444,
											"end": 3457,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3444,
											"end": 3457,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3444,
											"end": 3457,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3444,
											"end": 3457,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3444,
											"end": 3457,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3444,
											"end": 3457,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3444,
											"end": 3457,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3444,
											"end": 3457,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3444,
											"end": 3457,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3444,
											"end": 3457,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3444,
											"end": 3457,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3444,
											"end": 3457,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3444,
											"end": 3457,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3444,
											"end": 3457,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3444,
											"end": 3457,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3444,
											"end": 3464,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3444,
											"end": 3464,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3444,
											"end": 3464,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 3444,
											"end": 3472,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3444,
											"end": 3472,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3444,
											"end": 3472,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3444,
											"end": 3472,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3444,
											"end": 3472,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3444,
											"end": 3472,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3444,
											"end": 3472,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3444,
											"end": 3472,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3444,
											"end": 3472,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3444,
											"end": 3472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3444,
											"end": 3472,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3444,
											"end": 3472,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3444,
											"end": 3472,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3444,
											"end": 3472,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3444,
											"end": 3472,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3444,
											"end": 3472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3444,
											"end": 3472,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3444,
											"end": 3472,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3512,
											"end": 3520,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3483,
											"end": 3492,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3483,
											"end": 3496,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3493,
											"end": 3495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3493,
											"end": 3495,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3493,
											"end": 3495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3493,
											"end": 3495,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3493,
											"end": 3495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3493,
											"end": 3495,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3493,
											"end": 3495,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3493,
											"end": 3495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3493,
											"end": 3495,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3493,
											"end": 3495,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3493,
											"end": 3495,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3483,
											"end": 3496,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3483,
											"end": 3496,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3483,
											"end": 3496,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3483,
											"end": 3496,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3483,
											"end": 3496,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3483,
											"end": 3496,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3483,
											"end": 3496,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3483,
											"end": 3496,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3483,
											"end": 3496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3483,
											"end": 3496,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3483,
											"end": 3496,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3483,
											"end": 3496,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3483,
											"end": 3496,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3483,
											"end": 3496,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3483,
											"end": 3496,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3483,
											"end": 3511,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3483,
											"end": 3511,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3483,
											"end": 3520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3483,
											"end": 3520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3483,
											"end": 3520,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3483,
											"end": 3520,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3558,
											"end": 3571,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3540,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3531,
											"end": 3544,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3541,
											"end": 3543,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3543,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3541,
											"end": 3543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3543,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3543,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3541,
											"end": 3543,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3543,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3543,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3541,
											"end": 3543,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3544,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3531,
											"end": 3544,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3544,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3531,
											"end": 3544,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3544,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3544,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3531,
											"end": 3544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3544,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3544,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3531,
											"end": 3544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3544,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3531,
											"end": 3544,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3557,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3531,
											"end": 3557,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3557,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3531,
											"end": 3571,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3531,
											"end": 3571,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3571,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3571,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3571,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3571,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3531,
											"end": 3571,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3571,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3571,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3571,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3571,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3571,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3531,
											"end": 3571,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3571,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3571,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3571,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3571,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3571,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3609,
											"end": 3614,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3591,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3582,
											"end": 3595,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3592,
											"end": 3594,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3592,
											"end": 3594,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3592,
											"end": 3594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3592,
											"end": 3594,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3592,
											"end": 3594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3592,
											"end": 3594,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3592,
											"end": 3594,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3592,
											"end": 3594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3592,
											"end": 3594,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3592,
											"end": 3594,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3592,
											"end": 3594,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3595,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3582,
											"end": 3595,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3595,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3582,
											"end": 3595,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3595,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3595,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3595,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3582,
											"end": 3595,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3595,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3595,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3595,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3595,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3582,
											"end": 3595,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3595,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3582,
											"end": 3595,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3608,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3582,
											"end": 3608,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3608,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3582,
											"end": 3614,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3582,
											"end": 3614,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3614,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3614,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3614,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3614,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3582,
											"end": 3614,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3614,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3614,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3614,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3614,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3614,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3582,
											"end": 3614,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3614,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3614,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3614,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3614,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3614,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3653,
											"end": 3659,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3634,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3625,
											"end": 3638,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3635,
											"end": 3637,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3635,
											"end": 3637,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3635,
											"end": 3637,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3635,
											"end": 3637,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3635,
											"end": 3637,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3635,
											"end": 3637,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3635,
											"end": 3637,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3635,
											"end": 3637,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3635,
											"end": 3637,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3635,
											"end": 3637,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3635,
											"end": 3637,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3638,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3625,
											"end": 3638,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3638,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3625,
											"end": 3638,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3638,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3638,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3638,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3625,
											"end": 3638,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3638,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3638,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3638,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3625,
											"end": 3638,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3638,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3625,
											"end": 3638,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3652,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3625,
											"end": 3652,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3652,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3625,
											"end": 3659,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3625,
											"end": 3659,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3659,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3659,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3659,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3659,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3625,
											"end": 3659,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3659,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3659,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3659,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3659,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3659,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3625,
											"end": 3659,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3659,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3659,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3659,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3659,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3659,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3696,
											"end": 3709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3670,
											"end": 3679,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3670,
											"end": 3683,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3680,
											"end": 3682,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3680,
											"end": 3682,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3680,
											"end": 3682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3680,
											"end": 3682,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3680,
											"end": 3682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3680,
											"end": 3682,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3680,
											"end": 3682,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3680,
											"end": 3682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3680,
											"end": 3682,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3680,
											"end": 3682,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3680,
											"end": 3682,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3670,
											"end": 3683,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3670,
											"end": 3683,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3670,
											"end": 3683,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3670,
											"end": 3683,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3670,
											"end": 3683,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3670,
											"end": 3683,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3670,
											"end": 3683,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3670,
											"end": 3683,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3670,
											"end": 3683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3670,
											"end": 3683,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3670,
											"end": 3683,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3670,
											"end": 3683,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3670,
											"end": 3683,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3670,
											"end": 3683,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3670,
											"end": 3683,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3670,
											"end": 3695,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3670,
											"end": 3695,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3670,
											"end": 3695,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 3670,
											"end": 3709,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3670,
											"end": 3709,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3670,
											"end": 3709,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3670,
											"end": 3709,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3670,
											"end": 3709,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3670,
											"end": 3709,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3670,
											"end": 3709,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3670,
											"end": 3709,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3670,
											"end": 3709,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3670,
											"end": 3709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3670,
											"end": 3709,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3670,
											"end": 3709,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3670,
											"end": 3709,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3670,
											"end": 3709,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3670,
											"end": 3709,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3670,
											"end": 3709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3670,
											"end": 3709,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3670,
											"end": 3709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3670,
											"end": 3709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 3670,
											"end": 3709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3670,
											"end": 3709,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3670,
											"end": 3709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3670,
											"end": 3709,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3670,
											"end": 3709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3670,
											"end": 3709,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3670,
											"end": 3709,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3670,
											"end": 3709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3670,
											"end": 3709,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3670,
											"end": 3709,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3760,
											"end": 3762,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3760,
											"end": 3762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3760,
											"end": 3762,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3760,
											"end": 3762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3760,
											"end": 3762,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3760,
											"end": 3762,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3760,
											"end": 3762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3760,
											"end": 3762,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3760,
											"end": 3762,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3760,
											"end": 3762,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3722,
											"end": 3735,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3722,
											"end": 3739,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3736,
											"end": 3738,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3736,
											"end": 3738,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3736,
											"end": 3738,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3736,
											"end": 3738,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3736,
											"end": 3738,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3736,
											"end": 3738,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3736,
											"end": 3738,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3736,
											"end": 3738,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3736,
											"end": 3738,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3736,
											"end": 3738,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3736,
											"end": 3738,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3722,
											"end": 3739,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3722,
											"end": 3739,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3722,
											"end": 3739,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3722,
											"end": 3739,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3722,
											"end": 3739,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3722,
											"end": 3739,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3722,
											"end": 3739,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3722,
											"end": 3739,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3722,
											"end": 3739,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3722,
											"end": 3739,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3722,
											"end": 3739,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3722,
											"end": 3739,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3722,
											"end": 3739,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3722,
											"end": 3739,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3722,
											"end": 3739,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3722,
											"end": 3751,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3740,
											"end": 3750,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3722,
											"end": 3751,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3722,
											"end": 3751,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3722,
											"end": 3751,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3722,
											"end": 3751,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3722,
											"end": 3751,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3722,
											"end": 3751,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3722,
											"end": 3751,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3722,
											"end": 3751,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3722,
											"end": 3751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3722,
											"end": 3751,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3722,
											"end": 3751,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3722,
											"end": 3751,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3722,
											"end": 3751,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3722,
											"end": 3751,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3722,
											"end": 3751,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3722,
											"end": 3759,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3722,
											"end": 3759,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3722,
											"end": 3759,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3722,
											"end": 3762,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3722,
											"end": 3762,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3722,
											"end": 3762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3722,
											"end": 3762,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3722,
											"end": 3762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3722,
											"end": 3762,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3722,
											"end": 3762,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3722,
											"end": 3762,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3722,
											"end": 3762,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3722,
											"end": 3762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3722,
											"end": 3762,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3722,
											"end": 3762,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3722,
											"end": 3762,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3722,
											"end": 3762,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3722,
											"end": 3762,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3722,
											"end": 3762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3722,
											"end": 3762,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3722,
											"end": 3762,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3813,
											"end": 3822,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3813,
											"end": 3826,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3823,
											"end": 3825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3823,
											"end": 3825,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3823,
											"end": 3825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3823,
											"end": 3825,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3823,
											"end": 3825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3823,
											"end": 3825,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3823,
											"end": 3825,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3823,
											"end": 3825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3823,
											"end": 3825,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3823,
											"end": 3825,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3823,
											"end": 3825,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3813,
											"end": 3826,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3813,
											"end": 3826,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3813,
											"end": 3826,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3813,
											"end": 3826,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3813,
											"end": 3826,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3813,
											"end": 3826,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3813,
											"end": 3826,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3813,
											"end": 3826,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3813,
											"end": 3826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3813,
											"end": 3826,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3813,
											"end": 3826,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3813,
											"end": 3826,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3813,
											"end": 3826,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3813,
											"end": 3826,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3813,
											"end": 3826,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3813,
											"end": 3831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3813,
											"end": 3831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3813,
											"end": 3831,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3813,
											"end": 3831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3813,
											"end": 3831,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3813,
											"end": 3831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3813,
											"end": 3831,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3813,
											"end": 3831,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3813,
											"end": 3831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3813,
											"end": 3831,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3813,
											"end": 3831,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFF"
										},
										{
											"begin": 3813,
											"end": 3831,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3773,
											"end": 3786,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3773,
											"end": 3790,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3787,
											"end": 3789,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3787,
											"end": 3789,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3787,
											"end": 3789,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3787,
											"end": 3789,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3787,
											"end": 3789,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3787,
											"end": 3789,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3787,
											"end": 3789,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3787,
											"end": 3789,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3787,
											"end": 3789,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3787,
											"end": 3789,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3787,
											"end": 3789,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3773,
											"end": 3790,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3773,
											"end": 3790,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3773,
											"end": 3790,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3773,
											"end": 3790,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3773,
											"end": 3790,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3773,
											"end": 3790,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3773,
											"end": 3790,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3773,
											"end": 3790,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3773,
											"end": 3790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3773,
											"end": 3790,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3773,
											"end": 3790,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3773,
											"end": 3790,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3773,
											"end": 3790,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3773,
											"end": 3790,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3773,
											"end": 3790,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3773,
											"end": 3802,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3791,
											"end": 3801,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3773,
											"end": 3802,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3773,
											"end": 3802,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3773,
											"end": 3802,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3773,
											"end": 3802,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3773,
											"end": 3802,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3773,
											"end": 3802,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3773,
											"end": 3802,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3773,
											"end": 3802,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3773,
											"end": 3802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3773,
											"end": 3802,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3773,
											"end": 3802,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3773,
											"end": 3802,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3773,
											"end": 3802,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3773,
											"end": 3802,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3773,
											"end": 3802,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3773,
											"end": 3812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3773,
											"end": 3812,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3773,
											"end": 3812,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3773,
											"end": 3831,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3773,
											"end": 3831,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3773,
											"end": 3831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3773,
											"end": 3831,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3773,
											"end": 3831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3773,
											"end": 3831,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFF"
										},
										{
											"begin": 3773,
											"end": 3831,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3773,
											"end": 3831,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3773,
											"end": 3831,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3773,
											"end": 3831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3773,
											"end": 3831,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3773,
											"end": 3831,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFF"
										},
										{
											"begin": 3773,
											"end": 3831,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3773,
											"end": 3831,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3773,
											"end": 3831,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3773,
											"end": 3831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3773,
											"end": 3831,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3773,
											"end": 3831,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3880,
											"end": 3881,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3842,
											"end": 3855,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3842,
											"end": 3859,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3856,
											"end": 3858,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3856,
											"end": 3858,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3856,
											"end": 3858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3856,
											"end": 3858,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3856,
											"end": 3858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3856,
											"end": 3858,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3856,
											"end": 3858,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3856,
											"end": 3858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3856,
											"end": 3858,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3856,
											"end": 3858,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3856,
											"end": 3858,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3842,
											"end": 3859,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3842,
											"end": 3859,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3842,
											"end": 3859,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3842,
											"end": 3859,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3842,
											"end": 3859,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3842,
											"end": 3859,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3842,
											"end": 3859,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3842,
											"end": 3859,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3842,
											"end": 3859,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3842,
											"end": 3859,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3842,
											"end": 3859,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3842,
											"end": 3859,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3842,
											"end": 3859,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3842,
											"end": 3859,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3842,
											"end": 3859,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3842,
											"end": 3871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3860,
											"end": 3870,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3842,
											"end": 3871,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3842,
											"end": 3871,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3842,
											"end": 3871,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3842,
											"end": 3871,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3842,
											"end": 3871,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3842,
											"end": 3871,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3842,
											"end": 3871,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3842,
											"end": 3871,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3842,
											"end": 3871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3842,
											"end": 3871,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3842,
											"end": 3871,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3842,
											"end": 3871,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3842,
											"end": 3871,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3842,
											"end": 3871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3842,
											"end": 3871,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3842,
											"end": 3879,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3842,
											"end": 3879,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3842,
											"end": 3879,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 3842,
											"end": 3881,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3842,
											"end": 3881,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3842,
											"end": 3881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3842,
											"end": 3881,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3842,
											"end": 3881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3842,
											"end": 3881,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFF"
										},
										{
											"begin": 3842,
											"end": 3881,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3842,
											"end": 3881,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3842,
											"end": 3881,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3842,
											"end": 3881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3842,
											"end": 3881,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3842,
											"end": 3881,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFF"
										},
										{
											"begin": 3842,
											"end": 3881,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3842,
											"end": 3881,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3842,
											"end": 3881,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3842,
											"end": 3881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3842,
											"end": 3881,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3842,
											"end": 3881,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3937,
											"end": 3942,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3892,
											"end": 3905,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3892,
											"end": 3909,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3906,
											"end": 3908,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3908,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3906,
											"end": 3908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3908,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3908,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3906,
											"end": 3908,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3908,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3908,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3906,
											"end": 3908,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3892,
											"end": 3909,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3892,
											"end": 3909,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3892,
											"end": 3909,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3892,
											"end": 3909,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3892,
											"end": 3909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3892,
											"end": 3909,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3892,
											"end": 3909,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3892,
											"end": 3909,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3892,
											"end": 3909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3892,
											"end": 3909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3892,
											"end": 3909,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3892,
											"end": 3909,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3892,
											"end": 3909,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3892,
											"end": 3909,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3892,
											"end": 3909,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3892,
											"end": 3921,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3910,
											"end": 3920,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3892,
											"end": 3921,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3892,
											"end": 3921,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3892,
											"end": 3921,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3892,
											"end": 3921,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3892,
											"end": 3921,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3892,
											"end": 3921,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3892,
											"end": 3921,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3892,
											"end": 3921,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3892,
											"end": 3921,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3892,
											"end": 3921,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3892,
											"end": 3921,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3892,
											"end": 3921,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3892,
											"end": 3921,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3892,
											"end": 3921,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3892,
											"end": 3921,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3892,
											"end": 3936,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3892,
											"end": 3936,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3892,
											"end": 3942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3892,
											"end": 3942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3892,
											"end": 3942,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3892,
											"end": 3942,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3994,
											"end": 3995,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3953,
											"end": 3966,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3953,
											"end": 3970,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3967,
											"end": 3969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3967,
											"end": 3969,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3967,
											"end": 3969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3967,
											"end": 3969,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3967,
											"end": 3969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3967,
											"end": 3969,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3967,
											"end": 3969,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3967,
											"end": 3969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3967,
											"end": 3969,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3967,
											"end": 3969,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3967,
											"end": 3969,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3953,
											"end": 3970,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3953,
											"end": 3970,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3953,
											"end": 3970,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3953,
											"end": 3970,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3953,
											"end": 3970,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3953,
											"end": 3970,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3953,
											"end": 3970,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3953,
											"end": 3970,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3953,
											"end": 3970,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3953,
											"end": 3970,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3953,
											"end": 3970,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3953,
											"end": 3970,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3953,
											"end": 3970,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3953,
											"end": 3970,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3953,
											"end": 3970,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3953,
											"end": 3982,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3981,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3953,
											"end": 3982,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3953,
											"end": 3982,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3953,
											"end": 3982,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3953,
											"end": 3982,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3953,
											"end": 3982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3953,
											"end": 3982,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3953,
											"end": 3982,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3953,
											"end": 3982,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3953,
											"end": 3982,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3953,
											"end": 3982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3953,
											"end": 3982,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3953,
											"end": 3982,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3953,
											"end": 3982,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3953,
											"end": 3982,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3953,
											"end": 3982,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3953,
											"end": 3993,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3953,
											"end": 3993,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3953,
											"end": 3995,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3953,
											"end": 3995,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3953,
											"end": 3995,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3953,
											"end": 3995,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4041,
											"end": 4051,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4006,
											"end": 4019,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4006,
											"end": 4023,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4020,
											"end": 4022,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4022,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4020,
											"end": 4022,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4022,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4022,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4022,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4020,
											"end": 4022,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4022,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4022,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4022,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4020,
											"end": 4022,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4006,
											"end": 4023,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4006,
											"end": 4023,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4006,
											"end": 4023,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4006,
											"end": 4023,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4006,
											"end": 4023,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4006,
											"end": 4023,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4006,
											"end": 4023,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4006,
											"end": 4023,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4006,
											"end": 4023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4006,
											"end": 4023,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4006,
											"end": 4023,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4006,
											"end": 4023,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4006,
											"end": 4023,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4006,
											"end": 4023,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4006,
											"end": 4023,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4006,
											"end": 4035,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4024,
											"end": 4034,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4006,
											"end": 4035,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4006,
											"end": 4035,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4006,
											"end": 4035,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4006,
											"end": 4035,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4006,
											"end": 4035,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4006,
											"end": 4035,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4006,
											"end": 4035,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4006,
											"end": 4035,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4006,
											"end": 4035,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4006,
											"end": 4035,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4006,
											"end": 4035,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4006,
											"end": 4035,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4006,
											"end": 4035,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4006,
											"end": 4035,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4006,
											"end": 4035,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4006,
											"end": 4040,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 4006,
											"end": 4040,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4006,
											"end": 4040,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4006,
											"end": 4051,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4006,
											"end": 4051,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4006,
											"end": 4051,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4006,
											"end": 4051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4006,
											"end": 4051,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4006,
											"end": 4051,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4006,
											"end": 4051,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4006,
											"end": 4051,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4006,
											"end": 4051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4006,
											"end": 4051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4006,
											"end": 4051,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4006,
											"end": 4051,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4006,
											"end": 4051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4006,
											"end": 4051,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4006,
											"end": 4051,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 4006,
											"end": 4051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4006,
											"end": 4051,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4006,
											"end": 4051,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4145,
											"end": 4150,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4132,
											"end": 4143,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4132,
											"end": 4143,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4132,
											"end": 4150,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4132,
											"end": 4150,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4132,
											"end": 4150,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4132,
											"end": 4150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 4132,
											"end": 4150,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4132,
											"end": 4150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4132,
											"end": 4150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 4132,
											"end": 4150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4132,
											"end": 4150,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 4132,
											"end": 4150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4132,
											"end": 4150,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4132,
											"end": 4150,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4132,
											"end": 4150,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4132,
											"end": 4150,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4132,
											"end": 4150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4132,
											"end": 4150,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4132,
											"end": 4150,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4161,
											"end": 4163,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4161,
											"end": 4163,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4161,
											"end": 4165,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4161,
											"end": 4165,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4161,
											"end": 4165,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4161,
											"end": 4165,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4161,
											"end": 4165,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4161,
											"end": 4165,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4161,
											"end": 4165,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4161,
											"end": 4165,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4161,
											"end": 4165,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4161,
											"end": 4165,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4161,
											"end": 4165,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4161,
											"end": 4165,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4161,
											"end": 4165,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4161,
											"end": 4165,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4161,
											"end": 4165,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4161,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4161,
											"end": 4165,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4161,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 4161,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4161,
											"end": 4165,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4161,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4161,
											"end": 4165,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4161,
											"end": 4165,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4161,
											"end": 4165,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4161,
											"end": 4165,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4161,
											"end": 4165,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4161,
											"end": 4165,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4161,
											"end": 4165,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4161,
											"end": 4165,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4161,
											"end": 4165,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4161,
											"end": 4165,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4161,
											"end": 4165,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4161,
											"end": 4165,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4161,
											"end": 4165,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4161,
											"end": 4165,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4161,
											"end": 4165,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4161,
											"end": 4165,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4161,
											"end": 4165,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 4161,
											"end": 4165,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4161,
											"end": 4165,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4161,
											"end": 4165,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4161,
											"end": 4165,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2049,
											"end": 4173,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2049,
											"end": 4173,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2049,
											"end": 4173,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2049,
											"end": 4173,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2049,
											"end": 4173,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2049,
											"end": 4173,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1954,
											"end": 4173,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1954,
											"end": 4173,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1954,
											"end": 4173,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1954,
											"end": 4173,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1954,
											"end": 4173,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 5932,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4201,
											"end": 5932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4341,
											"name": "PUSH",
											"source": 0,
											"value": "15180"
										},
										{
											"begin": 4322,
											"end": 4334,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4322,
											"end": 4334,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4322,
											"end": 4334,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4322,
											"end": 4334,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4322,
											"end": 4334,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4322,
											"end": 4334,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4322,
											"end": 4334,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4322,
											"end": 4334,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4322,
											"end": 4334,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4322,
											"end": 4334,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFF"
										},
										{
											"begin": 4322,
											"end": 4334,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4322,
											"end": 4341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 4322,
											"end": 4341,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4322,
											"end": 4341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4322,
											"end": 4341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 4322,
											"end": 4341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4322,
											"end": 4341,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 4322,
											"end": 4341,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4341,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFF"
										},
										{
											"begin": 4306,
											"end": 4341,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4321,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4341,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4303,
											"end": 4362,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4303,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 4303,
											"end": 4362,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4350,
											"end": 4360,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4350,
											"end": 4360,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4350,
											"end": 4360,
											"name": "PUSH",
											"source": 0,
											"value": "EE1EA89500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4350,
											"end": 4360,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4350,
											"end": 4360,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4350,
											"end": 4360,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4350,
											"end": 4360,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4350,
											"end": 4360,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4350,
											"end": 4360,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4350,
											"end": 4360,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4350,
											"end": 4360,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4350,
											"end": 4360,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4350,
											"end": 4360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4350,
											"end": 4360,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4303,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 4303,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4399,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4400,
											"end": 4409,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4400,
											"end": 4414,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4410,
											"end": 4413,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4400,
											"end": 4414,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4400,
											"end": 4414,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4400,
											"end": 4414,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4400,
											"end": 4414,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4400,
											"end": 4414,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4400,
											"end": 4414,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4400,
											"end": 4414,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4400,
											"end": 4414,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4400,
											"end": 4414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4400,
											"end": 4414,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4400,
											"end": 4414,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4400,
											"end": 4414,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4400,
											"end": 4414,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4400,
											"end": 4414,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4400,
											"end": 4414,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "PUSH",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFF"
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFF"
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFF"
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 4372,
											"end": 4414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 4372,
											"end": 4414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4414,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4425,
											"end": 4446,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4447,
											"end": 4458,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4447,
											"end": 4471,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 4447,
											"end": 4471,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4447,
											"end": 4471,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4425,
											"end": 4471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4425,
											"end": 4471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4482,
											"end": 4505,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4506,
											"end": 4517,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4506,
											"end": 4532,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4506,
											"end": 4532,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4506,
											"end": 4532,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4482,
											"end": 4532,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4482,
											"end": 4532,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4543,
											"end": 4556,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4557,
											"end": 4637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 4584,
											"end": 4595,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4584,
											"end": 4601,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4584,
											"end": 4601,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4584,
											"end": 4601,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4613,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4620,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4602,
											"end": 4620,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4620,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4621,
											"end": 4636,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4557,
											"end": 4583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 4557,
											"end": 4637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4557,
											"end": 4637,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 4557,
											"end": 4637,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4543,
											"end": 4637,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4543,
											"end": 4637,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4675,
											"end": 4797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 4728,
											"end": 4738,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4761,
											"end": 4765,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 4781,
											"end": 4786,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4682,
											"end": 4695,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4675,
											"end": 4713,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4675,
											"end": 4713,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4675,
											"end": 4713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 4675,
											"end": 4713,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4675,
											"end": 4797,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4675,
											"end": 4797,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4675,
											"end": 4797,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4675,
											"end": 4797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4675,
											"end": 4797,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4675,
											"end": 4797,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4675,
											"end": 4797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4675,
											"end": 4797,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 4675,
											"end": 4797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4852,
											"end": 4865,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4874,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4845,
											"end": 4874,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4874,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 4883,
											"end": 4893,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4883,
											"end": 4893,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4883,
											"end": 4893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4883,
											"end": 4893,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4883,
											"end": 4893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4883,
											"end": 4893,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4883,
											"end": 4893,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4883,
											"end": 4893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4883,
											"end": 4893,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4883,
											"end": 4893,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4883,
											"end": 4893,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4895,
											"end": 4900,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 4845,
											"end": 4901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 4845,
											"end": 4901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4901,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 4950,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4940,
											"end": 4950,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4940,
											"end": 4950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 4950,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 4950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 4950,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4940,
											"end": 4950,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 4950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 4950,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 4950,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4940,
											"end": 4950,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 4957,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4940,
											"end": 4957,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 4957,
											"name": "PUSH",
											"source": 0,
											"value": "617BA037"
										},
										{
											"begin": 4972,
											"end": 4985,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5029,
											"end": 5034,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5086,
											"end": 5090,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 5134,
											"end": 5135,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4940,
											"end": 5188,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4940,
											"end": 5188,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5188,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5188,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4940,
											"end": 5188,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5188,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 4940,
											"end": 5188,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5188,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5188,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5188,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4940,
											"end": 5188,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 4940,
											"end": 5188,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5188,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5188,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5188,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 4940,
											"end": 5188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5188,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 4940,
											"end": 5188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5188,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4940,
											"end": 5188,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4940,
											"end": 5188,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5188,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5188,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5188,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5188,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5188,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4940,
											"end": 5188,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5188,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5188,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5188,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5188,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5188,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 4940,
											"end": 5188,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5188,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4940,
											"end": 5188,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5188,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5188,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 4940,
											"end": 5188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5188,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5188,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5188,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5188,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5188,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5188,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 4940,
											"end": 5188,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5188,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5188,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4940,
											"end": 5188,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5188,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5188,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5188,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4940,
											"end": 5188,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5188,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 4940,
											"end": 5188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5188,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5188,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5188,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5188,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5227,
											"end": 5244,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5202,
											"end": 5244,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5202,
											"end": 5244,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5202,
											"end": 5244,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5202,
											"end": 5244,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5202,
											"end": 5244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 5202,
											"end": 5244,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5202,
											"end": 5244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 5202,
											"end": 5244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 5202,
											"end": 5244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5202,
											"end": 5244,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 5202,
											"end": 5244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5202,
											"end": 5244,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 5202,
											"end": 5244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5202,
											"end": 5213,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5202,
											"end": 5225,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5202,
											"end": 5225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5202,
											"end": 5225,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5202,
											"end": 5244,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5202,
											"end": 5244,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5202,
											"end": 5244,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5202,
											"end": 5244,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5202,
											"end": 5244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 5202,
											"end": 5244,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5202,
											"end": 5244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 5202,
											"end": 5244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 5202,
											"end": 5244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5202,
											"end": 5244,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 5202,
											"end": 5244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5202,
											"end": 5244,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 5202,
											"end": 5244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5202,
											"end": 5244,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 5199,
											"end": 5480,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5289,
											"end": 5299,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5260,
											"end": 5269,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5260,
											"end": 5274,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5270,
											"end": 5273,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5260,
											"end": 5274,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5260,
											"end": 5274,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5260,
											"end": 5274,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5260,
											"end": 5274,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5260,
											"end": 5274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5260,
											"end": 5274,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5260,
											"end": 5274,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5260,
											"end": 5274,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5260,
											"end": 5274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5260,
											"end": 5274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5260,
											"end": 5274,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5260,
											"end": 5274,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5260,
											"end": 5274,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5260,
											"end": 5274,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5260,
											"end": 5274,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5260,
											"end": 5288,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5260,
											"end": 5288,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5260,
											"end": 5288,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5260,
											"end": 5299,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5260,
											"end": 5299,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5260,
											"end": 5299,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5260,
											"end": 5299,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5260,
											"end": 5299,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5260,
											"end": 5299,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5260,
											"end": 5299,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5260,
											"end": 5299,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5260,
											"end": 5299,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5260,
											"end": 5299,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5260,
											"end": 5299,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5260,
											"end": 5299,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5260,
											"end": 5299,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5260,
											"end": 5299,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5260,
											"end": 5299,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 5260,
											"end": 5299,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5260,
											"end": 5299,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5260,
											"end": 5299,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 5199,
											"end": 5480,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5480,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 5199,
											"end": 5480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5344,
											"end": 5362,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5319,
											"end": 5362,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5319,
											"end": 5362,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5319,
											"end": 5362,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5319,
											"end": 5362,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5319,
											"end": 5362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 5319,
											"end": 5362,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5319,
											"end": 5362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 5319,
											"end": 5362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 5319,
											"end": 5362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5319,
											"end": 5362,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 5319,
											"end": 5362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5319,
											"end": 5362,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 5319,
											"end": 5362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5319,
											"end": 5330,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5319,
											"end": 5342,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5319,
											"end": 5342,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5319,
											"end": 5342,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5319,
											"end": 5362,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5319,
											"end": 5362,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5319,
											"end": 5362,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5319,
											"end": 5362,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5319,
											"end": 5362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 5319,
											"end": 5362,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5319,
											"end": 5362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 5319,
											"end": 5362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 5319,
											"end": 5362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5319,
											"end": 5362,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 5319,
											"end": 5362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5319,
											"end": 5362,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 5319,
											"end": 5362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5319,
											"end": 5362,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5316,
											"end": 5480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 5316,
											"end": 5480,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5406,
											"end": 5416,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5378,
											"end": 5387,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5378,
											"end": 5392,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5388,
											"end": 5391,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5378,
											"end": 5392,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5378,
											"end": 5392,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5378,
											"end": 5392,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5378,
											"end": 5392,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5378,
											"end": 5392,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5378,
											"end": 5392,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5378,
											"end": 5392,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5378,
											"end": 5392,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5378,
											"end": 5392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5378,
											"end": 5392,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5378,
											"end": 5392,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5378,
											"end": 5392,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5378,
											"end": 5392,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5378,
											"end": 5392,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5378,
											"end": 5392,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5378,
											"end": 5405,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5378,
											"end": 5405,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5378,
											"end": 5405,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5378,
											"end": 5416,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5378,
											"end": 5416,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5378,
											"end": 5416,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5378,
											"end": 5416,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5378,
											"end": 5416,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5378,
											"end": 5416,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5378,
											"end": 5416,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5378,
											"end": 5416,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5378,
											"end": 5416,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5378,
											"end": 5416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5378,
											"end": 5416,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5378,
											"end": 5416,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5378,
											"end": 5416,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5378,
											"end": 5416,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5378,
											"end": 5416,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 5378,
											"end": 5416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5378,
											"end": 5416,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5378,
											"end": 5416,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5316,
											"end": 5480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 5316,
											"end": 5480,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5316,
											"end": 5480,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 5316,
											"end": 5480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5447,
											"end": 5468,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5447,
											"end": 5468,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5447,
											"end": 5468,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5447,
											"end": 5468,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5447,
											"end": 5468,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5447,
											"end": 5468,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5447,
											"end": 5468,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5447,
											"end": 5468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 5447,
											"end": 5468,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5447,
											"end": 5468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 5447,
											"end": 5468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5447,
											"end": 5468,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 5447,
											"end": 5468,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5447,
											"end": 5468,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5447,
											"end": 5468,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5447,
											"end": 5468,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5447,
											"end": 5468,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5447,
											"end": 5468,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5447,
											"end": 5468,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5447,
											"end": 5468,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5316,
											"end": 5480,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 5316,
											"end": 5480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5480,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 5199,
											"end": 5480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5527,
											"end": 5543,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5500,
											"end": 5509,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5500,
											"end": 5514,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5510,
											"end": 5513,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5500,
											"end": 5514,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5500,
											"end": 5514,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5500,
											"end": 5514,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5500,
											"end": 5514,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5500,
											"end": 5514,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5500,
											"end": 5514,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5500,
											"end": 5514,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5500,
											"end": 5514,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5500,
											"end": 5514,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5500,
											"end": 5514,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5500,
											"end": 5514,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5500,
											"end": 5514,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5500,
											"end": 5514,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5500,
											"end": 5514,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5500,
											"end": 5514,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5500,
											"end": 5526,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5500,
											"end": 5526,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5500,
											"end": 5526,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 5500,
											"end": 5543,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5500,
											"end": 5543,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5500,
											"end": 5543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5500,
											"end": 5543,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5500,
											"end": 5543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5500,
											"end": 5543,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 5500,
											"end": 5543,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5500,
											"end": 5543,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5500,
											"end": 5543,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5500,
											"end": 5543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5500,
											"end": 5543,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5500,
											"end": 5543,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5500,
											"end": 5543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5500,
											"end": 5543,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5500,
											"end": 5543,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5500,
											"end": 5543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 5500,
											"end": 5543,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5500,
											"end": 5543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 5500,
											"end": 5543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 5500,
											"end": 5543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5500,
											"end": 5543,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 5500,
											"end": 5543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5500,
											"end": 5543,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 5500,
											"end": 5543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5500,
											"end": 5543,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5500,
											"end": 5543,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 5500,
											"end": 5543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5500,
											"end": 5543,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5500,
											"end": 5543,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5593,
											"end": 5596,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5554,
											"end": 5567,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5554,
											"end": 5572,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5568,
											"end": 5571,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5554,
											"end": 5572,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5554,
											"end": 5572,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5554,
											"end": 5572,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5554,
											"end": 5572,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5554,
											"end": 5572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5554,
											"end": 5572,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5554,
											"end": 5572,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5554,
											"end": 5572,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5554,
											"end": 5572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5554,
											"end": 5572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5554,
											"end": 5572,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5554,
											"end": 5572,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5554,
											"end": 5572,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5554,
											"end": 5572,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5554,
											"end": 5572,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5554,
											"end": 5584,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5573,
											"end": 5583,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5554,
											"end": 5584,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5554,
											"end": 5584,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5554,
											"end": 5584,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5554,
											"end": 5584,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5554,
											"end": 5584,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5554,
											"end": 5584,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5554,
											"end": 5584,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5554,
											"end": 5584,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5554,
											"end": 5584,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5554,
											"end": 5584,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5554,
											"end": 5584,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5554,
											"end": 5584,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5554,
											"end": 5584,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5554,
											"end": 5584,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5554,
											"end": 5584,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5554,
											"end": 5592,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5554,
											"end": 5592,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5554,
											"end": 5592,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5554,
											"end": 5596,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5554,
											"end": 5596,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5554,
											"end": 5596,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5554,
											"end": 5596,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5554,
											"end": 5596,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5554,
											"end": 5596,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5554,
											"end": 5596,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5554,
											"end": 5596,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5554,
											"end": 5596,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5554,
											"end": 5596,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5554,
											"end": 5596,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5554,
											"end": 5596,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5554,
											"end": 5596,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5554,
											"end": 5596,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5554,
											"end": 5596,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 5554,
											"end": 5596,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5554,
											"end": 5596,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5554,
											"end": 5596,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5655,
											"end": 5670,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 5607,
											"end": 5620,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5607,
											"end": 5625,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5621,
											"end": 5624,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5607,
											"end": 5625,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5607,
											"end": 5625,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5607,
											"end": 5625,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5607,
											"end": 5625,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5607,
											"end": 5625,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5607,
											"end": 5625,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5607,
											"end": 5625,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5607,
											"end": 5625,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5607,
											"end": 5625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5607,
											"end": 5625,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5607,
											"end": 5625,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5607,
											"end": 5625,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5607,
											"end": 5625,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5607,
											"end": 5625,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5607,
											"end": 5625,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5607,
											"end": 5637,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5626,
											"end": 5636,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5607,
											"end": 5637,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5607,
											"end": 5637,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5607,
											"end": 5637,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5607,
											"end": 5637,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5607,
											"end": 5637,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5607,
											"end": 5637,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5607,
											"end": 5637,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5607,
											"end": 5637,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5607,
											"end": 5637,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5607,
											"end": 5637,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5607,
											"end": 5637,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5607,
											"end": 5637,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5607,
											"end": 5637,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5607,
											"end": 5637,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5607,
											"end": 5637,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5607,
											"end": 5647,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5607,
											"end": 5647,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5607,
											"end": 5647,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5607,
											"end": 5671,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5607,
											"end": 5671,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5607,
											"end": 5671,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5607,
											"end": 5671,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5607,
											"end": 5671,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5607,
											"end": 5671,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFF"
										},
										{
											"begin": 5607,
											"end": 5671,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5607,
											"end": 5671,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5607,
											"end": 5671,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5607,
											"end": 5671,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5607,
											"end": 5671,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5607,
											"end": 5671,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFF"
										},
										{
											"begin": 5607,
											"end": 5671,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5607,
											"end": 5671,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5607,
											"end": 5671,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 5607,
											"end": 5671,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5607,
											"end": 5671,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5607,
											"end": 5671,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5721,
											"end": 5722,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5682,
											"end": 5695,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5682,
											"end": 5700,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5696,
											"end": 5699,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5682,
											"end": 5700,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5682,
											"end": 5700,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5682,
											"end": 5700,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5682,
											"end": 5700,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5682,
											"end": 5700,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5682,
											"end": 5700,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5682,
											"end": 5700,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5682,
											"end": 5700,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5682,
											"end": 5700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5682,
											"end": 5700,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5682,
											"end": 5700,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5682,
											"end": 5700,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5682,
											"end": 5700,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5682,
											"end": 5700,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5682,
											"end": 5700,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5682,
											"end": 5712,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5701,
											"end": 5711,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5682,
											"end": 5712,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5682,
											"end": 5712,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5682,
											"end": 5712,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5682,
											"end": 5712,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5682,
											"end": 5712,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5682,
											"end": 5712,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5682,
											"end": 5712,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5682,
											"end": 5712,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5682,
											"end": 5712,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5682,
											"end": 5712,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5682,
											"end": 5712,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5682,
											"end": 5712,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5682,
											"end": 5712,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5682,
											"end": 5712,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5682,
											"end": 5712,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5682,
											"end": 5720,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5682,
											"end": 5720,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5682,
											"end": 5720,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 5682,
											"end": 5722,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5682,
											"end": 5722,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5682,
											"end": 5722,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5682,
											"end": 5722,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5682,
											"end": 5722,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5682,
											"end": 5722,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFF"
										},
										{
											"begin": 5682,
											"end": 5722,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5682,
											"end": 5722,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5682,
											"end": 5722,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5682,
											"end": 5722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5682,
											"end": 5722,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5682,
											"end": 5722,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFF"
										},
										{
											"begin": 5682,
											"end": 5722,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5682,
											"end": 5722,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5682,
											"end": 5722,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 5682,
											"end": 5722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5682,
											"end": 5722,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5682,
											"end": 5722,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5784,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5733,
											"end": 5746,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5747,
											"end": 5750,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5733,
											"end": 5763,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5752,
											"end": 5762,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5733,
											"end": 5763,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5733,
											"end": 5763,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5733,
											"end": 5763,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5733,
											"end": 5763,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5733,
											"end": 5763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5733,
											"end": 5763,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5733,
											"end": 5763,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5733,
											"end": 5763,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5733,
											"end": 5763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5733,
											"end": 5763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5733,
											"end": 5763,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5733,
											"end": 5763,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5733,
											"end": 5763,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5733,
											"end": 5763,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5733,
											"end": 5763,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5733,
											"end": 5778,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5733,
											"end": 5778,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5733,
											"end": 5784,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5733,
											"end": 5784,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5733,
											"end": 5784,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5733,
											"end": 5784,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5837,
											"end": 5838,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5795,
											"end": 5808,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5795,
											"end": 5813,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5809,
											"end": 5812,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5795,
											"end": 5813,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5795,
											"end": 5813,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5795,
											"end": 5813,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5795,
											"end": 5813,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5795,
											"end": 5813,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5795,
											"end": 5813,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5795,
											"end": 5813,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5795,
											"end": 5813,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5795,
											"end": 5813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5795,
											"end": 5813,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5795,
											"end": 5813,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5795,
											"end": 5813,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5795,
											"end": 5813,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5795,
											"end": 5813,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5795,
											"end": 5813,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5795,
											"end": 5825,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5814,
											"end": 5824,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5795,
											"end": 5825,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5795,
											"end": 5825,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5795,
											"end": 5825,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5795,
											"end": 5825,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5795,
											"end": 5825,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5795,
											"end": 5825,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5795,
											"end": 5825,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5795,
											"end": 5825,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5795,
											"end": 5825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5795,
											"end": 5825,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5795,
											"end": 5825,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5795,
											"end": 5825,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5795,
											"end": 5825,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5795,
											"end": 5825,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5795,
											"end": 5825,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5795,
											"end": 5836,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5795,
											"end": 5836,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5795,
											"end": 5838,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5795,
											"end": 5838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5795,
											"end": 5838,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5795,
											"end": 5838,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5885,
											"end": 5895,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5849,
											"end": 5862,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5849,
											"end": 5867,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5863,
											"end": 5866,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5849,
											"end": 5867,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5849,
											"end": 5867,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5849,
											"end": 5867,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5849,
											"end": 5867,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5849,
											"end": 5867,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5849,
											"end": 5867,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5849,
											"end": 5867,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5849,
											"end": 5867,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5849,
											"end": 5867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5849,
											"end": 5867,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5849,
											"end": 5867,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5849,
											"end": 5867,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5849,
											"end": 5867,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5849,
											"end": 5867,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5849,
											"end": 5867,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5849,
											"end": 5879,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5868,
											"end": 5878,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5849,
											"end": 5879,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5849,
											"end": 5879,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5849,
											"end": 5879,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5849,
											"end": 5879,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5849,
											"end": 5879,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5849,
											"end": 5879,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5849,
											"end": 5879,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5849,
											"end": 5879,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5849,
											"end": 5879,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5849,
											"end": 5879,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5849,
											"end": 5879,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5849,
											"end": 5879,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5849,
											"end": 5879,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5849,
											"end": 5879,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5849,
											"end": 5879,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5849,
											"end": 5884,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5849,
											"end": 5884,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5849,
											"end": 5884,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5849,
											"end": 5895,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5849,
											"end": 5895,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5849,
											"end": 5895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5849,
											"end": 5895,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5849,
											"end": 5895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5849,
											"end": 5895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5849,
											"end": 5895,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5849,
											"end": 5895,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5849,
											"end": 5895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5849,
											"end": 5895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5849,
											"end": 5895,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5849,
											"end": 5895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5849,
											"end": 5895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5849,
											"end": 5895,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5849,
											"end": 5895,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 5849,
											"end": 5895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5849,
											"end": 5895,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5849,
											"end": 5895,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5919,
											"end": 5924,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5906,
											"end": 5917,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5906,
											"end": 5917,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5906,
											"end": 5924,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5906,
											"end": 5924,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5906,
											"end": 5924,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5906,
											"end": 5924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 5906,
											"end": 5924,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5906,
											"end": 5924,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5906,
											"end": 5924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 5906,
											"end": 5924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5906,
											"end": 5924,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 5906,
											"end": 5924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5906,
											"end": 5924,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5906,
											"end": 5924,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5906,
											"end": 5924,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5906,
											"end": 5924,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5906,
											"end": 5924,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5906,
											"end": 5924,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5906,
											"end": 5924,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4241,
											"end": 5932,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4241,
											"end": 5932,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4241,
											"end": 5932,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4241,
											"end": 5932,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 5932,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 5932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6493,
											"end": 6603,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 6493,
											"end": 6603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6547,
											"end": 6562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 6547,
											"end": 6562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 6547,
											"end": 6562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6547,
											"end": 6562,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 6547,
											"end": 6562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6581,
											"end": 6590,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 6581,
											"end": 6595,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6591,
											"end": 6594,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6581,
											"end": 6595,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6581,
											"end": 6595,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6581,
											"end": 6595,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6581,
											"end": 6595,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6581,
											"end": 6595,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6581,
											"end": 6595,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6581,
											"end": 6595,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6581,
											"end": 6595,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6581,
											"end": 6595,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6581,
											"end": 6595,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6581,
											"end": 6595,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6581,
											"end": 6595,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6581,
											"end": 6595,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6581,
											"end": 6595,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6581,
											"end": 6595,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "PUSH",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFF"
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFF"
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFF"
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 6574,
											"end": 6595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 6574,
											"end": 6595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6493,
											"end": 6603,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6493,
											"end": 6603,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6493,
											"end": 6603,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6493,
											"end": 6603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6777,
											"end": 6867,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6777,
											"end": 6867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6822,
											"end": 6828,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6847,
											"end": 6859,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6847,
											"end": 6859,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6847,
											"end": 6859,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6847,
											"end": 6859,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6847,
											"end": 6859,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6847,
											"end": 6859,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6847,
											"end": 6859,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6847,
											"end": 6859,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6847,
											"end": 6859,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6847,
											"end": 6859,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFF"
										},
										{
											"begin": 6847,
											"end": 6859,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6840,
											"end": 6859,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6840,
											"end": 6859,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6777,
											"end": 6867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6777,
											"end": 6867,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1521,
											"end": 1707,
											"name": "tag",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 1521,
											"end": 1707,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1630,
											"end": 1637,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1684,
											"end": 1699,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1679,
											"end": 1683,
											"name": "PUSH",
											"source": 11,
											"value": "3E8"
										},
										{
											"begin": 1668,
											"end": 1678,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1656,
											"end": 1678,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1656,
											"end": 1678,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1656,
											"end": 1667,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1656,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 1656,
											"end": 1678,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1656,
											"end": 1678,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1656,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 1656,
											"end": 1678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1656,
											"end": 1678,
											"name": "tag",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 1656,
											"end": 1678,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1656,
											"end": 1683,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 1656,
											"end": 1683,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1656,
											"end": 1683,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1656,
											"end": 1683,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 1656,
											"end": 1683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1656,
											"end": 1683,
											"name": "tag",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 1656,
											"end": 1683,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1656,
											"end": 1699,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1656,
											"end": 1699,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1656,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 1656,
											"end": 1699,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1656,
											"end": 1699,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1656,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 1656,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1656,
											"end": 1699,
											"name": "tag",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 1656,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1649,
											"end": 1699,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1649,
											"end": 1699,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1521,
											"end": 1707,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 1521,
											"end": 1707,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1521,
											"end": 1707,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1521,
											"end": 1707,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1521,
											"end": 1707,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1521,
											"end": 1707,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1447,
											"end": 1652,
											"name": "tag",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 1447,
											"end": 1652,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1548,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 1568,
											"end": 1573,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1598,
											"end": 1625,
											"name": "PUSH",
											"source": 10,
											"value": "23B872DD"
										},
										{
											"begin": 1598,
											"end": 1625,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 1598,
											"end": 1625,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 1627,
											"end": 1631,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1633,
											"end": 1635,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1637,
											"end": 1642,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 1575,
											"end": 1643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "tag",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1548,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 1548,
											"end": 1644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1548,
											"end": 1644,
											"name": "tag",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 1548,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1447,
											"end": 1652,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1447,
											"end": 1652,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1447,
											"end": 1652,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1447,
											"end": 1652,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1447,
											"end": 1652,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5371,
											"end": 6020,
											"name": "tag",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 5371,
											"end": 6020,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5795,
											"end": 5818,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5821,
											"end": 5890,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 5849,
											"end": 5853,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5821,
											"end": 5890,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5821,
											"end": 5890,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5821,
											"end": 5890,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5821,
											"end": 5890,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5821,
											"end": 5890,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5821,
											"end": 5890,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5821,
											"end": 5890,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5821,
											"end": 5890,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5821,
											"end": 5890,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5821,
											"end": 5890,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5821,
											"end": 5890,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5821,
											"end": 5890,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5821,
											"end": 5890,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5821,
											"end": 5890,
											"name": "PUSH",
											"source": 10,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 5821,
											"end": 5890,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5821,
											"end": 5890,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5821,
											"end": 5890,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5829,
											"end": 5834,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5821,
											"end": 5848,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5821,
											"end": 5848,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5821,
											"end": 5848,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 5821,
											"end": 5848,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5821,
											"end": 5890,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5821,
											"end": 5890,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5821,
											"end": 5890,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5821,
											"end": 5890,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5821,
											"end": 5890,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5821,
											"end": 5890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5821,
											"end": 5890,
											"name": "tag",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 5821,
											"end": 5890,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5795,
											"end": 5890,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5795,
											"end": 5890,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5930,
											"end": 5931,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5909,
											"end": 5919,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5909,
											"end": 5926,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5909,
											"end": 5931,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 5909,
											"end": 5965,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5909,
											"end": 5965,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 5909,
											"end": 5965,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5909,
											"end": 5965,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5946,
											"end": 5956,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5935,
											"end": 5965,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5935,
											"end": 5965,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5935,
											"end": 5965,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5935,
											"end": 5965,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5935,
											"end": 5965,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5935,
											"end": 5965,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5935,
											"end": 5965,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5935,
											"end": 5965,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5935,
											"end": 5965,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 5935,
											"end": 5965,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5935,
											"end": 5965,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5935,
											"end": 5965,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 5935,
											"end": 5965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5935,
											"end": 5965,
											"name": "tag",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 5935,
											"end": 5965,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5909,
											"end": 5965,
											"name": "tag",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 5909,
											"end": 5965,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5901,
											"end": 6012,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 5901,
											"end": 6012,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5901,
											"end": 6012,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5901,
											"end": 6012,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5901,
											"end": 6012,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5901,
											"end": 6012,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5901,
											"end": 6012,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5901,
											"end": 6012,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5901,
											"end": 6012,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5901,
											"end": 6012,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 5901,
											"end": 6012,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5901,
											"end": 6012,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 5901,
											"end": 6012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5901,
											"end": 6012,
											"name": "tag",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 5901,
											"end": 6012,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5901,
											"end": 6012,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5901,
											"end": 6012,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5901,
											"end": 6012,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5901,
											"end": 6012,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5901,
											"end": 6012,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5901,
											"end": 6012,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5901,
											"end": 6012,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5901,
											"end": 6012,
											"name": "tag",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 5901,
											"end": 6012,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5441,
											"end": 6020,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5371,
											"end": 6020,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5371,
											"end": 6020,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5371,
											"end": 6020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4207,
											"end": 4436,
											"name": "tag",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 4207,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4344,
											"end": 4356,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4376,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 4398,
											"end": 4404,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4406,
											"end": 4410,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4412,
											"end": 4413,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4415,
											"end": 4427,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4376,
											"end": 4397,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 4376,
											"end": 4428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4376,
											"end": 4428,
											"name": "tag",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 4376,
											"end": 4428,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4369,
											"end": 4428,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4369,
											"end": 4428,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4207,
											"end": 4436,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4207,
											"end": 4436,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4207,
											"end": 4436,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4207,
											"end": 4436,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4207,
											"end": 4436,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4207,
											"end": 4436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5293,
											"end": 5748,
											"name": "tag",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 5293,
											"end": 5748,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5463,
											"end": 5475,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 5521,
											"end": 5526,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5496,
											"end": 5517,
											"name": "SELFBALANCE",
											"source": 8
										},
										{
											"begin": 5496,
											"end": 5526,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5496,
											"end": 5526,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 5488,
											"end": 5569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "tag",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "tag",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5581,
											"end": 5593,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5595,
											"end": 5618,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5622,
											"end": 5628,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5622,
											"end": 5633,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5622,
											"end": 5633,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5641,
											"end": 5646,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5648,
											"end": 5652,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 5622,
											"end": 5653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "tag",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "PUSH",
											"source": 8,
											"value": "3F"
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "tag",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "tag",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5580,
											"end": 5653,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5580,
											"end": 5653,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5580,
											"end": 5653,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5580,
											"end": 5653,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5671,
											"end": 5740,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 5698,
											"end": 5704,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 5706,
											"end": 5713,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5715,
											"end": 5725,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5727,
											"end": 5739,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 5671,
											"end": 5697,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 5671,
											"end": 5740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5671,
											"end": 5740,
											"name": "tag",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 5671,
											"end": 5740,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5664,
											"end": 5740,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5664,
											"end": 5740,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5664,
											"end": 5740,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5664,
											"end": 5740,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5293,
											"end": 5748,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 5293,
											"end": 5748,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 5293,
											"end": 5748,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5293,
											"end": 5748,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5293,
											"end": 5748,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5293,
											"end": 5748,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5293,
											"end": 5748,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7866,
											"end": 8510,
											"name": "tag",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 7866,
											"end": 8510,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8051,
											"end": 8063,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 8080,
											"end": 8087,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8076,
											"end": 8503,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8076,
											"end": 8503,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 8076,
											"end": 8503,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8129,
											"end": 8130,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8108,
											"end": 8118,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8108,
											"end": 8125,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8108,
											"end": 8130,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8104,
											"end": 8394,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 8104,
											"end": 8394,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8326,
											"end": 8344,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 8337,
											"end": 8343,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8326,
											"end": 8336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 8326,
											"end": 8344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8326,
											"end": 8344,
											"name": "tag",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 8326,
											"end": 8344,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8318,
											"end": 8378,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 8318,
											"end": 8378,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8318,
											"end": 8378,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8318,
											"end": 8378,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8318,
											"end": 8378,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8318,
											"end": 8378,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8318,
											"end": 8378,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8318,
											"end": 8378,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8318,
											"end": 8378,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8318,
											"end": 8378,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 8318,
											"end": 8378,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8318,
											"end": 8378,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 8318,
											"end": 8378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8318,
											"end": 8378,
											"name": "tag",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 8318,
											"end": 8378,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8318,
											"end": 8378,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8318,
											"end": 8378,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8318,
											"end": 8378,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8318,
											"end": 8378,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8318,
											"end": 8378,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8318,
											"end": 8378,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8318,
											"end": 8378,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8318,
											"end": 8378,
											"name": "tag",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 8318,
											"end": 8378,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8104,
											"end": 8394,
											"name": "tag",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 8104,
											"end": 8394,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8415,
											"end": 8425,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8408,
											"end": 8425,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8408,
											"end": 8425,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8408,
											"end": 8425,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 8408,
											"end": 8425,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8076,
											"end": 8503,
											"name": "tag",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 8076,
											"end": 8503,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8458,
											"end": 8491,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 8466,
											"end": 8476,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8478,
											"end": 8490,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8458,
											"end": 8465,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 8458,
											"end": 8491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8458,
											"end": 8491,
											"name": "tag",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 8458,
											"end": 8491,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7866,
											"end": 8510,
											"name": "tag",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 7866,
											"end": 8510,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7866,
											"end": 8510,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 7866,
											"end": 8510,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 7866,
											"end": 8510,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7866,
											"end": 8510,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7866,
											"end": 8510,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7866,
											"end": 8510,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7866,
											"end": 8510,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1452,
											"end": 1778,
											"name": "tag",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 1452,
											"end": 1778,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1512,
											"end": 1516,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1769,
											"end": 1770,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1747,
											"end": 1754,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1747,
											"end": 1766,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1747,
											"end": 1766,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1747,
											"end": 1766,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 1747,
											"end": 1770,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1740,
											"end": 1770,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1740,
											"end": 1770,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1452,
											"end": 1778,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1452,
											"end": 1778,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1452,
											"end": 1778,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1452,
											"end": 1778,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9052,
											"end": 9604,
											"name": "tag",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 9052,
											"end": 9604,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9233,
											"end": 9234,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9213,
											"end": 9223,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9213,
											"end": 9230,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9213,
											"end": 9234,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 9209,
											"end": 9597,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9209,
											"end": 9597,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 9209,
											"end": 9597,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9445,
											"end": 9455,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9439,
											"end": 9456,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9502,
											"end": 9517,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9489,
											"end": 9499,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9485,
											"end": 9487,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9481,
											"end": 9500,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9474,
											"end": 9518,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 9209,
											"end": 9597,
											"name": "tag",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 9209,
											"end": 9597,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9572,
											"end": 9584,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9565,
											"end": 9585,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9565,
											"end": 9585,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9565,
											"end": 9585,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9565,
											"end": 9585,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9565,
											"end": 9585,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9565,
											"end": 9585,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9565,
											"end": 9585,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9565,
											"end": 9585,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 9565,
											"end": 9585,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9565,
											"end": 9585,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9565,
											"end": 9585,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 9565,
											"end": 9585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9565,
											"end": 9585,
											"name": "tag",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 9565,
											"end": 9585,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9565,
											"end": 9585,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9565,
											"end": 9585,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9565,
											"end": 9585,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9565,
											"end": 9585,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9565,
											"end": 9585,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9565,
											"end": 9585,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9565,
											"end": 9585,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "137"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "120"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "194"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "195"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "69"
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "195"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "194"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 334,
											"end": 427,
											"name": "tag",
											"source": 12,
											"value": "199"
										},
										{
											"begin": 334,
											"end": 427,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 420,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 399,
											"end": 421,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 388,
											"end": 421,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 388,
											"end": 421,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 427,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 334,
											"end": 427,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 334,
											"end": 427,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 433,
											"end": 553,
											"name": "tag",
											"source": 12,
											"value": "200"
										},
										{
											"begin": 433,
											"end": 553,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 505,
											"end": 528,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "269"
										},
										{
											"begin": 522,
											"end": 527,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 505,
											"end": 528,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "199"
										},
										{
											"begin": 505,
											"end": 528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 505,
											"end": 528,
											"name": "tag",
											"source": 12,
											"value": "269"
										},
										{
											"begin": 505,
											"end": 528,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 498,
											"end": 503,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 495,
											"end": 529,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 485,
											"end": 547,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 485,
											"end": 547,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 543,
											"end": 544,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 540,
											"end": 541,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 533,
											"end": 545,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 485,
											"end": 547,
											"name": "tag",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 485,
											"end": 547,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 433,
											"end": 553,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 433,
											"end": 553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 559,
											"end": 696,
											"name": "tag",
											"source": 12,
											"value": "201"
										},
										{
											"begin": 559,
											"end": 696,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 604,
											"end": 609,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 642,
											"end": 648,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 629,
											"end": 649,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 620,
											"end": 649,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 620,
											"end": 649,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 658,
											"end": 690,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 684,
											"end": 689,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 658,
											"end": 690,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "200"
										},
										{
											"begin": 658,
											"end": 690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 658,
											"end": 690,
											"name": "tag",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 658,
											"end": 690,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 559,
											"end": 696,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 559,
											"end": 696,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 559,
											"end": 696,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 559,
											"end": 696,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 559,
											"end": 696,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 702,
											"end": 1029,
											"name": "tag",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 702,
											"end": 1029,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 760,
											"end": 766,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 809,
											"end": 811,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 797,
											"end": 806,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 788,
											"end": 795,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 784,
											"end": 807,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 780,
											"end": 812,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 777,
											"end": 896,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 777,
											"end": 896,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 777,
											"end": 896,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 815,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 815,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 815,
											"end": 894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 815,
											"end": 894,
											"name": "tag",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 815,
											"end": 894,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 777,
											"end": 896,
											"name": "tag",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 777,
											"end": 896,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 935,
											"end": 936,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 960,
											"end": 1012,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 1004,
											"end": 1011,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 995,
											"end": 1001,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 984,
											"end": 993,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 980,
											"end": 1002,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 960,
											"end": 1012,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "201"
										},
										{
											"begin": 960,
											"end": 1012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 960,
											"end": 1012,
											"name": "tag",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 960,
											"end": 1012,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 950,
											"end": 1012,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 950,
											"end": 1012,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 906,
											"end": 1022,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 702,
											"end": 1029,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 702,
											"end": 1029,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 702,
											"end": 1029,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 702,
											"end": 1029,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 702,
											"end": 1029,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1035,
											"end": 1161,
											"name": "tag",
											"source": 12,
											"value": "202"
										},
										{
											"begin": 1035,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1072,
											"end": 1079,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 1154,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1105,
											"end": 1110,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1101,
											"end": 1155,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1090,
											"end": 1155,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1090,
											"end": 1155,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1035,
											"end": 1161,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1035,
											"end": 1161,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1035,
											"end": 1161,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1035,
											"end": 1161,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1167,
											"end": 1263,
											"name": "tag",
											"source": 12,
											"value": "203"
										},
										{
											"begin": 1167,
											"end": 1263,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1204,
											"end": 1211,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1233,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 1251,
											"end": 1256,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1233,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "202"
										},
										{
											"begin": 1233,
											"end": 1257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1233,
											"end": 1257,
											"name": "tag",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 1233,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1222,
											"end": 1257,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1222,
											"end": 1257,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1167,
											"end": 1263,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1167,
											"end": 1263,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1167,
											"end": 1263,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1167,
											"end": 1263,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1269,
											"end": 1391,
											"name": "tag",
											"source": 12,
											"value": "204"
										},
										{
											"begin": 1269,
											"end": 1391,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1366,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 1360,
											"end": 1365,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1366,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "203"
										},
										{
											"begin": 1342,
											"end": 1366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1366,
											"name": "tag",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 1342,
											"end": 1366,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1335,
											"end": 1340,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1332,
											"end": 1367,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1322,
											"end": 1385,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 1322,
											"end": 1385,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1381,
											"end": 1382,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1378,
											"end": 1379,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1371,
											"end": 1383,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1322,
											"end": 1385,
											"name": "tag",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 1322,
											"end": 1385,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1269,
											"end": 1391,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1269,
											"end": 1391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1397,
											"end": 1536,
											"name": "tag",
											"source": 12,
											"value": "205"
										},
										{
											"begin": 1397,
											"end": 1536,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1443,
											"end": 1448,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1481,
											"end": 1487,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1468,
											"end": 1488,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1459,
											"end": 1488,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1459,
											"end": 1488,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1497,
											"end": 1530,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 1524,
											"end": 1529,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1497,
											"end": 1530,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "204"
										},
										{
											"begin": 1497,
											"end": 1530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1497,
											"end": 1530,
											"name": "tag",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 1497,
											"end": 1530,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1397,
											"end": 1536,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1397,
											"end": 1536,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1397,
											"end": 1536,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1397,
											"end": 1536,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1397,
											"end": 1536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1542,
											"end": 1641,
											"name": "tag",
											"source": 12,
											"value": "206"
										},
										{
											"begin": 1542,
											"end": 1641,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1578,
											"end": 1585,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1618,
											"end": 1634,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFF"
										},
										{
											"begin": 1611,
											"end": 1616,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1607,
											"end": 1635,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1596,
											"end": 1635,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1596,
											"end": 1635,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1542,
											"end": 1641,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1542,
											"end": 1641,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1542,
											"end": 1641,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1542,
											"end": 1641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1647,
											"end": 1767,
											"name": "tag",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 1647,
											"end": 1767,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1719,
											"end": 1742,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 1736,
											"end": 1741,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1719,
											"end": 1742,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "206"
										},
										{
											"begin": 1719,
											"end": 1742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1719,
											"end": 1742,
											"name": "tag",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 1719,
											"end": 1742,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1712,
											"end": 1717,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1709,
											"end": 1743,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1699,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 1699,
											"end": 1761,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1757,
											"end": 1758,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1754,
											"end": 1755,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1747,
											"end": 1759,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1699,
											"end": 1761,
											"name": "tag",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 1699,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1647,
											"end": 1767,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1647,
											"end": 1767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1773,
											"end": 1910,
											"name": "tag",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 1773,
											"end": 1910,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1818,
											"end": 1823,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1856,
											"end": 1862,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1843,
											"end": 1863,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1834,
											"end": 1863,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1834,
											"end": 1863,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1872,
											"end": 1904,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 1898,
											"end": 1903,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1872,
											"end": 1904,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 1872,
											"end": 1904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1872,
											"end": 1904,
											"name": "tag",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 1872,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1773,
											"end": 1910,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1773,
											"end": 1910,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1773,
											"end": 1910,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1773,
											"end": 1910,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1773,
											"end": 1910,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1916,
											"end": 2388,
											"name": "tag",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 1916,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1983,
											"end": 1989,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1991,
											"end": 1997,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2040,
											"end": 2042,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2028,
											"end": 2037,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2019,
											"end": 2026,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2015,
											"end": 2038,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2011,
											"end": 2043,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2008,
											"end": 2127,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2008,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 2008,
											"end": 2127,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2046,
											"end": 2125,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 2046,
											"end": 2125,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 2046,
											"end": 2125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2046,
											"end": 2125,
											"name": "tag",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 2046,
											"end": 2125,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2008,
											"end": 2127,
											"name": "tag",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 2008,
											"end": 2127,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2166,
											"end": 2167,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2191,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 2236,
											"end": 2243,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2227,
											"end": 2233,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2216,
											"end": 2225,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2212,
											"end": 2234,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2191,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "205"
										},
										{
											"begin": 2191,
											"end": 2244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2191,
											"end": 2244,
											"name": "tag",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 2191,
											"end": 2244,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2181,
											"end": 2244,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2181,
											"end": 2244,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2137,
											"end": 2254,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2293,
											"end": 2295,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2319,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 2363,
											"end": 2370,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2354,
											"end": 2360,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2343,
											"end": 2352,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2339,
											"end": 2361,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2319,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 2319,
											"end": 2371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2319,
											"end": 2371,
											"name": "tag",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 2319,
											"end": 2371,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2371,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2371,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2264,
											"end": 2381,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1916,
											"end": 2388,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1916,
											"end": 2388,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1916,
											"end": 2388,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1916,
											"end": 2388,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1916,
											"end": 2388,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1916,
											"end": 2388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2394,
											"end": 2512,
											"name": "tag",
											"source": 12,
											"value": "209"
										},
										{
											"begin": 2394,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2481,
											"end": 2505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 2499,
											"end": 2504,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2481,
											"end": 2505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "203"
										},
										{
											"begin": 2481,
											"end": 2505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2481,
											"end": 2505,
											"name": "tag",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 2481,
											"end": 2505,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2476,
											"end": 2479,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2469,
											"end": 2506,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2394,
											"end": 2512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2394,
											"end": 2512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2394,
											"end": 2512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2518,
											"end": 2740,
											"name": "tag",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 2518,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2611,
											"end": 2615,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2649,
											"end": 2651,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2638,
											"end": 2647,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2634,
											"end": 2652,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2626,
											"end": 2652,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2626,
											"end": 2652,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2662,
											"end": 2733,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 2730,
											"end": 2731,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2719,
											"end": 2728,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2715,
											"end": 2732,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2706,
											"end": 2712,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2662,
											"end": 2733,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "209"
										},
										{
											"begin": 2662,
											"end": 2733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2662,
											"end": 2733,
											"name": "tag",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 2662,
											"end": 2733,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2518,
											"end": 2740,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2518,
											"end": 2740,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2518,
											"end": 2740,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2518,
											"end": 2740,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2518,
											"end": 2740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2746,
											"end": 2864,
											"name": "tag",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 2746,
											"end": 2864,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2783,
											"end": 2790,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2823,
											"end": 2857,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2816,
											"end": 2821,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2812,
											"end": 2858,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2801,
											"end": 2858,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2801,
											"end": 2858,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2746,
											"end": 2864,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2746,
											"end": 2864,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2746,
											"end": 2864,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2746,
											"end": 2864,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2870,
											"end": 2992,
											"name": "tag",
											"source": 12,
											"value": "211"
										},
										{
											"begin": 2870,
											"end": 2992,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 2961,
											"end": 2966,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 2943,
											"end": 2967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "tag",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2936,
											"end": 2941,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2933,
											"end": 2968,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2923,
											"end": 2986,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 2923,
											"end": 2986,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2982,
											"end": 2983,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2979,
											"end": 2980,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2972,
											"end": 2984,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2923,
											"end": 2986,
											"name": "tag",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 2923,
											"end": 2986,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2870,
											"end": 2992,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2870,
											"end": 2992,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2998,
											"end": 3137,
											"name": "tag",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 2998,
											"end": 3137,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3044,
											"end": 3049,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3082,
											"end": 3088,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3069,
											"end": 3089,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3060,
											"end": 3089,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3060,
											"end": 3089,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3098,
											"end": 3131,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 3125,
											"end": 3130,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3098,
											"end": 3131,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "211"
										},
										{
											"begin": 3098,
											"end": 3131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3098,
											"end": 3131,
											"name": "tag",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 3098,
											"end": 3131,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2998,
											"end": 3137,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2998,
											"end": 3137,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2998,
											"end": 3137,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2998,
											"end": 3137,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2998,
											"end": 3137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3143,
											"end": 3254,
											"name": "tag",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 3143,
											"end": 3254,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3228,
											"end": 3229,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 3221,
											"end": 3226,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3218,
											"end": 3230,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 3208,
											"end": 3248,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 3208,
											"end": 3248,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3244,
											"end": 3245,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3241,
											"end": 3242,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3208,
											"end": 3248,
											"name": "tag",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 3208,
											"end": 3248,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3143,
											"end": 3254,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3143,
											"end": 3254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3260,
											"end": 3423,
											"name": "tag",
											"source": 12,
											"value": "214"
										},
										{
											"begin": 3260,
											"end": 3423,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3318,
											"end": 3323,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3356,
											"end": 3362,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3343,
											"end": 3363,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3334,
											"end": 3363,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3334,
											"end": 3363,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3372,
											"end": 3417,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 3411,
											"end": 3416,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3372,
											"end": 3417,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 3372,
											"end": 3417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3372,
											"end": 3417,
											"name": "tag",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 3372,
											"end": 3417,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3260,
											"end": 3423,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3260,
											"end": 3423,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3260,
											"end": 3423,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3260,
											"end": 3423,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3260,
											"end": 3423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3429,
											"end": 4216,
											"name": "tag",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 3429,
											"end": 4216,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3526,
											"end": 3532,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3534,
											"end": 3540,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3542,
											"end": 3548,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3550,
											"end": 3556,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3599,
											"end": 3602,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 3587,
											"end": 3596,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3578,
											"end": 3585,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 3574,
											"end": 3597,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3570,
											"end": 3603,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3567,
											"end": 3687,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3567,
											"end": 3687,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "311"
										},
										{
											"begin": 3567,
											"end": 3687,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3606,
											"end": 3685,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 3606,
											"end": 3685,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 3606,
											"end": 3685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3606,
											"end": 3685,
											"name": "tag",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 3606,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3567,
											"end": 3687,
											"name": "tag",
											"source": 12,
											"value": "311"
										},
										{
											"begin": 3567,
											"end": 3687,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3726,
											"end": 3727,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3751,
											"end": 3804,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 3796,
											"end": 3803,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 3787,
											"end": 3793,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3776,
											"end": 3785,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 3772,
											"end": 3794,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3751,
											"end": 3804,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "205"
										},
										{
											"begin": 3751,
											"end": 3804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3751,
											"end": 3804,
											"name": "tag",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 3751,
											"end": 3804,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3741,
											"end": 3804,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 3741,
											"end": 3804,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3697,
											"end": 3814,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3853,
											"end": 3855,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3879,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 3923,
											"end": 3930,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 3914,
											"end": 3920,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3903,
											"end": 3912,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 3899,
											"end": 3921,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3879,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "201"
										},
										{
											"begin": 3879,
											"end": 3931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3879,
											"end": 3931,
											"name": "tag",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 3879,
											"end": 3931,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3869,
											"end": 3931,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 3869,
											"end": 3931,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3824,
											"end": 3941,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3980,
											"end": 3982,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4006,
											"end": 4059,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "315"
										},
										{
											"begin": 4051,
											"end": 4058,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 4042,
											"end": 4048,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4031,
											"end": 4040,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 4027,
											"end": 4049,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4006,
											"end": 4059,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 4006,
											"end": 4059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4006,
											"end": 4059,
											"name": "tag",
											"source": 12,
											"value": "315"
										},
										{
											"begin": 4006,
											"end": 4059,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3996,
											"end": 4059,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3996,
											"end": 4059,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3951,
											"end": 4069,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4108,
											"end": 4110,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 4134,
											"end": 4199,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 4191,
											"end": 4198,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 4182,
											"end": 4188,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4171,
											"end": 4180,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 4167,
											"end": 4189,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4134,
											"end": 4199,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "214"
										},
										{
											"begin": 4134,
											"end": 4199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4134,
											"end": 4199,
											"name": "tag",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 4134,
											"end": 4199,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4124,
											"end": 4199,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4124,
											"end": 4199,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4079,
											"end": 4209,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3429,
											"end": 4216,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3429,
											"end": 4216,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 3429,
											"end": 4216,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3429,
											"end": 4216,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 3429,
											"end": 4216,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3429,
											"end": 4216,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3429,
											"end": 4216,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3429,
											"end": 4216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4222,
											"end": 4327,
											"name": "tag",
											"source": 12,
											"value": "215"
										},
										{
											"begin": 4222,
											"end": 4327,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4297,
											"end": 4320,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 4314,
											"end": 4319,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4297,
											"end": 4320,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "199"
										},
										{
											"begin": 4297,
											"end": 4320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4297,
											"end": 4320,
											"name": "tag",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 4297,
											"end": 4320,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4292,
											"end": 4295,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4285,
											"end": 4321,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4222,
											"end": 4327,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4222,
											"end": 4327,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4222,
											"end": 4327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4333,
											"end": 4438,
											"name": "tag",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 4333,
											"end": 4438,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4408,
											"end": 4431,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 4425,
											"end": 4430,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4408,
											"end": 4431,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "206"
										},
										{
											"begin": 4408,
											"end": 4431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4408,
											"end": 4431,
											"name": "tag",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 4408,
											"end": 4431,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4403,
											"end": 4406,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4396,
											"end": 4432,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4333,
											"end": 4438,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4333,
											"end": 4438,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4333,
											"end": 4438,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4444,
											"end": 4552,
											"name": "tag",
											"source": 12,
											"value": "217"
										},
										{
											"begin": 4444,
											"end": 4552,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4521,
											"end": 4545,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 4539,
											"end": 4544,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4521,
											"end": 4545,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 4521,
											"end": 4545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4521,
											"end": 4545,
											"name": "tag",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 4521,
											"end": 4545,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4516,
											"end": 4519,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4509,
											"end": 4546,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4444,
											"end": 4552,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4444,
											"end": 4552,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4444,
											"end": 4552,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4558,
											"end": 4635,
											"name": "tag",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 4558,
											"end": 4635,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4595,
											"end": 4602,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4624,
											"end": 4629,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4613,
											"end": 4629,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4613,
											"end": 4629,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4558,
											"end": 4635,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4558,
											"end": 4635,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4558,
											"end": 4635,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4558,
											"end": 4635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4641,
											"end": 4749,
											"name": "tag",
											"source": 12,
											"value": "219"
										},
										{
											"begin": 4641,
											"end": 4749,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4718,
											"end": 4742,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 4736,
											"end": 4741,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4718,
											"end": 4742,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 4718,
											"end": 4742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4718,
											"end": 4742,
											"name": "tag",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 4718,
											"end": 4742,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4713,
											"end": 4716,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4706,
											"end": 4743,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4641,
											"end": 4749,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4641,
											"end": 4749,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4641,
											"end": 4749,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4755,
											"end": 4863,
											"name": "tag",
											"source": 12,
											"value": "220"
										},
										{
											"begin": 4755,
											"end": 4863,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4832,
											"end": 4856,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 4850,
											"end": 4855,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4832,
											"end": 4856,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "203"
										},
										{
											"begin": 4832,
											"end": 4856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4832,
											"end": 4856,
											"name": "tag",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 4832,
											"end": 4856,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4827,
											"end": 4830,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4820,
											"end": 4857,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4755,
											"end": 4863,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4755,
											"end": 4863,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4755,
											"end": 4863,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4869,
											"end": 5049,
											"name": "tag",
											"source": 12,
											"value": "69"
										},
										{
											"begin": 4869,
											"end": 5049,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4917,
											"end": 4994,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4914,
											"end": 4915,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4907,
											"end": 4995,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5014,
											"end": 5018,
											"name": "PUSH",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 5011,
											"end": 5012,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5004,
											"end": 5019,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5038,
											"end": 5042,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 5035,
											"end": 5036,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5028,
											"end": 5043,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5055,
											"end": 5175,
											"name": "tag",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 5055,
											"end": 5175,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5143,
											"end": 5144,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 5136,
											"end": 5141,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5133,
											"end": 5145,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 5123,
											"end": 5169,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 5123,
											"end": 5169,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5149,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 5149,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "69"
										},
										{
											"begin": 5149,
											"end": 5167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5149,
											"end": 5167,
											"name": "tag",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 5149,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5123,
											"end": 5169,
											"name": "tag",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 5123,
											"end": 5169,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5055,
											"end": 5175,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5055,
											"end": 5175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5181,
											"end": 5322,
											"name": "tag",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 5181,
											"end": 5322,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5233,
											"end": 5240,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5262,
											"end": 5267,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5251,
											"end": 5267,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5251,
											"end": 5267,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5268,
											"end": 5316,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 5310,
											"end": 5315,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5268,
											"end": 5316,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 5268,
											"end": 5316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5268,
											"end": 5316,
											"name": "tag",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 5268,
											"end": 5316,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5181,
											"end": 5322,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5181,
											"end": 5322,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5181,
											"end": 5322,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5181,
											"end": 5322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5328,
											"end": 5469,
											"name": "tag",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 5328,
											"end": 5469,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5391,
											"end": 5400,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5424,
											"end": 5463,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 5457,
											"end": 5462,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5424,
											"end": 5463,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 5424,
											"end": 5463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5424,
											"end": 5463,
											"name": "tag",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 5424,
											"end": 5463,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5411,
											"end": 5463,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5411,
											"end": 5463,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5328,
											"end": 5469,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5328,
											"end": 5469,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5328,
											"end": 5469,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5328,
											"end": 5469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5475,
											"end": 5622,
											"name": "tag",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 5475,
											"end": 5622,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5565,
											"end": 5615,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 5609,
											"end": 5614,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5565,
											"end": 5615,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 5565,
											"end": 5615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5565,
											"end": 5615,
											"name": "tag",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 5565,
											"end": 5615,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5560,
											"end": 5563,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5553,
											"end": 5616,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5475,
											"end": 5622,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5475,
											"end": 5622,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5475,
											"end": 5622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5694,
											"end": 7482,
											"name": "tag",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 5694,
											"end": 7482,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5843,
											"end": 5849,
											"name": "PUSH",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 5838,
											"end": 5841,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5935,
											"end": 5939,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5928,
											"end": 5933,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5924,
											"end": 5940,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5918,
											"end": 5941,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5954,
											"end": 6015,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 6009,
											"end": 6013,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6004,
											"end": 6007,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6000,
											"end": 6014,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5986,
											"end": 5998,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5954,
											"end": 6015,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "215"
										},
										{
											"begin": 5954,
											"end": 6015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5954,
											"end": 6015,
											"name": "tag",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 5954,
											"end": 6015,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5860,
											"end": 6025,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6108,
											"end": 6112,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6101,
											"end": 6106,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6097,
											"end": 6113,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6091,
											"end": 6114,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6127,
											"end": 6188,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 6182,
											"end": 6186,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6177,
											"end": 6180,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6173,
											"end": 6187,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6159,
											"end": 6171,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6127,
											"end": 6188,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "215"
										},
										{
											"begin": 6127,
											"end": 6188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6127,
											"end": 6188,
											"name": "tag",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 6127,
											"end": 6188,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6035,
											"end": 6198,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6280,
											"end": 6284,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6273,
											"end": 6278,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6269,
											"end": 6285,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6263,
											"end": 6286,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6299,
											"end": 6360,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 6354,
											"end": 6358,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6349,
											"end": 6352,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6345,
											"end": 6359,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6331,
											"end": 6343,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6299,
											"end": 6360,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 6299,
											"end": 6360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6299,
											"end": 6360,
											"name": "tag",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 6299,
											"end": 6360,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6208,
											"end": 6370,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6454,
											"end": 6458,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 6447,
											"end": 6452,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6443,
											"end": 6459,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6437,
											"end": 6460,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6473,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 6530,
											"end": 6534,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 6525,
											"end": 6528,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6521,
											"end": 6535,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6507,
											"end": 6519,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6473,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "217"
										},
										{
											"begin": 6473,
											"end": 6536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6473,
											"end": 6536,
											"name": "tag",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 6473,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6380,
											"end": 6546,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6638,
											"end": 6642,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 6631,
											"end": 6636,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6627,
											"end": 6643,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6621,
											"end": 6644,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6657,
											"end": 6720,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 6714,
											"end": 6718,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 6709,
											"end": 6712,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6705,
											"end": 6719,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6691,
											"end": 6703,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6657,
											"end": 6720,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "219"
										},
										{
											"begin": 6657,
											"end": 6720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6657,
											"end": 6720,
											"name": "tag",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 6657,
											"end": 6720,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6556,
											"end": 6730,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6820,
											"end": 6824,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 6813,
											"end": 6818,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6809,
											"end": 6825,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6803,
											"end": 6826,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6839,
											"end": 6902,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 6896,
											"end": 6900,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 6891,
											"end": 6894,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6887,
											"end": 6901,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6873,
											"end": 6885,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6839,
											"end": 6902,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "220"
										},
										{
											"begin": 6839,
											"end": 6902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6839,
											"end": 6902,
											"name": "tag",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 6839,
											"end": 6902,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6740,
											"end": 6912,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7002,
											"end": 7006,
											"name": "PUSH",
											"source": 12,
											"value": "C0"
										},
										{
											"begin": 6995,
											"end": 7000,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6991,
											"end": 7007,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6985,
											"end": 7008,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7021,
											"end": 7084,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 7078,
											"end": 7082,
											"name": "PUSH",
											"source": 12,
											"value": "C0"
										},
										{
											"begin": 7073,
											"end": 7076,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7069,
											"end": 7083,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7055,
											"end": 7067,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7021,
											"end": 7084,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "220"
										},
										{
											"begin": 7021,
											"end": 7084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7021,
											"end": 7084,
											"name": "tag",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 7021,
											"end": 7084,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6922,
											"end": 7094,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7185,
											"end": 7189,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 7178,
											"end": 7183,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7174,
											"end": 7190,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7168,
											"end": 7191,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7204,
											"end": 7267,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 7261,
											"end": 7265,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 7256,
											"end": 7259,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7252,
											"end": 7266,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7238,
											"end": 7250,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7204,
											"end": 7267,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "220"
										},
										{
											"begin": 7204,
											"end": 7267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7204,
											"end": 7267,
											"name": "tag",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 7204,
											"end": 7267,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7104,
											"end": 7277,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7366,
											"end": 7372,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 7359,
											"end": 7364,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7355,
											"end": 7373,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7349,
											"end": 7374,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7387,
											"end": 7465,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 7457,
											"end": 7463,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 7452,
											"end": 7455,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7448,
											"end": 7464,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7434,
											"end": 7446,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7387,
											"end": 7465,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 7387,
											"end": 7465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7387,
											"end": 7465,
											"name": "tag",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 7387,
											"end": 7465,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7287,
											"end": 7475,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5812,
											"end": 7482,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5694,
											"end": 7482,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5694,
											"end": 7482,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5694,
											"end": 7482,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7488,
											"end": 7815,
											"name": "tag",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 7488,
											"end": 7815,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7633,
											"end": 7637,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7671,
											"end": 7674,
											"name": "PUSH",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 7660,
											"end": 7669,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7656,
											"end": 7675,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7648,
											"end": 7675,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7648,
											"end": 7675,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7685,
											"end": 7808,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 7805,
											"end": 7806,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7794,
											"end": 7803,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7790,
											"end": 7807,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7781,
											"end": 7787,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7685,
											"end": 7808,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 7685,
											"end": 7808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7685,
											"end": 7808,
											"name": "tag",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 7685,
											"end": 7808,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7488,
											"end": 7815,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7488,
											"end": 7815,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7488,
											"end": 7815,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7488,
											"end": 7815,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7488,
											"end": 7815,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7821,
											"end": 7936,
											"name": "tag",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 7821,
											"end": 7936,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7906,
											"end": 7929,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 7923,
											"end": 7928,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7906,
											"end": 7929,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "206"
										},
										{
											"begin": 7906,
											"end": 7929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7906,
											"end": 7929,
											"name": "tag",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 7906,
											"end": 7929,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7901,
											"end": 7904,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7894,
											"end": 7930,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7821,
											"end": 7936,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7821,
											"end": 7936,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7821,
											"end": 7936,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7942,
											"end": 8160,
											"name": "tag",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 7942,
											"end": 8160,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8033,
											"end": 8037,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8071,
											"end": 8073,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8060,
											"end": 8069,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8056,
											"end": 8074,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8048,
											"end": 8074,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8048,
											"end": 8074,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8084,
											"end": 8153,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 8150,
											"end": 8151,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8139,
											"end": 8148,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8135,
											"end": 8152,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8126,
											"end": 8132,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8084,
											"end": 8153,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 8084,
											"end": 8153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8084,
											"end": 8153,
											"name": "tag",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 8084,
											"end": 8153,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7942,
											"end": 8160,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7942,
											"end": 8160,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7942,
											"end": 8160,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7942,
											"end": 8160,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7942,
											"end": 8160,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8166,
											"end": 8309,
											"name": "tag",
											"source": 12,
											"value": "227"
										},
										{
											"begin": 8166,
											"end": 8309,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8223,
											"end": 8228,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8254,
											"end": 8260,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8248,
											"end": 8261,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8239,
											"end": 8261,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8239,
											"end": 8261,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8270,
											"end": 8303,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 8297,
											"end": 8302,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8270,
											"end": 8303,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "204"
										},
										{
											"begin": 8270,
											"end": 8303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8270,
											"end": 8303,
											"name": "tag",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 8270,
											"end": 8303,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8166,
											"end": 8309,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8166,
											"end": 8309,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8166,
											"end": 8309,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8166,
											"end": 8309,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8166,
											"end": 8309,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8315,
											"end": 8666,
											"name": "tag",
											"source": 12,
											"value": "49"
										},
										{
											"begin": 8315,
											"end": 8666,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8385,
											"end": 8391,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8434,
											"end": 8436,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8422,
											"end": 8431,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8413,
											"end": 8420,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8409,
											"end": 8432,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8405,
											"end": 8437,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 8402,
											"end": 8521,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8402,
											"end": 8521,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 8402,
											"end": 8521,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8440,
											"end": 8519,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 8440,
											"end": 8519,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 8440,
											"end": 8519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8440,
											"end": 8519,
											"name": "tag",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 8440,
											"end": 8519,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8402,
											"end": 8521,
											"name": "tag",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 8402,
											"end": 8521,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8560,
											"end": 8561,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8585,
											"end": 8649,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 8641,
											"end": 8648,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8632,
											"end": 8638,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8621,
											"end": 8630,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8617,
											"end": 8639,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8585,
											"end": 8649,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "227"
										},
										{
											"begin": 8585,
											"end": 8649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8585,
											"end": 8649,
											"name": "tag",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 8585,
											"end": 8649,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8575,
											"end": 8649,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8575,
											"end": 8649,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8531,
											"end": 8659,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8315,
											"end": 8666,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8315,
											"end": 8666,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8315,
											"end": 8666,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8315,
											"end": 8666,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8315,
											"end": 8666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8672,
											"end": 8841,
											"name": "tag",
											"source": 12,
											"value": "228"
										},
										{
											"begin": 8672,
											"end": 8841,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8756,
											"end": 8767,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8790,
											"end": 8796,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8785,
											"end": 8788,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8778,
											"end": 8797,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8830,
											"end": 8834,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8825,
											"end": 8828,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8821,
											"end": 8835,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8806,
											"end": 8835,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8672,
											"end": 8841,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8672,
											"end": 8841,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8672,
											"end": 8841,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8672,
											"end": 8841,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8672,
											"end": 8841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8847,
											"end": 9006,
											"name": "tag",
											"source": 12,
											"value": "229"
										},
										{
											"begin": 8847,
											"end": 9006,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8987,
											"end": 8998,
											"name": "PUSH",
											"source": 12,
											"value": "4E6F74204F776E65720000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8983,
											"end": 8984,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8975,
											"end": 8981,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8971,
											"end": 8985,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8964,
											"end": 8999,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8847,
											"end": 9006,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8847,
											"end": 9006,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9012,
											"end": 9377,
											"name": "tag",
											"source": 12,
											"value": "230"
										},
										{
											"begin": 9012,
											"end": 9377,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9154,
											"end": 9157,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9175,
											"end": 9241,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 9239,
											"end": 9240,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 9234,
											"end": 9237,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9175,
											"end": 9241,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "228"
										},
										{
											"begin": 9175,
											"end": 9241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9175,
											"end": 9241,
											"name": "tag",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 9175,
											"end": 9241,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9168,
											"end": 9241,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9168,
											"end": 9241,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9250,
											"end": 9343,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 9339,
											"end": 9342,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9250,
											"end": 9343,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "229"
										},
										{
											"begin": 9250,
											"end": 9343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9250,
											"end": 9343,
											"name": "tag",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 9250,
											"end": 9343,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9368,
											"end": 9370,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9363,
											"end": 9366,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9359,
											"end": 9371,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9352,
											"end": 9371,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9352,
											"end": 9371,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9012,
											"end": 9377,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9012,
											"end": 9377,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9012,
											"end": 9377,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9012,
											"end": 9377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9383,
											"end": 9802,
											"name": "tag",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 9383,
											"end": 9802,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9549,
											"end": 9553,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9587,
											"end": 9589,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9576,
											"end": 9585,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9572,
											"end": 9590,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9564,
											"end": 9590,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9564,
											"end": 9590,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9636,
											"end": 9645,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9630,
											"end": 9634,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9626,
											"end": 9646,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9622,
											"end": 9623,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9611,
											"end": 9620,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9607,
											"end": 9624,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9600,
											"end": 9647,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9664,
											"end": 9795,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 9790,
											"end": 9794,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9664,
											"end": 9795,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "230"
										},
										{
											"begin": 9664,
											"end": 9795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9664,
											"end": 9795,
											"name": "tag",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 9664,
											"end": 9795,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9656,
											"end": 9795,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9656,
											"end": 9795,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9383,
											"end": 9802,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9383,
											"end": 9802,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9383,
											"end": 9802,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9383,
											"end": 9802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9808,
											"end": 9894,
											"name": "tag",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 9808,
											"end": 9894,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9843,
											"end": 9850,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9883,
											"end": 9887,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 9876,
											"end": 9881,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9872,
											"end": 9888,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9861,
											"end": 9888,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9861,
											"end": 9888,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9808,
											"end": 9894,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9808,
											"end": 9894,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9808,
											"end": 9894,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9808,
											"end": 9894,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9900,
											"end": 10018,
											"name": "tag",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 9900,
											"end": 10018,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9971,
											"end": 9993,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 9987,
											"end": 9992,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9971,
											"end": 9993,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 9971,
											"end": 9993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9971,
											"end": 9993,
											"name": "tag",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 9971,
											"end": 9993,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9964,
											"end": 9969,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9961,
											"end": 9994,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 9951,
											"end": 10012,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 9951,
											"end": 10012,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10008,
											"end": 10009,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10005,
											"end": 10006,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9998,
											"end": 10010,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9951,
											"end": 10012,
											"name": "tag",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 9951,
											"end": 10012,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9900,
											"end": 10018,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9900,
											"end": 10018,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10024,
											"end": 10163,
											"name": "tag",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 10024,
											"end": 10163,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10079,
											"end": 10084,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10110,
											"end": 10116,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10104,
											"end": 10117,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 10095,
											"end": 10117,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10095,
											"end": 10117,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10126,
											"end": 10157,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 10151,
											"end": 10156,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10126,
											"end": 10157,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 10126,
											"end": 10157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10126,
											"end": 10157,
											"name": "tag",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 10126,
											"end": 10157,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10024,
											"end": 10163,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10024,
											"end": 10163,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10024,
											"end": 10163,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10024,
											"end": 10163,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10024,
											"end": 10163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10169,
											"end": 10516,
											"name": "tag",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 10169,
											"end": 10516,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10237,
											"end": 10243,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10286,
											"end": 10288,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10274,
											"end": 10283,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10265,
											"end": 10272,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10261,
											"end": 10284,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10257,
											"end": 10289,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 10254,
											"end": 10373,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10254,
											"end": 10373,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 10254,
											"end": 10373,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10292,
											"end": 10371,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 10292,
											"end": 10371,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 10292,
											"end": 10371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10292,
											"end": 10371,
											"name": "tag",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 10292,
											"end": 10371,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10254,
											"end": 10373,
											"name": "tag",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 10254,
											"end": 10373,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10412,
											"end": 10413,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10437,
											"end": 10499,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 10491,
											"end": 10498,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10482,
											"end": 10488,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10471,
											"end": 10480,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10467,
											"end": 10489,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10437,
											"end": 10499,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 10437,
											"end": 10499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10437,
											"end": 10499,
											"name": "tag",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 10437,
											"end": 10499,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10427,
											"end": 10499,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10427,
											"end": 10499,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10383,
											"end": 10509,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10169,
											"end": 10516,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10169,
											"end": 10516,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10169,
											"end": 10516,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10169,
											"end": 10516,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10169,
											"end": 10516,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10522,
											"end": 10702,
											"name": "tag",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 10522,
											"end": 10702,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10570,
											"end": 10647,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10567,
											"end": 10568,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10560,
											"end": 10648,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10667,
											"end": 10671,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 10664,
											"end": 10665,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 10657,
											"end": 10672,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10691,
											"end": 10695,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 10688,
											"end": 10689,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10681,
											"end": 10696,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 10708,
											"end": 10810,
											"name": "tag",
											"source": 12,
											"value": "235"
										},
										{
											"begin": 10708,
											"end": 10810,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10750,
											"end": 10758,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10797,
											"end": 10802,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10794,
											"end": 10795,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 10790,
											"end": 10803,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 10769,
											"end": 10803,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10769,
											"end": 10803,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10708,
											"end": 10810,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10708,
											"end": 10810,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10708,
											"end": 10810,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10708,
											"end": 10810,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10816,
											"end": 11664,
											"name": "tag",
											"source": 12,
											"value": "236"
										},
										{
											"begin": 10816,
											"end": 11664,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10877,
											"end": 10882,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10884,
											"end": 10888,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10908,
											"end": 10914,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10899,
											"end": 10914,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10899,
											"end": 10914,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10932,
											"end": 10937,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10923,
											"end": 10937,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10923,
											"end": 10937,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10946,
											"end": 11658,
											"name": "tag",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 10946,
											"end": 11658,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10967,
											"end": 10968,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 10957,
											"end": 10965,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10954,
											"end": 10969,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 10946,
											"end": 11658,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10946,
											"end": 11658,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "382"
										},
										{
											"begin": 10946,
											"end": 11658,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11062,
											"end": 11066,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11057,
											"end": 11060,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 11053,
											"end": 11067,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 11047,
											"end": 11051,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11044,
											"end": 11068,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 11041,
											"end": 11091,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 11041,
											"end": 11091,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 11041,
											"end": 11091,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11071,
											"end": 11089,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "384"
										},
										{
											"begin": 11071,
											"end": 11089,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 11071,
											"end": 11089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11071,
											"end": 11089,
											"name": "tag",
											"source": 12,
											"value": "384"
										},
										{
											"begin": 11071,
											"end": 11089,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11041,
											"end": 11091,
											"name": "tag",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 11041,
											"end": 11091,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11121,
											"end": 11122,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 11111,
											"end": 11119,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 11107,
											"end": 11123,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 11104,
											"end": 11555,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 11104,
											"end": 11555,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 11104,
											"end": 11555,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11536,
											"end": 11540,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11529,
											"end": 11534,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11525,
											"end": 11541,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 11516,
											"end": 11541,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11516,
											"end": 11541,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11104,
											"end": 11555,
											"name": "tag",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 11104,
											"end": 11555,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11586,
											"end": 11590,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11580,
											"end": 11584,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11576,
											"end": 11591,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 11568,
											"end": 11591,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11568,
											"end": 11591,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11616,
											"end": 11648,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "386"
										},
										{
											"begin": 11639,
											"end": 11647,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 11616,
											"end": 11648,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "235"
										},
										{
											"begin": 11616,
											"end": 11648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11616,
											"end": 11648,
											"name": "tag",
											"source": 12,
											"value": "386"
										},
										{
											"begin": 11616,
											"end": 11648,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11604,
											"end": 11648,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 11604,
											"end": 11648,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10946,
											"end": 11658,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 10946,
											"end": 11658,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10946,
											"end": 11658,
											"name": "tag",
											"source": 12,
											"value": "382"
										},
										{
											"begin": 10946,
											"end": 11658,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10816,
											"end": 11664,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 10816,
											"end": 11664,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10816,
											"end": 11664,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 10816,
											"end": 11664,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10816,
											"end": 11664,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10816,
											"end": 11664,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10816,
											"end": 11664,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10816,
											"end": 11664,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11670,
											"end": 12743,
											"name": "tag",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 11670,
											"end": 12743,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11724,
											"end": 11729,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11915,
											"end": 11923,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11905,
											"end": 11945,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 11905,
											"end": 11945,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11936,
											"end": 11937,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 11927,
											"end": 11937,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11927,
											"end": 11937,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11938,
											"end": 11943,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 11938,
											"end": 11943,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11905,
											"end": 11945,
											"name": "tag",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 11905,
											"end": 11945,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11964,
											"end": 11968,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11954,
											"end": 11990,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 11954,
											"end": 11990,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11981,
											"end": 11982,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11972,
											"end": 11982,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11972,
											"end": 11982,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11983,
											"end": 11988,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 11983,
											"end": 11988,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11954,
											"end": 11990,
											"name": "tag",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 11954,
											"end": 11990,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12050,
											"end": 12054,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12098,
											"end": 12099,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 12093,
											"end": 12120,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12093,
											"end": 12120,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 12093,
											"end": 12120,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 12093,
											"end": 12120,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12134,
											"end": 12135,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 12129,
											"end": 12320,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12129,
											"end": 12320,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 12129,
											"end": 12320,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 12129,
											"end": 12320,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12043,
											"end": 12320,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "390"
										},
										{
											"begin": 12043,
											"end": 12320,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12093,
											"end": 12120,
											"name": "tag",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 12093,
											"end": 12120,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12111,
											"end": 12112,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 12102,
											"end": 12112,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12102,
											"end": 12112,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12113,
											"end": 12118,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12113,
											"end": 12118,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 12113,
											"end": 12118,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12129,
											"end": 12320,
											"name": "tag",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 12129,
											"end": 12320,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12174,
											"end": 12177,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 12164,
											"end": 12172,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12161,
											"end": 12178,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 12158,
											"end": 12201,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12158,
											"end": 12201,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 12158,
											"end": 12201,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12181,
											"end": 12199,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 12181,
											"end": 12199,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 12181,
											"end": 12199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12181,
											"end": 12199,
											"name": "tag",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 12181,
											"end": 12199,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12158,
											"end": 12201,
											"name": "tag",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 12158,
											"end": 12201,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12230,
											"end": 12238,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12227,
											"end": 12228,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 12223,
											"end": 12239,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 12214,
											"end": 12239,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12214,
											"end": 12239,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12265,
											"end": 12268,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12258,
											"end": 12263,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12255,
											"end": 12269,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 12252,
											"end": 12292,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12252,
											"end": 12292,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "395"
										},
										{
											"begin": 12252,
											"end": 12292,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12272,
											"end": 12290,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "396"
										},
										{
											"begin": 12272,
											"end": 12290,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 12272,
											"end": 12290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12272,
											"end": 12290,
											"name": "tag",
											"source": 12,
											"value": "396"
										},
										{
											"begin": 12272,
											"end": 12290,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12252,
											"end": 12292,
											"name": "tag",
											"source": 12,
											"value": "395"
										},
										{
											"begin": 12252,
											"end": 12292,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12305,
											"end": 12310,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12305,
											"end": 12310,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 12305,
											"end": 12310,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12043,
											"end": 12320,
											"name": "tag",
											"source": 12,
											"value": "390"
										},
										{
											"begin": 12043,
											"end": 12320,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12043,
											"end": 12320,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12429,
											"end": 12431,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12419,
											"end": 12427,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12416,
											"end": 12432,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 12410,
											"end": 12413,
											"name": "PUSH",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 12404,
											"end": 12408,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12401,
											"end": 12414,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 12397,
											"end": 12433,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 12379,
											"end": 12381,
											"name": "PUSH",
											"source": 12,
											"value": "4E"
										},
										{
											"begin": 12369,
											"end": 12377,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12366,
											"end": 12382,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 12361,
											"end": 12363,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 12355,
											"end": 12359,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12352,
											"end": 12364,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 12348,
											"end": 12383,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 12332,
											"end": 12443,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 12329,
											"end": 12575,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12329,
											"end": 12575,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "397"
										},
										{
											"begin": 12329,
											"end": 12575,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12485,
											"end": 12493,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12479,
											"end": 12483,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12475,
											"end": 12494,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 12466,
											"end": 12494,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12466,
											"end": 12494,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12520,
											"end": 12523,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12513,
											"end": 12518,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12510,
											"end": 12524,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 12507,
											"end": 12547,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12507,
											"end": 12547,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "398"
										},
										{
											"begin": 12507,
											"end": 12547,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12527,
											"end": 12545,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "399"
										},
										{
											"begin": 12527,
											"end": 12545,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 12527,
											"end": 12545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12527,
											"end": 12545,
											"name": "tag",
											"source": 12,
											"value": "399"
										},
										{
											"begin": 12527,
											"end": 12545,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12507,
											"end": 12547,
											"name": "tag",
											"source": 12,
											"value": "398"
										},
										{
											"begin": 12507,
											"end": 12547,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12560,
											"end": 12565,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 12560,
											"end": 12565,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12329,
											"end": 12575,
											"name": "tag",
											"source": 12,
											"value": "397"
										},
										{
											"begin": 12329,
											"end": 12575,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12600,
											"end": 12642,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 12638,
											"end": 12641,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12628,
											"end": 12636,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12622,
											"end": 12626,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12619,
											"end": 12620,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 12600,
											"end": 12642,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "236"
										},
										{
											"begin": 12600,
											"end": 12642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12600,
											"end": 12642,
											"name": "tag",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 12600,
											"end": 12642,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12585,
											"end": 12642,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12585,
											"end": 12642,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12585,
											"end": 12642,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12585,
											"end": 12642,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12674,
											"end": 12678,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12669,
											"end": 12672,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12665,
											"end": 12679,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 12658,
											"end": 12663,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12655,
											"end": 12680,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 12652,
											"end": 12703,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12652,
											"end": 12703,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "401"
										},
										{
											"begin": 12652,
											"end": 12703,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12683,
											"end": 12701,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "402"
										},
										{
											"begin": 12683,
											"end": 12701,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 12683,
											"end": 12701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12683,
											"end": 12701,
											"name": "tag",
											"source": 12,
											"value": "402"
										},
										{
											"begin": 12683,
											"end": 12701,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12652,
											"end": 12703,
											"name": "tag",
											"source": 12,
											"value": "401"
										},
										{
											"begin": 12652,
											"end": 12703,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12732,
											"end": 12736,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12725,
											"end": 12730,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12721,
											"end": 12737,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 12712,
											"end": 12737,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12712,
											"end": 12737,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11670,
											"end": 12743,
											"name": "tag",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 11670,
											"end": 12743,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11670,
											"end": 12743,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 11670,
											"end": 12743,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11670,
											"end": 12743,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11670,
											"end": 12743,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11670,
											"end": 12743,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11670,
											"end": 12743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12749,
											"end": 13030,
											"name": "tag",
											"source": 12,
											"value": "61"
										},
										{
											"begin": 12749,
											"end": 13030,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12807,
											"end": 12812,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12831,
											"end": 12854,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 12849,
											"end": 12853,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12831,
											"end": 12854,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 12831,
											"end": 12854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12831,
											"end": 12854,
											"name": "tag",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 12831,
											"end": 12854,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12823,
											"end": 12854,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12823,
											"end": 12854,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12875,
											"end": 12900,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "405"
										},
										{
											"begin": 12891,
											"end": 12899,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12875,
											"end": 12900,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 12875,
											"end": 12900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12875,
											"end": 12900,
											"name": "tag",
											"source": 12,
											"value": "405"
										},
										{
											"begin": 12875,
											"end": 12900,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12863,
											"end": 12900,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12863,
											"end": 12900,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12919,
											"end": 13023,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 12956,
											"end": 13022,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12946,
											"end": 12954,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12940,
											"end": 12944,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12919,
											"end": 13023,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 12919,
											"end": 13023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12919,
											"end": 13023,
											"name": "tag",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 12919,
											"end": 13023,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12910,
											"end": 13023,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12910,
											"end": 13023,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12749,
											"end": 13030,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12749,
											"end": 13030,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12749,
											"end": 13030,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12749,
											"end": 13030,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12749,
											"end": 13030,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13036,
											"end": 13446,
											"name": "tag",
											"source": 12,
											"value": "65"
										},
										{
											"begin": 13036,
											"end": 13446,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13076,
											"end": 13083,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13099,
											"end": 13119,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "408"
										},
										{
											"begin": 13117,
											"end": 13118,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13099,
											"end": 13119,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 13099,
											"end": 13119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13099,
											"end": 13119,
											"name": "tag",
											"source": 12,
											"value": "408"
										},
										{
											"begin": 13099,
											"end": 13119,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13094,
											"end": 13119,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13094,
											"end": 13119,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13133,
											"end": 13153,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "409"
										},
										{
											"begin": 13151,
											"end": 13152,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13133,
											"end": 13153,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 13133,
											"end": 13153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13133,
											"end": 13153,
											"name": "tag",
											"source": 12,
											"value": "409"
										},
										{
											"begin": 13133,
											"end": 13153,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13128,
											"end": 13153,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 13128,
											"end": 13153,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13188,
											"end": 13189,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13185,
											"end": 13186,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13181,
											"end": 13190,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 13210,
											"end": 13240,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "410"
										},
										{
											"begin": 13228,
											"end": 13239,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13210,
											"end": 13240,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 13210,
											"end": 13240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13210,
											"end": 13240,
											"name": "tag",
											"source": 12,
											"value": "410"
										},
										{
											"begin": 13210,
											"end": 13240,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13199,
											"end": 13240,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13199,
											"end": 13240,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13389,
											"end": 13390,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13380,
											"end": 13387,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13376,
											"end": 13391,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 13373,
											"end": 13374,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 13370,
											"end": 13392,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 13350,
											"end": 13351,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13343,
											"end": 13352,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 13323,
											"end": 13406,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 13300,
											"end": 13439,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 13300,
											"end": 13439,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13419,
											"end": 13437,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "412"
										},
										{
											"begin": 13419,
											"end": 13437,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 13419,
											"end": 13437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13419,
											"end": 13437,
											"name": "tag",
											"source": 12,
											"value": "412"
										},
										{
											"begin": 13419,
											"end": 13437,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13300,
											"end": 13439,
											"name": "tag",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 13300,
											"end": 13439,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13084,
											"end": 13446,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13036,
											"end": 13446,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 13036,
											"end": 13446,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13036,
											"end": 13446,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13036,
											"end": 13446,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13036,
											"end": 13446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13452,
											"end": 13658,
											"name": "tag",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 13452,
											"end": 13658,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13491,
											"end": 13495,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13511,
											"end": 13530,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "414"
										},
										{
											"begin": 13528,
											"end": 13529,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13511,
											"end": 13530,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "206"
										},
										{
											"begin": 13511,
											"end": 13530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13511,
											"end": 13530,
											"name": "tag",
											"source": 12,
											"value": "414"
										},
										{
											"begin": 13511,
											"end": 13530,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13506,
											"end": 13530,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13506,
											"end": 13530,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13544,
											"end": 13563,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "415"
										},
										{
											"begin": 13561,
											"end": 13562,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13544,
											"end": 13563,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "206"
										},
										{
											"begin": 13544,
											"end": 13563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13544,
											"end": 13563,
											"name": "tag",
											"source": 12,
											"value": "415"
										},
										{
											"begin": 13544,
											"end": 13563,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13539,
											"end": 13563,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 13539,
											"end": 13563,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13587,
											"end": 13588,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13584,
											"end": 13585,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13580,
											"end": 13589,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 13572,
											"end": 13589,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13572,
											"end": 13589,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13611,
											"end": 13627,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFF"
										},
										{
											"begin": 13605,
											"end": 13609,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13602,
											"end": 13628,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 13599,
											"end": 13651,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 13599,
											"end": 13651,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "416"
										},
										{
											"begin": 13599,
											"end": 13651,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13631,
											"end": 13649,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "417"
										},
										{
											"begin": 13631,
											"end": 13649,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 13631,
											"end": 13649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13631,
											"end": 13649,
											"name": "tag",
											"source": 12,
											"value": "417"
										},
										{
											"begin": 13631,
											"end": 13649,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13599,
											"end": 13651,
											"name": "tag",
											"source": 12,
											"value": "416"
										},
										{
											"begin": 13599,
											"end": 13651,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13452,
											"end": 13658,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 13452,
											"end": 13658,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13452,
											"end": 13658,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13452,
											"end": 13658,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13452,
											"end": 13658,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13664,
											"end": 13782,
											"name": "tag",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 13664,
											"end": 13782,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13751,
											"end": 13775,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "419"
										},
										{
											"begin": 13769,
											"end": 13774,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13751,
											"end": 13775,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 13751,
											"end": 13775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13751,
											"end": 13775,
											"name": "tag",
											"source": 12,
											"value": "419"
										},
										{
											"begin": 13751,
											"end": 13775,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13746,
											"end": 13749,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13739,
											"end": 13776,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13664,
											"end": 13782,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13664,
											"end": 13782,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13664,
											"end": 13782,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13788,
											"end": 14120,
											"name": "tag",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 13788,
											"end": 14120,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13909,
											"end": 13913,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13947,
											"end": 13949,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 13936,
											"end": 13945,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13932,
											"end": 13950,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13924,
											"end": 13950,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13924,
											"end": 13950,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13960,
											"end": 14031,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "421"
										},
										{
											"begin": 14028,
											"end": 14029,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14017,
											"end": 14026,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14013,
											"end": 14030,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14004,
											"end": 14010,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 13960,
											"end": 14031,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "209"
										},
										{
											"begin": 13960,
											"end": 14031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13960,
											"end": 14031,
											"name": "tag",
											"source": 12,
											"value": "421"
										},
										{
											"begin": 13960,
											"end": 14031,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14041,
											"end": 14113,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "422"
										},
										{
											"begin": 14109,
											"end": 14111,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14098,
											"end": 14107,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14094,
											"end": 14112,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14085,
											"end": 14091,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 14041,
											"end": 14113,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 14041,
											"end": 14113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14041,
											"end": 14113,
											"name": "tag",
											"source": 12,
											"value": "422"
										},
										{
											"begin": 14041,
											"end": 14113,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13788,
											"end": 14120,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 13788,
											"end": 14120,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 13788,
											"end": 14120,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13788,
											"end": 14120,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13788,
											"end": 14120,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13788,
											"end": 14120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14126,
											"end": 14216,
											"name": "tag",
											"source": 12,
											"value": "239"
										},
										{
											"begin": 14126,
											"end": 14216,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14160,
											"end": 14167,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14203,
											"end": 14208,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14196,
											"end": 14209,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14189,
											"end": 14210,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14178,
											"end": 14210,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14178,
											"end": 14210,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14126,
											"end": 14216,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14126,
											"end": 14216,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14126,
											"end": 14216,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14126,
											"end": 14216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14222,
											"end": 14338,
											"name": "tag",
											"source": 12,
											"value": "240"
										},
										{
											"begin": 14222,
											"end": 14338,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14292,
											"end": 14313,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "425"
										},
										{
											"begin": 14307,
											"end": 14312,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14292,
											"end": 14313,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "239"
										},
										{
											"begin": 14292,
											"end": 14313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14292,
											"end": 14313,
											"name": "tag",
											"source": 12,
											"value": "425"
										},
										{
											"begin": 14292,
											"end": 14313,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14285,
											"end": 14290,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14282,
											"end": 14314,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 14272,
											"end": 14332,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 14272,
											"end": 14332,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14328,
											"end": 14329,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14325,
											"end": 14326,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 14318,
											"end": 14330,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 14272,
											"end": 14332,
											"name": "tag",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 14272,
											"end": 14332,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14222,
											"end": 14338,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14222,
											"end": 14338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14344,
											"end": 14481,
											"name": "tag",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 14344,
											"end": 14481,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14398,
											"end": 14403,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14429,
											"end": 14435,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14423,
											"end": 14436,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 14414,
											"end": 14436,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14414,
											"end": 14436,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14445,
											"end": 14475,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "428"
										},
										{
											"begin": 14469,
											"end": 14474,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14445,
											"end": 14475,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "240"
										},
										{
											"begin": 14445,
											"end": 14475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14445,
											"end": 14475,
											"name": "tag",
											"source": 12,
											"value": "428"
										},
										{
											"begin": 14445,
											"end": 14475,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14344,
											"end": 14481,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 14344,
											"end": 14481,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14344,
											"end": 14481,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14344,
											"end": 14481,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14344,
											"end": 14481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14487,
											"end": 14832,
											"name": "tag",
											"source": 12,
											"value": "90"
										},
										{
											"begin": 14487,
											"end": 14832,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14554,
											"end": 14560,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14603,
											"end": 14605,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14591,
											"end": 14600,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14582,
											"end": 14589,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 14578,
											"end": 14601,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 14574,
											"end": 14606,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 14571,
											"end": 14690,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14571,
											"end": 14690,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 14571,
											"end": 14690,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14609,
											"end": 14688,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "431"
										},
										{
											"begin": 14609,
											"end": 14688,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 14609,
											"end": 14688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14609,
											"end": 14688,
											"name": "tag",
											"source": 12,
											"value": "431"
										},
										{
											"begin": 14609,
											"end": 14688,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14571,
											"end": 14690,
											"name": "tag",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 14571,
											"end": 14690,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14729,
											"end": 14730,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14754,
											"end": 14815,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "432"
										},
										{
											"begin": 14807,
											"end": 14814,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 14798,
											"end": 14804,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14787,
											"end": 14796,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 14783,
											"end": 14805,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14754,
											"end": 14815,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 14754,
											"end": 14815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14754,
											"end": 14815,
											"name": "tag",
											"source": 12,
											"value": "432"
										},
										{
											"begin": 14754,
											"end": 14815,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14744,
											"end": 14815,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14744,
											"end": 14815,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14700,
											"end": 14825,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14487,
											"end": 14832,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 14487,
											"end": 14832,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14487,
											"end": 14832,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14487,
											"end": 14832,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14487,
											"end": 14832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14838,
											"end": 14923,
											"name": "tag",
											"source": 12,
											"value": "242"
										},
										{
											"begin": 14838,
											"end": 14923,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14883,
											"end": 14890,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14912,
											"end": 14917,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14901,
											"end": 14917,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14901,
											"end": 14917,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14838,
											"end": 14923,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14838,
											"end": 14923,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14838,
											"end": 14923,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14838,
											"end": 14923,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14929,
											"end": 15018,
											"name": "tag",
											"source": 12,
											"value": "243"
										},
										{
											"begin": 14929,
											"end": 15018,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14965,
											"end": 14972,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15005,
											"end": 15011,
											"name": "PUSH",
											"source": 12,
											"value": "FFFF"
										},
										{
											"begin": 14998,
											"end": 15003,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14994,
											"end": 15012,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 14983,
											"end": 15012,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14983,
											"end": 15012,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14929,
											"end": 15018,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14929,
											"end": 15018,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14929,
											"end": 15018,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14929,
											"end": 15018,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15024,
											"end": 15084,
											"name": "tag",
											"source": 12,
											"value": "244"
										},
										{
											"begin": 15024,
											"end": 15084,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15052,
											"end": 15055,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15073,
											"end": 15078,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15066,
											"end": 15078,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15066,
											"end": 15078,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15024,
											"end": 15084,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15024,
											"end": 15084,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15024,
											"end": 15084,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15024,
											"end": 15084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15090,
											"end": 15246,
											"name": "tag",
											"source": 12,
											"value": "245"
										},
										{
											"begin": 15090,
											"end": 15246,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15147,
											"end": 15156,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15180,
											"end": 15240,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "437"
										},
										{
											"begin": 15197,
											"end": 15239,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "438"
										},
										{
											"begin": 15206,
											"end": 15238,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "439"
										},
										{
											"begin": 15232,
											"end": 15237,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 15206,
											"end": 15238,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "242"
										},
										{
											"begin": 15206,
											"end": 15238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15206,
											"end": 15238,
											"name": "tag",
											"source": 12,
											"value": "439"
										},
										{
											"begin": 15206,
											"end": 15238,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15197,
											"end": 15239,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "244"
										},
										{
											"begin": 15197,
											"end": 15239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15197,
											"end": 15239,
											"name": "tag",
											"source": 12,
											"value": "438"
										},
										{
											"begin": 15197,
											"end": 15239,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15180,
											"end": 15240,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "243"
										},
										{
											"begin": 15180,
											"end": 15240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15180,
											"end": 15240,
											"name": "tag",
											"source": 12,
											"value": "437"
										},
										{
											"begin": 15180,
											"end": 15240,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15167,
											"end": 15240,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15167,
											"end": 15240,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15090,
											"end": 15246,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15090,
											"end": 15246,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15090,
											"end": 15246,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15090,
											"end": 15246,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15252,
											"end": 15397,
											"name": "tag",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 15252,
											"end": 15397,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15346,
											"end": 15390,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "441"
										},
										{
											"begin": 15384,
											"end": 15389,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15346,
											"end": 15390,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "245"
										},
										{
											"begin": 15346,
											"end": 15390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15346,
											"end": 15390,
											"name": "tag",
											"source": 12,
											"value": "441"
										},
										{
											"begin": 15346,
											"end": 15390,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15341,
											"end": 15344,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15334,
											"end": 15391,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15252,
											"end": 15397,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15252,
											"end": 15397,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15252,
											"end": 15397,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15403,
											"end": 15970,
											"name": "tag",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 15403,
											"end": 15970,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15587,
											"end": 15591,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15625,
											"end": 15628,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 15614,
											"end": 15623,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15610,
											"end": 15629,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15602,
											"end": 15629,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15602,
											"end": 15629,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15639,
											"end": 15710,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "443"
										},
										{
											"begin": 15707,
											"end": 15708,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15696,
											"end": 15705,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15692,
											"end": 15709,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15683,
											"end": 15689,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 15639,
											"end": 15710,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "209"
										},
										{
											"begin": 15639,
											"end": 15710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15639,
											"end": 15710,
											"name": "tag",
											"source": 12,
											"value": "443"
										},
										{
											"begin": 15639,
											"end": 15710,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15720,
											"end": 15792,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "444"
										},
										{
											"begin": 15788,
											"end": 15790,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15777,
											"end": 15786,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15773,
											"end": 15791,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15764,
											"end": 15770,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 15720,
											"end": 15792,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 15720,
											"end": 15792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15720,
											"end": 15792,
											"name": "tag",
											"source": 12,
											"value": "444"
										},
										{
											"begin": 15720,
											"end": 15792,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15802,
											"end": 15874,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "445"
										},
										{
											"begin": 15870,
											"end": 15872,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 15859,
											"end": 15868,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15855,
											"end": 15873,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15846,
											"end": 15852,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 15802,
											"end": 15874,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "209"
										},
										{
											"begin": 15802,
											"end": 15874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15802,
											"end": 15874,
											"name": "tag",
											"source": 12,
											"value": "445"
										},
										{
											"begin": 15802,
											"end": 15874,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15884,
											"end": 15963,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "446"
										},
										{
											"begin": 15959,
											"end": 15961,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 15948,
											"end": 15957,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15944,
											"end": 15962,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15935,
											"end": 15941,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 15884,
											"end": 15963,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 15884,
											"end": 15963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15884,
											"end": 15963,
											"name": "tag",
											"source": 12,
											"value": "446"
										},
										{
											"begin": 15884,
											"end": 15963,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15403,
											"end": 15970,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 15403,
											"end": 15970,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 15403,
											"end": 15970,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15403,
											"end": 15970,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15403,
											"end": 15970,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15403,
											"end": 15970,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15403,
											"end": 15970,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15403,
											"end": 15970,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15976,
											"end": 16167,
											"name": "tag",
											"source": 12,
											"value": "99"
										},
										{
											"begin": 15976,
											"end": 16167,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16016,
											"end": 16019,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16035,
											"end": 16055,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "448"
										},
										{
											"begin": 16053,
											"end": 16054,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16035,
											"end": 16055,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 16035,
											"end": 16055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16035,
											"end": 16055,
											"name": "tag",
											"source": 12,
											"value": "448"
										},
										{
											"begin": 16035,
											"end": 16055,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16030,
											"end": 16055,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16030,
											"end": 16055,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16069,
											"end": 16089,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "449"
										},
										{
											"begin": 16087,
											"end": 16088,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16069,
											"end": 16089,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 16069,
											"end": 16089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16069,
											"end": 16089,
											"name": "tag",
											"source": 12,
											"value": "449"
										},
										{
											"begin": 16069,
											"end": 16089,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16064,
											"end": 16089,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 16064,
											"end": 16089,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16112,
											"end": 16113,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16109,
											"end": 16110,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16105,
											"end": 16114,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16098,
											"end": 16114,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16098,
											"end": 16114,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16133,
											"end": 16136,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 16130,
											"end": 16131,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16127,
											"end": 16137,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 16124,
											"end": 16160,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 16124,
											"end": 16160,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 16124,
											"end": 16160,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 16140,
											"end": 16158,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "451"
										},
										{
											"begin": 16140,
											"end": 16158,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 16140,
											"end": 16158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16140,
											"end": 16158,
											"name": "tag",
											"source": 12,
											"value": "451"
										},
										{
											"begin": 16140,
											"end": 16158,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16124,
											"end": 16160,
											"name": "tag",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 16124,
											"end": 16160,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15976,
											"end": 16167,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 15976,
											"end": 16167,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15976,
											"end": 16167,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15976,
											"end": 16167,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15976,
											"end": 16167,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16173,
											"end": 16348,
											"name": "tag",
											"source": 12,
											"value": "101"
										},
										{
											"begin": 16173,
											"end": 16348,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16211,
											"end": 16214,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16234,
											"end": 16257,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "453"
										},
										{
											"begin": 16251,
											"end": 16256,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16234,
											"end": 16257,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "199"
										},
										{
											"begin": 16234,
											"end": 16257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16234,
											"end": 16257,
											"name": "tag",
											"source": 12,
											"value": "453"
										},
										{
											"begin": 16234,
											"end": 16257,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16225,
											"end": 16257,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16225,
											"end": 16257,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16279,
											"end": 16289,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 16272,
											"end": 16277,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16269,
											"end": 16290,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 16266,
											"end": 16313,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "454"
										},
										{
											"begin": 16266,
											"end": 16313,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 16293,
											"end": 16311,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 16293,
											"end": 16311,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 16293,
											"end": 16311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16293,
											"end": 16311,
											"name": "tag",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 16293,
											"end": 16311,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16266,
											"end": 16313,
											"name": "tag",
											"source": 12,
											"value": "454"
										},
										{
											"begin": 16266,
											"end": 16313,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16340,
											"end": 16341,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 16333,
											"end": 16338,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16329,
											"end": 16342,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16322,
											"end": 16342,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16322,
											"end": 16342,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16173,
											"end": 16348,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16173,
											"end": 16348,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16173,
											"end": 16348,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16173,
											"end": 16348,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16354,
											"end": 16515,
											"name": "tag",
											"source": 12,
											"value": "247"
										},
										{
											"begin": 16354,
											"end": 16515,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16494,
											"end": 16507,
											"name": "PUSH",
											"source": 12,
											"value": "5472616465206572726F72000000000000000000000000000000000000000000"
										},
										{
											"begin": 16490,
											"end": 16491,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16482,
											"end": 16488,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16478,
											"end": 16492,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16471,
											"end": 16508,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16354,
											"end": 16515,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16354,
											"end": 16515,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16521,
											"end": 16887,
											"name": "tag",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 16521,
											"end": 16887,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16663,
											"end": 16666,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16684,
											"end": 16751,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 16748,
											"end": 16750,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 16743,
											"end": 16746,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16684,
											"end": 16751,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "228"
										},
										{
											"begin": 16684,
											"end": 16751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16684,
											"end": 16751,
											"name": "tag",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 16684,
											"end": 16751,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16677,
											"end": 16751,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16677,
											"end": 16751,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16760,
											"end": 16853,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 16849,
											"end": 16852,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16760,
											"end": 16853,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "247"
										},
										{
											"begin": 16760,
											"end": 16853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16760,
											"end": 16853,
											"name": "tag",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 16760,
											"end": 16853,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16878,
											"end": 16880,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16873,
											"end": 16876,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16869,
											"end": 16881,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16862,
											"end": 16881,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16862,
											"end": 16881,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16521,
											"end": 16887,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16521,
											"end": 16887,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16521,
											"end": 16887,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16521,
											"end": 16887,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16893,
											"end": 17312,
											"name": "tag",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 16893,
											"end": 17312,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17059,
											"end": 17063,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17097,
											"end": 17099,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17086,
											"end": 17095,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17082,
											"end": 17100,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17074,
											"end": 17100,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17074,
											"end": 17100,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17146,
											"end": 17155,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17140,
											"end": 17144,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17136,
											"end": 17156,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 17132,
											"end": 17133,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17121,
											"end": 17130,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17117,
											"end": 17134,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17110,
											"end": 17157,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17174,
											"end": 17305,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "461"
										},
										{
											"begin": 17300,
											"end": 17304,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17174,
											"end": 17305,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 17174,
											"end": 17305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17174,
											"end": 17305,
											"name": "tag",
											"source": 12,
											"value": "461"
										},
										{
											"begin": 17174,
											"end": 17305,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17166,
											"end": 17305,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17166,
											"end": 17305,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16893,
											"end": 17312,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16893,
											"end": 17312,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16893,
											"end": 17312,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16893,
											"end": 17312,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17318,
											"end": 17597,
											"name": "tag",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 17318,
											"end": 17597,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17358,
											"end": 17365,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17381,
											"end": 17401,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "463"
										},
										{
											"begin": 17399,
											"end": 17400,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17381,
											"end": 17401,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 17381,
											"end": 17401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17381,
											"end": 17401,
											"name": "tag",
											"source": 12,
											"value": "463"
										},
										{
											"begin": 17381,
											"end": 17401,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17376,
											"end": 17401,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17376,
											"end": 17401,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17415,
											"end": 17435,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "464"
										},
										{
											"begin": 17433,
											"end": 17434,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17415,
											"end": 17435,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 17415,
											"end": 17435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17415,
											"end": 17435,
											"name": "tag",
											"source": 12,
											"value": "464"
										},
										{
											"begin": 17415,
											"end": 17435,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17410,
											"end": 17435,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17410,
											"end": 17435,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17470,
											"end": 17471,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17467,
											"end": 17468,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17463,
											"end": 17472,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 17492,
											"end": 17522,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "465"
										},
										{
											"begin": 17510,
											"end": 17521,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17492,
											"end": 17522,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 17492,
											"end": 17522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17492,
											"end": 17522,
											"name": "tag",
											"source": 12,
											"value": "465"
										},
										{
											"begin": 17492,
											"end": 17522,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17481,
											"end": 17522,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17481,
											"end": 17522,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17554,
											"end": 17565,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 17545,
											"end": 17552,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17542,
											"end": 17566,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 17532,
											"end": 17590,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "466"
										},
										{
											"begin": 17532,
											"end": 17590,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 17570,
											"end": 17588,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "467"
										},
										{
											"begin": 17570,
											"end": 17588,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 17570,
											"end": 17588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17570,
											"end": 17588,
											"name": "tag",
											"source": 12,
											"value": "467"
										},
										{
											"begin": 17570,
											"end": 17588,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17532,
											"end": 17590,
											"name": "tag",
											"source": 12,
											"value": "466"
										},
										{
											"begin": 17532,
											"end": 17590,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17366,
											"end": 17597,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17318,
											"end": 17597,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17318,
											"end": 17597,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17318,
											"end": 17597,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17318,
											"end": 17597,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17318,
											"end": 17597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17603,
											"end": 17783,
											"name": "tag",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 17603,
											"end": 17783,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17651,
											"end": 17728,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17648,
											"end": 17649,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17641,
											"end": 17729,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17748,
											"end": 17752,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 17745,
											"end": 17746,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 17738,
											"end": 17753,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17772,
											"end": 17776,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 17769,
											"end": 17770,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17762,
											"end": 17777,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 17789,
											"end": 17974,
											"name": "tag",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 17789,
											"end": 17974,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17829,
											"end": 17830,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17846,
											"end": 17866,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "470"
										},
										{
											"begin": 17864,
											"end": 17865,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17846,
											"end": 17866,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 17846,
											"end": 17866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17846,
											"end": 17866,
											"name": "tag",
											"source": 12,
											"value": "470"
										},
										{
											"begin": 17846,
											"end": 17866,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17841,
											"end": 17866,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17841,
											"end": 17866,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17880,
											"end": 17900,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "471"
										},
										{
											"begin": 17898,
											"end": 17899,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17880,
											"end": 17900,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 17880,
											"end": 17900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17880,
											"end": 17900,
											"name": "tag",
											"source": 12,
											"value": "471"
										},
										{
											"begin": 17880,
											"end": 17900,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17875,
											"end": 17900,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17875,
											"end": 17900,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17919,
											"end": 17920,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17909,
											"end": 17944,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "472"
										},
										{
											"begin": 17909,
											"end": 17944,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 17924,
											"end": 17942,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 17924,
											"end": 17942,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 17924,
											"end": 17942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17924,
											"end": 17942,
											"name": "tag",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 17924,
											"end": 17942,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17909,
											"end": 17944,
											"name": "tag",
											"source": 12,
											"value": "472"
										},
										{
											"begin": 17909,
											"end": 17944,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17966,
											"end": 17967,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17963,
											"end": 17964,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17959,
											"end": 17968,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 17954,
											"end": 17968,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17954,
											"end": 17968,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17789,
											"end": 17974,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17789,
											"end": 17974,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17789,
											"end": 17974,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17789,
											"end": 17974,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17789,
											"end": 17974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17980,
											"end": 18422,
											"name": "tag",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 17980,
											"end": 18422,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18129,
											"end": 18133,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18167,
											"end": 18169,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 18156,
											"end": 18165,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18152,
											"end": 18170,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18144,
											"end": 18170,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18144,
											"end": 18170,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18180,
											"end": 18251,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "475"
										},
										{
											"begin": 18248,
											"end": 18249,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18237,
											"end": 18246,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18233,
											"end": 18250,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18224,
											"end": 18230,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 18180,
											"end": 18251,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "209"
										},
										{
											"begin": 18180,
											"end": 18251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18180,
											"end": 18251,
											"name": "tag",
											"source": 12,
											"value": "475"
										},
										{
											"begin": 18180,
											"end": 18251,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18261,
											"end": 18333,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "476"
										},
										{
											"begin": 18329,
											"end": 18331,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 18318,
											"end": 18327,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18314,
											"end": 18332,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18305,
											"end": 18311,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 18261,
											"end": 18333,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "209"
										},
										{
											"begin": 18261,
											"end": 18333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18261,
											"end": 18333,
											"name": "tag",
											"source": 12,
											"value": "476"
										},
										{
											"begin": 18261,
											"end": 18333,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18343,
											"end": 18415,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "477"
										},
										{
											"begin": 18411,
											"end": 18413,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 18400,
											"end": 18409,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18396,
											"end": 18414,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18387,
											"end": 18393,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 18343,
											"end": 18415,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 18343,
											"end": 18415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18343,
											"end": 18415,
											"name": "tag",
											"source": 12,
											"value": "477"
										},
										{
											"begin": 18343,
											"end": 18415,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17980,
											"end": 18422,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 17980,
											"end": 18422,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 17980,
											"end": 18422,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17980,
											"end": 18422,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17980,
											"end": 18422,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17980,
											"end": 18422,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17980,
											"end": 18422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18428,
											"end": 18657,
											"name": "tag",
											"source": 12,
											"value": "250"
										},
										{
											"begin": 18428,
											"end": 18657,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18568,
											"end": 18602,
											"name": "PUSH",
											"source": 12,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 18564,
											"end": 18565,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18556,
											"end": 18562,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18552,
											"end": 18566,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18545,
											"end": 18603,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18637,
											"end": 18649,
											"name": "PUSH",
											"source": 12,
											"value": "6F74207375636365656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 18632,
											"end": 18634,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 18624,
											"end": 18630,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18620,
											"end": 18635,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18613,
											"end": 18650,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18428,
											"end": 18657,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18428,
											"end": 18657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18663,
											"end": 19029,
											"name": "tag",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 18663,
											"end": 19029,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18805,
											"end": 18808,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18826,
											"end": 18893,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "480"
										},
										{
											"begin": 18890,
											"end": 18892,
											"name": "PUSH",
											"source": 12,
											"value": "2A"
										},
										{
											"begin": 18885,
											"end": 18888,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18826,
											"end": 18893,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "228"
										},
										{
											"begin": 18826,
											"end": 18893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18826,
											"end": 18893,
											"name": "tag",
											"source": 12,
											"value": "480"
										},
										{
											"begin": 18826,
											"end": 18893,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18819,
											"end": 18893,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18819,
											"end": 18893,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18902,
											"end": 18995,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "481"
										},
										{
											"begin": 18991,
											"end": 18994,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18902,
											"end": 18995,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "250"
										},
										{
											"begin": 18902,
											"end": 18995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18902,
											"end": 18995,
											"name": "tag",
											"source": 12,
											"value": "481"
										},
										{
											"begin": 18902,
											"end": 18995,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19020,
											"end": 19022,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 19015,
											"end": 19018,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19011,
											"end": 19023,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19004,
											"end": 19023,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19004,
											"end": 19023,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18663,
											"end": 19029,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18663,
											"end": 19029,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18663,
											"end": 19029,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18663,
											"end": 19029,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19035,
											"end": 19454,
											"name": "tag",
											"source": 12,
											"value": "162"
										},
										{
											"begin": 19035,
											"end": 19454,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19201,
											"end": 19205,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19239,
											"end": 19241,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 19228,
											"end": 19237,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19224,
											"end": 19242,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19216,
											"end": 19242,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19216,
											"end": 19242,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19288,
											"end": 19297,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19282,
											"end": 19286,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19278,
											"end": 19298,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 19274,
											"end": 19275,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19263,
											"end": 19272,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19259,
											"end": 19276,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19252,
											"end": 19299,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19316,
											"end": 19447,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "483"
										},
										{
											"begin": 19442,
											"end": 19446,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19316,
											"end": 19447,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 19316,
											"end": 19447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19316,
											"end": 19447,
											"name": "tag",
											"source": 12,
											"value": "483"
										},
										{
											"begin": 19316,
											"end": 19447,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19308,
											"end": 19447,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19308,
											"end": 19447,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19035,
											"end": 19454,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19035,
											"end": 19454,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19035,
											"end": 19454,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19035,
											"end": 19454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19460,
											"end": 19685,
											"name": "tag",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 19460,
											"end": 19685,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19600,
											"end": 19634,
											"name": "PUSH",
											"source": 12,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 19596,
											"end": 19597,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19588,
											"end": 19594,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19584,
											"end": 19598,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19577,
											"end": 19635,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19669,
											"end": 19677,
											"name": "PUSH",
											"source": 12,
											"value": "722063616C6C0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19664,
											"end": 19666,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 19656,
											"end": 19662,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19652,
											"end": 19667,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19645,
											"end": 19678,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19460,
											"end": 19685,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19460,
											"end": 19685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19691,
											"end": 20057,
											"name": "tag",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 19691,
											"end": 20057,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19833,
											"end": 19836,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19854,
											"end": 19921,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "486"
										},
										{
											"begin": 19918,
											"end": 19920,
											"name": "PUSH",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 19913,
											"end": 19916,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19854,
											"end": 19921,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "228"
										},
										{
											"begin": 19854,
											"end": 19921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19854,
											"end": 19921,
											"name": "tag",
											"source": 12,
											"value": "486"
										},
										{
											"begin": 19854,
											"end": 19921,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19847,
											"end": 19921,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19847,
											"end": 19921,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19930,
											"end": 20023,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "487"
										},
										{
											"begin": 20019,
											"end": 20022,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19930,
											"end": 20023,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 19930,
											"end": 20023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19930,
											"end": 20023,
											"name": "tag",
											"source": 12,
											"value": "487"
										},
										{
											"begin": 19930,
											"end": 20023,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20048,
											"end": 20050,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 20043,
											"end": 20046,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20039,
											"end": 20051,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20032,
											"end": 20051,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20032,
											"end": 20051,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19691,
											"end": 20057,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19691,
											"end": 20057,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19691,
											"end": 20057,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19691,
											"end": 20057,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20063,
											"end": 20482,
											"name": "tag",
											"source": 12,
											"value": "169"
										},
										{
											"begin": 20063,
											"end": 20482,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20229,
											"end": 20233,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20267,
											"end": 20269,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 20256,
											"end": 20265,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20252,
											"end": 20270,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20244,
											"end": 20270,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20244,
											"end": 20270,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20316,
											"end": 20325,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20310,
											"end": 20314,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20306,
											"end": 20326,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 20302,
											"end": 20303,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20291,
											"end": 20300,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 20287,
											"end": 20304,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20280,
											"end": 20327,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 20344,
											"end": 20475,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "489"
										},
										{
											"begin": 20470,
											"end": 20474,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20344,
											"end": 20475,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 20344,
											"end": 20475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20344,
											"end": 20475,
											"name": "tag",
											"source": 12,
											"value": "489"
										},
										{
											"begin": 20344,
											"end": 20475,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20336,
											"end": 20475,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20336,
											"end": 20475,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20063,
											"end": 20482,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20063,
											"end": 20482,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20063,
											"end": 20482,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20063,
											"end": 20482,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20488,
											"end": 20586,
											"name": "tag",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 20488,
											"end": 20586,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20539,
											"end": 20545,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20573,
											"end": 20578,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20567,
											"end": 20579,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 20557,
											"end": 20579,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20557,
											"end": 20579,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20488,
											"end": 20586,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20488,
											"end": 20586,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20488,
											"end": 20586,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20488,
											"end": 20586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20592,
											"end": 20739,
											"name": "tag",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 20592,
											"end": 20739,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20693,
											"end": 20704,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20730,
											"end": 20733,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20715,
											"end": 20733,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20715,
											"end": 20733,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20592,
											"end": 20739,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 20592,
											"end": 20739,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20592,
											"end": 20739,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20592,
											"end": 20739,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20592,
											"end": 20739,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20745,
											"end": 20991,
											"name": "tag",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 20745,
											"end": 20991,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20826,
											"end": 20827,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20836,
											"end": 20949,
											"name": "tag",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 20836,
											"end": 20949,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20850,
											"end": 20856,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 20847,
											"end": 20848,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20844,
											"end": 20857,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 20836,
											"end": 20949,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 20836,
											"end": 20949,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "495"
										},
										{
											"begin": 20836,
											"end": 20949,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 20935,
											"end": 20936,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 20930,
											"end": 20933,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20926,
											"end": 20937,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20920,
											"end": 20938,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 20916,
											"end": 20917,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20911,
											"end": 20914,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 20907,
											"end": 20918,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20900,
											"end": 20939,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 20872,
											"end": 20874,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 20869,
											"end": 20870,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20865,
											"end": 20875,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20860,
											"end": 20875,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20860,
											"end": 20875,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20836,
											"end": 20949,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 20836,
											"end": 20949,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20836,
											"end": 20949,
											"name": "tag",
											"source": 12,
											"value": "495"
										},
										{
											"begin": 20836,
											"end": 20949,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20983,
											"end": 20984,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20974,
											"end": 20980,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 20969,
											"end": 20972,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 20965,
											"end": 20981,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20958,
											"end": 20985,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 20807,
											"end": 20991,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20745,
											"end": 20991,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20745,
											"end": 20991,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20745,
											"end": 20991,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20745,
											"end": 20991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20997,
											"end": 21383,
											"name": "tag",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 20997,
											"end": 21383,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21101,
											"end": 21104,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21129,
											"end": 21167,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "497"
										},
										{
											"begin": 21161,
											"end": 21166,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21129,
											"end": 21167,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 21129,
											"end": 21167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21129,
											"end": 21167,
											"name": "tag",
											"source": 12,
											"value": "497"
										},
										{
											"begin": 21129,
											"end": 21167,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21183,
											"end": 21271,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "498"
										},
										{
											"begin": 21264,
											"end": 21270,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21259,
											"end": 21262,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 21183,
											"end": 21271,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 21183,
											"end": 21271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21183,
											"end": 21271,
											"name": "tag",
											"source": 12,
											"value": "498"
										},
										{
											"begin": 21183,
											"end": 21271,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21176,
											"end": 21271,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 21176,
											"end": 21271,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21280,
											"end": 21345,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "499"
										},
										{
											"begin": 21338,
											"end": 21344,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21333,
											"end": 21336,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 21326,
											"end": 21330,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 21319,
											"end": 21324,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 21315,
											"end": 21331,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21280,
											"end": 21345,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 21280,
											"end": 21345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21280,
											"end": 21345,
											"name": "tag",
											"source": 12,
											"value": "499"
										},
										{
											"begin": 21280,
											"end": 21345,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21370,
											"end": 21376,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 21365,
											"end": 21368,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 21361,
											"end": 21377,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21354,
											"end": 21377,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21354,
											"end": 21377,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21105,
											"end": 21383,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20997,
											"end": 21383,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 20997,
											"end": 21383,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20997,
											"end": 21383,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20997,
											"end": 21383,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20997,
											"end": 21383,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21389,
											"end": 21660,
											"name": "tag",
											"source": 12,
											"value": "171"
										},
										{
											"begin": 21389,
											"end": 21660,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21519,
											"end": 21522,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21541,
											"end": 21634,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "501"
										},
										{
											"begin": 21630,
											"end": 21633,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21621,
											"end": 21627,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 21541,
											"end": 21634,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 21541,
											"end": 21634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21541,
											"end": 21634,
											"name": "tag",
											"source": 12,
											"value": "501"
										},
										{
											"begin": 21541,
											"end": 21634,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21534,
											"end": 21634,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21534,
											"end": 21634,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21651,
											"end": 21654,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21644,
											"end": 21654,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21644,
											"end": 21654,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21389,
											"end": 21660,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 21389,
											"end": 21660,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21389,
											"end": 21660,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21389,
											"end": 21660,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21389,
											"end": 21660,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21666,
											"end": 21845,
											"name": "tag",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 21666,
											"end": 21845,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21806,
											"end": 21837,
											"name": "PUSH",
											"source": 12,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 21802,
											"end": 21803,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21794,
											"end": 21800,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21790,
											"end": 21804,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21783,
											"end": 21838,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 21666,
											"end": 21845,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21666,
											"end": 21845,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21851,
											"end": 22217,
											"name": "tag",
											"source": 12,
											"value": "259"
										},
										{
											"begin": 21851,
											"end": 22217,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21993,
											"end": 21996,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22014,
											"end": 22081,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "504"
										},
										{
											"begin": 22078,
											"end": 22080,
											"name": "PUSH",
											"source": 12,
											"value": "1D"
										},
										{
											"begin": 22073,
											"end": 22076,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 22014,
											"end": 22081,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "228"
										},
										{
											"begin": 22014,
											"end": 22081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22014,
											"end": 22081,
											"name": "tag",
											"source": 12,
											"value": "504"
										},
										{
											"begin": 22014,
											"end": 22081,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22007,
											"end": 22081,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 22007,
											"end": 22081,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22090,
											"end": 22183,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "505"
										},
										{
											"begin": 22179,
											"end": 22182,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22090,
											"end": 22183,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 22090,
											"end": 22183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22090,
											"end": 22183,
											"name": "tag",
											"source": 12,
											"value": "505"
										},
										{
											"begin": 22090,
											"end": 22183,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22208,
											"end": 22210,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 22203,
											"end": 22206,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22199,
											"end": 22211,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22192,
											"end": 22211,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22192,
											"end": 22211,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21851,
											"end": 22217,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21851,
											"end": 22217,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21851,
											"end": 22217,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21851,
											"end": 22217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22223,
											"end": 22642,
											"name": "tag",
											"source": 12,
											"value": "184"
										},
										{
											"begin": 22223,
											"end": 22642,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22389,
											"end": 22393,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22427,
											"end": 22429,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 22416,
											"end": 22425,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22412,
											"end": 22430,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22404,
											"end": 22430,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22404,
											"end": 22430,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22476,
											"end": 22485,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22470,
											"end": 22474,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22466,
											"end": 22486,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 22462,
											"end": 22463,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22451,
											"end": 22460,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 22447,
											"end": 22464,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22440,
											"end": 22487,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 22504,
											"end": 22635,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "507"
										},
										{
											"begin": 22630,
											"end": 22634,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22504,
											"end": 22635,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "259"
										},
										{
											"begin": 22504,
											"end": 22635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22504,
											"end": 22635,
											"name": "tag",
											"source": 12,
											"value": "507"
										},
										{
											"begin": 22504,
											"end": 22635,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22496,
											"end": 22635,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22496,
											"end": 22635,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22223,
											"end": 22642,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 22223,
											"end": 22642,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22223,
											"end": 22642,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22223,
											"end": 22642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22648,
											"end": 22747,
											"name": "tag",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 22648,
											"end": 22747,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22700,
											"end": 22706,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22734,
											"end": 22739,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22728,
											"end": 22740,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 22718,
											"end": 22740,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22718,
											"end": 22740,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22648,
											"end": 22747,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 22648,
											"end": 22747,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22648,
											"end": 22747,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22648,
											"end": 22747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22753,
											"end": 22855,
											"name": "tag",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 22753,
											"end": 22855,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22794,
											"end": 22800,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22845,
											"end": 22847,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 22841,
											"end": 22848,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 22836,
											"end": 22838,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 22829,
											"end": 22834,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 22825,
											"end": 22839,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22821,
											"end": 22849,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 22811,
											"end": 22849,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22811,
											"end": 22849,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22753,
											"end": 22855,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 22753,
											"end": 22855,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22753,
											"end": 22855,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22753,
											"end": 22855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22861,
											"end": 23238,
											"name": "tag",
											"source": 12,
											"value": "262"
										},
										{
											"begin": 22861,
											"end": 23238,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22949,
											"end": 22952,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22977,
											"end": 23016,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "511"
										},
										{
											"begin": 23010,
											"end": 23015,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22977,
											"end": 23016,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 22977,
											"end": 23016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22977,
											"end": 23016,
											"name": "tag",
											"source": 12,
											"value": "511"
										},
										{
											"begin": 22977,
											"end": 23016,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23032,
											"end": 23103,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "512"
										},
										{
											"begin": 23096,
											"end": 23102,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23091,
											"end": 23094,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 23032,
											"end": 23103,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "228"
										},
										{
											"begin": 23032,
											"end": 23103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23032,
											"end": 23103,
											"name": "tag",
											"source": 12,
											"value": "512"
										},
										{
											"begin": 23032,
											"end": 23103,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23025,
											"end": 23103,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 23025,
											"end": 23103,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23112,
											"end": 23177,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "513"
										},
										{
											"begin": 23170,
											"end": 23176,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23165,
											"end": 23168,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 23158,
											"end": 23162,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 23151,
											"end": 23156,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 23147,
											"end": 23163,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23112,
											"end": 23177,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 23112,
											"end": 23177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23112,
											"end": 23177,
											"name": "tag",
											"source": 12,
											"value": "513"
										},
										{
											"begin": 23112,
											"end": 23177,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23202,
											"end": 23231,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "514"
										},
										{
											"begin": 23224,
											"end": 23230,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23202,
											"end": 23231,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 23202,
											"end": 23231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23202,
											"end": 23231,
											"name": "tag",
											"source": 12,
											"value": "514"
										},
										{
											"begin": 23202,
											"end": 23231,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23197,
											"end": 23200,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 23193,
											"end": 23232,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23186,
											"end": 23232,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 23186,
											"end": 23232,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22953,
											"end": 23238,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22861,
											"end": 23238,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 22861,
											"end": 23238,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 22861,
											"end": 23238,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22861,
											"end": 23238,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22861,
											"end": 23238,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23244,
											"end": 23557,
											"name": "tag",
											"source": 12,
											"value": "193"
										},
										{
											"begin": 23244,
											"end": 23557,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23357,
											"end": 23361,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23395,
											"end": 23397,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 23384,
											"end": 23393,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23380,
											"end": 23398,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23372,
											"end": 23398,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23372,
											"end": 23398,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23444,
											"end": 23453,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23438,
											"end": 23442,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23434,
											"end": 23454,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 23430,
											"end": 23431,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23419,
											"end": 23428,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 23415,
											"end": 23432,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23408,
											"end": 23455,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 23472,
											"end": 23550,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "516"
										},
										{
											"begin": 23545,
											"end": 23549,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23536,
											"end": 23542,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 23472,
											"end": 23550,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "262"
										},
										{
											"begin": 23472,
											"end": 23550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23472,
											"end": 23550,
											"name": "tag",
											"source": 12,
											"value": "516"
										},
										{
											"begin": 23472,
											"end": 23550,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23464,
											"end": 23550,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23464,
											"end": 23550,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23244,
											"end": 23557,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 23244,
											"end": 23557,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 23244,
											"end": 23557,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23244,
											"end": 23557,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23244,
											"end": 23557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"contracts/TimeMarket.sol",
								"interfaces/AaveV3/IPool.sol",
								"interfaces/AaveV3/IPoolAddressesProvider.sol",
								"interfaces/IERC20.sol",
								"interfaces/IERC20Metadata.sol",
								"interfaces/IERC20Permit.sol",
								"interfaces/ITimeFactory.sol",
								"interfaces/ITimeMarket.sol",
								"libraries/Address.sol",
								"libraries/DataTypes.sol",
								"libraries/SafeERC20.sol",
								"libraries/TimeLibrary.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"cancelOrder(uint32)": "1b92468d",
							"getClearTime()": "cd83432d",
							"getTradeMes(uint32)": "b9eb8992",
							"matchTrade(uint32)": "b7252e8f",
							"putTrade(address,uint32,uint128,uint8)": "8acd6272",
							"refund(uint32)": "1c48c074",
							"rewardPoolAddress()": "845a51ec",
							"setRewardPool(address,uint56)": "635b9a0f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_airdropToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AlreadyInjectToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AlreadyWithdraw\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailTrade\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailTransfer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InjectAaveError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NorSolder\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotBuyer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotEndTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotEnoughAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInjectToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OverTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TradeSuccess\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_time\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"withdrawAipdrop\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_id\",\"type\":\"uint32\"}],\"name\":\"cancelOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getClearTime\",\"outputs\":[{\"internalType\":\"uint56\",\"name\":\"\",\"type\":\"uint56\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_id\",\"type\":\"uint32\"}],\"name\":\"getTradeMes\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"tradeId\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"price\",\"type\":\"uint32\"},{\"internalType\":\"uint56\",\"name\":\"time\",\"type\":\"uint56\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"tokenOneAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"solderAddress\",\"type\":\"address\"},{\"internalType\":\"enum ITimeMarket.tradeState\",\"name\":\"_tradeState\",\"type\":\"uint8\"}],\"internalType\":\"struct ITimeMarket.tradeMes\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_id\",\"type\":\"uint32\"}],\"name\":\"matchTrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_price\",\"type\":\"uint32\"},{\"internalType\":\"uint128\",\"name\":\"_amount\",\"type\":\"uint128\"},{\"internalType\":\"enum ITimeMarket.doState\",\"name\":\"_doState\",\"type\":\"uint8\"}],\"name\":\"putTrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_id\",\"type\":\"uint32\"}],\"name\":\"refund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPoolAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardPool\",\"type\":\"address\"},{\"internalType\":\"uint56\",\"name\":\"_clearingTime\",\"type\":\"uint56\"}],\"name\":\"setRewardPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TimeMarket.sol\":\"TimeMarket\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/TimeMarket.sol\":{\"keccak256\":\"0xbc85869754cb6dd84be7f442c87df6186c49c8df49ec0d98ae84c74fb0951c93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13be042d656bab1929b402c0cdf88a24acef4e731971c844b8ec2cc05e4185d4\",\"dweb:/ipfs/QmS45Uk2h8uACT4vcVpfkaswTUFZnzW3L3qgo8BBpL2jDT\"]},\"interfaces/AaveV3/IPool.sol\":{\"keccak256\":\"0x123b94a5f496d1cb9896971ea83139c2986717f97b1462274ffaf81799ff1668\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://02376cb3e8237db2037566bbc4537a29d2e905570211abe34199e0382ccddb4e\",\"dweb:/ipfs/QmWudMByihYdXEU88JitRWzoUhTdam1qbzLYvLmW5bjtVh\"]},\"interfaces/AaveV3/IPoolAddressesProvider.sol\":{\"keccak256\":\"0x9f3278344dafeac9c00e18a43396cf2c86cd68ad191b779d76f6ccb331d83c84\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://70d6c66925a98aba29be5cb413caa4941359f04523cbfbdb6faf73cd419fac77\",\"dweb:/ipfs/QmX1ieyWB4YXrDdLRJjEsuCbChzSXtZRCVvPNVwxtH2bEV\"]},\"interfaces/IERC20.sol\":{\"keccak256\":\"0xa426add89e9b4785ddeeb07b4d9352b57de8b4cb314c8cb8f0d5898938bd8de9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09852a830ad29d33cfdf74e7035853c68e43e1a8c242b25db9d656a074a54e6d\",\"dweb:/ipfs/QmeRSfQwWr3vyP2uJxnjybtPYLMiD17E51d4eMhXQh93R1\"]},\"interfaces/IERC20Metadata.sol\":{\"keccak256\":\"0x5b654d5a45e51c586ac1f613ecb3ec967682286b61856b5d2d93fe08b68518da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95ef7f3c1eb8bae84eb34bcfe885533457236ed182ff80fbfad77ba84c8e21a1\",\"dweb:/ipfs/QmWFdeBBHQxeHLE6SHDgZBtUqvTTgeZ19sB9yKzpm4o3o8\"]},\"interfaces/IERC20Permit.sol\":{\"keccak256\":\"0xc51a927b9d9ff62cf4c237f7f197827b90c460786c855c527007c02a94f23154\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d1107bf21355e8518d9fdcf1aa7052de7e5fc6d867d86d87b61b43667813cc1d\",\"dweb:/ipfs/QmZG3AQa61MLFWmovNyuzv3iCBPnFHGV7E7CimxLwpAwKt\"]},\"interfaces/ITimeFactory.sol\":{\"keccak256\":\"0x03640d4febfdbb9a97329c66660e646c60d230233fb005419883227c20220866\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fafa0883f6b71482f8228c3c7faae5241289099fc88da2c4c5098c673fc1e0d0\",\"dweb:/ipfs/QmapCBDXRqAwmmDmDT7EXwUnuRV9kZqD3wcorrsmyF2x2K\"]},\"interfaces/ITimeMarket.sol\":{\"keccak256\":\"0x45b202e7b66c67d6b9619dfd1719f7cf1cb6ab85d2652f6b90e7e7a85fa09a7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://795fe6245e8713f028e90e38a85d7daaf343fdd3fb55db163b1e8035138f91a4\",\"dweb:/ipfs/QmejHd37qXVBUTDS3noAqNUneHbpwAUsizaoRyioSQQvp2\"]},\"libraries/Address.sol\":{\"keccak256\":\"0x0f4169fea1817f1228f6a2db5e764e2a86f357a9f42f83de1f157449bca0f1ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://244a3f17ec48680bfaadacf724e5b12030636dc8b3e59f01de1cf206f0802ad7\",\"dweb:/ipfs/QmZXNxyUx2vm7LjcwtNhwYyKgqVxmbMAM3cG5bricBmL1K\"]},\"libraries/DataTypes.sol\":{\"keccak256\":\"0x0d49afa0af11c8201d9e301661881753c6f7c0cfc33395d57f872e1e232a8359\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://eb2247a8c556b85c1b3c1e883f995e479e23585e00dff4883bf2ef603b4d1c42\",\"dweb:/ipfs/QmewXn7xKEX9ekq55q2YW2LTxiwJHVBd6QhJJAMwX56znw\"]},\"libraries/SafeERC20.sol\":{\"keccak256\":\"0xe74183ce288c892718941897cf193167013ef062470ea7fc7f0e74c23521cdd1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75be313f96388535ff46fc29a55ed358e24e887c5706ea595ef2ed95c1d58e03\",\"dweb:/ipfs/QmReMXbvdgk5wZtn3mrjsDGLKFzfbBxG6HJBELLsaAKXkS\"]},\"libraries/TimeLibrary.sol\":{\"keccak256\":\"0xfdc78ed3a3ea7b906387e954bc954f0f215d911b04051e42ee293862ff22f44c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e24ff792dd6718e8da68c1b0d3470c19ce7cbc222d0864f369fb755269a3fb09\",\"dweb:/ipfs/QmRveH8q9An4299aeqcgf7SfqhyJSWJbxdz15LwbbvghTS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 16,
								"contract": "contracts/TimeMarket.sol:TimeMarket",
								"label": "id",
								"offset": 0,
								"slot": "0",
								"type": "t_uint32"
							},
							{
								"astId": 18,
								"contract": "contracts/TimeMarket.sol:TimeMarket",
								"label": "clearingTime",
								"offset": 4,
								"slot": "0",
								"type": "t_uint56"
							},
							{
								"astId": 20,
								"contract": "contracts/TimeMarket.sol:TimeMarket",
								"label": "factoryOwner",
								"offset": 11,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 22,
								"contract": "contracts/TimeMarket.sol:TimeMarket",
								"label": "totalStable",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 24,
								"contract": "contracts/TimeMarket.sol:TimeMarket",
								"label": "rewardPool",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 26,
								"contract": "contracts/TimeMarket.sol:TimeMarket",
								"label": "airdropToken",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 29,
								"contract": "contracts/TimeMarket.sol:TimeMarket",
								"label": "AUSDT",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 32,
								"contract": "contracts/TimeMarket.sol:TimeMarket",
								"label": "AEthUsdt",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 38,
								"contract": "contracts/TimeMarket.sol:TimeMarket",
								"label": "AaveV3Pool",
								"offset": 0,
								"slot": "6",
								"type": "t_contract(IPool)1284"
							},
							{
								"astId": 58,
								"contract": "contracts/TimeMarket.sol:TimeMarket",
								"label": "_tradeMes",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint32,t_struct(tradeMes)1689_storage)"
							},
							{
								"astId": 65,
								"contract": "contracts/TimeMarket.sol:TimeMarket",
								"label": "_userDeposite",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_uint32,t_mapping(t_address,t_struct(userDeposite)1702_storage))"
							},
							{
								"astId": 71,
								"contract": "contracts/TimeMarket.sol:TimeMarket",
								"label": "userLiquidity",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_mapping(t_uint64,t_uint256))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IPool)1284": {
								"encoding": "inplace",
								"label": "contract IPool",
								"numberOfBytes": "20"
							},
							"t_enum(tradeState)1669": {
								"encoding": "inplace",
								"label": "enum ITimeMarket.tradeState",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_uint64,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint64 => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint64,t_uint256)"
							},
							"t_mapping(t_address,t_struct(userDeposite)1702_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct ITimeMarket.userDeposite)",
								"numberOfBytes": "32",
								"value": "t_struct(userDeposite)1702_storage"
							},
							"t_mapping(t_uint32,t_mapping(t_address,t_struct(userDeposite)1702_storage))": {
								"encoding": "mapping",
								"key": "t_uint32",
								"label": "mapping(uint32 => mapping(address => struct ITimeMarket.userDeposite))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_struct(userDeposite)1702_storage)"
							},
							"t_mapping(t_uint32,t_struct(tradeMes)1689_storage)": {
								"encoding": "mapping",
								"key": "t_uint32",
								"label": "mapping(uint32 => struct ITimeMarket.tradeMes)",
								"numberOfBytes": "32",
								"value": "t_struct(tradeMes)1689_storage"
							},
							"t_mapping(t_uint64,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint64",
								"label": "mapping(uint64 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(tradeMes)1689_storage": {
								"encoding": "inplace",
								"label": "struct ITimeMarket.tradeMes",
								"members": [
									{
										"astId": 1671,
										"contract": "contracts/TimeMarket.sol:TimeMarket",
										"label": "tradeId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint32"
									},
									{
										"astId": 1673,
										"contract": "contracts/TimeMarket.sol:TimeMarket",
										"label": "price",
										"offset": 4,
										"slot": "0",
										"type": "t_uint32"
									},
									{
										"astId": 1675,
										"contract": "contracts/TimeMarket.sol:TimeMarket",
										"label": "time",
										"offset": 8,
										"slot": "0",
										"type": "t_uint56"
									},
									{
										"astId": 1677,
										"contract": "contracts/TimeMarket.sol:TimeMarket",
										"label": "amount",
										"offset": 15,
										"slot": "0",
										"type": "t_uint128"
									},
									{
										"astId": 1679,
										"contract": "contracts/TimeMarket.sol:TimeMarket",
										"label": "tokenOneAmount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1681,
										"contract": "contracts/TimeMarket.sol:TimeMarket",
										"label": "tokenAddress",
										"offset": 0,
										"slot": "2",
										"type": "t_address"
									},
									{
										"astId": 1683,
										"contract": "contracts/TimeMarket.sol:TimeMarket",
										"label": "buyerAddress",
										"offset": 0,
										"slot": "3",
										"type": "t_address"
									},
									{
										"astId": 1685,
										"contract": "contracts/TimeMarket.sol:TimeMarket",
										"label": "solderAddress",
										"offset": 0,
										"slot": "4",
										"type": "t_address"
									},
									{
										"astId": 1688,
										"contract": "contracts/TimeMarket.sol:TimeMarket",
										"label": "_tradeState",
										"offset": 20,
										"slot": "4",
										"type": "t_enum(tradeState)1669"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(userDeposite)1702_storage": {
								"encoding": "inplace",
								"label": "struct ITimeMarket.userDeposite",
								"members": [
									{
										"astId": 1691,
										"contract": "contracts/TimeMarket.sol:TimeMarket",
										"label": "tradeId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint32"
									},
									{
										"astId": 1693,
										"contract": "contracts/TimeMarket.sol:TimeMarket",
										"label": "startTime",
										"offset": 4,
										"slot": "0",
										"type": "t_uint56"
									},
									{
										"astId": 1695,
										"contract": "contracts/TimeMarket.sol:TimeMarket",
										"label": "endTime",
										"offset": 11,
										"slot": "0",
										"type": "t_uint56"
									},
									{
										"astId": 1697,
										"contract": "contracts/TimeMarket.sol:TimeMarket",
										"label": "depositeAmount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1699,
										"contract": "contracts/TimeMarket.sol:TimeMarket",
										"label": "earnAmount",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1701,
										"contract": "contracts/TimeMarket.sol:TimeMarket",
										"label": "user",
										"offset": 0,
										"slot": "3",
										"type": "t_address"
									}
								],
								"numberOfBytes": "128"
							},
							"t_uint128": {
								"encoding": "inplace",
								"label": "uint128",
								"numberOfBytes": "16"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							},
							"t_uint56": {
								"encoding": "inplace",
								"label": "uint56",
								"numberOfBytes": "7"
							},
							"t_uint64": {
								"encoding": "inplace",
								"label": "uint64",
								"numberOfBytes": "8"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interfaces/AaveV3/IPool.sol": {
				"IPool": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "backer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								}
							],
							"name": "BackUnbacked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "enum DataTypes.InterestRateMode",
									"name": "interestRateMode",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "borrowRate",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								}
							],
							"name": "Borrow",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "initiator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "enum DataTypes.InterestRateMode",
									"name": "interestRateMode",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "premium",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								}
							],
							"name": "FlashLoan",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalDebt",
									"type": "uint256"
								}
							],
							"name": "IsolationModeTotalDebtUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "collateralAsset",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "debtAsset",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "debtToCover",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "liquidatedCollateralAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "liquidator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "receiveAToken",
									"type": "bool"
								}
							],
							"name": "LiquidationCall",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								}
							],
							"name": "MintUnbacked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountMinted",
									"type": "uint256"
								}
							],
							"name": "MintedToTreasury",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "RebalanceStableBorrowRate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "repayer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "useATokens",
									"type": "bool"
								}
							],
							"name": "Repay",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "liquidityRate",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stableBorrowRate",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "variableBorrowRate",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "liquidityIndex",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "variableBorrowIndex",
									"type": "uint256"
								}
							],
							"name": "ReserveDataUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "ReserveUsedAsCollateralDisabled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "ReserveUsedAsCollateralEnabled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								}
							],
							"name": "Supply",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "enum DataTypes.InterestRateMode",
									"name": "interestRateMode",
									"type": "uint8"
								}
							],
							"name": "SwapBorrowRateMode",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "categoryId",
									"type": "uint8"
								}
							],
							"name": "UserEModeSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ADDRESSES_PROVIDER",
							"outputs": [
								{
									"internalType": "contract IPoolAddressesProvider",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "BRIDGE_PROTOCOL_FEE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "FLASHLOAN_PREMIUM_TOTAL",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "FLASHLOAN_PREMIUM_TO_PROTOCOL",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_NUMBER_RESERVES",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_STABLE_RATE_BORROW_SIZE_PERCENT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								}
							],
							"name": "backUnbacked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "interestRateMode",
									"type": "uint256"
								},
								{
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								}
							],
							"name": "borrow",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "id",
									"type": "uint8"
								},
								{
									"components": [
										{
											"internalType": "uint16",
											"name": "ltv",
											"type": "uint16"
										},
										{
											"internalType": "uint16",
											"name": "liquidationThreshold",
											"type": "uint16"
										},
										{
											"internalType": "uint16",
											"name": "liquidationBonus",
											"type": "uint16"
										},
										{
											"internalType": "address",
											"name": "priceSource",
											"type": "address"
										},
										{
											"internalType": "string",
											"name": "label",
											"type": "string"
										}
									],
									"internalType": "struct DataTypes.EModeCategory",
									"name": "config",
									"type": "tuple"
								}
							],
							"name": "configureEModeCategory",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								},
								{
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "dropReserve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "balanceFromBefore",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "balanceToBefore",
									"type": "uint256"
								}
							],
							"name": "finalizeTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiverAddress",
									"type": "address"
								},
								{
									"internalType": "address[]",
									"name": "assets",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "interestRateModes",
									"type": "uint256[]"
								},
								{
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "params",
									"type": "bytes"
								},
								{
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								}
							],
							"name": "flashLoan",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiverAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "params",
									"type": "bytes"
								},
								{
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								}
							],
							"name": "flashLoanSimple",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getConfiguration",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "data",
											"type": "uint256"
										}
									],
									"internalType": "struct DataTypes.ReserveConfigurationMap",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "id",
									"type": "uint8"
								}
							],
							"name": "getEModeCategoryData",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint16",
											"name": "ltv",
											"type": "uint16"
										},
										{
											"internalType": "uint16",
											"name": "liquidationThreshold",
											"type": "uint16"
										},
										{
											"internalType": "uint16",
											"name": "liquidationBonus",
											"type": "uint16"
										},
										{
											"internalType": "address",
											"name": "priceSource",
											"type": "address"
										},
										{
											"internalType": "string",
											"name": "label",
											"type": "string"
										}
									],
									"internalType": "struct DataTypes.EModeCategory",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "id",
									"type": "uint16"
								}
							],
							"name": "getReserveAddressById",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getReserveData",
							"outputs": [
								{
									"components": [
										{
											"components": [
												{
													"internalType": "uint256",
													"name": "data",
													"type": "uint256"
												}
											],
											"internalType": "struct DataTypes.ReserveConfigurationMap",
											"name": "configuration",
											"type": "tuple"
										},
										{
											"internalType": "uint128",
											"name": "liquidityIndex",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "currentLiquidityRate",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "variableBorrowIndex",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "currentVariableBorrowRate",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "currentStableBorrowRate",
											"type": "uint128"
										},
										{
											"internalType": "uint40",
											"name": "lastUpdateTimestamp",
											"type": "uint40"
										},
										{
											"internalType": "uint16",
											"name": "id",
											"type": "uint16"
										},
										{
											"internalType": "address",
											"name": "aTokenAddress",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "stableDebtTokenAddress",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "variableDebtTokenAddress",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "interestRateStrategyAddress",
											"type": "address"
										},
										{
											"internalType": "uint128",
											"name": "accruedToTreasury",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "unbacked",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "isolationModeTotalDebt",
											"type": "uint128"
										}
									],
									"internalType": "struct DataTypes.ReserveData",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getReserveNormalizedIncome",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getReserveNormalizedVariableDebt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReservesList",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getUserAccountData",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "totalCollateralBase",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalDebtBase",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "availableBorrowsBase",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "currentLiquidationThreshold",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "ltv",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "healthFactor",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getUserConfiguration",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "data",
											"type": "uint256"
										}
									],
									"internalType": "struct DataTypes.UserConfigurationMap",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getUserEMode",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "aTokenAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "stableDebtAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "variableDebtAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "interestRateStrategyAddress",
									"type": "address"
								}
							],
							"name": "initReserve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collateralAsset",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "debtAsset",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "debtToCover",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "receiveAToken",
									"type": "bool"
								}
							],
							"name": "liquidationCall",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "assets",
									"type": "address[]"
								}
							],
							"name": "mintToTreasury",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								},
								{
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								}
							],
							"name": "mintUnbacked",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "rebalanceStableBorrowRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "interestRateMode",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								}
							],
							"name": "repay",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "interestRateMode",
									"type": "uint256"
								}
							],
							"name": "repayWithATokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "interestRateMode",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "permitV",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "permitR",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "permitS",
									"type": "bytes32"
								}
							],
							"name": "repayWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "rescueTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "resetIsolationModeTotalDebt",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "data",
											"type": "uint256"
										}
									],
									"internalType": "struct DataTypes.ReserveConfigurationMap",
									"name": "configuration",
									"type": "tuple"
								}
							],
							"name": "setConfiguration",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "rateStrategyAddress",
									"type": "address"
								}
							],
							"name": "setReserveInterestRateStrategyAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "categoryId",
									"type": "uint8"
								}
							],
							"name": "setUserEMode",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "useAsCollateral",
									"type": "bool"
								}
							],
							"name": "setUserUseReserveAsCollateral",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								},
								{
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								}
							],
							"name": "supply",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								},
								{
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "permitV",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "permitR",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "permitS",
									"type": "bytes32"
								}
							],
							"name": "supplyWithPermit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "interestRateMode",
									"type": "uint256"
								}
							],
							"name": "swapBorrowRateMode",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "bridgeProtocolFee",
									"type": "uint256"
								}
							],
							"name": "updateBridgeProtocolFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint128",
									"name": "flashLoanPremiumTotal",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "flashLoanPremiumToProtocol",
									"type": "uint128"
								}
							],
							"name": "updateFlashloanPremiums",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "withdraw",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Aave",
						"events": {
							"BackUnbacked(address,address,uint256,uint256)": {
								"details": "Emitted on backUnbacked()",
								"params": {
									"amount": "The amount added as backing",
									"backer": "The address paying for the backing",
									"fee": "The amount paid in fees",
									"reserve": "The address of the underlying asset of the reserve"
								}
							},
							"Borrow(address,address,address,uint256,uint8,uint256,uint16)": {
								"details": "Emitted on borrow() and flashLoan() when debt needs to be opened",
								"params": {
									"amount": "The amount borrowed out",
									"borrowRate": "The numeric rate at which the user has borrowed, expressed in ray",
									"interestRateMode": "The rate mode: 1 for Stable, 2 for Variable",
									"onBehalfOf": "The address that will be getting the debt",
									"referralCode": "The referral code used",
									"reserve": "The address of the underlying asset being borrowed",
									"user": "The address of the user initiating the borrow(), receiving the funds on borrow() or just initiator of the transaction on flashLoan()"
								}
							},
							"FlashLoan(address,address,address,uint256,uint8,uint256,uint16)": {
								"details": "Emitted on flashLoan()",
								"params": {
									"amount": "The amount flash borrowed",
									"asset": "The address of the asset being flash borrowed",
									"initiator": "The address initiating the flash loan",
									"interestRateMode": "The flashloan mode: 0 for regular flashloan, 1 for Stable debt, 2 for Variable debt",
									"premium": "The fee flash borrowed",
									"referralCode": "The referral code used",
									"target": "The address of the flash loan receiver contract"
								}
							},
							"IsolationModeTotalDebtUpdated(address,uint256)": {
								"details": "Emitted on borrow(), repay() and liquidationCall() when using isolated assets",
								"params": {
									"asset": "The address of the underlying asset of the reserve",
									"totalDebt": "The total isolation mode debt for the reserve"
								}
							},
							"LiquidationCall(address,address,address,uint256,uint256,address,bool)": {
								"details": "Emitted when a borrower is liquidated.",
								"params": {
									"collateralAsset": "The address of the underlying asset used as collateral, to receive as result of the liquidation",
									"debtAsset": "The address of the underlying borrowed asset to be repaid with the liquidation",
									"debtToCover": "The debt amount of borrowed `asset` the liquidator wants to cover",
									"liquidatedCollateralAmount": "The amount of collateral received by the liquidator",
									"liquidator": "The address of the liquidator",
									"receiveAToken": "True if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly",
									"user": "The address of the borrower getting liquidated"
								}
							},
							"MintUnbacked(address,address,address,uint256,uint16)": {
								"details": "Emitted on mintUnbacked()",
								"params": {
									"amount": "The amount of supplied assets",
									"onBehalfOf": "The beneficiary of the supplied assets, receiving the aTokens",
									"referralCode": "The referral code used",
									"reserve": "The address of the underlying asset of the reserve",
									"user": "The address initiating the supply"
								}
							},
							"MintedToTreasury(address,uint256)": {
								"details": "Emitted when the protocol treasury receives minted aTokens from the accrued interest.",
								"params": {
									"amountMinted": "The amount minted to the treasury",
									"reserve": "The address of the reserve"
								}
							},
							"RebalanceStableBorrowRate(address,address)": {
								"details": "Emitted on rebalanceStableBorrowRate()",
								"params": {
									"reserve": "The address of the underlying asset of the reserve",
									"user": "The address of the user for which the rebalance has been executed"
								}
							},
							"Repay(address,address,address,uint256,bool)": {
								"details": "Emitted on repay()",
								"params": {
									"amount": "The amount repaid",
									"repayer": "The address of the user initiating the repay(), providing the funds",
									"reserve": "The address of the underlying asset of the reserve",
									"useATokens": "True if the repayment is done using aTokens, `false` if done with underlying asset directly",
									"user": "The beneficiary of the repayment, getting his debt reduced"
								}
							},
							"ReserveDataUpdated(address,uint256,uint256,uint256,uint256,uint256)": {
								"details": "Emitted when the state of a reserve is updated.",
								"params": {
									"liquidityIndex": "The next liquidity index",
									"liquidityRate": "The next liquidity rate",
									"reserve": "The address of the underlying asset of the reserve",
									"stableBorrowRate": "The next stable borrow rate",
									"variableBorrowIndex": "The next variable borrow index",
									"variableBorrowRate": "The next variable borrow rate"
								}
							},
							"ReserveUsedAsCollateralDisabled(address,address)": {
								"details": "Emitted on setUserUseReserveAsCollateral()",
								"params": {
									"reserve": "The address of the underlying asset of the reserve",
									"user": "The address of the user enabling the usage as collateral"
								}
							},
							"ReserveUsedAsCollateralEnabled(address,address)": {
								"details": "Emitted on setUserUseReserveAsCollateral()",
								"params": {
									"reserve": "The address of the underlying asset of the reserve",
									"user": "The address of the user enabling the usage as collateral"
								}
							},
							"Supply(address,address,address,uint256,uint16)": {
								"details": "Emitted on supply()",
								"params": {
									"amount": "The amount supplied",
									"onBehalfOf": "The beneficiary of the supply, receiving the aTokens",
									"referralCode": "The referral code used",
									"reserve": "The address of the underlying asset of the reserve",
									"user": "The address initiating the supply"
								}
							},
							"SwapBorrowRateMode(address,address,uint8)": {
								"details": "Emitted on swapBorrowRateMode()",
								"params": {
									"interestRateMode": "The current interest rate mode of the position being swapped: 1 for Stable, 2 for Variable",
									"reserve": "The address of the underlying asset of the reserve",
									"user": "The address of the user swapping his rate mode"
								}
							},
							"UserEModeSet(address,uint8)": {
								"details": "Emitted when the user selects a certain asset category for eMode",
								"params": {
									"categoryId": "The category id",
									"user": "The address of the user"
								}
							},
							"Withdraw(address,address,address,uint256)": {
								"details": "Emitted on withdraw()",
								"params": {
									"amount": "The amount to be withdrawn",
									"reserve": "The address of the underlying asset being withdrawn",
									"to": "The address that will receive the underlying",
									"user": "The address initiating the withdrawal, owner of aTokens"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"ADDRESSES_PROVIDER()": {
								"returns": {
									"_0": "The address of the PoolAddressesProvider"
								}
							},
							"BRIDGE_PROTOCOL_FEE()": {
								"returns": {
									"_0": "The bridge fee sent to the protocol treasury"
								}
							},
							"FLASHLOAN_PREMIUM_TOTAL()": {
								"returns": {
									"_0": "The total fee on flashloans"
								}
							},
							"FLASHLOAN_PREMIUM_TO_PROTOCOL()": {
								"returns": {
									"_0": "The flashloan fee sent to the protocol treasury"
								}
							},
							"MAX_NUMBER_RESERVES()": {
								"returns": {
									"_0": "The maximum number of reserves supported"
								}
							},
							"MAX_STABLE_RATE_BORROW_SIZE_PERCENT()": {
								"returns": {
									"_0": "The percentage of available liquidity to borrow, expressed in bps"
								}
							},
							"backUnbacked(address,uint256,uint256)": {
								"params": {
									"amount": "The amount to back",
									"asset": "The address of the underlying asset to back",
									"fee": "The amount paid in fees"
								},
								"returns": {
									"_0": "The backed amount"
								}
							},
							"borrow(address,uint256,uint256,uint16,address)": {
								"params": {
									"amount": "The amount to be borrowed",
									"asset": "The address of the underlying asset to borrow",
									"interestRateMode": "The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable",
									"onBehalfOf": "The address of the user who will receive the debt. Should be the address of the borrower itself calling the function if he wants to borrow against his own collateral, or the address of the credit delegator if he has been given credit delegation allowance",
									"referralCode": "The code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man"
								}
							},
							"configureEModeCategory(uint8,(uint16,uint16,uint16,address,string))": {
								"details": "In eMode, the protocol allows very high borrowing power to borrow assets of the same category. The category 0 is reserved as it's the default for volatile assets",
								"params": {
									"config": "The configuration of the category",
									"id": "The id of the category"
								}
							},
							"deposit(address,uint256,address,uint16)": {
								"details": "Deprecated: Use the `supply` function instead",
								"params": {
									"amount": "The amount to be supplied",
									"asset": "The address of the underlying asset to supply",
									"onBehalfOf": "The address that will receive the aTokens, same as msg.sender if the user   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens   is a different wallet",
									"referralCode": "Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man"
								}
							},
							"dropReserve(address)": {
								"details": "Only callable by the PoolConfigurator contract",
								"params": {
									"asset": "The address of the underlying asset of the reserve"
								}
							},
							"finalizeTransfer(address,address,address,uint256,uint256,uint256)": {
								"details": "Only callable by the overlying aToken of the `asset`",
								"params": {
									"amount": "The amount being transferred/withdrawn",
									"asset": "The address of the underlying asset of the aToken",
									"balanceFromBefore": "The aToken balance of the `from` user before the transfer",
									"balanceToBefore": "The aToken balance of the `to` user before the transfer",
									"from": "The user from which the aTokens are transferred",
									"to": "The user receiving the aTokens"
								}
							},
							"flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)": {
								"details": "IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration. For further details please visit https://docs.aave.com/developers/",
								"params": {
									"amounts": "The amounts of the assets being flash-borrowed",
									"assets": "The addresses of the assets being flash-borrowed",
									"interestRateModes": "Types of the debt to open if the flash loan is not returned:   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address",
									"onBehalfOf": "The address  that will receive the debt in the case of using on `modes` 1 or 2",
									"params": "Variadic packed params to pass to the receiver as extra information",
									"receiverAddress": "The address of the contract receiving the funds, implementing IFlashLoanReceiver interface",
									"referralCode": "The code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man"
								}
							},
							"flashLoanSimple(address,address,uint256,bytes,uint16)": {
								"details": "IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration. For further details please visit https://docs.aave.com/developers/",
								"params": {
									"amount": "The amount of the asset being flash-borrowed",
									"asset": "The address of the asset being flash-borrowed",
									"params": "Variadic packed params to pass to the receiver as extra information",
									"receiverAddress": "The address of the contract receiving the funds, implementing IFlashLoanSimpleReceiver interface",
									"referralCode": "The code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man"
								}
							},
							"getConfiguration(address)": {
								"params": {
									"asset": "The address of the underlying asset of the reserve"
								},
								"returns": {
									"_0": "The configuration of the reserve"
								}
							},
							"getEModeCategoryData(uint8)": {
								"params": {
									"id": "The id of the category"
								},
								"returns": {
									"_0": "The configuration data of the category"
								}
							},
							"getReserveAddressById(uint16)": {
								"params": {
									"id": "The id of the reserve as stored in the DataTypes.ReserveData struct"
								},
								"returns": {
									"_0": "The address of the reserve associated with id"
								}
							},
							"getReserveData(address)": {
								"params": {
									"asset": "The address of the underlying asset of the reserve"
								},
								"returns": {
									"_0": "The state and configuration data of the reserve"
								}
							},
							"getReserveNormalizedIncome(address)": {
								"params": {
									"asset": "The address of the underlying asset of the reserve"
								},
								"returns": {
									"_0": "The reserve's normalized income"
								}
							},
							"getReserveNormalizedVariableDebt(address)": {
								"details": "WARNING: This function is intended to be used primarily by the protocol itself to get a \"dynamic\" variable index based on time, current stored index and virtual rate at the current moment (approx. a borrower would get if opening a position). This means that is always used in combination with variable debt supply/balances. If using this function externally, consider that is possible to have an increasing normalized variable debt that is not equivalent to how the variable debt index would be updated in storage (e.g. only updates with non-zero variable debt supply)",
								"params": {
									"asset": "The address of the underlying asset of the reserve"
								},
								"returns": {
									"_0": "The reserve normalized variable debt"
								}
							},
							"getReservesList()": {
								"details": "It does not include dropped reserves",
								"returns": {
									"_0": "The addresses of the underlying assets of the initialized reserves"
								}
							},
							"getUserAccountData(address)": {
								"params": {
									"user": "The address of the user"
								},
								"returns": {
									"availableBorrowsBase": "The borrowing power left of the user in the base currency used by the price feed",
									"currentLiquidationThreshold": "The liquidation threshold of the user",
									"healthFactor": "The current health factor of the user",
									"ltv": "The loan to value of The user",
									"totalCollateralBase": "The total collateral of the user in the base currency used by the price feed",
									"totalDebtBase": "The total debt of the user in the base currency used by the price feed"
								}
							},
							"getUserConfiguration(address)": {
								"params": {
									"user": "The user address"
								},
								"returns": {
									"_0": "The configuration of the user"
								}
							},
							"getUserEMode(address)": {
								"params": {
									"user": "The address of the user"
								},
								"returns": {
									"_0": "The eMode id"
								}
							},
							"initReserve(address,address,address,address,address)": {
								"details": "Only callable by the PoolConfigurator contract",
								"params": {
									"aTokenAddress": "The address of the aToken that will be assigned to the reserve",
									"asset": "The address of the underlying asset of the reserve",
									"interestRateStrategyAddress": "The address of the interest rate strategy contract",
									"stableDebtAddress": "The address of the StableDebtToken that will be assigned to the reserve",
									"variableDebtAddress": "The address of the VariableDebtToken that will be assigned to the reserve"
								}
							},
							"liquidationCall(address,address,address,uint256,bool)": {
								"params": {
									"collateralAsset": "The address of the underlying asset used as collateral, to receive as result of the liquidation",
									"debtAsset": "The address of the underlying borrowed asset to be repaid with the liquidation",
									"debtToCover": "The debt amount of borrowed `asset` the liquidator wants to cover",
									"receiveAToken": "True if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly",
									"user": "The address of the borrower getting liquidated"
								}
							},
							"mintToTreasury(address[])": {
								"params": {
									"assets": "The list of reserves for which the minting needs to be executed"
								}
							},
							"mintUnbacked(address,uint256,address,uint16)": {
								"params": {
									"amount": "The amount to mint",
									"asset": "The address of the underlying asset to mint",
									"onBehalfOf": "The address that will receive the aTokens",
									"referralCode": "Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man"
								}
							},
							"rebalanceStableBorrowRate(address,address)": {
								"params": {
									"asset": "The address of the underlying asset borrowed",
									"user": "The address of the user to be rebalanced"
								}
							},
							"repay(address,uint256,uint256,address)": {
								"params": {
									"amount": "The amount to repay - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`",
									"asset": "The address of the borrowed underlying asset previously borrowed",
									"interestRateMode": "The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable",
									"onBehalfOf": "The address of the user who will get his debt reduced/removed. Should be the address of the user calling the function if he wants to reduce/remove his own debt, or the address of any other other borrower whose debt should be removed"
								},
								"returns": {
									"_0": "The final amount repaid"
								}
							},
							"repayWithATokens(address,uint256,uint256)": {
								"details": "Passing uint256.max as amount will clean up any residual aToken dust balance, if the user aToken balance is not enough to cover the whole debt",
								"params": {
									"amount": "The amount to repay - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`",
									"asset": "The address of the borrowed underlying asset previously borrowed",
									"interestRateMode": "The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable"
								},
								"returns": {
									"_0": "The final amount repaid"
								}
							},
							"repayWithPermit(address,uint256,uint256,address,uint256,uint8,bytes32,bytes32)": {
								"params": {
									"amount": "The amount to repay - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`",
									"asset": "The address of the borrowed underlying asset previously borrowed",
									"deadline": "The deadline timestamp that the permit is valid",
									"interestRateMode": "The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable",
									"onBehalfOf": "Address of the user who will get his debt reduced/removed. Should be the address of the user calling the function if he wants to reduce/remove his own debt, or the address of any other other borrower whose debt should be removed",
									"permitR": "The R parameter of ERC712 permit sig",
									"permitS": "The S parameter of ERC712 permit sig",
									"permitV": "The V parameter of ERC712 permit sig"
								},
								"returns": {
									"_0": "The final amount repaid"
								}
							},
							"rescueTokens(address,address,uint256)": {
								"params": {
									"amount": "The amount of token to transfer",
									"to": "The address of the recipient",
									"token": "The address of the token"
								}
							},
							"resetIsolationModeTotalDebt(address)": {
								"details": "It requires the given asset has zero debt ceiling",
								"params": {
									"asset": "The address of the underlying asset to reset the isolationModeTotalDebt"
								}
							},
							"setConfiguration(address,(uint256))": {
								"details": "Only callable by the PoolConfigurator contract",
								"params": {
									"asset": "The address of the underlying asset of the reserve",
									"configuration": "The new configuration bitmap"
								}
							},
							"setReserveInterestRateStrategyAddress(address,address)": {
								"details": "Only callable by the PoolConfigurator contract",
								"params": {
									"asset": "The address of the underlying asset of the reserve",
									"rateStrategyAddress": "The address of the interest rate strategy contract"
								}
							},
							"setUserEMode(uint8)": {
								"params": {
									"categoryId": "The id of the category"
								}
							},
							"setUserUseReserveAsCollateral(address,bool)": {
								"params": {
									"asset": "The address of the underlying asset supplied",
									"useAsCollateral": "True if the user wants to use the supply as collateral, false otherwise"
								}
							},
							"supply(address,uint256,address,uint16)": {
								"params": {
									"amount": "The amount to be supplied",
									"asset": "The address of the underlying asset to supply",
									"onBehalfOf": "The address that will receive the aTokens, same as msg.sender if the user   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens   is a different wallet",
									"referralCode": "Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man"
								}
							},
							"supplyWithPermit(address,uint256,address,uint16,uint256,uint8,bytes32,bytes32)": {
								"params": {
									"amount": "The amount to be supplied",
									"asset": "The address of the underlying asset to supply",
									"deadline": "The deadline timestamp that the permit is valid",
									"onBehalfOf": "The address that will receive the aTokens, same as msg.sender if the user   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens   is a different wallet",
									"permitR": "The R parameter of ERC712 permit sig",
									"permitS": "The S parameter of ERC712 permit sig",
									"permitV": "The V parameter of ERC712 permit sig",
									"referralCode": "Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man"
								}
							},
							"swapBorrowRateMode(address,uint256)": {
								"params": {
									"asset": "The address of the underlying asset borrowed",
									"interestRateMode": "The current interest rate mode of the position being swapped: 1 for Stable, 2 for Variable"
								}
							},
							"updateBridgeProtocolFee(uint256)": {
								"params": {
									"bridgeProtocolFee": "The part of the premium sent to the protocol treasury"
								}
							},
							"updateFlashloanPremiums(uint128,uint128)": {
								"details": "The total premium is calculated on the total borrowed amountThe premium to protocol is calculated on the total premium, being a percentage of `flashLoanPremiumTotal`Only callable by the PoolConfigurator contract",
								"params": {
									"flashLoanPremiumToProtocol": "The part of the premium sent to the protocol treasury, expressed in bps",
									"flashLoanPremiumTotal": "The total premium, expressed in bps"
								}
							},
							"withdraw(address,uint256,address)": {
								"params": {
									"amount": "The underlying amount to be withdrawn   - Send the value type(uint256).max in order to withdraw the whole aToken balance",
									"asset": "The address of the underlying asset to withdraw",
									"to": "The address that will receive the underlying, same as msg.sender if the user   wants to receive it on his own wallet, or a different address if the beneficiary is a   different wallet"
								},
								"returns": {
									"_0": "The final amount withdrawn"
								}
							}
						},
						"title": "IPool",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"ADDRESSES_PROVIDER()": "0542975c",
							"BRIDGE_PROTOCOL_FEE()": "272d9072",
							"FLASHLOAN_PREMIUM_TOTAL()": "074b2e43",
							"FLASHLOAN_PREMIUM_TO_PROTOCOL()": "6a99c036",
							"MAX_NUMBER_RESERVES()": "f8119d51",
							"MAX_STABLE_RATE_BORROW_SIZE_PERCENT()": "e82fec2f",
							"backUnbacked(address,uint256,uint256)": "d65dc7a1",
							"borrow(address,uint256,uint256,uint16,address)": "a415bcad",
							"configureEModeCategory(uint8,(uint16,uint16,uint16,address,string))": "d579ea7d",
							"deposit(address,uint256,address,uint16)": "e8eda9df",
							"dropReserve(address)": "63c9b860",
							"finalizeTransfer(address,address,address,uint256,uint256,uint256)": "d5ed3933",
							"flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)": "ab9c4b5d",
							"flashLoanSimple(address,address,uint256,bytes,uint16)": "42b0b77c",
							"getConfiguration(address)": "c44b11f7",
							"getEModeCategoryData(uint8)": "6c6f6ae1",
							"getReserveAddressById(uint16)": "52751797",
							"getReserveData(address)": "35ea6a75",
							"getReserveNormalizedIncome(address)": "d15e0053",
							"getReserveNormalizedVariableDebt(address)": "386497fd",
							"getReservesList()": "d1946dbc",
							"getUserAccountData(address)": "bf92857c",
							"getUserConfiguration(address)": "4417a583",
							"getUserEMode(address)": "eddf1b79",
							"initReserve(address,address,address,address,address)": "7a708e92",
							"liquidationCall(address,address,address,uint256,bool)": "00a718a9",
							"mintToTreasury(address[])": "9cd19996",
							"mintUnbacked(address,uint256,address,uint16)": "69a933a5",
							"rebalanceStableBorrowRate(address,address)": "cd112382",
							"repay(address,uint256,uint256,address)": "573ade81",
							"repayWithATokens(address,uint256,uint256)": "2dad97d4",
							"repayWithPermit(address,uint256,uint256,address,uint256,uint8,bytes32,bytes32)": "ee3e210b",
							"rescueTokens(address,address,uint256)": "cea9d26f",
							"resetIsolationModeTotalDebt(address)": "e43e88a1",
							"setConfiguration(address,(uint256))": "f51e435b",
							"setReserveInterestRateStrategyAddress(address,address)": "1d2118f9",
							"setUserEMode(uint8)": "28530a47",
							"setUserUseReserveAsCollateral(address,bool)": "5a3b74b9",
							"supply(address,uint256,address,uint16)": "617ba037",
							"supplyWithPermit(address,uint256,address,uint16,uint256,uint8,bytes32,bytes32)": "02c205f0",
							"swapBorrowRateMode(address,uint256)": "94ba89a2",
							"updateBridgeProtocolFee(uint256)": "3036b439",
							"updateFlashloanPremiums(uint128,uint128)": "bcb6e522",
							"withdraw(address,uint256,address)": "69328dec"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"backer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"BackUnbacked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum DataTypes.InterestRateMode\",\"name\":\"interestRateMode\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"borrowRate\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"Borrow\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum DataTypes.InterestRateMode\",\"name\":\"interestRateMode\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"FlashLoan\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDebt\",\"type\":\"uint256\"}],\"name\":\"IsolationModeTotalDebtUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collateralAsset\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"debtAsset\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"debtToCover\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidatedCollateralAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"receiveAToken\",\"type\":\"bool\"}],\"name\":\"LiquidationCall\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"MintUnbacked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountMinted\",\"type\":\"uint256\"}],\"name\":\"MintedToTreasury\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"RebalanceStableBorrowRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"repayer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"useATokens\",\"type\":\"bool\"}],\"name\":\"Repay\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidityRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stableBorrowRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"variableBorrowRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidityIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"variableBorrowIndex\",\"type\":\"uint256\"}],\"name\":\"ReserveDataUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"ReserveUsedAsCollateralDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"ReserveUsedAsCollateralEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"Supply\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum DataTypes.InterestRateMode\",\"name\":\"interestRateMode\",\"type\":\"uint8\"}],\"name\":\"SwapBorrowRateMode\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"categoryId\",\"type\":\"uint8\"}],\"name\":\"UserEModeSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADDRESSES_PROVIDER\",\"outputs\":[{\"internalType\":\"contract IPoolAddressesProvider\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BRIDGE_PROTOCOL_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FLASHLOAN_PREMIUM_TOTAL\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FLASHLOAN_PREMIUM_TO_PROTOCOL\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_NUMBER_RESERVES\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_STABLE_RATE_BORROW_SIZE_PERCENT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"backUnbacked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRateMode\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"}],\"name\":\"borrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"id\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"ltv\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"liquidationThreshold\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"liquidationBonus\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"priceSource\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"}],\"internalType\":\"struct DataTypes.EModeCategory\",\"name\":\"config\",\"type\":\"tuple\"}],\"name\":\"configureEModeCategory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"dropReserve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balanceFromBefore\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balanceToBefore\",\"type\":\"uint256\"}],\"name\":\"finalizeTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"interestRateModes\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"flashLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"flashLoanSimple\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getConfiguration\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.ReserveConfigurationMap\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"id\",\"type\":\"uint8\"}],\"name\":\"getEModeCategoryData\",\"outputs\":[{\"components\":[{\"internalType\":\"uint16\",\"name\":\"ltv\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"liquidationThreshold\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"liquidationBonus\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"priceSource\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"}],\"internalType\":\"struct DataTypes.EModeCategory\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"id\",\"type\":\"uint16\"}],\"name\":\"getReserveAddressById\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getReserveData\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.ReserveConfigurationMap\",\"name\":\"configuration\",\"type\":\"tuple\"},{\"internalType\":\"uint128\",\"name\":\"liquidityIndex\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"currentLiquidityRate\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"variableBorrowIndex\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"currentVariableBorrowRate\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"currentStableBorrowRate\",\"type\":\"uint128\"},{\"internalType\":\"uint40\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint40\"},{\"internalType\":\"uint16\",\"name\":\"id\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"aTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"stableDebtTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"variableDebtTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"interestRateStrategyAddress\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"accruedToTreasury\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"unbacked\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"isolationModeTotalDebt\",\"type\":\"uint128\"}],\"internalType\":\"struct DataTypes.ReserveData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getReserveNormalizedIncome\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getReserveNormalizedVariableDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReservesList\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserAccountData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalCollateralBase\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalDebtBase\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"availableBorrowsBase\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentLiquidationThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ltv\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"healthFactor\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserConfiguration\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.UserConfigurationMap\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserEMode\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"aTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"stableDebtAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"variableDebtAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"interestRateStrategyAddress\",\"type\":\"address\"}],\"name\":\"initReserve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collateralAsset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"debtAsset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"debtToCover\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"receiveAToken\",\"type\":\"bool\"}],\"name\":\"liquidationCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"}],\"name\":\"mintToTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"mintUnbacked\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"rebalanceStableBorrowRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRateMode\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"}],\"name\":\"repay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRateMode\",\"type\":\"uint256\"}],\"name\":\"repayWithATokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRateMode\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"permitV\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"permitR\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"permitS\",\"type\":\"bytes32\"}],\"name\":\"repayWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"rescueTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"resetIsolationModeTotalDebt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.ReserveConfigurationMap\",\"name\":\"configuration\",\"type\":\"tuple\"}],\"name\":\"setConfiguration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rateStrategyAddress\",\"type\":\"address\"}],\"name\":\"setReserveInterestRateStrategyAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"categoryId\",\"type\":\"uint8\"}],\"name\":\"setUserEMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useAsCollateral\",\"type\":\"bool\"}],\"name\":\"setUserUseReserveAsCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"supply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"permitV\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"permitR\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"permitS\",\"type\":\"bytes32\"}],\"name\":\"supplyWithPermit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"interestRateMode\",\"type\":\"uint256\"}],\"name\":\"swapBorrowRateMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bridgeProtocolFee\",\"type\":\"uint256\"}],\"name\":\"updateBridgeProtocolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"flashLoanPremiumTotal\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"flashLoanPremiumToProtocol\",\"type\":\"uint128\"}],\"name\":\"updateFlashloanPremiums\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aave\",\"events\":{\"BackUnbacked(address,address,uint256,uint256)\":{\"details\":\"Emitted on backUnbacked()\",\"params\":{\"amount\":\"The amount added as backing\",\"backer\":\"The address paying for the backing\",\"fee\":\"The amount paid in fees\",\"reserve\":\"The address of the underlying asset of the reserve\"}},\"Borrow(address,address,address,uint256,uint8,uint256,uint16)\":{\"details\":\"Emitted on borrow() and flashLoan() when debt needs to be opened\",\"params\":{\"amount\":\"The amount borrowed out\",\"borrowRate\":\"The numeric rate at which the user has borrowed, expressed in ray\",\"interestRateMode\":\"The rate mode: 1 for Stable, 2 for Variable\",\"onBehalfOf\":\"The address that will be getting the debt\",\"referralCode\":\"The referral code used\",\"reserve\":\"The address of the underlying asset being borrowed\",\"user\":\"The address of the user initiating the borrow(), receiving the funds on borrow() or just initiator of the transaction on flashLoan()\"}},\"FlashLoan(address,address,address,uint256,uint8,uint256,uint16)\":{\"details\":\"Emitted on flashLoan()\",\"params\":{\"amount\":\"The amount flash borrowed\",\"asset\":\"The address of the asset being flash borrowed\",\"initiator\":\"The address initiating the flash loan\",\"interestRateMode\":\"The flashloan mode: 0 for regular flashloan, 1 for Stable debt, 2 for Variable debt\",\"premium\":\"The fee flash borrowed\",\"referralCode\":\"The referral code used\",\"target\":\"The address of the flash loan receiver contract\"}},\"IsolationModeTotalDebtUpdated(address,uint256)\":{\"details\":\"Emitted on borrow(), repay() and liquidationCall() when using isolated assets\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\",\"totalDebt\":\"The total isolation mode debt for the reserve\"}},\"LiquidationCall(address,address,address,uint256,uint256,address,bool)\":{\"details\":\"Emitted when a borrower is liquidated.\",\"params\":{\"collateralAsset\":\"The address of the underlying asset used as collateral, to receive as result of the liquidation\",\"debtAsset\":\"The address of the underlying borrowed asset to be repaid with the liquidation\",\"debtToCover\":\"The debt amount of borrowed `asset` the liquidator wants to cover\",\"liquidatedCollateralAmount\":\"The amount of collateral received by the liquidator\",\"liquidator\":\"The address of the liquidator\",\"receiveAToken\":\"True if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly\",\"user\":\"The address of the borrower getting liquidated\"}},\"MintUnbacked(address,address,address,uint256,uint16)\":{\"details\":\"Emitted on mintUnbacked()\",\"params\":{\"amount\":\"The amount of supplied assets\",\"onBehalfOf\":\"The beneficiary of the supplied assets, receiving the aTokens\",\"referralCode\":\"The referral code used\",\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address initiating the supply\"}},\"MintedToTreasury(address,uint256)\":{\"details\":\"Emitted when the protocol treasury receives minted aTokens from the accrued interest.\",\"params\":{\"amountMinted\":\"The amount minted to the treasury\",\"reserve\":\"The address of the reserve\"}},\"RebalanceStableBorrowRate(address,address)\":{\"details\":\"Emitted on rebalanceStableBorrowRate()\",\"params\":{\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user for which the rebalance has been executed\"}},\"Repay(address,address,address,uint256,bool)\":{\"details\":\"Emitted on repay()\",\"params\":{\"amount\":\"The amount repaid\",\"repayer\":\"The address of the user initiating the repay(), providing the funds\",\"reserve\":\"The address of the underlying asset of the reserve\",\"useATokens\":\"True if the repayment is done using aTokens, `false` if done with underlying asset directly\",\"user\":\"The beneficiary of the repayment, getting his debt reduced\"}},\"ReserveDataUpdated(address,uint256,uint256,uint256,uint256,uint256)\":{\"details\":\"Emitted when the state of a reserve is updated.\",\"params\":{\"liquidityIndex\":\"The next liquidity index\",\"liquidityRate\":\"The next liquidity rate\",\"reserve\":\"The address of the underlying asset of the reserve\",\"stableBorrowRate\":\"The next stable borrow rate\",\"variableBorrowIndex\":\"The next variable borrow index\",\"variableBorrowRate\":\"The next variable borrow rate\"}},\"ReserveUsedAsCollateralDisabled(address,address)\":{\"details\":\"Emitted on setUserUseReserveAsCollateral()\",\"params\":{\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user enabling the usage as collateral\"}},\"ReserveUsedAsCollateralEnabled(address,address)\":{\"details\":\"Emitted on setUserUseReserveAsCollateral()\",\"params\":{\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user enabling the usage as collateral\"}},\"Supply(address,address,address,uint256,uint16)\":{\"details\":\"Emitted on supply()\",\"params\":{\"amount\":\"The amount supplied\",\"onBehalfOf\":\"The beneficiary of the supply, receiving the aTokens\",\"referralCode\":\"The referral code used\",\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address initiating the supply\"}},\"SwapBorrowRateMode(address,address,uint8)\":{\"details\":\"Emitted on swapBorrowRateMode()\",\"params\":{\"interestRateMode\":\"The current interest rate mode of the position being swapped: 1 for Stable, 2 for Variable\",\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user swapping his rate mode\"}},\"UserEModeSet(address,uint8)\":{\"details\":\"Emitted when the user selects a certain asset category for eMode\",\"params\":{\"categoryId\":\"The category id\",\"user\":\"The address of the user\"}},\"Withdraw(address,address,address,uint256)\":{\"details\":\"Emitted on withdraw()\",\"params\":{\"amount\":\"The amount to be withdrawn\",\"reserve\":\"The address of the underlying asset being withdrawn\",\"to\":\"The address that will receive the underlying\",\"user\":\"The address initiating the withdrawal, owner of aTokens\"}}},\"kind\":\"dev\",\"methods\":{\"ADDRESSES_PROVIDER()\":{\"returns\":{\"_0\":\"The address of the PoolAddressesProvider\"}},\"BRIDGE_PROTOCOL_FEE()\":{\"returns\":{\"_0\":\"The bridge fee sent to the protocol treasury\"}},\"FLASHLOAN_PREMIUM_TOTAL()\":{\"returns\":{\"_0\":\"The total fee on flashloans\"}},\"FLASHLOAN_PREMIUM_TO_PROTOCOL()\":{\"returns\":{\"_0\":\"The flashloan fee sent to the protocol treasury\"}},\"MAX_NUMBER_RESERVES()\":{\"returns\":{\"_0\":\"The maximum number of reserves supported\"}},\"MAX_STABLE_RATE_BORROW_SIZE_PERCENT()\":{\"returns\":{\"_0\":\"The percentage of available liquidity to borrow, expressed in bps\"}},\"backUnbacked(address,uint256,uint256)\":{\"params\":{\"amount\":\"The amount to back\",\"asset\":\"The address of the underlying asset to back\",\"fee\":\"The amount paid in fees\"},\"returns\":{\"_0\":\"The backed amount\"}},\"borrow(address,uint256,uint256,uint16,address)\":{\"params\":{\"amount\":\"The amount to be borrowed\",\"asset\":\"The address of the underlying asset to borrow\",\"interestRateMode\":\"The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable\",\"onBehalfOf\":\"The address of the user who will receive the debt. Should be the address of the borrower itself calling the function if he wants to borrow against his own collateral, or the address of the credit delegator if he has been given credit delegation allowance\",\"referralCode\":\"The code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man\"}},\"configureEModeCategory(uint8,(uint16,uint16,uint16,address,string))\":{\"details\":\"In eMode, the protocol allows very high borrowing power to borrow assets of the same category. The category 0 is reserved as it's the default for volatile assets\",\"params\":{\"config\":\"The configuration of the category\",\"id\":\"The id of the category\"}},\"deposit(address,uint256,address,uint16)\":{\"details\":\"Deprecated: Use the `supply` function instead\",\"params\":{\"amount\":\"The amount to be supplied\",\"asset\":\"The address of the underlying asset to supply\",\"onBehalfOf\":\"The address that will receive the aTokens, same as msg.sender if the user   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens   is a different wallet\",\"referralCode\":\"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man\"}},\"dropReserve(address)\":{\"details\":\"Only callable by the PoolConfigurator contract\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"}},\"finalizeTransfer(address,address,address,uint256,uint256,uint256)\":{\"details\":\"Only callable by the overlying aToken of the `asset`\",\"params\":{\"amount\":\"The amount being transferred/withdrawn\",\"asset\":\"The address of the underlying asset of the aToken\",\"balanceFromBefore\":\"The aToken balance of the `from` user before the transfer\",\"balanceToBefore\":\"The aToken balance of the `to` user before the transfer\",\"from\":\"The user from which the aTokens are transferred\",\"to\":\"The user receiving the aTokens\"}},\"flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)\":{\"details\":\"IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration. For further details please visit https://docs.aave.com/developers/\",\"params\":{\"amounts\":\"The amounts of the assets being flash-borrowed\",\"assets\":\"The addresses of the assets being flash-borrowed\",\"interestRateModes\":\"Types of the debt to open if the flash loan is not returned:   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\",\"onBehalfOf\":\"The address  that will receive the debt in the case of using on `modes` 1 or 2\",\"params\":\"Variadic packed params to pass to the receiver as extra information\",\"receiverAddress\":\"The address of the contract receiving the funds, implementing IFlashLoanReceiver interface\",\"referralCode\":\"The code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man\"}},\"flashLoanSimple(address,address,uint256,bytes,uint16)\":{\"details\":\"IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration. For further details please visit https://docs.aave.com/developers/\",\"params\":{\"amount\":\"The amount of the asset being flash-borrowed\",\"asset\":\"The address of the asset being flash-borrowed\",\"params\":\"Variadic packed params to pass to the receiver as extra information\",\"receiverAddress\":\"The address of the contract receiving the funds, implementing IFlashLoanSimpleReceiver interface\",\"referralCode\":\"The code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man\"}},\"getConfiguration(address)\":{\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The configuration of the reserve\"}},\"getEModeCategoryData(uint8)\":{\"params\":{\"id\":\"The id of the category\"},\"returns\":{\"_0\":\"The configuration data of the category\"}},\"getReserveAddressById(uint16)\":{\"params\":{\"id\":\"The id of the reserve as stored in the DataTypes.ReserveData struct\"},\"returns\":{\"_0\":\"The address of the reserve associated with id\"}},\"getReserveData(address)\":{\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The state and configuration data of the reserve\"}},\"getReserveNormalizedIncome(address)\":{\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The reserve's normalized income\"}},\"getReserveNormalizedVariableDebt(address)\":{\"details\":\"WARNING: This function is intended to be used primarily by the protocol itself to get a \\\"dynamic\\\" variable index based on time, current stored index and virtual rate at the current moment (approx. a borrower would get if opening a position). This means that is always used in combination with variable debt supply/balances. If using this function externally, consider that is possible to have an increasing normalized variable debt that is not equivalent to how the variable debt index would be updated in storage (e.g. only updates with non-zero variable debt supply)\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The reserve normalized variable debt\"}},\"getReservesList()\":{\"details\":\"It does not include dropped reserves\",\"returns\":{\"_0\":\"The addresses of the underlying assets of the initialized reserves\"}},\"getUserAccountData(address)\":{\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"availableBorrowsBase\":\"The borrowing power left of the user in the base currency used by the price feed\",\"currentLiquidationThreshold\":\"The liquidation threshold of the user\",\"healthFactor\":\"The current health factor of the user\",\"ltv\":\"The loan to value of The user\",\"totalCollateralBase\":\"The total collateral of the user in the base currency used by the price feed\",\"totalDebtBase\":\"The total debt of the user in the base currency used by the price feed\"}},\"getUserConfiguration(address)\":{\"params\":{\"user\":\"The user address\"},\"returns\":{\"_0\":\"The configuration of the user\"}},\"getUserEMode(address)\":{\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"_0\":\"The eMode id\"}},\"initReserve(address,address,address,address,address)\":{\"details\":\"Only callable by the PoolConfigurator contract\",\"params\":{\"aTokenAddress\":\"The address of the aToken that will be assigned to the reserve\",\"asset\":\"The address of the underlying asset of the reserve\",\"interestRateStrategyAddress\":\"The address of the interest rate strategy contract\",\"stableDebtAddress\":\"The address of the StableDebtToken that will be assigned to the reserve\",\"variableDebtAddress\":\"The address of the VariableDebtToken that will be assigned to the reserve\"}},\"liquidationCall(address,address,address,uint256,bool)\":{\"params\":{\"collateralAsset\":\"The address of the underlying asset used as collateral, to receive as result of the liquidation\",\"debtAsset\":\"The address of the underlying borrowed asset to be repaid with the liquidation\",\"debtToCover\":\"The debt amount of borrowed `asset` the liquidator wants to cover\",\"receiveAToken\":\"True if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly\",\"user\":\"The address of the borrower getting liquidated\"}},\"mintToTreasury(address[])\":{\"params\":{\"assets\":\"The list of reserves for which the minting needs to be executed\"}},\"mintUnbacked(address,uint256,address,uint16)\":{\"params\":{\"amount\":\"The amount to mint\",\"asset\":\"The address of the underlying asset to mint\",\"onBehalfOf\":\"The address that will receive the aTokens\",\"referralCode\":\"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man\"}},\"rebalanceStableBorrowRate(address,address)\":{\"params\":{\"asset\":\"The address of the underlying asset borrowed\",\"user\":\"The address of the user to be rebalanced\"}},\"repay(address,uint256,uint256,address)\":{\"params\":{\"amount\":\"The amount to repay - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\",\"asset\":\"The address of the borrowed underlying asset previously borrowed\",\"interestRateMode\":\"The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\",\"onBehalfOf\":\"The address of the user who will get his debt reduced/removed. Should be the address of the user calling the function if he wants to reduce/remove his own debt, or the address of any other other borrower whose debt should be removed\"},\"returns\":{\"_0\":\"The final amount repaid\"}},\"repayWithATokens(address,uint256,uint256)\":{\"details\":\"Passing uint256.max as amount will clean up any residual aToken dust balance, if the user aToken balance is not enough to cover the whole debt\",\"params\":{\"amount\":\"The amount to repay - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\",\"asset\":\"The address of the borrowed underlying asset previously borrowed\",\"interestRateMode\":\"The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\"},\"returns\":{\"_0\":\"The final amount repaid\"}},\"repayWithPermit(address,uint256,uint256,address,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"amount\":\"The amount to repay - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\",\"asset\":\"The address of the borrowed underlying asset previously borrowed\",\"deadline\":\"The deadline timestamp that the permit is valid\",\"interestRateMode\":\"The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\",\"onBehalfOf\":\"Address of the user who will get his debt reduced/removed. Should be the address of the user calling the function if he wants to reduce/remove his own debt, or the address of any other other borrower whose debt should be removed\",\"permitR\":\"The R parameter of ERC712 permit sig\",\"permitS\":\"The S parameter of ERC712 permit sig\",\"permitV\":\"The V parameter of ERC712 permit sig\"},\"returns\":{\"_0\":\"The final amount repaid\"}},\"rescueTokens(address,address,uint256)\":{\"params\":{\"amount\":\"The amount of token to transfer\",\"to\":\"The address of the recipient\",\"token\":\"The address of the token\"}},\"resetIsolationModeTotalDebt(address)\":{\"details\":\"It requires the given asset has zero debt ceiling\",\"params\":{\"asset\":\"The address of the underlying asset to reset the isolationModeTotalDebt\"}},\"setConfiguration(address,(uint256))\":{\"details\":\"Only callable by the PoolConfigurator contract\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\",\"configuration\":\"The new configuration bitmap\"}},\"setReserveInterestRateStrategyAddress(address,address)\":{\"details\":\"Only callable by the PoolConfigurator contract\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\",\"rateStrategyAddress\":\"The address of the interest rate strategy contract\"}},\"setUserEMode(uint8)\":{\"params\":{\"categoryId\":\"The id of the category\"}},\"setUserUseReserveAsCollateral(address,bool)\":{\"params\":{\"asset\":\"The address of the underlying asset supplied\",\"useAsCollateral\":\"True if the user wants to use the supply as collateral, false otherwise\"}},\"supply(address,uint256,address,uint16)\":{\"params\":{\"amount\":\"The amount to be supplied\",\"asset\":\"The address of the underlying asset to supply\",\"onBehalfOf\":\"The address that will receive the aTokens, same as msg.sender if the user   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens   is a different wallet\",\"referralCode\":\"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man\"}},\"supplyWithPermit(address,uint256,address,uint16,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"amount\":\"The amount to be supplied\",\"asset\":\"The address of the underlying asset to supply\",\"deadline\":\"The deadline timestamp that the permit is valid\",\"onBehalfOf\":\"The address that will receive the aTokens, same as msg.sender if the user   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens   is a different wallet\",\"permitR\":\"The R parameter of ERC712 permit sig\",\"permitS\":\"The S parameter of ERC712 permit sig\",\"permitV\":\"The V parameter of ERC712 permit sig\",\"referralCode\":\"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man\"}},\"swapBorrowRateMode(address,uint256)\":{\"params\":{\"asset\":\"The address of the underlying asset borrowed\",\"interestRateMode\":\"The current interest rate mode of the position being swapped: 1 for Stable, 2 for Variable\"}},\"updateBridgeProtocolFee(uint256)\":{\"params\":{\"bridgeProtocolFee\":\"The part of the premium sent to the protocol treasury\"}},\"updateFlashloanPremiums(uint128,uint128)\":{\"details\":\"The total premium is calculated on the total borrowed amountThe premium to protocol is calculated on the total premium, being a percentage of `flashLoanPremiumTotal`Only callable by the PoolConfigurator contract\",\"params\":{\"flashLoanPremiumToProtocol\":\"The part of the premium sent to the protocol treasury, expressed in bps\",\"flashLoanPremiumTotal\":\"The total premium, expressed in bps\"}},\"withdraw(address,uint256,address)\":{\"params\":{\"amount\":\"The underlying amount to be withdrawn   - Send the value type(uint256).max in order to withdraw the whole aToken balance\",\"asset\":\"The address of the underlying asset to withdraw\",\"to\":\"The address that will receive the underlying, same as msg.sender if the user   wants to receive it on his own wallet, or a different address if the beneficiary is a   different wallet\"},\"returns\":{\"_0\":\"The final amount withdrawn\"}}},\"title\":\"IPool\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"ADDRESSES_PROVIDER()\":{\"notice\":\"Returns the PoolAddressesProvider connected to this contract\"},\"BRIDGE_PROTOCOL_FEE()\":{\"notice\":\"Returns the part of the bridge fees sent to protocol\"},\"FLASHLOAN_PREMIUM_TOTAL()\":{\"notice\":\"Returns the total fee on flash loans\"},\"FLASHLOAN_PREMIUM_TO_PROTOCOL()\":{\"notice\":\"Returns the part of the flashloan fees sent to protocol\"},\"MAX_NUMBER_RESERVES()\":{\"notice\":\"Returns the maximum number of reserves supported to be listed in this Pool\"},\"MAX_STABLE_RATE_BORROW_SIZE_PERCENT()\":{\"notice\":\"Returns the percentage of available liquidity that can be borrowed at once at stable rate\"},\"backUnbacked(address,uint256,uint256)\":{\"notice\":\"Back the current unbacked underlying with `amount` and pay `fee`.\"},\"borrow(address,uint256,uint256,uint16,address)\":{\"notice\":\"Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower already supplied enough collateral, or he was given enough allowance by a credit delegator on the corresponding debt token (StableDebtToken or VariableDebtToken) - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet   and 100 stable/variable debt tokens, depending on the `interestRateMode`\"},\"configureEModeCategory(uint8,(uint16,uint16,uint16,address,string))\":{\"notice\":\"Configures a new category for the eMode.\"},\"deposit(address,uint256,address,uint16)\":{\"notice\":\"Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens. - E.g. User supplies 100 USDC and gets in return 100 aUSDC\"},\"dropReserve(address)\":{\"notice\":\"Drop a reserve\"},\"finalizeTransfer(address,address,address,uint256,uint256,uint256)\":{\"notice\":\"Validates and finalizes an aToken transfer\"},\"flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)\":{\"notice\":\"Allows smartcontracts to access the liquidity of the pool within one transaction, as long as the amount taken plus a fee is returned.\"},\"flashLoanSimple(address,address,uint256,bytes,uint16)\":{\"notice\":\"Allows smartcontracts to access the liquidity of the pool within one transaction, as long as the amount taken plus a fee is returned.\"},\"getConfiguration(address)\":{\"notice\":\"Returns the configuration of the reserve\"},\"getEModeCategoryData(uint8)\":{\"notice\":\"Returns the data of an eMode category\"},\"getReserveAddressById(uint16)\":{\"notice\":\"Returns the address of the underlying asset of a reserve by the reserve id as stored in the DataTypes.ReserveData struct\"},\"getReserveData(address)\":{\"notice\":\"Returns the state and configuration of the reserve\"},\"getReserveNormalizedIncome(address)\":{\"notice\":\"Returns the normalized income of the reserve\"},\"getReserveNormalizedVariableDebt(address)\":{\"notice\":\"Returns the normalized variable debt per unit of asset\"},\"getReservesList()\":{\"notice\":\"Returns the list of the underlying assets of all the initialized reserves\"},\"getUserAccountData(address)\":{\"notice\":\"Returns the user account data across all the reserves\"},\"getUserConfiguration(address)\":{\"notice\":\"Returns the configuration of the user across all the reserves\"},\"getUserEMode(address)\":{\"notice\":\"Returns the eMode the user is using\"},\"initReserve(address,address,address,address,address)\":{\"notice\":\"Initializes a reserve, activating it, assigning an aToken and debt tokens and an interest rate strategy\"},\"liquidationCall(address,address,address,uint256,bool)\":{\"notice\":\"Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1 - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk\"},\"mintToTreasury(address[])\":{\"notice\":\"Mints the assets accrued through the reserve factor to the treasury in the form of aTokens\"},\"mintUnbacked(address,uint256,address,uint16)\":{\"notice\":\"Mints an `amount` of aTokens to the `onBehalfOf`\"},\"rebalanceStableBorrowRate(address,address)\":{\"notice\":\"Rebalances the stable interest rate of a user to the current stable rate defined on the reserve. - Users can be rebalanced if the following conditions are satisfied:     1. Usage ratio is above 95%     2. the current supply APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too        much has been borrowed at a stable rate and suppliers are not earning enough\"},\"repay(address,uint256,uint256,address)\":{\"notice\":\"Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address\"},\"repayWithATokens(address,uint256,uint256)\":{\"notice\":\"Repays a borrowed `amount` on a specific reserve using the reserve aTokens, burning the equivalent debt tokens - E.g. User repays 100 USDC using 100 aUSDC, burning 100 variable/stable debt tokens\"},\"repayWithPermit(address,uint256,uint256,address,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Repay with transfer approval of asset to be repaid done via permit function see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713\"},\"rescueTokens(address,address,uint256)\":{\"notice\":\"Rescue and transfer tokens locked in this contract\"},\"resetIsolationModeTotalDebt(address)\":{\"notice\":\"Resets the isolation mode total debt of the given asset to zero\"},\"setConfiguration(address,(uint256))\":{\"notice\":\"Sets the configuration bitmap of the reserve as a whole\"},\"setReserveInterestRateStrategyAddress(address,address)\":{\"notice\":\"Updates the address of the interest rate strategy contract\"},\"setUserEMode(uint8)\":{\"notice\":\"Allows a user to use the protocol in eMode\"},\"setUserUseReserveAsCollateral(address,bool)\":{\"notice\":\"Allows suppliers to enable/disable a specific supplied asset as collateral\"},\"supply(address,uint256,address,uint16)\":{\"notice\":\"Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens. - E.g. User supplies 100 USDC and gets in return 100 aUSDC\"},\"supplyWithPermit(address,uint256,address,uint16,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Supply with transfer approval of asset to be supplied done via permit function see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713\"},\"swapBorrowRateMode(address,uint256)\":{\"notice\":\"Allows a borrower to swap his debt between stable and variable mode, or vice versa\"},\"updateBridgeProtocolFee(uint256)\":{\"notice\":\"Updates the protocol fee on the bridging\"},\"updateFlashloanPremiums(uint128,uint128)\":{\"notice\":\"Updates flash loan premiums. Flash loan premium consists of two parts: - A part is sent to aToken holders as extra, one time accumulated interest - A part is collected by the protocol treasury\"},\"withdraw(address,uint256,address)\":{\"notice\":\"Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC\"}},\"notice\":\"Defines the basic interface for an Aave Pool.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/AaveV3/IPool.sol\":\"IPool\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/AaveV3/IPool.sol\":{\"keccak256\":\"0x123b94a5f496d1cb9896971ea83139c2986717f97b1462274ffaf81799ff1668\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://02376cb3e8237db2037566bbc4537a29d2e905570211abe34199e0382ccddb4e\",\"dweb:/ipfs/QmWudMByihYdXEU88JitRWzoUhTdam1qbzLYvLmW5bjtVh\"]},\"interfaces/AaveV3/IPoolAddressesProvider.sol\":{\"keccak256\":\"0x9f3278344dafeac9c00e18a43396cf2c86cd68ad191b779d76f6ccb331d83c84\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://70d6c66925a98aba29be5cb413caa4941359f04523cbfbdb6faf73cd419fac77\",\"dweb:/ipfs/QmX1ieyWB4YXrDdLRJjEsuCbChzSXtZRCVvPNVwxtH2bEV\"]},\"libraries/DataTypes.sol\":{\"keccak256\":\"0x0d49afa0af11c8201d9e301661881753c6f7c0cfc33395d57f872e1e232a8359\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://eb2247a8c556b85c1b3c1e883f995e479e23585e00dff4883bf2ef603b4d1c42\",\"dweb:/ipfs/QmewXn7xKEX9ekq55q2YW2LTxiwJHVBd6QhJJAMwX56znw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"ADDRESSES_PROVIDER()": {
								"notice": "Returns the PoolAddressesProvider connected to this contract"
							},
							"BRIDGE_PROTOCOL_FEE()": {
								"notice": "Returns the part of the bridge fees sent to protocol"
							},
							"FLASHLOAN_PREMIUM_TOTAL()": {
								"notice": "Returns the total fee on flash loans"
							},
							"FLASHLOAN_PREMIUM_TO_PROTOCOL()": {
								"notice": "Returns the part of the flashloan fees sent to protocol"
							},
							"MAX_NUMBER_RESERVES()": {
								"notice": "Returns the maximum number of reserves supported to be listed in this Pool"
							},
							"MAX_STABLE_RATE_BORROW_SIZE_PERCENT()": {
								"notice": "Returns the percentage of available liquidity that can be borrowed at once at stable rate"
							},
							"backUnbacked(address,uint256,uint256)": {
								"notice": "Back the current unbacked underlying with `amount` and pay `fee`."
							},
							"borrow(address,uint256,uint256,uint16,address)": {
								"notice": "Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower already supplied enough collateral, or he was given enough allowance by a credit delegator on the corresponding debt token (StableDebtToken or VariableDebtToken) - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet   and 100 stable/variable debt tokens, depending on the `interestRateMode`"
							},
							"configureEModeCategory(uint8,(uint16,uint16,uint16,address,string))": {
								"notice": "Configures a new category for the eMode."
							},
							"deposit(address,uint256,address,uint16)": {
								"notice": "Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens. - E.g. User supplies 100 USDC and gets in return 100 aUSDC"
							},
							"dropReserve(address)": {
								"notice": "Drop a reserve"
							},
							"finalizeTransfer(address,address,address,uint256,uint256,uint256)": {
								"notice": "Validates and finalizes an aToken transfer"
							},
							"flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)": {
								"notice": "Allows smartcontracts to access the liquidity of the pool within one transaction, as long as the amount taken plus a fee is returned."
							},
							"flashLoanSimple(address,address,uint256,bytes,uint16)": {
								"notice": "Allows smartcontracts to access the liquidity of the pool within one transaction, as long as the amount taken plus a fee is returned."
							},
							"getConfiguration(address)": {
								"notice": "Returns the configuration of the reserve"
							},
							"getEModeCategoryData(uint8)": {
								"notice": "Returns the data of an eMode category"
							},
							"getReserveAddressById(uint16)": {
								"notice": "Returns the address of the underlying asset of a reserve by the reserve id as stored in the DataTypes.ReserveData struct"
							},
							"getReserveData(address)": {
								"notice": "Returns the state and configuration of the reserve"
							},
							"getReserveNormalizedIncome(address)": {
								"notice": "Returns the normalized income of the reserve"
							},
							"getReserveNormalizedVariableDebt(address)": {
								"notice": "Returns the normalized variable debt per unit of asset"
							},
							"getReservesList()": {
								"notice": "Returns the list of the underlying assets of all the initialized reserves"
							},
							"getUserAccountData(address)": {
								"notice": "Returns the user account data across all the reserves"
							},
							"getUserConfiguration(address)": {
								"notice": "Returns the configuration of the user across all the reserves"
							},
							"getUserEMode(address)": {
								"notice": "Returns the eMode the user is using"
							},
							"initReserve(address,address,address,address,address)": {
								"notice": "Initializes a reserve, activating it, assigning an aToken and debt tokens and an interest rate strategy"
							},
							"liquidationCall(address,address,address,uint256,bool)": {
								"notice": "Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1 - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk"
							},
							"mintToTreasury(address[])": {
								"notice": "Mints the assets accrued through the reserve factor to the treasury in the form of aTokens"
							},
							"mintUnbacked(address,uint256,address,uint16)": {
								"notice": "Mints an `amount` of aTokens to the `onBehalfOf`"
							},
							"rebalanceStableBorrowRate(address,address)": {
								"notice": "Rebalances the stable interest rate of a user to the current stable rate defined on the reserve. - Users can be rebalanced if the following conditions are satisfied:     1. Usage ratio is above 95%     2. the current supply APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too        much has been borrowed at a stable rate and suppliers are not earning enough"
							},
							"repay(address,uint256,uint256,address)": {
								"notice": "Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address"
							},
							"repayWithATokens(address,uint256,uint256)": {
								"notice": "Repays a borrowed `amount` on a specific reserve using the reserve aTokens, burning the equivalent debt tokens - E.g. User repays 100 USDC using 100 aUSDC, burning 100 variable/stable debt tokens"
							},
							"repayWithPermit(address,uint256,uint256,address,uint256,uint8,bytes32,bytes32)": {
								"notice": "Repay with transfer approval of asset to be repaid done via permit function see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713"
							},
							"rescueTokens(address,address,uint256)": {
								"notice": "Rescue and transfer tokens locked in this contract"
							},
							"resetIsolationModeTotalDebt(address)": {
								"notice": "Resets the isolation mode total debt of the given asset to zero"
							},
							"setConfiguration(address,(uint256))": {
								"notice": "Sets the configuration bitmap of the reserve as a whole"
							},
							"setReserveInterestRateStrategyAddress(address,address)": {
								"notice": "Updates the address of the interest rate strategy contract"
							},
							"setUserEMode(uint8)": {
								"notice": "Allows a user to use the protocol in eMode"
							},
							"setUserUseReserveAsCollateral(address,bool)": {
								"notice": "Allows suppliers to enable/disable a specific supplied asset as collateral"
							},
							"supply(address,uint256,address,uint16)": {
								"notice": "Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens. - E.g. User supplies 100 USDC and gets in return 100 aUSDC"
							},
							"supplyWithPermit(address,uint256,address,uint16,uint256,uint8,bytes32,bytes32)": {
								"notice": "Supply with transfer approval of asset to be supplied done via permit function see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713"
							},
							"swapBorrowRateMode(address,uint256)": {
								"notice": "Allows a borrower to swap his debt between stable and variable mode, or vice versa"
							},
							"updateBridgeProtocolFee(uint256)": {
								"notice": "Updates the protocol fee on the bridging"
							},
							"updateFlashloanPremiums(uint128,uint128)": {
								"notice": "Updates flash loan premiums. Flash loan premium consists of two parts: - A part is sent to aToken holders as extra, one time accumulated interest - A part is collected by the protocol treasury"
							},
							"withdraw(address,uint256,address)": {
								"notice": "Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC"
							}
						},
						"notice": "Defines the basic interface for an Aave Pool.",
						"version": 1
					}
				}
			},
			"interfaces/AaveV3/IPoolAddressesProvider.sol": {
				"IPoolAddressesProvider": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "ACLAdminUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "ACLManagerUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "AddressSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "proxyAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "oldImplementationAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newImplementationAddress",
									"type": "address"
								}
							],
							"name": "AddressSetAsProxy",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "string",
									"name": "oldMarketId",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "string",
									"name": "newMarketId",
									"type": "string"
								}
							],
							"name": "MarketIdSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "PoolConfiguratorUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "PoolDataProviderUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "PoolUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "PriceOracleSentinelUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "PriceOracleUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "proxyAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementationAddress",
									"type": "address"
								}
							],
							"name": "ProxyCreated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "getACLAdmin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getACLManager",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								}
							],
							"name": "getAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMarketId",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPoolConfigurator",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPoolDataProvider",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPriceOracle",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPriceOracleSentinel",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newAclAdmin",
									"type": "address"
								}
							],
							"name": "setACLAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newAclManager",
									"type": "address"
								}
							],
							"name": "setACLManager",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "setAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "newImplementationAddress",
									"type": "address"
								}
							],
							"name": "setAddressAsProxy",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "newMarketId",
									"type": "string"
								}
							],
							"name": "setMarketId",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newPoolConfiguratorImpl",
									"type": "address"
								}
							],
							"name": "setPoolConfiguratorImpl",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newDataProvider",
									"type": "address"
								}
							],
							"name": "setPoolDataProvider",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newPoolImpl",
									"type": "address"
								}
							],
							"name": "setPoolImpl",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newPriceOracle",
									"type": "address"
								}
							],
							"name": "setPriceOracle",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newPriceOracleSentinel",
									"type": "address"
								}
							],
							"name": "setPriceOracleSentinel",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Aave",
						"events": {
							"ACLAdminUpdated(address,address)": {
								"details": "Emitted when the ACL admin is updated.",
								"params": {
									"newAddress": "The new address of the ACLAdmin",
									"oldAddress": "The old address of the ACLAdmin"
								}
							},
							"ACLManagerUpdated(address,address)": {
								"details": "Emitted when the ACL manager is updated.",
								"params": {
									"newAddress": "The new address of the ACLManager",
									"oldAddress": "The old address of the ACLManager"
								}
							},
							"AddressSet(bytes32,address,address)": {
								"details": "Emitted when a new non-proxied contract address is registered.",
								"params": {
									"id": "The identifier of the contract",
									"newAddress": "The address of the new contract",
									"oldAddress": "The address of the old contract"
								}
							},
							"AddressSetAsProxy(bytes32,address,address,address)": {
								"details": "Emitted when the implementation of the proxy registered with id is updated",
								"params": {
									"id": "The identifier of the contract",
									"newImplementationAddress": "The address of the new implementation contract",
									"oldImplementationAddress": "The address of the old implementation contract",
									"proxyAddress": "The address of the proxy contract"
								}
							},
							"MarketIdSet(string,string)": {
								"details": "Emitted when the market identifier is updated.",
								"params": {
									"newMarketId": "The new id of the market",
									"oldMarketId": "The old id of the market"
								}
							},
							"PoolConfiguratorUpdated(address,address)": {
								"details": "Emitted when the pool configurator is updated.",
								"params": {
									"newAddress": "The new address of the PoolConfigurator",
									"oldAddress": "The old address of the PoolConfigurator"
								}
							},
							"PoolDataProviderUpdated(address,address)": {
								"details": "Emitted when the pool data provider is updated.",
								"params": {
									"newAddress": "The new address of the PoolDataProvider",
									"oldAddress": "The old address of the PoolDataProvider"
								}
							},
							"PoolUpdated(address,address)": {
								"details": "Emitted when the pool is updated.",
								"params": {
									"newAddress": "The new address of the Pool",
									"oldAddress": "The old address of the Pool"
								}
							},
							"PriceOracleSentinelUpdated(address,address)": {
								"details": "Emitted when the price oracle sentinel is updated.",
								"params": {
									"newAddress": "The new address of the PriceOracleSentinel",
									"oldAddress": "The old address of the PriceOracleSentinel"
								}
							},
							"PriceOracleUpdated(address,address)": {
								"details": "Emitted when the price oracle is updated.",
								"params": {
									"newAddress": "The new address of the PriceOracle",
									"oldAddress": "The old address of the PriceOracle"
								}
							},
							"ProxyCreated(bytes32,address,address)": {
								"details": "Emitted when a new proxy is created.",
								"params": {
									"id": "The identifier of the proxy",
									"implementationAddress": "The address of the implementation contract",
									"proxyAddress": "The address of the created proxy contract"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"getACLAdmin()": {
								"returns": {
									"_0": "The address of the ACL admin"
								}
							},
							"getACLManager()": {
								"returns": {
									"_0": "The address of the ACLManager"
								}
							},
							"getAddress(bytes32)": {
								"details": "The returned address might be an EOA or a contract, potentially proxiedIt returns ZERO if there is no registered address with the given id",
								"params": {
									"id": "The id"
								},
								"returns": {
									"_0": "The address of the registered for the specified id"
								}
							},
							"getMarketId()": {
								"returns": {
									"_0": "The market id"
								}
							},
							"getPool()": {
								"returns": {
									"_0": "The Pool proxy address"
								}
							},
							"getPoolConfigurator()": {
								"returns": {
									"_0": "The PoolConfigurator proxy address"
								}
							},
							"getPoolDataProvider()": {
								"returns": {
									"_0": "The address of the DataProvider"
								}
							},
							"getPriceOracle()": {
								"returns": {
									"_0": "The address of the PriceOracle"
								}
							},
							"getPriceOracleSentinel()": {
								"returns": {
									"_0": "The address of the PriceOracleSentinel"
								}
							},
							"setACLAdmin(address)": {
								"params": {
									"newAclAdmin": "The address of the new ACL admin"
								}
							},
							"setACLManager(address)": {
								"params": {
									"newAclManager": "The address of the new ACLManager"
								}
							},
							"setAddress(bytes32,address)": {
								"details": "IMPORTANT Use this function carefully, as it will do a hard replacement",
								"params": {
									"id": "The id",
									"newAddress": "The address to set"
								}
							},
							"setAddressAsProxy(bytes32,address)": {
								"details": "IMPORTANT Use this function carefully, only for ids that don't have an explicit setter function, in order to avoid unexpected consequences",
								"params": {
									"id": "The id",
									"newImplementationAddress": "The address of the new implementation"
								}
							},
							"setMarketId(string)": {
								"details": "This can be used to create an onchain registry of PoolAddressesProviders to identify and validate multiple Aave markets.",
								"params": {
									"newMarketId": "The market id"
								}
							},
							"setPoolConfiguratorImpl(address)": {
								"params": {
									"newPoolConfiguratorImpl": "The new PoolConfigurator implementation"
								}
							},
							"setPoolDataProvider(address)": {
								"params": {
									"newDataProvider": "The address of the new DataProvider"
								}
							},
							"setPoolImpl(address)": {
								"params": {
									"newPoolImpl": "The new Pool implementation"
								}
							},
							"setPriceOracle(address)": {
								"params": {
									"newPriceOracle": "The address of the new PriceOracle"
								}
							},
							"setPriceOracleSentinel(address)": {
								"params": {
									"newPriceOracleSentinel": "The address of the new PriceOracleSentinel"
								}
							}
						},
						"title": "IPoolAddressesProvider",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getACLAdmin()": "0e67178c",
							"getACLManager()": "707cd716",
							"getAddress(bytes32)": "21f8a721",
							"getMarketId()": "568ef470",
							"getPool()": "026b1d5f",
							"getPoolConfigurator()": "631adfca",
							"getPoolDataProvider()": "e860accb",
							"getPriceOracle()": "fca513a8",
							"getPriceOracleSentinel()": "5eb88d3d",
							"setACLAdmin(address)": "76d84ffc",
							"setACLManager(address)": "ed301ca9",
							"setAddress(bytes32,address)": "ca446dd9",
							"setAddressAsProxy(bytes32,address)": "5dcc528c",
							"setMarketId(string)": "f67b1847",
							"setPoolConfiguratorImpl(address)": "e4ca28b7",
							"setPoolDataProvider(address)": "e44e9ed1",
							"setPoolImpl(address)": "a1564406",
							"setPriceOracle(address)": "530e784f",
							"setPriceOracleSentinel(address)": "74944cec"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"ACLAdminUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"ACLManagerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"AddressSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proxyAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldImplementationAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newImplementationAddress\",\"type\":\"address\"}],\"name\":\"AddressSetAsProxy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"oldMarketId\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"newMarketId\",\"type\":\"string\"}],\"name\":\"MarketIdSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PoolConfiguratorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PoolDataProviderUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PoolUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PriceOracleSentinelUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PriceOracleUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proxyAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementationAddress\",\"type\":\"address\"}],\"name\":\"ProxyCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getACLAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getACLManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"getAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMarketId\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolConfigurator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolDataProvider\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceOracleSentinel\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAclAdmin\",\"type\":\"address\"}],\"name\":\"setACLAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAclManager\",\"type\":\"address\"}],\"name\":\"setACLManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"setAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"newImplementationAddress\",\"type\":\"address\"}],\"name\":\"setAddressAsProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newMarketId\",\"type\":\"string\"}],\"name\":\"setMarketId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPoolConfiguratorImpl\",\"type\":\"address\"}],\"name\":\"setPoolConfiguratorImpl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newDataProvider\",\"type\":\"address\"}],\"name\":\"setPoolDataProvider\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPoolImpl\",\"type\":\"address\"}],\"name\":\"setPoolImpl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPriceOracle\",\"type\":\"address\"}],\"name\":\"setPriceOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPriceOracleSentinel\",\"type\":\"address\"}],\"name\":\"setPriceOracleSentinel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aave\",\"events\":{\"ACLAdminUpdated(address,address)\":{\"details\":\"Emitted when the ACL admin is updated.\",\"params\":{\"newAddress\":\"The new address of the ACLAdmin\",\"oldAddress\":\"The old address of the ACLAdmin\"}},\"ACLManagerUpdated(address,address)\":{\"details\":\"Emitted when the ACL manager is updated.\",\"params\":{\"newAddress\":\"The new address of the ACLManager\",\"oldAddress\":\"The old address of the ACLManager\"}},\"AddressSet(bytes32,address,address)\":{\"details\":\"Emitted when a new non-proxied contract address is registered.\",\"params\":{\"id\":\"The identifier of the contract\",\"newAddress\":\"The address of the new contract\",\"oldAddress\":\"The address of the old contract\"}},\"AddressSetAsProxy(bytes32,address,address,address)\":{\"details\":\"Emitted when the implementation of the proxy registered with id is updated\",\"params\":{\"id\":\"The identifier of the contract\",\"newImplementationAddress\":\"The address of the new implementation contract\",\"oldImplementationAddress\":\"The address of the old implementation contract\",\"proxyAddress\":\"The address of the proxy contract\"}},\"MarketIdSet(string,string)\":{\"details\":\"Emitted when the market identifier is updated.\",\"params\":{\"newMarketId\":\"The new id of the market\",\"oldMarketId\":\"The old id of the market\"}},\"PoolConfiguratorUpdated(address,address)\":{\"details\":\"Emitted when the pool configurator is updated.\",\"params\":{\"newAddress\":\"The new address of the PoolConfigurator\",\"oldAddress\":\"The old address of the PoolConfigurator\"}},\"PoolDataProviderUpdated(address,address)\":{\"details\":\"Emitted when the pool data provider is updated.\",\"params\":{\"newAddress\":\"The new address of the PoolDataProvider\",\"oldAddress\":\"The old address of the PoolDataProvider\"}},\"PoolUpdated(address,address)\":{\"details\":\"Emitted when the pool is updated.\",\"params\":{\"newAddress\":\"The new address of the Pool\",\"oldAddress\":\"The old address of the Pool\"}},\"PriceOracleSentinelUpdated(address,address)\":{\"details\":\"Emitted when the price oracle sentinel is updated.\",\"params\":{\"newAddress\":\"The new address of the PriceOracleSentinel\",\"oldAddress\":\"The old address of the PriceOracleSentinel\"}},\"PriceOracleUpdated(address,address)\":{\"details\":\"Emitted when the price oracle is updated.\",\"params\":{\"newAddress\":\"The new address of the PriceOracle\",\"oldAddress\":\"The old address of the PriceOracle\"}},\"ProxyCreated(bytes32,address,address)\":{\"details\":\"Emitted when a new proxy is created.\",\"params\":{\"id\":\"The identifier of the proxy\",\"implementationAddress\":\"The address of the implementation contract\",\"proxyAddress\":\"The address of the created proxy contract\"}}},\"kind\":\"dev\",\"methods\":{\"getACLAdmin()\":{\"returns\":{\"_0\":\"The address of the ACL admin\"}},\"getACLManager()\":{\"returns\":{\"_0\":\"The address of the ACLManager\"}},\"getAddress(bytes32)\":{\"details\":\"The returned address might be an EOA or a contract, potentially proxiedIt returns ZERO if there is no registered address with the given id\",\"params\":{\"id\":\"The id\"},\"returns\":{\"_0\":\"The address of the registered for the specified id\"}},\"getMarketId()\":{\"returns\":{\"_0\":\"The market id\"}},\"getPool()\":{\"returns\":{\"_0\":\"The Pool proxy address\"}},\"getPoolConfigurator()\":{\"returns\":{\"_0\":\"The PoolConfigurator proxy address\"}},\"getPoolDataProvider()\":{\"returns\":{\"_0\":\"The address of the DataProvider\"}},\"getPriceOracle()\":{\"returns\":{\"_0\":\"The address of the PriceOracle\"}},\"getPriceOracleSentinel()\":{\"returns\":{\"_0\":\"The address of the PriceOracleSentinel\"}},\"setACLAdmin(address)\":{\"params\":{\"newAclAdmin\":\"The address of the new ACL admin\"}},\"setACLManager(address)\":{\"params\":{\"newAclManager\":\"The address of the new ACLManager\"}},\"setAddress(bytes32,address)\":{\"details\":\"IMPORTANT Use this function carefully, as it will do a hard replacement\",\"params\":{\"id\":\"The id\",\"newAddress\":\"The address to set\"}},\"setAddressAsProxy(bytes32,address)\":{\"details\":\"IMPORTANT Use this function carefully, only for ids that don't have an explicit setter function, in order to avoid unexpected consequences\",\"params\":{\"id\":\"The id\",\"newImplementationAddress\":\"The address of the new implementation\"}},\"setMarketId(string)\":{\"details\":\"This can be used to create an onchain registry of PoolAddressesProviders to identify and validate multiple Aave markets.\",\"params\":{\"newMarketId\":\"The market id\"}},\"setPoolConfiguratorImpl(address)\":{\"params\":{\"newPoolConfiguratorImpl\":\"The new PoolConfigurator implementation\"}},\"setPoolDataProvider(address)\":{\"params\":{\"newDataProvider\":\"The address of the new DataProvider\"}},\"setPoolImpl(address)\":{\"params\":{\"newPoolImpl\":\"The new Pool implementation\"}},\"setPriceOracle(address)\":{\"params\":{\"newPriceOracle\":\"The address of the new PriceOracle\"}},\"setPriceOracleSentinel(address)\":{\"params\":{\"newPriceOracleSentinel\":\"The address of the new PriceOracleSentinel\"}}},\"title\":\"IPoolAddressesProvider\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getACLAdmin()\":{\"notice\":\"Returns the address of the ACL admin.\"},\"getACLManager()\":{\"notice\":\"Returns the address of the ACL manager.\"},\"getAddress(bytes32)\":{\"notice\":\"Returns an address by its identifier.\"},\"getMarketId()\":{\"notice\":\"Returns the id of the Aave market to which this contract points to.\"},\"getPool()\":{\"notice\":\"Returns the address of the Pool proxy.\"},\"getPoolConfigurator()\":{\"notice\":\"Returns the address of the PoolConfigurator proxy.\"},\"getPoolDataProvider()\":{\"notice\":\"Returns the address of the data provider.\"},\"getPriceOracle()\":{\"notice\":\"Returns the address of the price oracle.\"},\"getPriceOracleSentinel()\":{\"notice\":\"Returns the address of the price oracle sentinel.\"},\"setACLAdmin(address)\":{\"notice\":\"Updates the address of the ACL admin.\"},\"setACLManager(address)\":{\"notice\":\"Updates the address of the ACL manager.\"},\"setAddress(bytes32,address)\":{\"notice\":\"Sets an address for an id replacing the address saved in the addresses map.\"},\"setAddressAsProxy(bytes32,address)\":{\"notice\":\"General function to update the implementation of a proxy registered with certain `id`. If there is no proxy registered, it will instantiate one and set as implementation the `newImplementationAddress`.\"},\"setMarketId(string)\":{\"notice\":\"Associates an id with a specific PoolAddressesProvider.\"},\"setPoolConfiguratorImpl(address)\":{\"notice\":\"Updates the implementation of the PoolConfigurator, or creates a proxy setting the new `PoolConfigurator` implementation when the function is called for the first time.\"},\"setPoolDataProvider(address)\":{\"notice\":\"Updates the address of the data provider.\"},\"setPoolImpl(address)\":{\"notice\":\"Updates the implementation of the Pool, or creates a proxy setting the new `pool` implementation when the function is called for the first time.\"},\"setPriceOracle(address)\":{\"notice\":\"Updates the address of the price oracle.\"},\"setPriceOracleSentinel(address)\":{\"notice\":\"Updates the address of the price oracle sentinel.\"}},\"notice\":\"Defines the basic interface for a Pool Addresses Provider.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/AaveV3/IPoolAddressesProvider.sol\":\"IPoolAddressesProvider\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/AaveV3/IPoolAddressesProvider.sol\":{\"keccak256\":\"0x9f3278344dafeac9c00e18a43396cf2c86cd68ad191b779d76f6ccb331d83c84\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://70d6c66925a98aba29be5cb413caa4941359f04523cbfbdb6faf73cd419fac77\",\"dweb:/ipfs/QmX1ieyWB4YXrDdLRJjEsuCbChzSXtZRCVvPNVwxtH2bEV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"getACLAdmin()": {
								"notice": "Returns the address of the ACL admin."
							},
							"getACLManager()": {
								"notice": "Returns the address of the ACL manager."
							},
							"getAddress(bytes32)": {
								"notice": "Returns an address by its identifier."
							},
							"getMarketId()": {
								"notice": "Returns the id of the Aave market to which this contract points to."
							},
							"getPool()": {
								"notice": "Returns the address of the Pool proxy."
							},
							"getPoolConfigurator()": {
								"notice": "Returns the address of the PoolConfigurator proxy."
							},
							"getPoolDataProvider()": {
								"notice": "Returns the address of the data provider."
							},
							"getPriceOracle()": {
								"notice": "Returns the address of the price oracle."
							},
							"getPriceOracleSentinel()": {
								"notice": "Returns the address of the price oracle sentinel."
							},
							"setACLAdmin(address)": {
								"notice": "Updates the address of the ACL admin."
							},
							"setACLManager(address)": {
								"notice": "Updates the address of the ACL manager."
							},
							"setAddress(bytes32,address)": {
								"notice": "Sets an address for an id replacing the address saved in the addresses map."
							},
							"setAddressAsProxy(bytes32,address)": {
								"notice": "General function to update the implementation of a proxy registered with certain `id`. If there is no proxy registered, it will instantiate one and set as implementation the `newImplementationAddress`."
							},
							"setMarketId(string)": {
								"notice": "Associates an id with a specific PoolAddressesProvider."
							},
							"setPoolConfiguratorImpl(address)": {
								"notice": "Updates the implementation of the PoolConfigurator, or creates a proxy setting the new `PoolConfigurator` implementation when the function is called for the first time."
							},
							"setPoolDataProvider(address)": {
								"notice": "Updates the address of the data provider."
							},
							"setPoolImpl(address)": {
								"notice": "Updates the implementation of the Pool, or creates a proxy setting the new `pool` implementation when the function is called for the first time."
							},
							"setPriceOracle(address)": {
								"notice": "Updates the address of the price oracle."
							},
							"setPriceOracleSentinel(address)": {
								"notice": "Updates the address of the price oracle sentinel."
							}
						},
						"notice": "Defines the basic interface for a Pool Addresses Provider.",
						"version": 1
					}
				}
			},
			"interfaces/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/IERC20.sol\":{\"keccak256\":\"0xa426add89e9b4785ddeeb07b4d9352b57de8b4cb314c8cb8f0d5898938bd8de9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09852a830ad29d33cfdf74e7035853c68e43e1a8c242b25db9d656a074a54e6d\",\"dweb:/ipfs/QmeRSfQwWr3vyP2uJxnjybtPYLMiD17E51d4eMhXQh93R1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interfaces/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/IERC20.sol\":{\"keccak256\":\"0xa426add89e9b4785ddeeb07b4d9352b57de8b4cb314c8cb8f0d5898938bd8de9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09852a830ad29d33cfdf74e7035853c68e43e1a8c242b25db9d656a074a54e6d\",\"dweb:/ipfs/QmeRSfQwWr3vyP2uJxnjybtPYLMiD17E51d4eMhXQh93R1\"]},\"interfaces/IERC20Metadata.sol\":{\"keccak256\":\"0x5b654d5a45e51c586ac1f613ecb3ec967682286b61856b5d2d93fe08b68518da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95ef7f3c1eb8bae84eb34bcfe885533457236ed182ff80fbfad77ba84c8e21a1\",\"dweb:/ipfs/QmWFdeBBHQxeHLE6SHDgZBtUqvTTgeZ19sB9yKzpm4o3o8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interfaces/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/IERC20Permit.sol\":{\"keccak256\":\"0xc51a927b9d9ff62cf4c237f7f197827b90c460786c855c527007c02a94f23154\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d1107bf21355e8518d9fdcf1aa7052de7e5fc6d867d86d87b61b43667813cc1d\",\"dweb:/ipfs/QmZG3AQa61MLFWmovNyuzv3iCBPnFHGV7E7CimxLwpAwKt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interfaces/ITimeFactory.sol": {
				"ITimeFactory": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "getContractMes",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLastId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "thisFeeAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "thisOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getContractMes(uint256)": "54e8a20a",
							"getLastId()": "a8e5862d",
							"thisFeeAddress()": "10c1ceeb",
							"thisOwner()": "e7c9922f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getContractMes\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"thisFeeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"thisOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/ITimeFactory.sol\":\"ITimeFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/ITimeFactory.sol\":{\"keccak256\":\"0x03640d4febfdbb9a97329c66660e646c60d230233fb005419883227c20220866\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fafa0883f6b71482f8228c3c7faae5241289099fc88da2c4c5098c673fc1e0d0\",\"dweb:/ipfs/QmapCBDXRqAwmmDmDT7EXwUnuRV9kZqD3wcorrsmyF2x2K\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interfaces/ITimeMarket.sol": {
				"ITimeMarket": {
					"abi": [
						{
							"inputs": [],
							"name": "AlreadyInjectToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "AlreadyWithdraw",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailTrade",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailTransfer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InjectAaveError",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NorSolder",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotBuyer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotEndTime",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotEnoughAmount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInjectToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OverTime",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TradeSuccess",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_time",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								}
							],
							"name": "withdrawAipdrop",
							"type": "event"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AlreadyInjectToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AlreadyWithdraw\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailTrade\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailTransfer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InjectAaveError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NorSolder\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotBuyer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotEndTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotEnoughAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInjectToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OverTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TradeSuccess\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_time\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"withdrawAipdrop\",\"type\":\"event\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/ITimeMarket.sol\":\"ITimeMarket\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/ITimeMarket.sol\":{\"keccak256\":\"0x45b202e7b66c67d6b9619dfd1719f7cf1cb6ab85d2652f6b90e7e7a85fa09a7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://795fe6245e8713f028e90e38a85d7daaf343fdd3fb55db163b1e8035138f91a4\",\"dweb:/ipfs/QmejHd37qXVBUTDS3noAqNUneHbpwAUsizaoRyioSQQvp2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"libraries/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"libraries/Address.sol\":203:9607  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"libraries/Address.sol\":203:9607  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208aba8ab5b1d0934d275ed6c96d12d871cbed0cc8c01112f7677f382abfe17e0e64736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208aba8ab5b1d0934d275ed6c96d12d871cbed0cc8c01112f7677f382abfe17e0e64736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 0xBA DUP11 0xB5 0xB1 0xD0 SWAP4 0x4D 0x27 0x5E 0xD6 0xC9 PUSH14 0x12D871CBED0CC8C01112F7677F38 0x2A 0xBF 0xE1 PUSH31 0xE64736F6C6343000813003300000000000000000000000000000000000000 ",
							"sourceMap": "203:9404:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208aba8ab5b1d0934d275ed6c96d12d871cbed0cc8c01112f7677f382abfe17e0e64736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 0xBA DUP11 0xB5 0xB1 0xD0 SWAP4 0x4D 0x27 0x5E 0xD6 0xC9 PUSH14 0x12D871CBED0CC8C01112F7677F38 0x2A 0xBF 0xE1 PUSH31 0xE64736F6C6343000813003300000000000000000000000000000000000000 ",
							"sourceMap": "203:9404:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 9607,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208aba8ab5b1d0934d275ed6c96d12d871cbed0cc8c01112f7677f382abfe17e0e64736f6c63430008130033",
									".code": [
										{
											"begin": 203,
											"end": 9607,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 203,
											"end": 9607,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 203,
											"end": 9607,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 203,
											"end": 9607,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 9607,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 9607,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 203,
											"end": 9607,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 9607,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 203,
											"end": 9607,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"contracts/TimeMarket.sol",
								"interfaces/AaveV3/IPool.sol",
								"interfaces/AaveV3/IPoolAddressesProvider.sol",
								"interfaces/IERC20.sol",
								"interfaces/IERC20Metadata.sol",
								"interfaces/IERC20Permit.sol",
								"interfaces/ITimeFactory.sol",
								"interfaces/ITimeMarket.sol",
								"libraries/Address.sol",
								"libraries/DataTypes.sol",
								"libraries/SafeERC20.sol",
								"libraries/TimeLibrary.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"libraries/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"libraries/Address.sol\":{\"keccak256\":\"0x0f4169fea1817f1228f6a2db5e764e2a86f357a9f42f83de1f157449bca0f1ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://244a3f17ec48680bfaadacf724e5b12030636dc8b3e59f01de1cf206f0802ad7\",\"dweb:/ipfs/QmZXNxyUx2vm7LjcwtNhwYyKgqVxmbMAM3cG5bricBmL1K\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"libraries/DataTypes.sol": {
				"DataTypes": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"libraries/DataTypes.sol\":65:7632  library DataTypes {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"libraries/DataTypes.sol\":65:7632  library DataTypes {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a3795444ef72acd061b4283f8dae241935e43030bcdcbaf2213ba683ca0f3d2864736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a3795444ef72acd061b4283f8dae241935e43030bcdcbaf2213ba683ca0f3d2864736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 PUSH26 0x5444EF72ACD061B4283F8DAE241935E43030BCDCBAF2213BA683 0xCA 0xF RETURNDATASIZE 0x28 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "65:7567:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a3795444ef72acd061b4283f8dae241935e43030bcdcbaf2213ba683ca0f3d2864736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 PUSH26 0x5444EF72ACD061B4283F8DAE241935E43030BCDCBAF2213BA683 0xCA 0xF RETURNDATASIZE 0x28 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "65:7567:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 65,
									"end": 7632,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 65,
									"end": 7632,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 65,
									"end": 7632,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 65,
									"end": 7632,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 65,
									"end": 7632,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 65,
									"end": 7632,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 65,
									"end": 7632,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 65,
									"end": 7632,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 65,
									"end": 7632,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 65,
									"end": 7632,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 65,
									"end": 7632,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 65,
									"end": 7632,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 65,
									"end": 7632,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 65,
									"end": 7632,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 65,
									"end": 7632,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 65,
									"end": 7632,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 65,
									"end": 7632,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 65,
									"end": 7632,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 65,
									"end": 7632,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 65,
									"end": 7632,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 65,
									"end": 7632,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 65,
									"end": 7632,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 65,
									"end": 7632,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 65,
									"end": 7632,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 65,
									"end": 7632,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 65,
									"end": 7632,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 65,
									"end": 7632,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 65,
									"end": 7632,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 65,
									"end": 7632,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 65,
									"end": 7632,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 65,
									"end": 7632,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 65,
									"end": 7632,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 65,
									"end": 7632,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 65,
									"end": 7632,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 65,
									"end": 7632,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a3795444ef72acd061b4283f8dae241935e43030bcdcbaf2213ba683ca0f3d2864736f6c63430008130033",
									".code": [
										{
											"begin": 65,
											"end": 7632,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 65,
											"end": 7632,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 65,
											"end": 7632,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 65,
											"end": 7632,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 65,
											"end": 7632,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 65,
											"end": 7632,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 65,
											"end": 7632,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 65,
											"end": 7632,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 65,
											"end": 7632,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"contracts/TimeMarket.sol",
								"interfaces/AaveV3/IPool.sol",
								"interfaces/AaveV3/IPoolAddressesProvider.sol",
								"interfaces/IERC20.sol",
								"interfaces/IERC20Metadata.sol",
								"interfaces/IERC20Permit.sol",
								"interfaces/ITimeFactory.sol",
								"interfaces/ITimeMarket.sol",
								"libraries/Address.sol",
								"libraries/DataTypes.sol",
								"libraries/SafeERC20.sol",
								"libraries/TimeLibrary.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"libraries/DataTypes.sol\":\"DataTypes\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"libraries/DataTypes.sol\":{\"keccak256\":\"0x0d49afa0af11c8201d9e301661881753c6f7c0cfc33395d57f872e1e232a8359\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://eb2247a8c556b85c1b3c1e883f995e479e23585e00dff4883bf2ef603b4d1c42\",\"dweb:/ipfs/QmewXn7xKEX9ekq55q2YW2LTxiwJHVBd6QhJJAMwX56znw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"libraries/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"libraries/SafeERC20.sol\":778:7136  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"libraries/SafeERC20.sol\":778:7136  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220cfc1a177b08d92ef6e409df06efba5d08548ab6dea2783bf77aa4be603199f3364736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cfc1a177b08d92ef6e409df06efba5d08548ab6dea2783bf77aa4be603199f3364736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF 0xC1 LOG1 PUSH24 0xB08D92EF6E409DF06EFBA5D08548AB6DEA2783BF77AA4BE6 SUB NOT SWAP16 CALLER PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "778:6358:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cfc1a177b08d92ef6e409df06efba5d08548ab6dea2783bf77aa4be603199f3364736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF 0xC1 LOG1 PUSH24 0xB08D92EF6E409DF06EFBA5D08548AB6DEA2783BF77AA4BE6 SUB NOT SWAP16 CALLER PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "778:6358:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safePermit(contract IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 778,
									"end": 7136,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 778,
									"end": 7136,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 778,
									"end": 7136,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 778,
									"end": 7136,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 778,
									"end": 7136,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 778,
									"end": 7136,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 778,
									"end": 7136,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 778,
									"end": 7136,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 778,
									"end": 7136,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 778,
									"end": 7136,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 778,
									"end": 7136,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 778,
									"end": 7136,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 778,
									"end": 7136,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 778,
									"end": 7136,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 778,
									"end": 7136,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 778,
									"end": 7136,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 778,
									"end": 7136,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 778,
									"end": 7136,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 778,
									"end": 7136,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 778,
									"end": 7136,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 778,
									"end": 7136,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 778,
									"end": 7136,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 778,
									"end": 7136,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 778,
									"end": 7136,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 778,
									"end": 7136,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 778,
									"end": 7136,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 778,
									"end": 7136,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 778,
									"end": 7136,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 778,
									"end": 7136,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 778,
									"end": 7136,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 778,
									"end": 7136,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 778,
									"end": 7136,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 778,
									"end": 7136,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 778,
									"end": 7136,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 778,
									"end": 7136,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cfc1a177b08d92ef6e409df06efba5d08548ab6dea2783bf77aa4be603199f3364736f6c63430008130033",
									".code": [
										{
											"begin": 778,
											"end": 7136,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 778,
											"end": 7136,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 778,
											"end": 7136,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 778,
											"end": 7136,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 778,
											"end": 7136,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 778,
											"end": 7136,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 778,
											"end": 7136,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 778,
											"end": 7136,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 778,
											"end": 7136,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"contracts/TimeMarket.sol",
								"interfaces/AaveV3/IPool.sol",
								"interfaces/AaveV3/IPoolAddressesProvider.sol",
								"interfaces/IERC20.sol",
								"interfaces/IERC20Metadata.sol",
								"interfaces/IERC20Permit.sol",
								"interfaces/ITimeFactory.sol",
								"interfaces/ITimeMarket.sol",
								"libraries/Address.sol",
								"libraries/DataTypes.sol",
								"libraries/SafeERC20.sol",
								"libraries/TimeLibrary.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"libraries/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/IERC20.sol\":{\"keccak256\":\"0xa426add89e9b4785ddeeb07b4d9352b57de8b4cb314c8cb8f0d5898938bd8de9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09852a830ad29d33cfdf74e7035853c68e43e1a8c242b25db9d656a074a54e6d\",\"dweb:/ipfs/QmeRSfQwWr3vyP2uJxnjybtPYLMiD17E51d4eMhXQh93R1\"]},\"interfaces/IERC20Permit.sol\":{\"keccak256\":\"0xc51a927b9d9ff62cf4c237f7f197827b90c460786c855c527007c02a94f23154\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d1107bf21355e8518d9fdcf1aa7052de7e5fc6d867d86d87b61b43667813cc1d\",\"dweb:/ipfs/QmZG3AQa61MLFWmovNyuzv3iCBPnFHGV7E7CimxLwpAwKt\"]},\"libraries/Address.sol\":{\"keccak256\":\"0x0f4169fea1817f1228f6a2db5e764e2a86f357a9f42f83de1f157449bca0f1ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://244a3f17ec48680bfaadacf724e5b12030636dc8b3e59f01de1cf206f0802ad7\",\"dweb:/ipfs/QmZXNxyUx2vm7LjcwtNhwYyKgqVxmbMAM3cG5bricBmL1K\"]},\"libraries/SafeERC20.sol\":{\"keccak256\":\"0xe74183ce288c892718941897cf193167013ef062470ea7fc7f0e74c23521cdd1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75be313f96388535ff46fc29a55ed358e24e887c5706ea595ef2ed95c1d58e03\",\"dweb:/ipfs/QmReMXbvdgk5wZtn3mrjsDGLKFzfbBxG6HJBELLsaAKXkS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"libraries/TimeLibrary.sol": {
				"TimeLibrary": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"libraries/TimeLibrary.sol\":59:1710  library TimeLibrary{... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"libraries/TimeLibrary.sol\":59:1710  library TimeLibrary{... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220152f02161300e90515841f38e7bf79fb3abc29d16fb83bdeb366e3d9f0334cd764736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220152f02161300e90515841f38e7bf79fb3abc29d16fb83bdeb366e3d9f0334cd764736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO 0x2F MUL AND SGT STOP 0xE9 SDIV ISZERO DUP5 0x1F CODESIZE 0xE7 0xBF PUSH26 0xFB3ABC29D16FB83BDEB366E3D9F0334CD764736F6C6343000813 STOP CALLER ",
							"sourceMap": "59:1651:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220152f02161300e90515841f38e7bf79fb3abc29d16fb83bdeb366e3d9f0334cd764736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO 0x2F MUL AND SGT STOP 0xE9 SDIV ISZERO DUP5 0x1F CODESIZE 0xE7 0xBF PUSH26 0xFB3ABC29D16FB83BDEB366E3D9F0334CD764736F6C6343000813 STOP CALLER ",
							"sourceMap": "59:1651:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"fee(uint256,uint256)": "infinite",
								"getPenal(uint32,uint128,uint256)": "infinite",
								"getTotalStable(uint32,uint128,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 59,
									"end": 1710,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 59,
									"end": 1710,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 59,
									"end": 1710,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 59,
									"end": 1710,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 59,
									"end": 1710,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 59,
									"end": 1710,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 59,
									"end": 1710,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 59,
									"end": 1710,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 59,
									"end": 1710,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 59,
									"end": 1710,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 59,
									"end": 1710,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 59,
									"end": 1710,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 59,
									"end": 1710,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 59,
									"end": 1710,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 59,
									"end": 1710,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 59,
									"end": 1710,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 59,
									"end": 1710,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 59,
									"end": 1710,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 59,
									"end": 1710,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 59,
									"end": 1710,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 59,
									"end": 1710,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 59,
									"end": 1710,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 59,
									"end": 1710,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 59,
									"end": 1710,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 59,
									"end": 1710,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 59,
									"end": 1710,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 59,
									"end": 1710,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 59,
									"end": 1710,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 59,
									"end": 1710,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 59,
									"end": 1710,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 59,
									"end": 1710,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 59,
									"end": 1710,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 59,
									"end": 1710,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 59,
									"end": 1710,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 59,
									"end": 1710,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220152f02161300e90515841f38e7bf79fb3abc29d16fb83bdeb366e3d9f0334cd764736f6c63430008130033",
									".code": [
										{
											"begin": 59,
											"end": 1710,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 59,
											"end": 1710,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 59,
											"end": 1710,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 59,
											"end": 1710,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 59,
											"end": 1710,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 59,
											"end": 1710,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 59,
											"end": 1710,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 59,
											"end": 1710,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 59,
											"end": 1710,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"contracts/TimeMarket.sol",
								"interfaces/AaveV3/IPool.sol",
								"interfaces/AaveV3/IPoolAddressesProvider.sol",
								"interfaces/IERC20.sol",
								"interfaces/IERC20Metadata.sol",
								"interfaces/IERC20Permit.sol",
								"interfaces/ITimeFactory.sol",
								"interfaces/ITimeMarket.sol",
								"libraries/Address.sol",
								"libraries/DataTypes.sol",
								"libraries/SafeERC20.sol",
								"libraries/TimeLibrary.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"libraries/TimeLibrary.sol\":\"TimeLibrary\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"libraries/TimeLibrary.sol\":{\"keccak256\":\"0xfdc78ed3a3ea7b906387e954bc954f0f215d911b04051e42ee293862ff22f44c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e24ff792dd6718e8da68c1b0d3470c19ce7cbc222d0864f369fb755269a3fb09\",\"dweb:/ipfs/QmRveH8q9An4299aeqcgf7SfqhyJSWJbxdz15LwbbvghTS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/TimeMarket.sol": {
				"ast": {
					"absolutePath": "contracts/TimeMarket.sol",
					"exportedSymbols": {
						"Address": [
							2083
						],
						"DataTypes": [
							2435
						],
						"IERC20": [
							1571
						],
						"IERC20Metadata": [
							1596
						],
						"IERC20Permit": [
							1632
						],
						"IPool": [
							1284
						],
						"IPoolAddressesProvider": [
							1493
						],
						"ITimeFactory": [
							1657
						],
						"ITimeMarket": [
							1753
						],
						"SafeERC20": [
							2814
						],
						"TimeLibrary": [
							2977
						],
						"TimeMarket": [
							645
						]
					},
					"id": 646,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "31:23:0"
						},
						{
							"id": 2,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "56:19:0"
						},
						{
							"absolutePath": "libraries/SafeERC20.sol",
							"file": "../libraries/SafeERC20.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 646,
							"sourceUnit": 2815,
							"src": "77:36:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/ITimeMarket.sol",
							"file": "../interfaces/ITimeMarket.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 646,
							"sourceUnit": 1754,
							"src": "115:39:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "libraries/TimeLibrary.sol",
							"file": "../libraries/TimeLibrary.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 646,
							"sourceUnit": 2978,
							"src": "156:38:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/IERC20Metadata.sol",
							"file": "../interfaces/IERC20Metadata.sol",
							"id": 6,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 646,
							"sourceUnit": 1597,
							"src": "196:42:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/ITimeFactory.sol",
							"file": "../interfaces/ITimeFactory.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 646,
							"sourceUnit": 1658,
							"src": "240:40:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/AaveV3/IPool.sol",
							"file": "../interfaces/AaveV3/IPool.sol",
							"id": 8,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 646,
							"sourceUnit": 1285,
							"src": "295:40:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "ITimeMarket",
										"nameLocations": [
											"465:11:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1753,
										"src": "465:11:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "465:11:0"
								}
							],
							"canonicalName": "TimeMarket",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 645,
							"linearizedBaseContracts": [
								645,
								1753
							],
							"name": "TimeMarket",
							"nameLocation": "451:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 14,
									"libraryName": {
										"id": 11,
										"name": "SafeERC20",
										"nameLocations": [
											"489:9:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2814,
										"src": "489:9:0"
									},
									"nodeType": "UsingForDirective",
									"src": "483:27:0",
									"typeName": {
										"id": 13,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 12,
											"name": "IERC20",
											"nameLocations": [
												"503:6:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1571,
											"src": "503:6:0"
										},
										"referencedDeclaration": 1571,
										"src": "503:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1571",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"id": 16,
									"mutability": "mutable",
									"name": "id",
									"nameLocation": "531:2:0",
									"nodeType": "VariableDeclaration",
									"scope": 645,
									"src": "516:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 15,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "516:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 18,
									"mutability": "mutable",
									"name": "clearingTime",
									"nameLocation": "577:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 645,
									"src": "562:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint56",
										"typeString": "uint56"
									},
									"typeName": {
										"id": 17,
										"name": "uint56",
										"nodeType": "ElementaryTypeName",
										"src": "562:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint56",
											"typeString": "uint56"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 20,
									"mutability": "mutable",
									"name": "factoryOwner",
									"nameLocation": "627:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 645,
									"src": "611:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 19,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "611:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 22,
									"mutability": "mutable",
									"name": "totalStable",
									"nameLocation": "693:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 645,
									"src": "677:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 21,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "677:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 24,
									"mutability": "mutable",
									"name": "rewardPool",
									"nameLocation": "758:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 645,
									"src": "742:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 23,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "742:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "airdropToken",
									"nameLocation": "804:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 645,
									"src": "788:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 25,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "788:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 29,
									"mutability": "mutable",
									"name": "AUSDT",
									"nameLocation": "861:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 645,
									"src": "845:64:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 27,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "845:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307861413845323346623130373945413731653061353646343861326141353138353144383433334430",
										"id": 28,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "867:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xaA8E23Fb1079EA71e0a56F48a2aA51851D8433D0"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 32,
									"mutability": "mutable",
									"name": "AEthUsdt",
									"nameLocation": "989:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 645,
									"src": "973:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 30,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "973:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307841463046366538623044633563393133626246346431346332324234453738446431343331304236",
										"id": 31,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "998:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xAF0F6e8b0Dc5c913bbF4d14c22B4E78Dd14310B6"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 38,
									"mutability": "mutable",
									"name": "AaveV3Pool",
									"nameLocation": "1088:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 645,
									"src": "1074:74:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IPool_$1284",
										"typeString": "contract IPool"
									},
									"typeName": {
										"id": 34,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 33,
											"name": "IPool",
											"nameLocations": [
												"1074:5:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1284,
											"src": "1074:5:0"
										},
										"referencedDeclaration": 1284,
										"src": "1074:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IPool_$1284",
											"typeString": "contract IPool"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307836416534336433323731666636383838653746633433466437333231613530336666373338393531",
												"id": 36,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1105:42:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0x6Ae43d3271ff6888e7Fc43Fd7321a503ff738951"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 35,
											"name": "IPool",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1284,
											"src": "1099:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IPool_$1284_$",
												"typeString": "type(contract IPool)"
											}
										},
										"id": 37,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1099:49:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IPool_$1284",
											"typeString": "contract IPool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 52,
										"nodeType": "Block",
										"src": "1191:79:0",
										"statements": [
											{
												"expression": {
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 43,
														"name": "airdropToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "1202:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 44,
														"name": "_airdropToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 40,
														"src": "1215:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1202:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 46,
												"nodeType": "ExpressionStatement",
												"src": "1202:26:0"
											},
											{
												"expression": {
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 47,
														"name": "factoryOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "1239:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 48,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1252:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 49,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1256:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1252:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1239:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 51,
												"nodeType": "ExpressionStatement",
												"src": "1239:23:0"
											}
										]
									},
									"id": 53,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "_airdropToken",
												"nameLocation": "1177:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "1169:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 39,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1169:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1168:23:0"
									},
									"returnParameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1191:0:0"
									},
									"scope": 645,
									"src": "1157:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 58,
									"mutability": "mutable",
									"name": "_tradeMes",
									"nameLocation": "1349:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 645,
									"src": "1316:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_tradeMes_$1689_storage_$",
										"typeString": "mapping(uint32 => struct ITimeMarket.tradeMes)"
									},
									"typeName": {
										"id": 57,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 54,
											"name": "uint32",
											"nodeType": "ElementaryTypeName",
											"src": "1324:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											}
										},
										"nodeType": "Mapping",
										"src": "1316:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_tradeMes_$1689_storage_$",
											"typeString": "mapping(uint32 => struct ITimeMarket.tradeMes)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 56,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 55,
												"name": "tradeMes",
												"nameLocations": [
													"1332:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1689,
												"src": "1332:8:0"
											},
											"referencedDeclaration": 1689,
											"src": "1332:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_tradeMes_$1689_storage_ptr",
												"typeString": "struct ITimeMarket.tradeMes"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 65,
									"mutability": "mutable",
									"name": "_userDeposite",
									"nameLocation": "1428:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 645,
									"src": "1373:68:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint32_$_t_mapping$_t_address_$_t_struct$_userDeposite_$1702_storage_$_$",
										"typeString": "mapping(uint32 => mapping(address => struct ITimeMarket.userDeposite))"
									},
									"typeName": {
										"id": 64,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 59,
											"name": "uint32",
											"nodeType": "ElementaryTypeName",
											"src": "1381:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											}
										},
										"nodeType": "Mapping",
										"src": "1373:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint32_$_t_mapping$_t_address_$_t_struct$_userDeposite_$1702_storage_$_$",
											"typeString": "mapping(uint32 => mapping(address => struct ITimeMarket.userDeposite))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 63,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 60,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1397:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1389:30:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_userDeposite_$1702_storage_$",
												"typeString": "mapping(address => struct ITimeMarket.userDeposite)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 62,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 61,
													"name": "userDeposite",
													"nameLocations": [
														"1406:12:0"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1702,
													"src": "1406:12:0"
												},
												"referencedDeclaration": 1702,
												"src": "1406:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_userDeposite_$1702_storage_ptr",
													"typeString": "struct ITimeMarket.userDeposite"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 71,
									"mutability": "mutable",
									"name": "userLiquidity",
									"nameLocation": "1534:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 645,
									"src": "1486:61:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint64_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(uint64 => uint256))"
									},
									"typeName": {
										"id": 70,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 66,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1494:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1486:39:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint64_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(uint64 => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 69,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 67,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "1511:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"nodeType": "Mapping",
											"src": "1503:21:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint64_$_t_uint256_$",
												"typeString": "mapping(uint64 => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 68,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1519:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "1574:140:0",
										"statements": [
											{
												"assignments": [
													74
												],
												"declarations": [
													{
														"constant": false,
														"id": 74,
														"mutability": "mutable",
														"name": "thisOwner",
														"nameLocation": "1593:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 90,
														"src": "1585:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 73,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1585:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 80,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 76,
																	"name": "factoryOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 20,
																	"src": "1616:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 75,
																"name": "ITimeFactory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1657,
																"src": "1603:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ITimeFactory_$1657_$",
																	"typeString": "type(contract ITimeFactory)"
																}
															},
															"id": 77,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1603:26:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ITimeFactory_$1657",
																"typeString": "contract ITimeFactory"
															}
														},
														"id": 78,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:9:0",
														"memberName": "thisOwner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1656,
														"src": "1603:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 79,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1603:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1585:56:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 85,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 82,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1660:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 83,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1664:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1660:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 84,
																"name": "thisOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 74,
																"src": "1672:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1660:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f74204f776e6572",
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1682:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4",
																"typeString": "literal_string \"Not Owner\""
															},
															"value": "Not Owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4",
																"typeString": "literal_string \"Not Owner\""
															}
														],
														"id": 81,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1652:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1652:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 88,
												"nodeType": "ExpressionStatement",
												"src": "1652:42:0"
											},
											{
												"id": 89,
												"nodeType": "PlaceholderStatement",
												"src": "1705:1:0"
											}
										]
									},
									"id": 91,
									"name": "onlyOwner",
									"nameLocation": "1565:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1574:0:0"
									},
									"src": "1556:158:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 108,
										"nodeType": "Block",
										"src": "1846:78:0",
										"statements": [
											{
												"expression": {
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 100,
														"name": "rewardPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "1857:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 101,
														"name": "_rewardPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 93,
														"src": "1868:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1857:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 103,
												"nodeType": "ExpressionStatement",
												"src": "1857:22:0"
											},
											{
												"expression": {
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 104,
														"name": "clearingTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "1890:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint56",
															"typeString": "uint56"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 105,
														"name": "_clearingTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 95,
														"src": "1903:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint56",
															"typeString": "uint56"
														}
													},
													"src": "1890:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint56",
														"typeString": "uint56"
													}
												},
												"id": 107,
												"nodeType": "ExpressionStatement",
												"src": "1890:26:0"
											}
										]
									},
									"functionSelector": "635b9a0f",
									"id": 109,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 98,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 97,
												"name": "onlyOwner",
												"nameLocations": [
													"1837:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 91,
												"src": "1837:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1837:9:0"
										}
									],
									"name": "setRewardPool",
									"nameLocation": "1773:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "_rewardPool",
												"nameLocation": "1795:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "1787:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1787:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "_clearingTime",
												"nameLocation": "1814:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "1807:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint56",
													"typeString": "uint56"
												},
												"typeName": {
													"id": 94,
													"name": "uint56",
													"nodeType": "ElementaryTypeName",
													"src": "1807:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint56",
														"typeString": "uint56"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1786:42:0"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1846:0:0"
									},
									"scope": 645,
									"src": "1764:160:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 383,
										"nodeType": "Block",
										"src": "2049:2124:0",
										"statements": [
											{
												"assignments": [
													122
												],
												"declarations": [
													{
														"constant": false,
														"id": 122,
														"mutability": "mutable",
														"name": "decimals",
														"nameLocation": "2099:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 383,
														"src": "2093:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 121,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "2093:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 128,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 124,
																	"name": "_tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "2123:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 123,
																"name": "IERC20Metadata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1596,
																"src": "2108:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20Metadata_$1596_$",
																	"typeString": "type(contract IERC20Metadata)"
																}
															},
															"id": 125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2108:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Metadata_$1596",
																"typeString": "contract IERC20Metadata"
															}
														},
														"id": 126,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2138:8:0",
														"memberName": "decimals",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1595,
														"src": "2108:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
															"typeString": "function () view external returns (uint8)"
														}
													},
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2108:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2093:55:0"
											},
											{
												"assignments": [
													130
												],
												"declarations": [
													{
														"constant": false,
														"id": 130,
														"mutability": "mutable",
														"name": "oneToken",
														"nameLocation": "2167:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 383,
														"src": "2159:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 129,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2159:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 134,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3130",
														"id": 131,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2176:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"nodeType": "BinaryOperation",
													"operator": "**",
													"rightExpression": {
														"id": 132,
														"name": "decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "2180:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "2176:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2159:29:0"
											},
											{
												"assignments": [
													136
												],
												"declarations": [
													{
														"constant": false,
														"id": 136,
														"mutability": "mutable",
														"name": "total",
														"nameLocation": "2207:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 383,
														"src": "2199:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 135,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2199:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 143,
												"initialValue": {
													"arguments": [
														{
															"id": 139,
															"name": "_price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "2242:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														{
															"id": 140,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 115,
															"src": "2249:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														{
															"id": 141,
															"name": "oneToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 130,
															"src": "2257:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 137,
															"name": "TimeLibrary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2977,
															"src": "2215:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TimeLibrary_$2977_$",
																"typeString": "type(library TimeLibrary)"
															}
														},
														"id": 138,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2227:14:0",
														"memberName": "getTotalStable",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2976,
														"src": "2215:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint32_$_t_uint128_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint32,uint128,uint256) pure returns (uint256)"
														}
													},
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2215:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2199:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 149,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 145,
																"name": "total",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 136,
																"src": "2285:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 148,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 146,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2292:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 147,
																	"name": "oneToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 130,
																	"src": "2295:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2292:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2285:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 144,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2277:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2277:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 151,
												"nodeType": "ExpressionStatement",
												"src": "2277:27:0"
											},
											{
												"assignments": [
													153
												],
												"declarations": [
													{
														"constant": false,
														"id": 153,
														"mutability": "mutable",
														"name": "buyer",
														"nameLocation": "2325:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 383,
														"src": "2317:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 152,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2317:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 154,
												"nodeType": "VariableDeclarationStatement",
												"src": "2317:13:0"
											},
											{
												"assignments": [
													156
												],
												"declarations": [
													{
														"constant": false,
														"id": 156,
														"mutability": "mutable",
														"name": "seller",
														"nameLocation": "2349:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 383,
														"src": "2341:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 155,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2341:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 157,
												"nodeType": "VariableDeclarationStatement",
												"src": "2341:14:0"
											},
											{
												"assignments": [
													160
												],
												"declarations": [
													{
														"constant": false,
														"id": 160,
														"mutability": "mutable",
														"name": "newTradeState",
														"nameLocation": "2379:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 383,
														"src": "2368:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_tradeState_$1669",
															"typeString": "enum ITimeMarket.tradeState"
														},
														"typeName": {
															"id": 159,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 158,
																"name": "tradeState",
																"nameLocations": [
																	"2368:10:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1669,
																"src": "2368:10:0"
															},
															"referencedDeclaration": 1669,
															"src": "2368:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_tradeState_$1669",
																"typeString": "enum ITimeMarket.tradeState"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 161,
												"nodeType": "VariableDeclarationStatement",
												"src": "2368:24:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_doState_$1663",
														"typeString": "enum ITimeMarket.doState"
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 162,
														"name": "_doState",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "2406:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_doState_$1663",
															"typeString": "enum ITimeMarket.doState"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 163,
															"name": "doState",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1663,
															"src": "2416:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_doState_$1663_$",
																"typeString": "type(enum ITimeMarket.doState)"
															}
														},
														"id": 164,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2424:3:0",
														"memberName": "buy",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1660,
														"src": "2416:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_doState_$1663",
															"typeString": "enum ITimeMarket.doState"
														}
													},
													"src": "2406:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_doState_$1663",
															"typeString": "enum ITimeMarket.doState"
														},
														"id": 180,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 177,
															"name": "_doState",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "2525:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_doState_$1663",
																"typeString": "enum ITimeMarket.doState"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 178,
																"name": "doState",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1663,
																"src": "2535:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_doState_$1663_$",
																	"typeString": "type(enum ITimeMarket.doState)"
																}
															},
															"id": 179,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2543:4:0",
															"memberName": "sell",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1661,
															"src": "2535:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_doState_$1663",
																"typeString": "enum ITimeMarket.doState"
															}
														},
														"src": "2525:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 195,
														"nodeType": "Block",
														"src": "2643:35:0",
														"statements": [
															{
																"expression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 192,
																		"name": "revert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967277,
																			4294967277
																		],
																		"referencedDeclaration": 4294967277,
																		"src": "2658:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 193,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2658:8:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 194,
																"nodeType": "ExpressionStatement",
																"src": "2658:8:0"
															}
														]
													},
													"id": 196,
													"nodeType": "IfStatement",
													"src": "2522:156:0",
													"trueBody": {
														"id": 191,
														"nodeType": "Block",
														"src": "2548:91:0",
														"statements": [
															{
																"expression": {
																	"id": 184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 181,
																		"name": "newTradeState",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 160,
																		"src": "2563:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_tradeState_$1669",
																			"typeString": "enum ITimeMarket.tradeState"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"expression": {
																			"id": 182,
																			"name": "tradeState",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1669,
																			"src": "2577:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_tradeState_$1669_$",
																				"typeString": "type(enum ITimeMarket.tradeState)"
																			}
																		},
																		"id": 183,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2588:7:0",
																		"memberName": "selling",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1665,
																		"src": "2577:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_tradeState_$1669",
																			"typeString": "enum ITimeMarket.tradeState"
																		}
																	},
																	"src": "2563:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_tradeState_$1669",
																		"typeString": "enum ITimeMarket.tradeState"
																	}
																},
																"id": 185,
																"nodeType": "ExpressionStatement",
																"src": "2563:32:0"
															},
															{
																"expression": {
																	"id": 189,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 186,
																		"name": "seller",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 156,
																		"src": "2610:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"expression": {
																			"id": 187,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2617:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 188,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2621:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2617:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "2610:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 190,
																"nodeType": "ExpressionStatement",
																"src": "2610:17:0"
															}
														]
													}
												},
												"id": 197,
												"nodeType": "IfStatement",
												"src": "2403:275:0",
												"trueBody": {
													"id": 176,
													"nodeType": "Block",
													"src": "2428:89:0",
													"statements": [
														{
															"expression": {
																"id": 169,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 166,
																	"name": "buyer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 153,
																	"src": "2443:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 167,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2449:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2453:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2449:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2443:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 170,
															"nodeType": "ExpressionStatement",
															"src": "2443:16:0"
														},
														{
															"expression": {
																"id": 174,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 171,
																	"name": "newTradeState",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 160,
																	"src": "2474:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_tradeState_$1669",
																		"typeString": "enum ITimeMarket.tradeState"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 172,
																		"name": "tradeState",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1669,
																		"src": "2488:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_tradeState_$1669_$",
																			"typeString": "type(enum ITimeMarket.tradeState)"
																		}
																	},
																	"id": 173,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2499:6:0",
																	"memberName": "buying",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1664,
																	"src": "2488:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_tradeState_$1669",
																		"typeString": "enum ITimeMarket.tradeState"
																	}
																},
																"src": "2474:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_tradeState_$1669",
																	"typeString": "enum ITimeMarket.tradeState"
																}
															},
															"id": 175,
															"nodeType": "ExpressionStatement",
															"src": "2474:31:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 198,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2735:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 199,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2741:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2735:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint56",
															"typeString": "uint56"
														},
														"id": 202,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 200,
															"name": "clearingTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "2751:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint56",
																"typeString": "uint56"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"hexValue": "31",
															"id": 201,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2764:6:0",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_86400_by_1",
																"typeString": "int_const 86400"
															},
															"value": "1"
														},
														"src": "2751:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint56",
															"typeString": "uint56"
														}
													},
													"src": "2735:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 208,
												"nodeType": "IfStatement",
												"src": "2732:59:0",
												"trueBody": {
													"id": 207,
													"nodeType": "Block",
													"src": "2771:20:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 204,
																	"name": "OverTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1710,
																	"src": "2779:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 205,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2779:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 206,
															"nodeType": "RevertStatement",
															"src": "2772:17:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 213,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2886:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2890:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2886:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 217,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2905:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TimeMarket_$645",
																		"typeString": "contract TimeMarket"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TimeMarket_$645",
																		"typeString": "contract TimeMarket"
																	}
																],
																"id": 216,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2897:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 215,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2897:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 218,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2897:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 219,
															"name": "total",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 136,
															"src": "2911:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 210,
																	"name": "_tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "2854:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 209,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1571,
																"src": "2847:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1571_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2847:21:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1571",
																"typeString": "contract IERC20"
															}
														},
														"id": 212,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2869:16:0",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2498,
														"src": "2847:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1571_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$1571_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2847:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 221,
												"nodeType": "ExpressionStatement",
												"src": "2847:70:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 228,
																	"name": "AaveV3Pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 38,
																	"src": "3001:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IPool_$1284",
																		"typeString": "contract IPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IPool_$1284",
																		"typeString": "contract IPool"
																	}
																],
																"id": 227,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2993:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 226,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2993:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 229,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2993:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 230,
															"name": "total",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 136,
															"src": "3013:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 223,
																	"name": "_tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "2970:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 222,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1571,
																"src": "2963:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1571_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2963:21:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1571",
																"typeString": "contract IERC20"
															}
														},
														"id": 225,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2985:7:0",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1558,
														"src": "2963:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2963:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 232,
												"nodeType": "ExpressionStatement",
												"src": "2963:56:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 236,
															"name": "_tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 111,
															"src": "3090:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 237,
															"name": "total",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 136,
															"src": "3147:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 240,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3204:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TimeMarket_$645",
																		"typeString": "contract TimeMarket"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TimeMarket_$645",
																		"typeString": "contract TimeMarket"
																	}
																],
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3196:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 238,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3196:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3196:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3252:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"id": 233,
															"name": "AaveV3Pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 38,
															"src": "3058:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IPool_$1284",
																"typeString": "contract IPool"
															}
														},
														"id": 235,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3069:6:0",
														"memberName": "supply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 869,
														"src": "3058:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint16_$returns$__$",
															"typeString": "function (address,uint256,address,uint16) external"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3058:248:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 244,
												"nodeType": "ExpressionStatement",
												"src": "3058:248:0"
											},
											{
												"expression": {
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 245,
																"name": "_tradeMes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 58,
																"src": "3319:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_tradeMes_$1689_storage_$",
																	"typeString": "mapping(uint32 => struct ITimeMarket.tradeMes storage ref)"
																}
															},
															"id": 247,
															"indexExpression": {
																"id": 246,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 16,
																"src": "3329:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3319:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_tradeMes_$1689_storage",
																"typeString": "struct ITimeMarket.tradeMes storage ref"
															}
														},
														"id": 248,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3333:7:0",
														"memberName": "tradeId",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1671,
														"src": "3319:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 249,
														"name": "id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "3341:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "3319:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 251,
												"nodeType": "ExpressionStatement",
												"src": "3319:24:0"
											},
											{
												"expression": {
													"id": 257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 252,
																"name": "_tradeMes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 58,
																"src": "3354:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_tradeMes_$1689_storage_$",
																	"typeString": "mapping(uint32 => struct ITimeMarket.tradeMes storage ref)"
																}
															},
															"id": 254,
															"indexExpression": {
																"id": 253,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 16,
																"src": "3364:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3354:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_tradeMes_$1689_storage",
																"typeString": "struct ITimeMarket.tradeMes storage ref"
															}
														},
														"id": 255,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3368:5:0",
														"memberName": "price",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1673,
														"src": "3354:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 256,
														"name": "_price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 113,
														"src": "3374:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "3354:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 258,
												"nodeType": "ExpressionStatement",
												"src": "3354:26:0"
											},
											{
												"expression": {
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 259,
																"name": "_tradeMes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 58,
																"src": "3391:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_tradeMes_$1689_storage_$",
																	"typeString": "mapping(uint32 => struct ITimeMarket.tradeMes storage ref)"
																}
															},
															"id": 261,
															"indexExpression": {
																"id": 260,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 16,
																"src": "3401:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3391:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_tradeMes_$1689_storage",
																"typeString": "struct ITimeMarket.tradeMes storage ref"
															}
														},
														"id": 262,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3405:4:0",
														"memberName": "time",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1675,
														"src": "3391:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint56",
															"typeString": "uint56"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 265,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "3417:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 266,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3423:9:0",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "3417:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 264,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3410:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint56_$",
																"typeString": "type(uint56)"
															},
															"typeName": {
																"id": 263,
																"name": "uint56",
																"nodeType": "ElementaryTypeName",
																"src": "3410:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 267,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3410:23:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint56",
															"typeString": "uint56"
														}
													},
													"src": "3391:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint56",
														"typeString": "uint56"
													}
												},
												"id": 269,
												"nodeType": "ExpressionStatement",
												"src": "3391:42:0"
											},
											{
												"expression": {
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 270,
																"name": "_tradeMes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 58,
																"src": "3444:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_tradeMes_$1689_storage_$",
																	"typeString": "mapping(uint32 => struct ITimeMarket.tradeMes storage ref)"
																}
															},
															"id": 272,
															"indexExpression": {
																"id": 271,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 16,
																"src": "3454:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3444:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_tradeMes_$1689_storage",
																"typeString": "struct ITimeMarket.tradeMes storage ref"
															}
														},
														"id": 273,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3458:6:0",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1677,
														"src": "3444:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 274,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "3465:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "3444:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"id": 276,
												"nodeType": "ExpressionStatement",
												"src": "3444:28:0"
											},
											{
												"expression": {
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 277,
																"name": "_tradeMes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 58,
																"src": "3483:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_tradeMes_$1689_storage_$",
																	"typeString": "mapping(uint32 => struct ITimeMarket.tradeMes storage ref)"
																}
															},
															"id": 279,
															"indexExpression": {
																"id": 278,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 16,
																"src": "3493:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3483:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_tradeMes_$1689_storage",
																"typeString": "struct ITimeMarket.tradeMes storage ref"
															}
														},
														"id": 280,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3497:14:0",
														"memberName": "tokenOneAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1679,
														"src": "3483:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 281,
														"name": "oneToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "3512:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3483:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 283,
												"nodeType": "ExpressionStatement",
												"src": "3483:37:0"
											},
											{
												"expression": {
													"id": 289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 284,
																"name": "_tradeMes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 58,
																"src": "3531:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_tradeMes_$1689_storage_$",
																	"typeString": "mapping(uint32 => struct ITimeMarket.tradeMes storage ref)"
																}
															},
															"id": 286,
															"indexExpression": {
																"id": 285,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 16,
																"src": "3541:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3531:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_tradeMes_$1689_storage",
																"typeString": "struct ITimeMarket.tradeMes storage ref"
															}
														},
														"id": 287,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3545:12:0",
														"memberName": "tokenAddress",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1681,
														"src": "3531:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 288,
														"name": "_tokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "3558:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3531:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 290,
												"nodeType": "ExpressionStatement",
												"src": "3531:40:0"
											},
											{
												"expression": {
													"id": 296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 291,
																"name": "_tradeMes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 58,
																"src": "3582:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_tradeMes_$1689_storage_$",
																	"typeString": "mapping(uint32 => struct ITimeMarket.tradeMes storage ref)"
																}
															},
															"id": 293,
															"indexExpression": {
																"id": 292,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 16,
																"src": "3592:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3582:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_tradeMes_$1689_storage",
																"typeString": "struct ITimeMarket.tradeMes storage ref"
															}
														},
														"id": 294,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3596:12:0",
														"memberName": "buyerAddress",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1683,
														"src": "3582:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 295,
														"name": "buyer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "3609:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3582:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 297,
												"nodeType": "ExpressionStatement",
												"src": "3582:32:0"
											},
											{
												"expression": {
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 298,
																"name": "_tradeMes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 58,
																"src": "3625:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_tradeMes_$1689_storage_$",
																	"typeString": "mapping(uint32 => struct ITimeMarket.tradeMes storage ref)"
																}
															},
															"id": 300,
															"indexExpression": {
																"id": 299,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 16,
																"src": "3635:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3625:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_tradeMes_$1689_storage",
																"typeString": "struct ITimeMarket.tradeMes storage ref"
															}
														},
														"id": 301,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3639:13:0",
														"memberName": "solderAddress",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1685,
														"src": "3625:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 302,
														"name": "seller",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "3653:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3625:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 304,
												"nodeType": "ExpressionStatement",
												"src": "3625:34:0"
											},
											{
												"expression": {
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 305,
																"name": "_tradeMes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 58,
																"src": "3670:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_tradeMes_$1689_storage_$",
																	"typeString": "mapping(uint32 => struct ITimeMarket.tradeMes storage ref)"
																}
															},
															"id": 307,
															"indexExpression": {
																"id": 306,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 16,
																"src": "3680:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3670:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_tradeMes_$1689_storage",
																"typeString": "struct ITimeMarket.tradeMes storage ref"
															}
														},
														"id": 308,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3684:11:0",
														"memberName": "_tradeState",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1688,
														"src": "3670:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_tradeState_$1669",
															"typeString": "enum ITimeMarket.tradeState"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 309,
														"name": "newTradeState",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 160,
														"src": "3696:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_tradeState_$1669",
															"typeString": "enum ITimeMarket.tradeState"
														}
													},
													"src": "3670:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_tradeState_$1669",
														"typeString": "enum ITimeMarket.tradeState"
													}
												},
												"id": 311,
												"nodeType": "ExpressionStatement",
												"src": "3670:39:0"
											},
											{
												"expression": {
													"id": 320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 312,
																	"name": "_userDeposite",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "3722:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint32_$_t_mapping$_t_address_$_t_struct$_userDeposite_$1702_storage_$_$",
																		"typeString": "mapping(uint32 => mapping(address => struct ITimeMarket.userDeposite storage ref))"
																	}
																},
																"id": 316,
																"indexExpression": {
																	"id": 313,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "3736:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3722:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_userDeposite_$1702_storage_$",
																	"typeString": "mapping(address => struct ITimeMarket.userDeposite storage ref)"
																}
															},
															"id": 317,
															"indexExpression": {
																"expression": {
																	"id": 314,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3740:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 315,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3744:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3740:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3722:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_userDeposite_$1702_storage",
																"typeString": "struct ITimeMarket.userDeposite storage ref"
															}
														},
														"id": 318,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3752:7:0",
														"memberName": "tradeId",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1691,
														"src": "3722:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 319,
														"name": "id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "3760:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "3722:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 321,
												"nodeType": "ExpressionStatement",
												"src": "3722:40:0"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 322,
																	"name": "_userDeposite",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "3773:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint32_$_t_mapping$_t_address_$_t_struct$_userDeposite_$1702_storage_$_$",
																		"typeString": "mapping(uint32 => mapping(address => struct ITimeMarket.userDeposite storage ref))"
																	}
																},
																"id": 326,
																"indexExpression": {
																	"id": 323,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "3787:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3773:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_userDeposite_$1702_storage_$",
																	"typeString": "mapping(address => struct ITimeMarket.userDeposite storage ref)"
																}
															},
															"id": 327,
															"indexExpression": {
																"expression": {
																	"id": 324,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3791:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 325,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3795:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3791:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3773:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_userDeposite_$1702_storage",
																"typeString": "struct ITimeMarket.userDeposite storage ref"
															}
														},
														"id": 328,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3803:9:0",
														"memberName": "startTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1693,
														"src": "3773:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint56",
															"typeString": "uint56"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"baseExpression": {
																"id": 329,
																"name": "_tradeMes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 58,
																"src": "3813:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_tradeMes_$1689_storage_$",
																	"typeString": "mapping(uint32 => struct ITimeMarket.tradeMes storage ref)"
																}
															},
															"id": 331,
															"indexExpression": {
																"id": 330,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 16,
																"src": "3823:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3813:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_tradeMes_$1689_storage",
																"typeString": "struct ITimeMarket.tradeMes storage ref"
															}
														},
														"id": 332,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3827:4:0",
														"memberName": "time",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1675,
														"src": "3813:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint56",
															"typeString": "uint56"
														}
													},
													"src": "3773:58:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint56",
														"typeString": "uint56"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "3773:58:0"
											},
											{
												"expression": {
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 335,
																	"name": "_userDeposite",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "3842:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint32_$_t_mapping$_t_address_$_t_struct$_userDeposite_$1702_storage_$_$",
																		"typeString": "mapping(uint32 => mapping(address => struct ITimeMarket.userDeposite storage ref))"
																	}
																},
																"id": 339,
																"indexExpression": {
																	"id": 336,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "3856:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3842:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_userDeposite_$1702_storage_$",
																	"typeString": "mapping(address => struct ITimeMarket.userDeposite storage ref)"
																}
															},
															"id": 340,
															"indexExpression": {
																"expression": {
																	"id": 337,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3860:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 338,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3864:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3860:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3842:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_userDeposite_$1702_storage",
																"typeString": "struct ITimeMarket.userDeposite storage ref"
															}
														},
														"id": 341,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3872:7:0",
														"memberName": "endTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1695,
														"src": "3842:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint56",
															"typeString": "uint56"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 342,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3880:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3842:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint56",
														"typeString": "uint56"
													}
												},
												"id": 344,
												"nodeType": "ExpressionStatement",
												"src": "3842:39:0"
											},
											{
												"expression": {
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 345,
																	"name": "_userDeposite",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "3892:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint32_$_t_mapping$_t_address_$_t_struct$_userDeposite_$1702_storage_$_$",
																		"typeString": "mapping(uint32 => mapping(address => struct ITimeMarket.userDeposite storage ref))"
																	}
																},
																"id": 349,
																"indexExpression": {
																	"id": 346,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "3906:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3892:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_userDeposite_$1702_storage_$",
																	"typeString": "mapping(address => struct ITimeMarket.userDeposite storage ref)"
																}
															},
															"id": 350,
															"indexExpression": {
																"expression": {
																	"id": 347,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3910:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 348,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3914:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3910:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3892:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_userDeposite_$1702_storage",
																"typeString": "struct ITimeMarket.userDeposite storage ref"
															}
														},
														"id": 351,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3922:14:0",
														"memberName": "depositeAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1697,
														"src": "3892:44:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 352,
														"name": "total",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 136,
														"src": "3937:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3892:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 354,
												"nodeType": "ExpressionStatement",
												"src": "3892:50:0"
											},
											{
												"expression": {
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 355,
																	"name": "_userDeposite",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "3953:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint32_$_t_mapping$_t_address_$_t_struct$_userDeposite_$1702_storage_$_$",
																		"typeString": "mapping(uint32 => mapping(address => struct ITimeMarket.userDeposite storage ref))"
																	}
																},
																"id": 359,
																"indexExpression": {
																	"id": 356,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "3967:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3953:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_userDeposite_$1702_storage_$",
																	"typeString": "mapping(address => struct ITimeMarket.userDeposite storage ref)"
																}
															},
															"id": 360,
															"indexExpression": {
																"expression": {
																	"id": 357,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3971:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 358,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3975:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3971:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3953:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_userDeposite_$1702_storage",
																"typeString": "struct ITimeMarket.userDeposite storage ref"
															}
														},
														"id": 361,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3983:10:0",
														"memberName": "earnAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1699,
														"src": "3953:40:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 362,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3994:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3953:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 364,
												"nodeType": "ExpressionStatement",
												"src": "3953:42:0"
											},
											{
												"expression": {
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 365,
																	"name": "_userDeposite",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "4006:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint32_$_t_mapping$_t_address_$_t_struct$_userDeposite_$1702_storage_$_$",
																		"typeString": "mapping(uint32 => mapping(address => struct ITimeMarket.userDeposite storage ref))"
																	}
																},
																"id": 369,
																"indexExpression": {
																	"id": 366,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "4020:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4006:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_userDeposite_$1702_storage_$",
																	"typeString": "mapping(address => struct ITimeMarket.userDeposite storage ref)"
																}
															},
															"id": 370,
															"indexExpression": {
																"expression": {
																	"id": 367,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4024:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 368,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4028:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4024:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4006:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_userDeposite_$1702_storage",
																"typeString": "struct ITimeMarket.userDeposite storage ref"
															}
														},
														"id": 371,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4036:4:0",
														"memberName": "user",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1701,
														"src": "4006:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 372,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "4041:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 373,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4045:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "4041:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4006:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 375,
												"nodeType": "ExpressionStatement",
												"src": "4006:45:0"
											},
											{
												"expression": {
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 376,
														"name": "totalStable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "4132:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 377,
														"name": "total",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 136,
														"src": "4145:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4132:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "4132:18:0"
											},
											{
												"expression": {
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "4161:4:0",
													"subExpression": {
														"id": 380,
														"name": "id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "4161:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 382,
												"nodeType": "ExpressionStatement",
												"src": "4161:4:0"
											}
										]
									},
									"functionSelector": "8acd6272",
									"id": 384,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "putTrade",
									"nameLocation": "1963:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nameLocation": "1980:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "1972:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1972:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "2001:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "1994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 112,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1994:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2016:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "2008:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 114,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "_doState",
												"nameLocation": "2032:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "2024:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_doState_$1663",
													"typeString": "enum ITimeMarket.doState"
												},
												"typeName": {
													"id": 117,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 116,
														"name": "doState",
														"nameLocations": [
															"2024:7:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1663,
														"src": "2024:7:0"
													},
													"referencedDeclaration": 1663,
													"src": "2024:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_doState_$1663",
														"typeString": "enum ITimeMarket.doState"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1971:70:0"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2049:0:0"
									},
									"scope": 645,
									"src": "1954:2219:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 576,
										"nodeType": "Block",
										"src": "4241:1691:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 389,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "4306:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 390,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4312:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "4306:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint56",
															"typeString": "uint56"
														},
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 391,
															"name": "clearingTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "4322:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint56",
																"typeString": "uint56"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"hexValue": "31",
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4335:6:0",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_86400_by_1",
																"typeString": "int_const 86400"
															},
															"value": "1"
														},
														"src": "4322:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint56",
															"typeString": "uint56"
														}
													},
													"src": "4306:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 399,
												"nodeType": "IfStatement",
												"src": "4303:59:0",
												"trueBody": {
													"id": 398,
													"nodeType": "Block",
													"src": "4342:20:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 395,
																	"name": "OverTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1710,
																	"src": "4350:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 396,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4350:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 397,
															"nodeType": "RevertStatement",
															"src": "4343:17:0"
														}
													]
												}
											},
											{
												"assignments": [
													402
												],
												"declarations": [
													{
														"constant": false,
														"id": 402,
														"mutability": "mutable",
														"name": "maxTradeMes",
														"nameLocation": "4388:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 576,
														"src": "4372:27:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_tradeMes_$1689_memory_ptr",
															"typeString": "struct ITimeMarket.tradeMes"
														},
														"typeName": {
															"id": 401,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 400,
																"name": "tradeMes",
																"nameLocations": [
																	"4372:8:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1689,
																"src": "4372:8:0"
															},
															"referencedDeclaration": 1689,
															"src": "4372:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_tradeMes_$1689_storage_ptr",
																"typeString": "struct ITimeMarket.tradeMes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 406,
												"initialValue": {
													"baseExpression": {
														"id": 403,
														"name": "_tradeMes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 58,
														"src": "4400:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_tradeMes_$1689_storage_$",
															"typeString": "mapping(uint32 => struct ITimeMarket.tradeMes storage ref)"
														}
													},
													"id": 405,
													"indexExpression": {
														"id": 404,
														"name": "_id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "4410:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4400:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_tradeMes_$1689_storage",
														"typeString": "struct ITimeMarket.tradeMes storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4372:42:0"
											},
											{
												"assignments": [
													408
												],
												"declarations": [
													{
														"constant": false,
														"id": 408,
														"mutability": "mutable",
														"name": "_tokenAddress",
														"nameLocation": "4433:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 576,
														"src": "4425:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 407,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4425:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 411,
												"initialValue": {
													"expression": {
														"id": 409,
														"name": "maxTradeMes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 402,
														"src": "4447:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_tradeMes_$1689_memory_ptr",
															"typeString": "struct ITimeMarket.tradeMes memory"
														}
													},
													"id": 410,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4459:12:0",
													"memberName": "tokenAddress",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1681,
													"src": "4447:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4425:46:0"
											},
											{
												"assignments": [
													413
												],
												"declarations": [
													{
														"constant": false,
														"id": 413,
														"mutability": "mutable",
														"name": "_tokenOneAmount",
														"nameLocation": "4490:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 576,
														"src": "4482:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 412,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4482:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 416,
												"initialValue": {
													"expression": {
														"id": 414,
														"name": "maxTradeMes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 402,
														"src": "4506:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_tradeMes_$1689_memory_ptr",
															"typeString": "struct ITimeMarket.tradeMes memory"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4518:14:0",
													"memberName": "tokenOneAmount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1679,
													"src": "4506:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4482:50:0"
											},
											{
												"assignments": [
													418
												],
												"declarations": [
													{
														"constant": false,
														"id": 418,
														"mutability": "mutable",
														"name": "total",
														"nameLocation": "4551:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 576,
														"src": "4543:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 417,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4543:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 427,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 421,
																"name": "maxTradeMes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 402,
																"src": "4584:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_tradeMes_$1689_memory_ptr",
																	"typeString": "struct ITimeMarket.tradeMes memory"
																}
															},
															"id": 422,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4596:5:0",
															"memberName": "price",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1673,
															"src": "4584:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														{
															"expression": {
																"id": 423,
																"name": "maxTradeMes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 402,
																"src": "4602:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_tradeMes_$1689_memory_ptr",
																	"typeString": "struct ITimeMarket.tradeMes memory"
																}
															},
															"id": 424,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4614:6:0",
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1677,
															"src": "4602:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														{
															"id": 425,
															"name": "_tokenOneAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "4621:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 419,
															"name": "TimeLibrary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2977,
															"src": "4557:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TimeLibrary_$2977_$",
																"typeString": "type(library TimeLibrary)"
															}
														},
														"id": 420,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4569:14:0",
														"memberName": "getTotalStable",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2976,
														"src": "4557:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint32_$_t_uint128_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint32,uint128,uint256) pure returns (uint256)"
														}
													},
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4557:80:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4543:94:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 432,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4728:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4732:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4728:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 436,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4761:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TimeMarket_$645",
																		"typeString": "contract TimeMarket"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TimeMarket_$645",
																		"typeString": "contract TimeMarket"
																	}
																],
																"id": 435,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4753:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 434,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4753:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4753:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 438,
															"name": "total",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 418,
															"src": "4781:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 429,
																	"name": "_tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 408,
																	"src": "4682:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 428,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1571,
																"src": "4675:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1571_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4675:21:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1571",
																"typeString": "contract IERC20"
															}
														},
														"id": 431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4697:16:0",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2498,
														"src": "4675:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1571_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$1571_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4675:122:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 440,
												"nodeType": "ExpressionStatement",
												"src": "4675:122:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 447,
																	"name": "AaveV3Pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 38,
																	"src": "4883:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IPool_$1284",
																		"typeString": "contract IPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IPool_$1284",
																		"typeString": "contract IPool"
																	}
																],
																"id": 446,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4875:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 445,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4875:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4875:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 449,
															"name": "total",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 418,
															"src": "4895:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 442,
																	"name": "_tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 408,
																	"src": "4852:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 441,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1571,
																"src": "4845:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1571_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 443,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4845:21:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1571",
																"typeString": "contract IERC20"
															}
														},
														"id": 444,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4867:7:0",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1558,
														"src": "4845:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4845:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 451,
												"nodeType": "ExpressionStatement",
												"src": "4845:56:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 455,
															"name": "_tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "4972:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 456,
															"name": "total",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 418,
															"src": "5029:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 459,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5086:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TimeMarket_$645",
																		"typeString": "contract TimeMarket"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TimeMarket_$645",
																		"typeString": "contract TimeMarket"
																	}
																],
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5078:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 457,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5078:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5078:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 461,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5134:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"id": 452,
															"name": "AaveV3Pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 38,
															"src": "4940:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IPool_$1284",
																"typeString": "contract IPool"
															}
														},
														"id": 454,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4951:6:0",
														"memberName": "supply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 869,
														"src": "4940:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint16_$returns$__$",
															"typeString": "function (address,uint256,address,uint16) external"
														}
													},
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4940:248:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 463,
												"nodeType": "ExpressionStatement",
												"src": "4940:248:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_tradeState_$1669",
														"typeString": "enum ITimeMarket.tradeState"
													},
													"id": 468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 464,
															"name": "maxTradeMes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "5202:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_tradeMes_$1689_memory_ptr",
																"typeString": "struct ITimeMarket.tradeMes memory"
															}
														},
														"id": 465,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5214:11:0",
														"memberName": "_tradeState",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1688,
														"src": "5202:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_tradeState_$1669",
															"typeString": "enum ITimeMarket.tradeState"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 466,
															"name": "tradeState",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1669,
															"src": "5227:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_tradeState_$1669_$",
																"typeString": "type(enum ITimeMarket.tradeState)"
															}
														},
														"id": 467,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5238:6:0",
														"memberName": "buying",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1664,
														"src": "5227:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_tradeState_$1669",
															"typeString": "enum ITimeMarket.tradeState"
														}
													},
													"src": "5202:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_tradeState_$1669",
															"typeString": "enum ITimeMarket.tradeState"
														},
														"id": 482,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 478,
																"name": "maxTradeMes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 402,
																"src": "5319:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_tradeMes_$1689_memory_ptr",
																	"typeString": "struct ITimeMarket.tradeMes memory"
																}
															},
															"id": 479,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5331:11:0",
															"memberName": "_tradeState",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1688,
															"src": "5319:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_tradeState_$1669",
																"typeString": "enum ITimeMarket.tradeState"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 480,
																"name": "tradeState",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1669,
																"src": "5344:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_tradeState_$1669_$",
																	"typeString": "type(enum ITimeMarket.tradeState)"
																}
															},
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "5355:7:0",
															"memberName": "selling",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1665,
															"src": "5344:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_tradeState_$1669",
																"typeString": "enum ITimeMarket.tradeState"
															}
														},
														"src": "5319:43:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 496,
														"nodeType": "Block",
														"src": "5432:48:0",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "5472616465206572726f72",
																			"id": 493,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5454:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_ca426bfa2827fefdeedc7111ec0137f2bf107ae237d1f8e770fa1907804c1b32",
																				"typeString": "literal_string \"Trade error\""
																			},
																			"value": "Trade error"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_ca426bfa2827fefdeedc7111ec0137f2bf107ae237d1f8e770fa1907804c1b32",
																				"typeString": "literal_string \"Trade error\""
																			}
																		],
																		"id": 492,
																		"name": "revert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967277,
																			4294967277
																		],
																		"referencedDeclaration": 4294967277,
																		"src": "5447:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (string memory) pure"
																		}
																	},
																	"id": 494,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5447:21:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 495,
																"nodeType": "ExpressionStatement",
																"src": "5447:21:0"
															}
														]
													},
													"id": 497,
													"nodeType": "IfStatement",
													"src": "5316:164:0",
													"trueBody": {
														"id": 491,
														"nodeType": "Block",
														"src": "5363:65:0",
														"statements": [
															{
																"expression": {
																	"id": 489,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"expression": {
																			"baseExpression": {
																				"id": 483,
																				"name": "_tradeMes",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 58,
																				"src": "5378:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_tradeMes_$1689_storage_$",
																					"typeString": "mapping(uint32 => struct ITimeMarket.tradeMes storage ref)"
																				}
																			},
																			"id": 485,
																			"indexExpression": {
																				"id": 484,
																				"name": "_id",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "5388:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5378:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_tradeMes_$1689_storage",
																				"typeString": "struct ITimeMarket.tradeMes storage ref"
																			}
																		},
																		"id": 486,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberLocation": "5393:12:0",
																		"memberName": "buyerAddress",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1683,
																		"src": "5378:27:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"expression": {
																			"id": 487,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5406:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 488,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5410:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "5406:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "5378:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 490,
																"nodeType": "ExpressionStatement",
																"src": "5378:38:0"
															}
														]
													}
												},
												"id": 498,
												"nodeType": "IfStatement",
												"src": "5199:281:0",
												"trueBody": {
													"id": 477,
													"nodeType": "Block",
													"src": "5245:66:0",
													"statements": [
														{
															"expression": {
																"id": 475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 469,
																			"name": "_tradeMes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 58,
																			"src": "5260:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_tradeMes_$1689_storage_$",
																				"typeString": "mapping(uint32 => struct ITimeMarket.tradeMes storage ref)"
																			}
																		},
																		"id": 471,
																		"indexExpression": {
																			"id": 470,
																			"name": "_id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 386,
																			"src": "5270:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5260:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_tradeMes_$1689_storage",
																			"typeString": "struct ITimeMarket.tradeMes storage ref"
																		}
																	},
																	"id": 472,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5275:13:0",
																	"memberName": "solderAddress",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1685,
																	"src": "5260:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 473,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "5289:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 474,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5293:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "5289:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5260:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 476,
															"nodeType": "ExpressionStatement",
															"src": "5260:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 499,
																"name": "_tradeMes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 58,
																"src": "5500:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_tradeMes_$1689_storage_$",
																	"typeString": "mapping(uint32 => struct ITimeMarket.tradeMes storage ref)"
																}
															},
															"id": 501,
															"indexExpression": {
																"id": 500,
																"name": "_id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 386,
																"src": "5510:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5500:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_tradeMes_$1689_storage",
																"typeString": "struct ITimeMarket.tradeMes storage ref"
															}
														},
														"id": 502,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5515:11:0",
														"memberName": "_tradeState",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1688,
														"src": "5500:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_tradeState_$1669",
															"typeString": "enum ITimeMarket.tradeState"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 503,
															"name": "tradeState",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1669,
															"src": "5527:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_tradeState_$1669_$",
																"typeString": "type(enum ITimeMarket.tradeState)"
															}
														},
														"id": 504,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5538:5:0",
														"memberName": "found",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1666,
														"src": "5527:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_tradeState_$1669",
															"typeString": "enum ITimeMarket.tradeState"
														}
													},
													"src": "5500:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_tradeState_$1669",
														"typeString": "enum ITimeMarket.tradeState"
													}
												},
												"id": 506,
												"nodeType": "ExpressionStatement",
												"src": "5500:43:0"
											},
											{
												"expression": {
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 507,
																	"name": "_userDeposite",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "5554:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint32_$_t_mapping$_t_address_$_t_struct$_userDeposite_$1702_storage_$_$",
																		"typeString": "mapping(uint32 => mapping(address => struct ITimeMarket.userDeposite storage ref))"
																	}
																},
																"id": 511,
																"indexExpression": {
																	"id": 508,
																	"name": "_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 386,
																	"src": "5568:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5554:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_userDeposite_$1702_storage_$",
																	"typeString": "mapping(address => struct ITimeMarket.userDeposite storage ref)"
																}
															},
															"id": 512,
															"indexExpression": {
																"expression": {
																	"id": 509,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5573:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5577:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5573:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5554:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_userDeposite_$1702_storage",
																"typeString": "struct ITimeMarket.userDeposite storage ref"
															}
														},
														"id": 513,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5585:7:0",
														"memberName": "tradeId",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1691,
														"src": "5554:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 514,
														"name": "_id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "5593:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "5554:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 516,
												"nodeType": "ExpressionStatement",
												"src": "5554:42:0"
											},
											{
												"expression": {
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 517,
																	"name": "_userDeposite",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "5607:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint32_$_t_mapping$_t_address_$_t_struct$_userDeposite_$1702_storage_$_$",
																		"typeString": "mapping(uint32 => mapping(address => struct ITimeMarket.userDeposite storage ref))"
																	}
																},
																"id": 521,
																"indexExpression": {
																	"id": 518,
																	"name": "_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 386,
																	"src": "5621:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5607:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_userDeposite_$1702_storage_$",
																	"typeString": "mapping(address => struct ITimeMarket.userDeposite storage ref)"
																}
															},
															"id": 522,
															"indexExpression": {
																"expression": {
																	"id": 519,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5626:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 520,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5630:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5626:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5607:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_userDeposite_$1702_storage",
																"typeString": "struct ITimeMarket.userDeposite storage ref"
															}
														},
														"id": 523,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5638:9:0",
														"memberName": "startTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1693,
														"src": "5607:40:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint56",
															"typeString": "uint56"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 526,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "5655:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 527,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5661:9:0",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "5655:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 525,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5648:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint56_$",
																"typeString": "type(uint56)"
															},
															"typeName": {
																"id": 524,
																"name": "uint56",
																"nodeType": "ElementaryTypeName",
																"src": "5648:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 528,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5648:23:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint56",
															"typeString": "uint56"
														}
													},
													"src": "5607:64:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint56",
														"typeString": "uint56"
													}
												},
												"id": 530,
												"nodeType": "ExpressionStatement",
												"src": "5607:64:0"
											},
											{
												"expression": {
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 531,
																	"name": "_userDeposite",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "5682:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint32_$_t_mapping$_t_address_$_t_struct$_userDeposite_$1702_storage_$_$",
																		"typeString": "mapping(uint32 => mapping(address => struct ITimeMarket.userDeposite storage ref))"
																	}
																},
																"id": 535,
																"indexExpression": {
																	"id": 532,
																	"name": "_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 386,
																	"src": "5696:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5682:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_userDeposite_$1702_storage_$",
																	"typeString": "mapping(address => struct ITimeMarket.userDeposite storage ref)"
																}
															},
															"id": 536,
															"indexExpression": {
																"expression": {
																	"id": 533,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5701:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 534,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5705:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5701:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5682:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_userDeposite_$1702_storage",
																"typeString": "struct ITimeMarket.userDeposite storage ref"
															}
														},
														"id": 537,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5713:7:0",
														"memberName": "endTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1695,
														"src": "5682:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint56",
															"typeString": "uint56"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 538,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5721:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5682:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint56",
														"typeString": "uint56"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "5682:40:0"
											},
											{
												"expression": {
													"id": 549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 541,
																	"name": "_userDeposite",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "5733:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint32_$_t_mapping$_t_address_$_t_struct$_userDeposite_$1702_storage_$_$",
																		"typeString": "mapping(uint32 => mapping(address => struct ITimeMarket.userDeposite storage ref))"
																	}
																},
																"id": 545,
																"indexExpression": {
																	"id": 542,
																	"name": "_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 386,
																	"src": "5747:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5733:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_userDeposite_$1702_storage_$",
																	"typeString": "mapping(address => struct ITimeMarket.userDeposite storage ref)"
																}
															},
															"id": 546,
															"indexExpression": {
																"expression": {
																	"id": 543,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5752:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 544,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5756:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5752:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5733:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_userDeposite_$1702_storage",
																"typeString": "struct ITimeMarket.userDeposite storage ref"
															}
														},
														"id": 547,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5764:14:0",
														"memberName": "depositeAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1697,
														"src": "5733:45:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 548,
														"name": "total",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 418,
														"src": "5779:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5733:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 550,
												"nodeType": "ExpressionStatement",
												"src": "5733:51:0"
											},
											{
												"expression": {
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 551,
																	"name": "_userDeposite",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "5795:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint32_$_t_mapping$_t_address_$_t_struct$_userDeposite_$1702_storage_$_$",
																		"typeString": "mapping(uint32 => mapping(address => struct ITimeMarket.userDeposite storage ref))"
																	}
																},
																"id": 555,
																"indexExpression": {
																	"id": 552,
																	"name": "_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 386,
																	"src": "5809:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5795:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_userDeposite_$1702_storage_$",
																	"typeString": "mapping(address => struct ITimeMarket.userDeposite storage ref)"
																}
															},
															"id": 556,
															"indexExpression": {
																"expression": {
																	"id": 553,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5814:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 554,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5818:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5814:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5795:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_userDeposite_$1702_storage",
																"typeString": "struct ITimeMarket.userDeposite storage ref"
															}
														},
														"id": 557,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5826:10:0",
														"memberName": "earnAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1699,
														"src": "5795:41:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5837:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5795:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 560,
												"nodeType": "ExpressionStatement",
												"src": "5795:43:0"
											},
											{
												"expression": {
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 561,
																	"name": "_userDeposite",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "5849:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint32_$_t_mapping$_t_address_$_t_struct$_userDeposite_$1702_storage_$_$",
																		"typeString": "mapping(uint32 => mapping(address => struct ITimeMarket.userDeposite storage ref))"
																	}
																},
																"id": 565,
																"indexExpression": {
																	"id": 562,
																	"name": "_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 386,
																	"src": "5863:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5849:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_userDeposite_$1702_storage_$",
																	"typeString": "mapping(address => struct ITimeMarket.userDeposite storage ref)"
																}
															},
															"id": 566,
															"indexExpression": {
																"expression": {
																	"id": 563,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5868:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 564,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5872:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5868:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5849:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_userDeposite_$1702_storage",
																"typeString": "struct ITimeMarket.userDeposite storage ref"
															}
														},
														"id": 567,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5880:4:0",
														"memberName": "user",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1701,
														"src": "5849:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 568,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "5885:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 569,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5889:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "5885:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5849:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 571,
												"nodeType": "ExpressionStatement",
												"src": "5849:46:0"
											},
											{
												"expression": {
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 572,
														"name": "totalStable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "5906:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 573,
														"name": "total",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 418,
														"src": "5919:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5906:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 575,
												"nodeType": "ExpressionStatement",
												"src": "5906:18:0"
											}
										]
									},
									"functionSelector": "b7252e8f",
									"id": 577,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "matchTrade",
									"nameLocation": "4210:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "4228:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "4221:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 385,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "4221:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4220:12:0"
									},
									"returnParameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4241:0:0"
									},
									"scope": 645,
									"src": "4201:1731:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 582,
										"nodeType": "Block",
										"src": "6000:18:0",
										"statements": []
									},
									"functionSelector": "1b92468d",
									"id": 583,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cancelOrder",
									"nameLocation": "5969:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "5988:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "5981:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 578,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "5981:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5980:12:0"
									},
									"returnParameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6000:0:0"
									},
									"scope": 645,
									"src": "5960:58:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 588,
										"nodeType": "Block",
										"src": "6107:18:0",
										"statements": []
									},
									"functionSelector": "1c48c074",
									"id": 589,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "refund",
									"nameLocation": "6081:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "6095:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "6088:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 584,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "6088:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6087:12:0"
									},
									"returnParameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6107:0:0"
									},
									"scope": 645,
									"src": "6072:53:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "6234:53:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 596,
															"name": "_tradeMes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 58,
															"src": "6252:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_tradeMes_$1689_storage_$",
																"typeString": "mapping(uint32 => struct ITimeMarket.tradeMes storage ref)"
															}
														},
														"id": 598,
														"indexExpression": {
															"id": 597,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 591,
															"src": "6262:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6252:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_tradeMes_$1689_storage",
															"typeString": "struct ITimeMarket.tradeMes storage ref"
														}
													},
													"id": 599,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6267:12:0",
													"memberName": "buyerAddress",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1683,
													"src": "6252:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 595,
												"id": 600,
												"nodeType": "Return",
												"src": "6245:34:0"
											}
										]
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBuyer",
									"nameLocation": "6185:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "6201:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "6194:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 590,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "6194:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6193:12:0"
									},
									"returnParameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "6226:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6226:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6225:9:0"
									},
									"scope": 645,
									"src": "6176:111:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 614,
										"nodeType": "Block",
										"src": "6394:54:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 609,
															"name": "_tradeMes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 58,
															"src": "6412:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_tradeMes_$1689_storage_$",
																"typeString": "mapping(uint32 => struct ITimeMarket.tradeMes storage ref)"
															}
														},
														"id": 611,
														"indexExpression": {
															"id": 610,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "6422:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6412:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_tradeMes_$1689_storage",
															"typeString": "struct ITimeMarket.tradeMes storage ref"
														}
													},
													"id": 612,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6427:13:0",
													"memberName": "solderAddress",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1685,
													"src": "6412:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 608,
												"id": 613,
												"nodeType": "Return",
												"src": "6405:35:0"
											}
										]
									},
									"id": 615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSolder",
									"nameLocation": "6344:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "6361:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "6354:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 603,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "6354:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6353:12:0"
									},
									"returnParameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "6386:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6386:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6385:9:0"
									},
									"scope": 645,
									"src": "6335:113:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 627,
										"nodeType": "Block",
										"src": "6563:40:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 623,
														"name": "_tradeMes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 58,
														"src": "6581:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_tradeMes_$1689_storage_$",
															"typeString": "mapping(uint32 => struct ITimeMarket.tradeMes storage ref)"
														}
													},
													"id": 625,
													"indexExpression": {
														"id": 624,
														"name": "_id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 617,
														"src": "6591:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6581:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_tradeMes_$1689_storage",
														"typeString": "struct ITimeMarket.tradeMes storage ref"
													}
												},
												"functionReturnParameters": 622,
												"id": 626,
												"nodeType": "Return",
												"src": "6574:21:0"
											}
										]
									},
									"functionSelector": "b9eb8992",
									"id": 628,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTradeMes",
									"nameLocation": "6502:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "6521:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "6514:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 616,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "6514:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6513:12:0"
									},
									"returnParameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "6547:15:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_tradeMes_$1689_memory_ptr",
													"typeString": "struct ITimeMarket.tradeMes"
												},
												"typeName": {
													"id": 620,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 619,
														"name": "tradeMes",
														"nameLocations": [
															"6547:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1689,
														"src": "6547:8:0"
													},
													"referencedDeclaration": 1689,
													"src": "6547:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_tradeMes_$1689_storage_ptr",
														"typeString": "struct ITimeMarket.tradeMes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6546:17:0"
									},
									"scope": 645,
									"src": "6493:110:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 635,
										"nodeType": "Block",
										"src": "6698:36:0",
										"statements": [
											{
												"expression": {
													"id": 633,
													"name": "rewardPool",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 24,
													"src": "6716:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 632,
												"id": 634,
												"nodeType": "Return",
												"src": "6709:17:0"
											}
										]
									},
									"functionSelector": "845a51ec",
									"id": 636,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rewardPoolAddress",
									"nameLocation": "6649:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6666:2:0"
									},
									"returnParameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "6690:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 630,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6690:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6689:9:0"
									},
									"scope": 645,
									"src": "6640:94:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 643,
										"nodeType": "Block",
										"src": "6829:38:0",
										"statements": [
											{
												"expression": {
													"id": 641,
													"name": "clearingTime",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 18,
													"src": "6847:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint56",
														"typeString": "uint56"
													}
												},
												"functionReturnParameters": 640,
												"id": 642,
												"nodeType": "Return",
												"src": "6840:19:0"
											}
										]
									},
									"functionSelector": "cd83432d",
									"id": 644,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getClearTime",
									"nameLocation": "6786:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6798:2:0"
									},
									"returnParameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "6822:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint56",
													"typeString": "uint56"
												},
												"typeName": {
													"id": 638,
													"name": "uint56",
													"nodeType": "ElementaryTypeName",
													"src": "6822:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint56",
														"typeString": "uint56"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6821:8:0"
									},
									"scope": 645,
									"src": "6777:90:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 646,
							"src": "442:6430:0",
							"usedErrors": [
								1704,
								1706,
								1708,
								1710,
								1712,
								1714,
								1716,
								1718,
								1720,
								1722,
								1724,
								1726
							]
						}
					],
					"src": "31:6841:0"
				},
				"id": 0
			},
			"interfaces/AaveV3/IPool.sol": {
				"ast": {
					"absolutePath": "interfaces/AaveV3/IPool.sol",
					"exportedSymbols": {
						"DataTypes": [
							2435
						],
						"IPool": [
							1284
						],
						"IPoolAddressesProvider": [
							1493
						]
					},
					"id": 1285,
					"license": "AGPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 647,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "38:23:1"
						},
						{
							"absolutePath": "interfaces/AaveV3/IPoolAddressesProvider.sol",
							"file": "./IPoolAddressesProvider.sol",
							"id": 649,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1285,
							"sourceUnit": 1494,
							"src": "65:68:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 648,
										"name": "IPoolAddressesProvider",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1493,
										"src": "73:22:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "libraries/DataTypes.sol",
							"file": "../../libraries/DataTypes.sol",
							"id": 651,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1285,
							"sourceUnit": 2436,
							"src": "135:56:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 650,
										"name": "DataTypes",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2435,
										"src": "143:9:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPool",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 652,
								"nodeType": "StructuredDocumentation",
								"src": "195:100:1",
								"text": " @title IPool\n @author Aave\n @notice Defines the basic interface for an Aave Pool."
							},
							"fullyImplemented": false,
							"id": 1284,
							"linearizedBaseContracts": [
								1284
							],
							"name": "IPool",
							"nameLocation": "307:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 653,
										"nodeType": "StructuredDocumentation",
										"src": "318:356:1",
										"text": " @dev Emitted on mintUnbacked()\n @param reserve The address of the underlying asset of the reserve\n @param user The address initiating the supply\n @param onBehalfOf The beneficiary of the supplied assets, receiving the aTokens\n @param amount The amount of supplied assets\n @param referralCode The referral code used"
									},
									"eventSelector": "f25af37b3d3ec226063dc9bdc103ece7eb110a50f340fe854bb7bc1b0676d7d0",
									"id": 665,
									"name": "MintUnbacked",
									"nameLocation": "684:12:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 655,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "719:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "703:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 654,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "703:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 657,
												"indexed": false,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "741:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "733:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "733:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "768:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "752:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "752:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "793:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "785:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "785:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 663,
												"indexed": true,
												"mutability": "mutable",
												"name": "referralCode",
												"nameLocation": "821:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "806:27:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 662,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "806:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "696:142:1"
									},
									"src": "678:161:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 666,
										"nodeType": "StructuredDocumentation",
										"src": "845:263:1",
										"text": " @dev Emitted on backUnbacked()\n @param reserve The address of the underlying asset of the reserve\n @param backer The address paying for the backing\n @param amount The amount added as backing\n @param fee The amount paid in fees"
									},
									"eventSelector": "281596e92b2d974beb7d4f124df30a0b39067b096893e95011ce4bdad798b759",
									"id": 676,
									"name": "BackUnbacked",
									"nameLocation": "1118:12:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "1147:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "1131:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1131:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": true,
												"mutability": "mutable",
												"name": "backer",
												"nameLocation": "1172:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "1156:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 669,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1156:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 672,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1188:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "1180:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 671,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1180:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 674,
												"indexed": false,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "1204:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "1196:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1196:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1130:78:1"
									},
									"src": "1112:97:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 677,
										"nodeType": "StructuredDocumentation",
										"src": "1215:331:1",
										"text": " @dev Emitted on supply()\n @param reserve The address of the underlying asset of the reserve\n @param user The address initiating the supply\n @param onBehalfOf The beneficiary of the supply, receiving the aTokens\n @param amount The amount supplied\n @param referralCode The referral code used"
									},
									"eventSelector": "2b627736bca15cd5381dcf80b0bf11fd197d01a037c52b927a881a10fb73ba61",
									"id": 689,
									"name": "Supply",
									"nameLocation": "1556:6:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "1585:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "1569:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1569:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"indexed": false,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1607:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "1599:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1599:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 683,
												"indexed": true,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "1634:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "1618:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1618:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 685,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1659:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "1651:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1651:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 687,
												"indexed": true,
												"mutability": "mutable",
												"name": "referralCode",
												"nameLocation": "1687:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "1672:27:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 686,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1672:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1562:142:1"
									},
									"src": "1550:155:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 690,
										"nodeType": "StructuredDocumentation",
										"src": "1711:298:1",
										"text": " @dev Emitted on withdraw()\n @param reserve The address of the underlying asset being withdrawn\n @param user The address initiating the withdrawal, owner of aTokens\n @param to The address that will receive the underlying\n @param amount The amount to be withdrawn"
									},
									"eventSelector": "3115d1449a7b732c986cba18244e897a450f61e1bb8d589cd2e69e6c8924f9f7",
									"id": 700,
									"name": "Withdraw",
									"nameLocation": "2019:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 692,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "2044:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "2028:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2028:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 694,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2069:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "2053:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 693,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2053:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 696,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2091:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "2075:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2075:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 698,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2103:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "2095:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 697,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2095:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:83:1"
									},
									"src": "2013:98:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 701,
										"nodeType": "StructuredDocumentation",
										"src": "2117:638:1",
										"text": " @dev Emitted on borrow() and flashLoan() when debt needs to be opened\n @param reserve The address of the underlying asset being borrowed\n @param user The address of the user initiating the borrow(), receiving the funds on borrow() or just\n initiator of the transaction on flashLoan()\n @param onBehalfOf The address that will be getting the debt\n @param amount The amount borrowed out\n @param interestRateMode The rate mode: 1 for Stable, 2 for Variable\n @param borrowRate The numeric rate at which the user has borrowed, expressed in ray\n @param referralCode The referral code used"
									},
									"eventSelector": "b3d084820fb1a9decffb176436bd02558d15fac9b0ddfed8c465bc7359d7dce0",
									"id": 718,
									"name": "Borrow",
									"nameLocation": "2765:6:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 703,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "2794:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "2778:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 702,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2778:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 705,
												"indexed": false,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2816:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "2808:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2808:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"indexed": true,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "2843:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "2827:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2827:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "2860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2860:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 712,
												"indexed": false,
												"mutability": "mutable",
												"name": "interestRateMode",
												"nameLocation": "2908:16:1",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "2881:43:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_InterestRateMode_$2139",
													"typeString": "enum DataTypes.InterestRateMode"
												},
												"typeName": {
													"id": 711,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 710,
														"name": "DataTypes.InterestRateMode",
														"nameLocations": [
															"2881:9:1",
															"2891:16:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2139,
														"src": "2881:26:1"
													},
													"referencedDeclaration": 2139,
													"src": "2881:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_InterestRateMode_$2139",
														"typeString": "enum DataTypes.InterestRateMode"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 714,
												"indexed": false,
												"mutability": "mutable",
												"name": "borrowRate",
												"nameLocation": "2939:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "2931:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 713,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2931:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 716,
												"indexed": true,
												"mutability": "mutable",
												"name": "referralCode",
												"nameLocation": "2971:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "2956:27:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 715,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2956:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:217:1"
									},
									"src": "2759:230:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 719,
										"nodeType": "StructuredDocumentation",
										"src": "2995:432:1",
										"text": " @dev Emitted on repay()\n @param reserve The address of the underlying asset of the reserve\n @param user The beneficiary of the repayment, getting his debt reduced\n @param repayer The address of the user initiating the repay(), providing the funds\n @param amount The amount repaid\n @param useATokens True if the repayment is done using aTokens, `false` if done with underlying asset directly"
									},
									"eventSelector": "a534c8dbe71f871f9f3530e97a74601fea17b426cae02e1c5aee42c96c784051",
									"id": 731,
									"name": "Repay",
									"nameLocation": "3437:5:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 721,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "3465:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "3449:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3449:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3495:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "3479:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 722,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3479:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 725,
												"indexed": true,
												"mutability": "mutable",
												"name": "repayer",
												"nameLocation": "3522:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "3506:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3544:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "3536:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3536:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"indexed": false,
												"mutability": "mutable",
												"name": "useATokens",
												"nameLocation": "3562:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "3557:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 728,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3557:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3442:135:1"
									},
									"src": "3431:147:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 732,
										"nodeType": "StructuredDocumentation",
										"src": "3584:311:1",
										"text": " @dev Emitted on swapBorrowRateMode()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user swapping his rate mode\n @param interestRateMode The current interest rate mode of the position being swapped: 1 for Stable, 2 for Variable"
									},
									"eventSelector": "7962b394d85a534033ba2efcf43cd36de57b7ebeb3de0ca4428965d9b3ddc481",
									"id": 741,
									"name": "SwapBorrowRateMode",
									"nameLocation": "3905:18:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 734,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "3946:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "3930:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 733,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3930:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 736,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3976:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "3960:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 735,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3960:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 739,
												"indexed": false,
												"mutability": "mutable",
												"name": "interestRateMode",
												"nameLocation": "4014:16:1",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "3987:43:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_InterestRateMode_$2139",
													"typeString": "enum DataTypes.InterestRateMode"
												},
												"typeName": {
													"id": 738,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 737,
														"name": "DataTypes.InterestRateMode",
														"nameLocations": [
															"3987:9:1",
															"3997:16:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2139,
														"src": "3987:26:1"
													},
													"referencedDeclaration": 2139,
													"src": "3987:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_InterestRateMode_$2139",
														"typeString": "enum DataTypes.InterestRateMode"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3923:112:1"
									},
									"src": "3899:137:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 742,
										"nodeType": "StructuredDocumentation",
										"src": "4042:238:1",
										"text": " @dev Emitted on borrow(), repay() and liquidationCall() when using isolated assets\n @param asset The address of the underlying asset of the reserve\n @param totalDebt The total isolation mode debt for the reserve"
									},
									"eventSelector": "aef84d3b40895fd58c561f3998000f0583abb992a52fbdc99ace8e8de4d676a5",
									"id": 748,
									"name": "IsolationModeTotalDebtUpdated",
									"nameLocation": "4290:29:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"indexed": true,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "4336:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "4320:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4320:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 746,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalDebt",
												"nameLocation": "4351:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "4343:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4343:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4319:42:1"
									},
									"src": "4284:78:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "4368:168:1",
										"text": " @dev Emitted when the user selects a certain asset category for eMode\n @param user The address of the user\n @param categoryId The category id"
									},
									"eventSelector": "d728da875fc88944cbf17638bcbe4af0eedaef63becd1d1c57cc097eb4608d84",
									"id": 755,
									"name": "UserEModeSet",
									"nameLocation": "4546:12:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4575:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "4559:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 750,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4559:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 753,
												"indexed": false,
												"mutability": "mutable",
												"name": "categoryId",
												"nameLocation": "4587:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "4581:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 752,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4581:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4558:40:1"
									},
									"src": "4540:59:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 756,
										"nodeType": "StructuredDocumentation",
										"src": "4605:211:1",
										"text": " @dev Emitted on setUserUseReserveAsCollateral()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user enabling the usage as collateral"
									},
									"eventSelector": "00058a56ea94653cdf4f152d227ace22d4c00ad99e2a43f58cb7d9e3feb295f2",
									"id": 762,
									"name": "ReserveUsedAsCollateralEnabled",
									"nameLocation": "4826:30:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "4873:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "4857:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 757,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4857:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 760,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4898:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "4882:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 759,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4882:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4856:47:1"
									},
									"src": "4820:84:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 763,
										"nodeType": "StructuredDocumentation",
										"src": "4910:211:1",
										"text": " @dev Emitted on setUserUseReserveAsCollateral()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user enabling the usage as collateral"
									},
									"eventSelector": "44c58d81365b66dd4b1a7f36c25aa97b8c71c361ee4937adc1a00000227db5dd",
									"id": 769,
									"name": "ReserveUsedAsCollateralDisabled",
									"nameLocation": "5131:31:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "5179:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "5163:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5163:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "5204:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "5188:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5188:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5162:47:1"
									},
									"src": "5125:85:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 770,
										"nodeType": "StructuredDocumentation",
										"src": "5216:216:1",
										"text": " @dev Emitted on rebalanceStableBorrowRate()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user for which the rebalance has been executed"
									},
									"eventSelector": "9f439ae0c81e41a04d3fdfe07aed54e6a179fb0db15be7702eb66fa8ef6f5300",
									"id": 776,
									"name": "RebalanceStableBorrowRate",
									"nameLocation": "5442:25:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 772,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "5484:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "5468:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 771,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5468:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 774,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "5509:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "5493:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 773,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5493:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5467:47:1"
									},
									"src": "5436:79:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 777,
										"nodeType": "StructuredDocumentation",
										"src": "5521:491:1",
										"text": " @dev Emitted on flashLoan()\n @param target The address of the flash loan receiver contract\n @param initiator The address initiating the flash loan\n @param asset The address of the asset being flash borrowed\n @param amount The amount flash borrowed\n @param interestRateMode The flashloan mode: 0 for regular flashloan, 1 for Stable debt, 2 for Variable debt\n @param premium The fee flash borrowed\n @param referralCode The referral code used"
									},
									"eventSelector": "efefaba5e921573100900a3ad9cf29f222d995fb3b6045797eaea7521bd8d6f0",
									"id": 794,
									"name": "FlashLoan",
									"nameLocation": "6022:9:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"indexed": true,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6054:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "6038:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 778,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6038:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 781,
												"indexed": false,
												"mutability": "mutable",
												"name": "initiator",
												"nameLocation": "6075:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "6067:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 780,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6067:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 783,
												"indexed": true,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "6107:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "6091:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 782,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6091:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 785,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6127:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "6119:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6119:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 788,
												"indexed": false,
												"mutability": "mutable",
												"name": "interestRateMode",
												"nameLocation": "6167:16:1",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "6140:43:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_InterestRateMode_$2139",
													"typeString": "enum DataTypes.InterestRateMode"
												},
												"typeName": {
													"id": 787,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 786,
														"name": "DataTypes.InterestRateMode",
														"nameLocations": [
															"6140:9:1",
															"6150:16:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2139,
														"src": "6140:26:1"
													},
													"referencedDeclaration": 2139,
													"src": "6140:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_InterestRateMode_$2139",
														"typeString": "enum DataTypes.InterestRateMode"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 790,
												"indexed": false,
												"mutability": "mutable",
												"name": "premium",
												"nameLocation": "6198:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "6190:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6190:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 792,
												"indexed": true,
												"mutability": "mutable",
												"name": "referralCode",
												"nameLocation": "6227:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "6212:27:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 791,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "6212:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6031:213:1"
									},
									"src": "6016:229:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 795,
										"nodeType": "StructuredDocumentation",
										"src": "6251:759:1",
										"text": " @dev Emitted when a borrower is liquidated.\n @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\n @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\n @param user The address of the borrower getting liquidated\n @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\n @param liquidatedCollateralAmount The amount of collateral received by the liquidator\n @param liquidator The address of the liquidator\n @param receiveAToken True if the liquidators wants to receive the collateral aTokens, `false` if he wants\n to receive the underlying collateral asset directly"
									},
									"eventSelector": "e413a321e8681d831f4dbccbca790d2952b56f977908e45be37335533e005286",
									"id": 811,
									"name": "LiquidationCall",
									"nameLocation": "7020:15:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 797,
												"indexed": true,
												"mutability": "mutable",
												"name": "collateralAsset",
												"nameLocation": "7058:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "7042:31:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 796,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7042:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 799,
												"indexed": true,
												"mutability": "mutable",
												"name": "debtAsset",
												"nameLocation": "7096:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "7080:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 798,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7080:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 801,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "7128:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "7112:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 800,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7112:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 803,
												"indexed": false,
												"mutability": "mutable",
												"name": "debtToCover",
												"nameLocation": "7147:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "7139:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7139:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 805,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidatedCollateralAmount",
												"nameLocation": "7173:26:1",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "7165:34:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 804,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7165:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidator",
												"nameLocation": "7214:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "7206:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7206:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "receiveAToken",
												"nameLocation": "7236:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "7231:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 808,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7231:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7035:219:1"
									},
									"src": "7014:241:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "7261:429:1",
										"text": " @dev Emitted when the state of a reserve is updated.\n @param reserve The address of the underlying asset of the reserve\n @param liquidityRate The next liquidity rate\n @param stableBorrowRate The next stable borrow rate\n @param variableBorrowRate The next variable borrow rate\n @param liquidityIndex The next liquidity index\n @param variableBorrowIndex The next variable borrow index"
									},
									"eventSelector": "804c9b842b2748a22bb64b345453a3de7ca54a6ca45ce00d415894979e22897a",
									"id": 826,
									"name": "ReserveDataUpdated",
									"nameLocation": "7700:18:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "7741:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "7725:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7725:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidityRate",
												"nameLocation": "7763:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "7755:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 815,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7755:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "stableBorrowRate",
												"nameLocation": "7791:16:1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "7783:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7783:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 820,
												"indexed": false,
												"mutability": "mutable",
												"name": "variableBorrowRate",
												"nameLocation": "7822:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "7814:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 819,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7814:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 822,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidityIndex",
												"nameLocation": "7855:14:1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "7847:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 821,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7847:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 824,
												"indexed": false,
												"mutability": "mutable",
												"name": "variableBorrowIndex",
												"nameLocation": "7884:19:1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "7876:27:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7718:190:1"
									},
									"src": "7694:215:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "7915:215:1",
										"text": " @dev Emitted when the protocol treasury receives minted aTokens from the accrued interest.\n @param reserve The address of the reserve\n @param amountMinted The amount minted to the treasury"
									},
									"eventSelector": "bfa21aa5d5f9a1f0120a95e7c0749f389863cbdbfff531aa7339077a5bc919de",
									"id": 833,
									"name": "MintedToTreasury",
									"nameLocation": "8140:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "8173:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 833,
												"src": "8157:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8157:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountMinted",
												"nameLocation": "8190:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 833,
												"src": "8182:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 830,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8182:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8156:47:1"
									},
									"src": "8134:70:1"
								},
								{
									"documentation": {
										"id": 834,
										"nodeType": "StructuredDocumentation",
										"src": "8210:435:1",
										"text": " @notice Mints an `amount` of aTokens to the `onBehalfOf`\n @param asset The address of the underlying asset to mint\n @param amount The amount to mint\n @param onBehalfOf The address that will receive the aTokens\n @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man"
									},
									"functionSelector": "69a933a5",
									"id": 845,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mintUnbacked",
									"nameLocation": "8658:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "8685:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "8677:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 835,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8677:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8705:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "8697:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 837,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8697:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "8726:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "8718:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 839,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8718:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "referralCode",
												"nameLocation": "8750:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "8743:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 841,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "8743:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8670:97:1"
									},
									"returnParameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8776:0:1"
									},
									"scope": 1284,
									"src": "8649:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 846,
										"nodeType": "StructuredDocumentation",
										"src": "8783:265:1",
										"text": " @notice Back the current unbacked underlying with `amount` and pay `fee`.\n @param asset The address of the underlying asset to back\n @param amount The amount to back\n @param fee The amount paid in fees\n @return The backed amount"
									},
									"functionSelector": "d65dc7a1",
									"id": 857,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "backUnbacked",
									"nameLocation": "9061:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "9082:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "9074:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 847,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9074:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9097:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "9089:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 849,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9089:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "9113:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "9105:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9105:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9073:44:1"
									},
									"returnParameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "9136:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9136:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9135:9:1"
									},
									"scope": 1284,
									"src": "9052:93:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 858,
										"nodeType": "StructuredDocumentation",
										"src": "9151:722:1",
										"text": " @notice Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens.\n - E.g. User supplies 100 USDC and gets in return 100 aUSDC\n @param asset The address of the underlying asset to supply\n @param amount The amount to be supplied\n @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\n   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\n   is a different wallet\n @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man"
									},
									"functionSelector": "617ba037",
									"id": 869,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supply",
									"nameLocation": "9886:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "9901:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "9893:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 859,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9893:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9916:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "9908:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 861,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9908:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "9932:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "9924:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 863,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9924:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "referralCode",
												"nameLocation": "9951:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "9944:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 865,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "9944:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9892:72:1"
									},
									"returnParameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9973:0:1"
									},
									"scope": 1284,
									"src": "9877:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 870,
										"nodeType": "StructuredDocumentation",
										"src": "9980:976:1",
										"text": " @notice Supply with transfer approval of asset to be supplied done via permit function\n see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713\n @param asset The address of the underlying asset to supply\n @param amount The amount to be supplied\n @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\n   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\n   is a different wallet\n @param deadline The deadline timestamp that the permit is valid\n @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man\n @param permitV The V parameter of ERC712 permit sig\n @param permitR The R parameter of ERC712 permit sig\n @param permitS The S parameter of ERC712 permit sig"
									},
									"functionSelector": "02c205f0",
									"id": 889,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supplyWithPermit",
									"nameLocation": "10969:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "11000:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "10992:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 871,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10992:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11020:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "11012:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "11041:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "11033:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 875,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "referralCode",
												"nameLocation": "11065:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "11058:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 877,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "11058:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "11092:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "11084:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 879,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11084:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "permitV",
												"nameLocation": "11113:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "11107:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 881,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "11107:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "permitR",
												"nameLocation": "11135:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "11127:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 883,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "11127:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "permitS",
												"nameLocation": "11157:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "11149:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 885,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "11149:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10985:184:1"
									},
									"returnParameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11178:0:1"
									},
									"scope": 1284,
									"src": "10960:219:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 890,
										"nodeType": "StructuredDocumentation",
										"src": "11185:681:1",
										"text": " @notice Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned\n E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC\n @param asset The address of the underlying asset to withdraw\n @param amount The underlying amount to be withdrawn\n   - Send the value type(uint256).max in order to withdraw the whole aToken balance\n @param to The address that will receive the underlying, same as msg.sender if the user\n   wants to receive it on his own wallet, or a different address if the beneficiary is a\n   different wallet\n @return The final amount withdrawn"
									},
									"functionSelector": "69328dec",
									"id": 901,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "11879:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 892,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "11896:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "11888:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 891,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11888:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11911:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "11903:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 893,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11927:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "11919:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 895,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11919:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11887:43:1"
									},
									"returnParameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "11949:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11949:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11948:9:1"
									},
									"scope": 1284,
									"src": "11870:88:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 902,
										"nodeType": "StructuredDocumentation",
										"src": "11964:1212:1",
										"text": " @notice Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower\n already supplied enough collateral, or he was given enough allowance by a credit delegator on the\n corresponding debt token (StableDebtToken or VariableDebtToken)\n - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet\n   and 100 stable/variable debt tokens, depending on the `interestRateMode`\n @param asset The address of the underlying asset to borrow\n @param amount The amount to be borrowed\n @param interestRateMode The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable\n @param referralCode The code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man\n @param onBehalfOf The address of the user who will receive the debt. Should be the address of the borrower itself\n calling the function if he wants to borrow against his own collateral, or the address of the credit delegator\n if he has been given credit delegation allowance"
									},
									"functionSelector": "a415bcad",
									"id": 915,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "borrow",
									"nameLocation": "13189:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "13210:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "13202:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 903,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13202:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13230:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "13222:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13222:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "interestRateMode",
												"nameLocation": "13251:16:1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "13243:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13243:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "referralCode",
												"nameLocation": "13281:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "13274:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 909,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "13274:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "13308:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "13300:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 911,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13300:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13195:128:1"
									},
									"returnParameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13332:0:1"
									},
									"scope": 1284,
									"src": "13180:153:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 916,
										"nodeType": "StructuredDocumentation",
										"src": "13339:884:1",
										"text": " @notice Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned\n - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address\n @param asset The address of the borrowed underlying asset previously borrowed\n @param amount The amount to repay\n - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\n @param interestRateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\n @param onBehalfOf The address of the user who will get his debt reduced/removed. Should be the address of the\n user calling the function if he wants to reduce/remove his own debt, or the address of any other\n other borrower whose debt should be removed\n @return The final amount repaid"
									},
									"functionSelector": "573ade81",
									"id": 929,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "repay",
									"nameLocation": "14236:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "14256:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "14248:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 917,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14248:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "14276:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "14268:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14268:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "interestRateMode",
												"nameLocation": "14297:16:1",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "14289:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 921,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "14328:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "14320:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 923,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14320:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14241:102:1"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "14362:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14362:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14361:9:1"
									},
									"scope": 1284,
									"src": "14227:144:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 930,
										"nodeType": "StructuredDocumentation",
										"src": "14377:1100:1",
										"text": " @notice Repay with transfer approval of asset to be repaid done via permit function\n see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713\n @param asset The address of the borrowed underlying asset previously borrowed\n @param amount The amount to repay\n - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\n @param interestRateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\n @param onBehalfOf Address of the user who will get his debt reduced/removed. Should be the address of the\n user calling the function if he wants to reduce/remove his own debt, or the address of any other\n other borrower whose debt should be removed\n @param deadline The deadline timestamp that the permit is valid\n @param permitV The V parameter of ERC712 permit sig\n @param permitR The R parameter of ERC712 permit sig\n @param permitS The S parameter of ERC712 permit sig\n @return The final amount repaid"
									},
									"functionSelector": "ee3e210b",
									"id": 951,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "repayWithPermit",
									"nameLocation": "15490:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "15520:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "15512:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 931,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15512:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "15540:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "15532:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 933,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15532:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "interestRateMode",
												"nameLocation": "15561:16:1",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "15553:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15553:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "15592:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "15584:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 937,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15584:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "15617:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "15609:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15609:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "permitV",
												"nameLocation": "15638:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "15632:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 941,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "15632:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "permitR",
												"nameLocation": "15660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "15652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 943,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "15652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "permitS",
												"nameLocation": "15682:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "15674:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 945,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "15674:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15505:189:1"
									},
									"returnParameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "15713:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15713:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15712:9:1"
									},
									"scope": 1284,
									"src": "15481:241:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 952,
										"nodeType": "StructuredDocumentation",
										"src": "15728:790:1",
										"text": " @notice Repays a borrowed `amount` on a specific reserve using the reserve aTokens, burning the\n equivalent debt tokens\n - E.g. User repays 100 USDC using 100 aUSDC, burning 100 variable/stable debt tokens\n @dev  Passing uint256.max as amount will clean up any residual aToken dust balance, if the user aToken\n balance is not enough to cover the whole debt\n @param asset The address of the borrowed underlying asset previously borrowed\n @param amount The amount to repay\n - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\n @param interestRateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\n @return The final amount repaid"
									},
									"functionSelector": "2dad97d4",
									"id": 963,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "repayWithATokens",
									"nameLocation": "16531:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "16562:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "16554:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 953,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16554:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "16582:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "16574:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 955,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16574:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "interestRateMode",
												"nameLocation": "16603:16:1",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "16595:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 957,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16595:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16547:77:1"
									},
									"returnParameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "16643:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16643:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16642:9:1"
									},
									"scope": 1284,
									"src": "16522:130:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 964,
										"nodeType": "StructuredDocumentation",
										"src": "16658:292:1",
										"text": " @notice Allows a borrower to swap his debt between stable and variable mode, or vice versa\n @param asset The address of the underlying asset borrowed\n @param interestRateMode The current interest rate mode of the position being swapped: 1 for Stable, 2 for Variable"
									},
									"functionSelector": "94ba89a2",
									"id": 971,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapBorrowRateMode",
									"nameLocation": "16963:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "16990:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "16982:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 965,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16982:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "interestRateMode",
												"nameLocation": "17005:16:1",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "16997:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 967,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16997:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16981:41:1"
									},
									"returnParameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17031:0:1"
									},
									"scope": 1284,
									"src": "16954:78:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 972,
										"nodeType": "StructuredDocumentation",
										"src": "17038:561:1",
										"text": " @notice Rebalances the stable interest rate of a user to the current stable rate defined on the reserve.\n - Users can be rebalanced if the following conditions are satisfied:\n     1. Usage ratio is above 95%\n     2. the current supply APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too\n        much has been borrowed at a stable rate and suppliers are not earning enough\n @param asset The address of the underlying asset borrowed\n @param user The address of the user to be rebalanced"
									},
									"functionSelector": "cd112382",
									"id": 979,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "rebalanceStableBorrowRate",
									"nameLocation": "17612:25:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "17646:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "17638:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 973,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17638:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "17661:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "17653:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 975,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17653:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17637:29:1"
									},
									"returnParameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17675:0:1"
									},
									"scope": 1284,
									"src": "17603:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 980,
										"nodeType": "StructuredDocumentation",
										"src": "17682:264:1",
										"text": " @notice Allows suppliers to enable/disable a specific supplied asset as collateral\n @param asset The address of the underlying asset supplied\n @param useAsCollateral True if the user wants to use the supply as collateral, false otherwise"
									},
									"functionSelector": "5a3b74b9",
									"id": 987,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setUserUseReserveAsCollateral",
									"nameLocation": "17959:29:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "17997:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "17989:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 981,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17989:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "useAsCollateral",
												"nameLocation": "18009:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "18004:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 983,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18004:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17988:37:1"
									},
									"returnParameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18034:0:1"
									},
									"scope": 1284,
									"src": "17950:85:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 988,
										"nodeType": "StructuredDocumentation",
										"src": "18041:870:1",
										"text": " @notice Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1\n - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives\n   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk\n @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\n @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\n @param user The address of the borrower getting liquidated\n @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\n @param receiveAToken True if the liquidators wants to receive the collateral aTokens, `false` if he wants\n to receive the underlying collateral asset directly"
									},
									"functionSelector": "00a718a9",
									"id": 1001,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "liquidationCall",
									"nameLocation": "18924:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "collateralAsset",
												"nameLocation": "18954:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "18946:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 989,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18946:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "debtAsset",
												"nameLocation": "18984:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "18976:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 991,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18976:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "19008:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "19000:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 993,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "debtToCover",
												"nameLocation": "19027:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "19019:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 995,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19019:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "receiveAToken",
												"nameLocation": "19050:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "19045:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 997,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "19045:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18939:129:1"
									},
									"returnParameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19077:0:1"
									},
									"scope": 1284,
									"src": "18915:163:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1002,
										"nodeType": "StructuredDocumentation",
										"src": "19084:1423:1",
										"text": " @notice Allows smartcontracts to access the liquidity of the pool within one transaction,\n as long as the amount taken plus a fee is returned.\n @dev IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept\n into consideration. For further details please visit https://docs.aave.com/developers/\n @param receiverAddress The address of the contract receiving the funds, implementing IFlashLoanReceiver interface\n @param assets The addresses of the assets being flash-borrowed\n @param amounts The amounts of the assets being flash-borrowed\n @param interestRateModes Types of the debt to open if the flash loan is not returned:\n   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver\n   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\n   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\n @param onBehalfOf The address  that will receive the debt in the case of using on `modes` 1 or 2\n @param params Variadic packed params to pass to the receiver as extra information\n @param referralCode The code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man"
									},
									"functionSelector": "ab9c4b5d",
									"id": 1022,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "flashLoan",
									"nameLocation": "20520:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "receiverAddress",
												"nameLocation": "20544:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "20536:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1003,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20536:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "20585:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "20566:25:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1005,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "20566:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1006,
													"nodeType": "ArrayTypeName",
													"src": "20566:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "20617:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "20598:26:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1008,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "20598:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1009,
													"nodeType": "ArrayTypeName",
													"src": "20598:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "interestRateModes",
												"nameLocation": "20650:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "20631:36:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1011,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "20631:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1012,
													"nodeType": "ArrayTypeName",
													"src": "20631:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "20682:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "20674:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1014,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20674:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "20714:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "20699:21:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1016,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "20699:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "referralCode",
												"nameLocation": "20734:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "20727:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1018,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "20727:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20529:222:1"
									},
									"returnParameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20760:0:1"
									},
									"scope": 1284,
									"src": "20511:250:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1023,
										"nodeType": "StructuredDocumentation",
										"src": "20767:913:1",
										"text": " @notice Allows smartcontracts to access the liquidity of the pool within one transaction,\n as long as the amount taken plus a fee is returned.\n @dev IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept\n into consideration. For further details please visit https://docs.aave.com/developers/\n @param receiverAddress The address of the contract receiving the funds, implementing IFlashLoanSimpleReceiver interface\n @param asset The address of the asset being flash-borrowed\n @param amount The amount of the asset being flash-borrowed\n @param params Variadic packed params to pass to the receiver as extra information\n @param referralCode The code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man"
									},
									"functionSelector": "42b0b77c",
									"id": 1036,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "flashLoanSimple",
									"nameLocation": "21693:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "receiverAddress",
												"nameLocation": "21723:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "21715:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1024,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21715:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "21753:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "21745:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1026,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21745:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "21773:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "21765:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1028,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21765:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "21801:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "21786:21:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1030,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "21786:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "referralCode",
												"nameLocation": "21821:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "21814:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1032,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "21814:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21708:130:1"
									},
									"returnParameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21847:0:1"
									},
									"scope": 1284,
									"src": "21684:164:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1037,
										"nodeType": "StructuredDocumentation",
										"src": "21854:639:1",
										"text": " @notice Returns the user account data across all the reserves\n @param user The address of the user\n @return totalCollateralBase The total collateral of the user in the base currency used by the price feed\n @return totalDebtBase The total debt of the user in the base currency used by the price feed\n @return availableBorrowsBase The borrowing power left of the user in the base currency used by the price feed\n @return currentLiquidationThreshold The liquidation threshold of the user\n @return ltv The loan to value of The user\n @return healthFactor The current health factor of the user"
									},
									"functionSelector": "bf92857c",
									"id": 1054,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getUserAccountData",
									"nameLocation": "22506:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "22539:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "22531:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1038,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22531:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22524:24:1"
									},
									"returnParameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "totalCollateralBase",
												"nameLocation": "22603:19:1",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "22595:27:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1041,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22595:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "totalDebtBase",
												"nameLocation": "22639:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "22631:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22631:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "availableBorrowsBase",
												"nameLocation": "22669:20:1",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "22661:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1045,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22661:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "currentLiquidationThreshold",
												"nameLocation": "22706:27:1",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "22698:35:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1047,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22698:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "ltv",
												"nameLocation": "22750:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "22742:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1049,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22742:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "healthFactor",
												"nameLocation": "22770:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "22762:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1051,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22762:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22586:203:1"
									},
									"scope": 1284,
									"src": "22497:293:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1055,
										"nodeType": "StructuredDocumentation",
										"src": "22796:654:1",
										"text": " @notice Initializes a reserve, activating it, assigning an aToken and debt tokens and an\n interest rate strategy\n @dev Only callable by the PoolConfigurator contract\n @param asset The address of the underlying asset of the reserve\n @param aTokenAddress The address of the aToken that will be assigned to the reserve\n @param stableDebtAddress The address of the StableDebtToken that will be assigned to the reserve\n @param variableDebtAddress The address of the VariableDebtToken that will be assigned to the reserve\n @param interestRateStrategyAddress The address of the interest rate strategy contract"
									},
									"functionSelector": "7a708e92",
									"id": 1068,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initReserve",
									"nameLocation": "23463:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "23489:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "23481:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1056,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23481:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "aTokenAddress",
												"nameLocation": "23509:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "23501:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1058,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23501:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "stableDebtAddress",
												"nameLocation": "23537:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "23529:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1060,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23529:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "variableDebtAddress",
												"nameLocation": "23569:19:1",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "23561:27:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1062,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23561:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "interestRateStrategyAddress",
												"nameLocation": "23603:27:1",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "23595:35:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1064,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23595:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23474:161:1"
									},
									"returnParameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23644:0:1"
									},
									"scope": 1284,
									"src": "23454:191:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1069,
										"nodeType": "StructuredDocumentation",
										"src": "23651:167:1",
										"text": " @notice Drop a reserve\n @dev Only callable by the PoolConfigurator contract\n @param asset The address of the underlying asset of the reserve"
									},
									"functionSelector": "63c9b860",
									"id": 1074,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "dropReserve",
									"nameLocation": "23831:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "23851:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "23843:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1070,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23843:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23842:15:1"
									},
									"returnParameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23866:0:1"
									},
									"scope": 1284,
									"src": "23822:45:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1075,
										"nodeType": "StructuredDocumentation",
										"src": "23873:295:1",
										"text": " @notice Updates the address of the interest rate strategy contract\n @dev Only callable by the PoolConfigurator contract\n @param asset The address of the underlying asset of the reserve\n @param rateStrategyAddress The address of the interest rate strategy contract"
									},
									"functionSelector": "1d2118f9",
									"id": 1082,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setReserveInterestRateStrategyAddress",
									"nameLocation": "24181:37:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "24233:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "24225:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1076,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24225:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "rateStrategyAddress",
												"nameLocation": "24253:19:1",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "24245:27:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1078,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24245:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24218:59:1"
									},
									"returnParameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24286:0:1"
									},
									"scope": 1284,
									"src": "24172:115:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1083,
										"nodeType": "StructuredDocumentation",
										"src": "24293:264:1",
										"text": " @notice Sets the configuration bitmap of the reserve as a whole\n @dev Only callable by the PoolConfigurator contract\n @param asset The address of the underlying asset of the reserve\n @param configuration The new configuration bitmap"
									},
									"functionSelector": "f51e435b",
									"id": 1091,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setConfiguration",
									"nameLocation": "24570:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "24601:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "24593:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24593:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "configuration",
												"nameLocation": "24656:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "24613:56:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2120_calldata_ptr",
													"typeString": "struct DataTypes.ReserveConfigurationMap"
												},
												"typeName": {
													"id": 1087,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1086,
														"name": "DataTypes.ReserveConfigurationMap",
														"nameLocations": [
															"24613:9:1",
															"24623:23:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2120,
														"src": "24613:33:1"
													},
													"referencedDeclaration": 2120,
													"src": "24613:33:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2120_storage_ptr",
														"typeString": "struct DataTypes.ReserveConfigurationMap"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24586:88:1"
									},
									"returnParameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24683:0:1"
									},
									"scope": 1284,
									"src": "24561:123:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1092,
										"nodeType": "StructuredDocumentation",
										"src": "24690:182:1",
										"text": " @notice Returns the configuration of the reserve\n @param asset The address of the underlying asset of the reserve\n @return The configuration of the reserve"
									},
									"functionSelector": "c44b11f7",
									"id": 1100,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getConfiguration",
									"nameLocation": "24885:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "24916:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "24908:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1093,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24908:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24901:25:1"
									},
									"returnParameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "24950:40:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2120_memory_ptr",
													"typeString": "struct DataTypes.ReserveConfigurationMap"
												},
												"typeName": {
													"id": 1097,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1096,
														"name": "DataTypes.ReserveConfigurationMap",
														"nameLocations": [
															"24950:9:1",
															"24960:23:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2120,
														"src": "24950:33:1"
													},
													"referencedDeclaration": 2120,
													"src": "24950:33:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2120_storage_ptr",
														"typeString": "struct DataTypes.ReserveConfigurationMap"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24949:42:1"
									},
									"scope": 1284,
									"src": "24876:116:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1101,
										"nodeType": "StructuredDocumentation",
										"src": "24998:165:1",
										"text": " @notice Returns the configuration of the user across all the reserves\n @param user The user address\n @return The configuration of the user"
									},
									"functionSelector": "4417a583",
									"id": 1109,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getUserConfiguration",
									"nameLocation": "25176:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "25211:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "25203:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25203:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25196:24:1"
									},
									"returnParameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "25244:37:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserConfigurationMap_$2124_memory_ptr",
													"typeString": "struct DataTypes.UserConfigurationMap"
												},
												"typeName": {
													"id": 1106,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1105,
														"name": "DataTypes.UserConfigurationMap",
														"nameLocations": [
															"25244:9:1",
															"25254:20:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2124,
														"src": "25244:30:1"
													},
													"referencedDeclaration": 2124,
													"src": "25244:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserConfigurationMap_$2124_storage_ptr",
														"typeString": "struct DataTypes.UserConfigurationMap"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25243:39:1"
									},
									"scope": 1284,
									"src": "25167:116:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1110,
										"nodeType": "StructuredDocumentation",
										"src": "25289:185:1",
										"text": " @notice Returns the normalized income of the reserve\n @param asset The address of the underlying asset of the reserve\n @return The reserve's normalized income"
									},
									"functionSelector": "d15e0053",
									"id": 1117,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserveNormalizedIncome",
									"nameLocation": "25487:26:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "25522:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1117,
												"src": "25514:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25514:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25513:15:1"
									},
									"returnParameters": {
										"id": 1116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1117,
												"src": "25552:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25552:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25551:9:1"
									},
									"scope": 1284,
									"src": "25478:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1118,
										"nodeType": "StructuredDocumentation",
										"src": "25567:816:1",
										"text": " @notice Returns the normalized variable debt per unit of asset\n @dev WARNING: This function is intended to be used primarily by the protocol itself to get a\n \"dynamic\" variable index based on time, current stored index and virtual rate at the current\n moment (approx. a borrower would get if opening a position). This means that is always used in\n combination with variable debt supply/balances.\n If using this function externally, consider that is possible to have an increasing normalized\n variable debt that is not equivalent to how the variable debt index would be updated in storage\n (e.g. only updates with non-zero variable debt supply)\n @param asset The address of the underlying asset of the reserve\n @return The reserve normalized variable debt"
									},
									"functionSelector": "386497fd",
									"id": 1125,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserveNormalizedVariableDebt",
									"nameLocation": "26396:32:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "26437:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "26429:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26429:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26428:15:1"
									},
									"returnParameters": {
										"id": 1124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "26467:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26467:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26466:9:1"
									},
									"scope": 1284,
									"src": "26387:89:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1126,
										"nodeType": "StructuredDocumentation",
										"src": "26482:207:1",
										"text": " @notice Returns the state and configuration of the reserve\n @param asset The address of the underlying asset of the reserve\n @return The state and configuration data of the reserve"
									},
									"functionSelector": "35ea6a75",
									"id": 1134,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserveData",
									"nameLocation": "26702:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "26725:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "26717:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26717:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26716:15:1"
									},
									"returnParameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "26755:28:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveData_$2117_memory_ptr",
													"typeString": "struct DataTypes.ReserveData"
												},
												"typeName": {
													"id": 1131,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1130,
														"name": "DataTypes.ReserveData",
														"nameLocations": [
															"26755:9:1",
															"26765:11:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2117,
														"src": "26755:21:1"
													},
													"referencedDeclaration": 2117,
													"src": "26755:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveData_$2117_storage_ptr",
														"typeString": "struct DataTypes.ReserveData"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26754:30:1"
									},
									"scope": 1284,
									"src": "26693:92:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1135,
										"nodeType": "StructuredDocumentation",
										"src": "26791:546:1",
										"text": " @notice Validates and finalizes an aToken transfer\n @dev Only callable by the overlying aToken of the `asset`\n @param asset The address of the underlying asset of the aToken\n @param from The user from which the aTokens are transferred\n @param to The user receiving the aTokens\n @param amount The amount being transferred/withdrawn\n @param balanceFromBefore The aToken balance of the `from` user before the transfer\n @param balanceToBefore The aToken balance of the `to` user before the transfer"
									},
									"functionSelector": "d5ed3933",
									"id": 1150,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "finalizeTransfer",
									"nameLocation": "27350:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "27381:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "27373:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27373:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "27401:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "27393:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27393:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "27420:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "27412:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27412:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "27437:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "27429:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27429:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "balanceFromBefore",
												"nameLocation": "27458:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "27450:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27450:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "balanceToBefore",
												"nameLocation": "27490:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "27482:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27482:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27366:144:1"
									},
									"returnParameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27519:0:1"
									},
									"scope": 1284,
									"src": "27341:179:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1151,
										"nodeType": "StructuredDocumentation",
										"src": "27526:227:1",
										"text": " @notice Returns the list of the underlying assets of all the initialized reserves\n @dev It does not include dropped reserves\n @return The addresses of the underlying assets of the initialized reserves"
									},
									"functionSelector": "d1946dbc",
									"id": 1157,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReservesList",
									"nameLocation": "27766:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27781:2:1"
									},
									"returnParameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "27807:16:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1153,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "27807:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1154,
													"nodeType": "ArrayTypeName",
													"src": "27807:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27806:18:1"
									},
									"scope": 1284,
									"src": "27757:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1158,
										"nodeType": "StructuredDocumentation",
										"src": "27831:289:1",
										"text": " @notice Returns the address of the underlying asset of a reserve by the reserve id as stored in the DataTypes.ReserveData struct\n @param id The id of the reserve as stored in the DataTypes.ReserveData struct\n @return The address of the reserve associated with id"
									},
									"functionSelector": "52751797",
									"id": 1165,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserveAddressById",
									"nameLocation": "28133:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1160,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "28162:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "28155:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1159,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "28155:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28154:11:1"
									},
									"returnParameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "28189:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28189:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28188:9:1"
									},
									"scope": 1284,
									"src": "28124:74:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1166,
										"nodeType": "StructuredDocumentation",
										"src": "28204:140:1",
										"text": " @notice Returns the PoolAddressesProvider connected to this contract\n @return The address of the PoolAddressesProvider"
									},
									"functionSelector": "0542975c",
									"id": 1172,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ADDRESSES_PROVIDER",
									"nameLocation": "28357:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28375:2:1"
									},
									"returnParameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "28401:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IPoolAddressesProvider_$1493",
													"typeString": "contract IPoolAddressesProvider"
												},
												"typeName": {
													"id": 1169,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1168,
														"name": "IPoolAddressesProvider",
														"nameLocations": [
															"28401:22:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1493,
														"src": "28401:22:1"
													},
													"referencedDeclaration": 1493,
													"src": "28401:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IPoolAddressesProvider_$1493",
														"typeString": "contract IPoolAddressesProvider"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28400:24:1"
									},
									"scope": 1284,
									"src": "28348:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1173,
										"nodeType": "StructuredDocumentation",
										"src": "28431:150:1",
										"text": " @notice Updates the protocol fee on the bridging\n @param bridgeProtocolFee The part of the premium sent to the protocol treasury"
									},
									"functionSelector": "3036b439",
									"id": 1178,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateBridgeProtocolFee",
									"nameLocation": "28594:23:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "bridgeProtocolFee",
												"nameLocation": "28626:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "28618:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28618:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28617:27:1"
									},
									"returnParameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28653:0:1"
									},
									"scope": 1284,
									"src": "28585:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1179,
										"nodeType": "StructuredDocumentation",
										"src": "28660:659:1",
										"text": " @notice Updates flash loan premiums. Flash loan premium consists of two parts:\n - A part is sent to aToken holders as extra, one time accumulated interest\n - A part is collected by the protocol treasury\n @dev The total premium is calculated on the total borrowed amount\n @dev The premium to protocol is calculated on the total premium, being a percentage of `flashLoanPremiumTotal`\n @dev Only callable by the PoolConfigurator contract\n @param flashLoanPremiumTotal The total premium, expressed in bps\n @param flashLoanPremiumToProtocol The part of the premium sent to the protocol treasury, expressed in bps"
									},
									"functionSelector": "bcb6e522",
									"id": 1186,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateFlashloanPremiums",
									"nameLocation": "29332:23:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "flashLoanPremiumTotal",
												"nameLocation": "29370:21:1",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "29362:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1180,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "29362:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "flashLoanPremiumToProtocol",
												"nameLocation": "29406:26:1",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "29398:34:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1182,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "29398:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29355:82:1"
									},
									"returnParameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29446:0:1"
									},
									"scope": 1284,
									"src": "29323:124:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1187,
										"nodeType": "StructuredDocumentation",
										"src": "29453:337:1",
										"text": " @notice Configures a new category for the eMode.\n @dev In eMode, the protocol allows very high borrowing power to borrow assets of the same category.\n The category 0 is reserved as it's the default for volatile assets\n @param id The id of the category\n @param config The configuration of the category"
									},
									"functionSelector": "d579ea7d",
									"id": 1195,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "configureEModeCategory",
									"nameLocation": "29803:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "29832:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "29826:8:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1188,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "29826:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "config",
												"nameLocation": "29867:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "29836:37:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_EModeCategory_$2135_memory_ptr",
													"typeString": "struct DataTypes.EModeCategory"
												},
												"typeName": {
													"id": 1191,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1190,
														"name": "DataTypes.EModeCategory",
														"nameLocations": [
															"29836:9:1",
															"29846:13:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2135,
														"src": "29836:23:1"
													},
													"referencedDeclaration": 2135,
													"src": "29836:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_EModeCategory_$2135_storage_ptr",
														"typeString": "struct DataTypes.EModeCategory"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29825:49:1"
									},
									"returnParameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29883:0:1"
									},
									"scope": 1284,
									"src": "29794:90:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1196,
										"nodeType": "StructuredDocumentation",
										"src": "29890:154:1",
										"text": " @notice Returns the data of an eMode category\n @param id The id of the category\n @return The configuration data of the category"
									},
									"functionSelector": "6c6f6ae1",
									"id": 1204,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getEModeCategoryData",
									"nameLocation": "30057:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "30084:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "30078:8:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1197,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "30078:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30077:10:1"
									},
									"returnParameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "30111:30:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_EModeCategory_$2135_memory_ptr",
													"typeString": "struct DataTypes.EModeCategory"
												},
												"typeName": {
													"id": 1201,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1200,
														"name": "DataTypes.EModeCategory",
														"nameLocations": [
															"30111:9:1",
															"30121:13:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2135,
														"src": "30111:23:1"
													},
													"referencedDeclaration": 2135,
													"src": "30111:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_EModeCategory_$2135_storage_ptr",
														"typeString": "struct DataTypes.EModeCategory"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30110:32:1"
									},
									"scope": 1284,
									"src": "30048:95:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1205,
										"nodeType": "StructuredDocumentation",
										"src": "30149:114:1",
										"text": " @notice Allows a user to use the protocol in eMode\n @param categoryId The id of the category"
									},
									"functionSelector": "28530a47",
									"id": 1210,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setUserEMode",
									"nameLocation": "30276:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "categoryId",
												"nameLocation": "30295:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "30289:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1206,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "30289:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30288:18:1"
									},
									"returnParameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30315:0:1"
									},
									"scope": 1284,
									"src": "30267:49:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1211,
										"nodeType": "StructuredDocumentation",
										"src": "30322:129:1",
										"text": " @notice Returns the eMode the user is using\n @param user The address of the user\n @return The eMode id"
									},
									"functionSelector": "eddf1b79",
									"id": 1218,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getUserEMode",
									"nameLocation": "30464:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "30485:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "30477:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30477:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30476:14:1"
									},
									"returnParameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "30514:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30514:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30513:9:1"
									},
									"scope": 1284,
									"src": "30455:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1219,
										"nodeType": "StructuredDocumentation",
										"src": "30529:240:1",
										"text": " @notice Resets the isolation mode total debt of the given asset to zero\n @dev It requires the given asset has zero debt ceiling\n @param asset The address of the underlying asset to reset the isolationModeTotalDebt"
									},
									"functionSelector": "e43e88a1",
									"id": 1224,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "resetIsolationModeTotalDebt",
									"nameLocation": "30782:27:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "30818:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "30810:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30810:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30809:15:1"
									},
									"returnParameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30833:0:1"
									},
									"scope": 1284,
									"src": "30773:61:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1225,
										"nodeType": "StructuredDocumentation",
										"src": "30840:194:1",
										"text": " @notice Returns the percentage of available liquidity that can be borrowed at once at stable rate\n @return The percentage of available liquidity to borrow, expressed in bps"
									},
									"functionSelector": "e82fec2f",
									"id": 1230,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "MAX_STABLE_RATE_BORROW_SIZE_PERCENT",
									"nameLocation": "31047:35:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31082:2:1"
									},
									"returnParameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "31108:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31108:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31107:9:1"
									},
									"scope": 1284,
									"src": "31038:79:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1231,
										"nodeType": "StructuredDocumentation",
										"src": "31123:103:1",
										"text": " @notice Returns the total fee on flash loans\n @return The total fee on flashloans"
									},
									"functionSelector": "074b2e43",
									"id": 1236,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "FLASHLOAN_PREMIUM_TOTAL",
									"nameLocation": "31239:23:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31262:2:1"
									},
									"returnParameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1236,
												"src": "31288:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1233,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "31288:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31287:9:1"
									},
									"scope": 1284,
									"src": "31230:67:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1237,
										"nodeType": "StructuredDocumentation",
										"src": "31303:136:1",
										"text": " @notice Returns the part of the bridge fees sent to protocol\n @return The bridge fee sent to the protocol treasury"
									},
									"functionSelector": "272d9072",
									"id": 1242,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "BRIDGE_PROTOCOL_FEE",
									"nameLocation": "31452:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31471:2:1"
									},
									"returnParameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "31497:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31497:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31496:9:1"
									},
									"scope": 1284,
									"src": "31443:63:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1243,
										"nodeType": "StructuredDocumentation",
										"src": "31512:142:1",
										"text": " @notice Returns the part of the flashloan fees sent to protocol\n @return The flashloan fee sent to the protocol treasury"
									},
									"functionSelector": "6a99c036",
									"id": 1248,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "FLASHLOAN_PREMIUM_TO_PROTOCOL",
									"nameLocation": "31667:29:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31696:2:1"
									},
									"returnParameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "31722:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1245,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "31722:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31721:9:1"
									},
									"scope": 1284,
									"src": "31658:73:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1249,
										"nodeType": "StructuredDocumentation",
										"src": "31737:154:1",
										"text": " @notice Returns the maximum number of reserves supported to be listed in this Pool\n @return The maximum number of reserves supported"
									},
									"functionSelector": "f8119d51",
									"id": 1254,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "MAX_NUMBER_RESERVES",
									"nameLocation": "31904:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31923:2:1"
									},
									"returnParameters": {
										"id": 1253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1254,
												"src": "31949:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1251,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "31949:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31948:8:1"
									},
									"scope": 1284,
									"src": "31895:62:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1255,
										"nodeType": "StructuredDocumentation",
										"src": "31963:199:1",
										"text": " @notice Mints the assets accrued through the reserve factor to the treasury in the form of aTokens\n @param assets The list of reserves for which the minting needs to be executed"
									},
									"functionSelector": "9cd19996",
									"id": 1261,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mintToTreasury",
									"nameLocation": "32175:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "32209:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "32190:25:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1256,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "32190:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1257,
													"nodeType": "ArrayTypeName",
													"src": "32190:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32189:27:1"
									},
									"returnParameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32225:0:1"
									},
									"scope": 1284,
									"src": "32166:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1262,
										"nodeType": "StructuredDocumentation",
										"src": "32232:216:1",
										"text": " @notice Rescue and transfer tokens locked in this contract\n @param token The address of the token\n @param to The address of the recipient\n @param amount The amount of token to transfer"
									},
									"functionSelector": "cea9d26f",
									"id": 1271,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "rescueTokens",
									"nameLocation": "32461:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "32482:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "32474:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32474:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "32497:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "32489:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32489:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "32509:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "32501:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32501:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32473:43:1"
									},
									"returnParameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32525:0:1"
									},
									"scope": 1284,
									"src": "32452:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1272,
										"nodeType": "StructuredDocumentation",
										"src": "32532:779:1",
										"text": " @notice Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens.\n - E.g. User supplies 100 USDC and gets in return 100 aUSDC\n @dev Deprecated: Use the `supply` function instead\n @param asset The address of the underlying asset to supply\n @param amount The amount to be supplied\n @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\n   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\n   is a different wallet\n @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man"
									},
									"functionSelector": "e8eda9df",
									"id": 1283,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "33324:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "33340:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "33332:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33332:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1276,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "33355:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "33347:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33347:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "33371:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "33363:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1277,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33363:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1280,
												"mutability": "mutable",
												"name": "referralCode",
												"nameLocation": "33390:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "33383:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1279,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "33383:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33331:72:1"
									},
									"returnParameters": {
										"id": 1282,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33412:0:1"
									},
									"scope": 1284,
									"src": "33315:98:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1285,
							"src": "297:33119:1",
							"usedErrors": []
						}
					],
					"src": "38:33378:1"
				},
				"id": 1
			},
			"interfaces/AaveV3/IPoolAddressesProvider.sol": {
				"ast": {
					"absolutePath": "interfaces/AaveV3/IPoolAddressesProvider.sol",
					"exportedSymbols": {
						"IPoolAddressesProvider": [
							1493
						]
					},
					"id": 1494,
					"license": "AGPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "38:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPoolAddressesProvider",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1287,
								"nodeType": "StructuredDocumentation",
								"src": "65:130:2",
								"text": " @title IPoolAddressesProvider\n @author Aave\n @notice Defines the basic interface for a Pool Addresses Provider."
							},
							"fullyImplemented": false,
							"id": 1493,
							"linearizedBaseContracts": [
								1493
							],
							"name": "IPoolAddressesProvider",
							"nameLocation": "207:22:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1288,
										"nodeType": "StructuredDocumentation",
										"src": "235:168:2",
										"text": " @dev Emitted when the market identifier is updated.\n @param oldMarketId The old id of the market\n @param newMarketId The new id of the market"
									},
									"eventSelector": "e685c8cdecc6030c45030fd54778812cb84ed8e4467c38294403d68ba7860823",
									"id": 1294,
									"name": "MarketIdSet",
									"nameLocation": "413:11:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1290,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldMarketId",
												"nameLocation": "440:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 1294,
												"src": "425:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1289,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "425:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1292,
												"indexed": true,
												"mutability": "mutable",
												"name": "newMarketId",
												"nameLocation": "468:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 1294,
												"src": "453:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1291,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "453:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "424:56:2"
									},
									"src": "407:74:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1295,
										"nodeType": "StructuredDocumentation",
										"src": "487:159:2",
										"text": " @dev Emitted when the pool is updated.\n @param oldAddress The old address of the Pool\n @param newAddress The new address of the Pool"
									},
									"eventSelector": "90affc163f1a2dfedcd36aa02ed992eeeba8100a4014f0b4cdc20ea265a66627",
									"id": 1301,
									"name": "PoolUpdated",
									"nameLocation": "656:11:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1297,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldAddress",
												"nameLocation": "684:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "668:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1299,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "712:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "696:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "696:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "667:56:2"
									},
									"src": "650:74:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1302,
										"nodeType": "StructuredDocumentation",
										"src": "730:196:2",
										"text": " @dev Emitted when the pool configurator is updated.\n @param oldAddress The old address of the PoolConfigurator\n @param newAddress The new address of the PoolConfigurator"
									},
									"eventSelector": "8932892569eba59c8382a089d9b732d1f49272878775235761a2a6b0309cd465",
									"id": 1308,
									"name": "PoolConfiguratorUpdated",
									"nameLocation": "936:23:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1304,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldAddress",
												"nameLocation": "976:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "960:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "960:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1306,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "1004:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "988:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "988:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "959:56:2"
									},
									"src": "930:86:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1309,
										"nodeType": "StructuredDocumentation",
										"src": "1022:181:2",
										"text": " @dev Emitted when the price oracle is updated.\n @param oldAddress The old address of the PriceOracle\n @param newAddress The new address of the PriceOracle"
									},
									"eventSelector": "56b5f80d8cac1479698aa7d01605fd6111e90b15fc4d2b377417f46034876cbd",
									"id": 1315,
									"name": "PriceOracleUpdated",
									"nameLocation": "1213:18:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1311,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldAddress",
												"nameLocation": "1248:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 1315,
												"src": "1232:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1232:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1313,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "1276:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 1315,
												"src": "1260:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1260:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1231:56:2"
									},
									"src": "1207:81:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1316,
										"nodeType": "StructuredDocumentation",
										"src": "1294:178:2",
										"text": " @dev Emitted when the ACL manager is updated.\n @param oldAddress The old address of the ACLManager\n @param newAddress The new address of the ACLManager"
									},
									"eventSelector": "b30efa04327bb8a537d61cc1e5c48095345ad18ef7cc04e6bacf7dfb6caaf507",
									"id": 1322,
									"name": "ACLManagerUpdated",
									"nameLocation": "1482:17:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1318,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldAddress",
												"nameLocation": "1516:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 1322,
												"src": "1500:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1317,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1500:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1320,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "1544:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 1322,
												"src": "1528:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1499:56:2"
									},
									"src": "1476:80:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1323,
										"nodeType": "StructuredDocumentation",
										"src": "1562:172:2",
										"text": " @dev Emitted when the ACL admin is updated.\n @param oldAddress The old address of the ACLAdmin\n @param newAddress The new address of the ACLAdmin"
									},
									"eventSelector": "e9cf53972264dc95304fd424458745019ddfca0e37ae8f703d74772c41ad115b",
									"id": 1329,
									"name": "ACLAdminUpdated",
									"nameLocation": "1744:15:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1325,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldAddress",
												"nameLocation": "1776:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "1760:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1760:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1327,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "1804:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "1788:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1788:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1759:56:2"
									},
									"src": "1738:78:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1330,
										"nodeType": "StructuredDocumentation",
										"src": "1822:206:2",
										"text": " @dev Emitted when the price oracle sentinel is updated.\n @param oldAddress The old address of the PriceOracleSentinel\n @param newAddress The new address of the PriceOracleSentinel"
									},
									"eventSelector": "5326514eeca90494a14bedabcff812a0e683029ee85d1e23824d44fd14cd6ae7",
									"id": 1336,
									"name": "PriceOracleSentinelUpdated",
									"nameLocation": "2038:26:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1332,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldAddress",
												"nameLocation": "2081:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "2065:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2065:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1334,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "2109:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "2093:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2093:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2064:56:2"
									},
									"src": "2032:89:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1337,
										"nodeType": "StructuredDocumentation",
										"src": "2127:197:2",
										"text": " @dev Emitted when the pool data provider is updated.\n @param oldAddress The old address of the PoolDataProvider\n @param newAddress The new address of the PoolDataProvider"
									},
									"eventSelector": "c853974cfbf81487a14a23565917bee63f527853bcb5fa54f2ae1cdf8a38356d",
									"id": 1343,
									"name": "PoolDataProviderUpdated",
									"nameLocation": "2334:23:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1339,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldAddress",
												"nameLocation": "2374:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "2358:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2358:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1341,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "2402:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "2386:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2386:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2357:56:2"
									},
									"src": "2328:86:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1344,
										"nodeType": "StructuredDocumentation",
										"src": "2420:248:2",
										"text": " @dev Emitted when a new proxy is created.\n @param id The identifier of the proxy\n @param proxyAddress The address of the created proxy contract\n @param implementationAddress The address of the implementation contract"
									},
									"eventSelector": "4a465a9bd819d9662563c1e11ae958f8109e437e7f4bf1c6ef0b9a7b3f35d478",
									"id": 1352,
									"name": "ProxyCreated",
									"nameLocation": "2678:12:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1346,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2713:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1352,
												"src": "2697:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1345,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2697:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1348,
												"indexed": true,
												"mutability": "mutable",
												"name": "proxyAddress",
												"nameLocation": "2738:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 1352,
												"src": "2722:28:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2722:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1350,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementationAddress",
												"nameLocation": "2773:21:2",
												"nodeType": "VariableDeclaration",
												"scope": 1352,
												"src": "2757:37:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2757:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2690:109:2"
									},
									"src": "2672:128:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1353,
										"nodeType": "StructuredDocumentation",
										"src": "2806:243:2",
										"text": " @dev Emitted when a new non-proxied contract address is registered.\n @param id The identifier of the contract\n @param oldAddress The address of the old contract\n @param newAddress The address of the new contract"
									},
									"eventSelector": "9ef0e8c8e52743bb38b83b17d9429141d494b8041ca6d616a6c77cebae9cd8b7",
									"id": 1361,
									"name": "AddressSet",
									"nameLocation": "3059:10:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1355,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3086:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "3070:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1354,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1357,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldAddress",
												"nameLocation": "3106:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "3090:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1356,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3090:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1359,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "3134:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "3118:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3118:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3069:76:2"
									},
									"src": "3053:93:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1362,
										"nodeType": "StructuredDocumentation",
										"src": "3152:373:2",
										"text": " @dev Emitted when the implementation of the proxy registered with id is updated\n @param id The identifier of the contract\n @param proxyAddress The address of the proxy contract\n @param oldImplementationAddress The address of the old implementation contract\n @param newImplementationAddress The address of the new implementation contract"
									},
									"eventSelector": "3bbd45b5429b385e3fb37ad5cd1cd1435a3c8ec32196c7937597365a3fd3e99c",
									"id": 1372,
									"name": "AddressSetAsProxy",
									"nameLocation": "3535:17:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1364,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3575:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "3559:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1363,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3559:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1366,
												"indexed": true,
												"mutability": "mutable",
												"name": "proxyAddress",
												"nameLocation": "3600:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "3584:28:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3584:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1368,
												"indexed": false,
												"mutability": "mutable",
												"name": "oldImplementationAddress",
												"nameLocation": "3627:24:2",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "3619:32:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3619:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1370,
												"indexed": true,
												"mutability": "mutable",
												"name": "newImplementationAddress",
												"nameLocation": "3674:24:2",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "3658:40:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3658:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3552:151:2"
									},
									"src": "3529:175:2"
								},
								{
									"documentation": {
										"id": 1373,
										"nodeType": "StructuredDocumentation",
										"src": "3710:120:2",
										"text": " @notice Returns the id of the Aave market to which this contract points to.\n @return The market id"
									},
									"functionSelector": "568ef470",
									"id": 1378,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getMarketId",
									"nameLocation": "3843:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3854:2:2"
									},
									"returnParameters": {
										"id": 1377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1376,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1378,
												"src": "3880:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1375,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3880:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3879:15:2"
									},
									"scope": 1493,
									"src": "3834:61:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1379,
										"nodeType": "StructuredDocumentation",
										"src": "3901:257:2",
										"text": " @notice Associates an id with a specific PoolAddressesProvider.\n @dev This can be used to create an onchain registry of PoolAddressesProviders to\n identify and validate multiple Aave markets.\n @param newMarketId The market id"
									},
									"functionSelector": "f67b1847",
									"id": 1384,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setMarketId",
									"nameLocation": "4171:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1381,
												"mutability": "mutable",
												"name": "newMarketId",
												"nameLocation": "4199:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "4183:27:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1380,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4183:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4182:29:2"
									},
									"returnParameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4220:0:2"
									},
									"scope": 1493,
									"src": "4162:59:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1385,
										"nodeType": "StructuredDocumentation",
										"src": "4227:312:2",
										"text": " @notice Returns an address by its identifier.\n @dev The returned address might be an EOA or a contract, potentially proxied\n @dev It returns ZERO if there is no registered address with the given id\n @param id The id\n @return The address of the registered for the specified id"
									},
									"functionSelector": "21f8a721",
									"id": 1392,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAddress",
									"nameLocation": "4552:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1387,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "4571:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1392,
												"src": "4563:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1386,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4563:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4562:12:2"
									},
									"returnParameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1392,
												"src": "4598:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4598:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4597:9:2"
									},
									"scope": 1493,
									"src": "4543:64:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1393,
										"nodeType": "StructuredDocumentation",
										"src": "4613:493:2",
										"text": " @notice General function to update the implementation of a proxy registered with\n certain `id`. If there is no proxy registered, it will instantiate one and\n set as implementation the `newImplementationAddress`.\n @dev IMPORTANT Use this function carefully, only for ids that don't have an explicit\n setter function, in order to avoid unexpected consequences\n @param id The id\n @param newImplementationAddress The address of the new implementation"
									},
									"functionSelector": "5dcc528c",
									"id": 1400,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setAddressAsProxy",
									"nameLocation": "5119:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1395,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "5145:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1400,
												"src": "5137:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1394,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "newImplementationAddress",
												"nameLocation": "5157:24:2",
												"nodeType": "VariableDeclaration",
												"scope": 1400,
												"src": "5149:32:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5149:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5136:46:2"
									},
									"returnParameters": {
										"id": 1399,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5191:0:2"
									},
									"scope": 1493,
									"src": "5110:82:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1401,
										"nodeType": "StructuredDocumentation",
										"src": "5198:249:2",
										"text": " @notice Sets an address for an id replacing the address saved in the addresses map.\n @dev IMPORTANT Use this function carefully, as it will do a hard replacement\n @param id The id\n @param newAddress The address to set"
									},
									"functionSelector": "ca446dd9",
									"id": 1408,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setAddress",
									"nameLocation": "5460:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1403,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "5479:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "5471:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1402,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5471:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "5491:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "5483:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5483:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5470:32:2"
									},
									"returnParameters": {
										"id": 1407,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5511:0:2"
									},
									"scope": 1493,
									"src": "5451:61:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1409,
										"nodeType": "StructuredDocumentation",
										"src": "5518:100:2",
										"text": " @notice Returns the address of the Pool proxy.\n @return The Pool proxy address"
									},
									"functionSelector": "026b1d5f",
									"id": 1414,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPool",
									"nameLocation": "5631:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5638:2:2"
									},
									"returnParameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "5664:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5664:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5663:9:2"
									},
									"scope": 1493,
									"src": "5622:51:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1415,
										"nodeType": "StructuredDocumentation",
										"src": "5679:228:2",
										"text": " @notice Updates the implementation of the Pool, or creates a proxy\n setting the new `pool` implementation when the function is called for the first time.\n @param newPoolImpl The new Pool implementation"
									},
									"functionSelector": "a1564406",
									"id": 1420,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setPoolImpl",
									"nameLocation": "5920:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1417,
												"mutability": "mutable",
												"name": "newPoolImpl",
												"nameLocation": "5940:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 1420,
												"src": "5932:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5932:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5931:21:2"
									},
									"returnParameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5961:0:2"
									},
									"scope": 1493,
									"src": "5911:51:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1421,
										"nodeType": "StructuredDocumentation",
										"src": "5968:124:2",
										"text": " @notice Returns the address of the PoolConfigurator proxy.\n @return The PoolConfigurator proxy address"
									},
									"functionSelector": "631adfca",
									"id": 1426,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolConfigurator",
									"nameLocation": "6105:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6124:2:2"
									},
									"returnParameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1426,
												"src": "6150:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6150:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6149:9:2"
									},
									"scope": 1493,
									"src": "6096:63:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1427,
										"nodeType": "StructuredDocumentation",
										"src": "6165:276:2",
										"text": " @notice Updates the implementation of the PoolConfigurator, or creates a proxy\n setting the new `PoolConfigurator` implementation when the function is called for the first time.\n @param newPoolConfiguratorImpl The new PoolConfigurator implementation"
									},
									"functionSelector": "e4ca28b7",
									"id": 1432,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setPoolConfiguratorImpl",
									"nameLocation": "6454:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "newPoolConfiguratorImpl",
												"nameLocation": "6486:23:2",
												"nodeType": "VariableDeclaration",
												"scope": 1432,
												"src": "6478:31:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6478:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6477:33:2"
									},
									"returnParameters": {
										"id": 1431,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6519:0:2"
									},
									"scope": 1493,
									"src": "6445:75:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1433,
										"nodeType": "StructuredDocumentation",
										"src": "6526:110:2",
										"text": " @notice Returns the address of the price oracle.\n @return The address of the PriceOracle"
									},
									"functionSelector": "fca513a8",
									"id": 1438,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPriceOracle",
									"nameLocation": "6649:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1434,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6663:2:2"
									},
									"returnParameters": {
										"id": 1437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1438,
												"src": "6689:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6689:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6688:9:2"
									},
									"scope": 1493,
									"src": "6640:58:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1439,
										"nodeType": "StructuredDocumentation",
										"src": "6704:128:2",
										"text": " @notice Updates the address of the price oracle.\n @param newPriceOracle The address of the new PriceOracle"
									},
									"functionSelector": "530e784f",
									"id": 1444,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setPriceOracle",
									"nameLocation": "6845:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "newPriceOracle",
												"nameLocation": "6868:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 1444,
												"src": "6860:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6860:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6859:24:2"
									},
									"returnParameters": {
										"id": 1443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6892:0:2"
									},
									"scope": 1493,
									"src": "6836:57:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1445,
										"nodeType": "StructuredDocumentation",
										"src": "6899:108:2",
										"text": " @notice Returns the address of the ACL manager.\n @return The address of the ACLManager"
									},
									"functionSelector": "707cd716",
									"id": 1450,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getACLManager",
									"nameLocation": "7020:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1446,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7033:2:2"
									},
									"returnParameters": {
										"id": 1449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1450,
												"src": "7059:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7059:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7058:9:2"
									},
									"scope": 1493,
									"src": "7011:57:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1451,
										"nodeType": "StructuredDocumentation",
										"src": "7074:125:2",
										"text": " @notice Updates the address of the ACL manager.\n @param newAclManager The address of the new ACLManager"
									},
									"functionSelector": "ed301ca9",
									"id": 1456,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setACLManager",
									"nameLocation": "7212:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1453,
												"mutability": "mutable",
												"name": "newAclManager",
												"nameLocation": "7234:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "7226:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7226:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7225:23:2"
									},
									"returnParameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7257:0:2"
									},
									"scope": 1493,
									"src": "7203:55:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1457,
										"nodeType": "StructuredDocumentation",
										"src": "7264:105:2",
										"text": " @notice Returns the address of the ACL admin.\n @return The address of the ACL admin"
									},
									"functionSelector": "0e67178c",
									"id": 1462,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getACLAdmin",
									"nameLocation": "7382:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7393:2:2"
									},
									"returnParameters": {
										"id": 1461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1462,
												"src": "7419:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7419:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7418:9:2"
									},
									"scope": 1493,
									"src": "7373:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1463,
										"nodeType": "StructuredDocumentation",
										"src": "7434:120:2",
										"text": " @notice Updates the address of the ACL admin.\n @param newAclAdmin The address of the new ACL admin"
									},
									"functionSelector": "76d84ffc",
									"id": 1468,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setACLAdmin",
									"nameLocation": "7567:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1465,
												"mutability": "mutable",
												"name": "newAclAdmin",
												"nameLocation": "7587:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 1468,
												"src": "7579:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7579:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7578:21:2"
									},
									"returnParameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7608:0:2"
									},
									"scope": 1493,
									"src": "7558:51:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1469,
										"nodeType": "StructuredDocumentation",
										"src": "7615:127:2",
										"text": " @notice Returns the address of the price oracle sentinel.\n @return The address of the PriceOracleSentinel"
									},
									"functionSelector": "5eb88d3d",
									"id": 1474,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPriceOracleSentinel",
									"nameLocation": "7755:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:2:2"
									},
									"returnParameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "7803:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7803:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7802:9:2"
									},
									"scope": 1493,
									"src": "7746:66:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1475,
										"nodeType": "StructuredDocumentation",
										"src": "7818:153:2",
										"text": " @notice Updates the address of the price oracle sentinel.\n @param newPriceOracleSentinel The address of the new PriceOracleSentinel"
									},
									"functionSelector": "74944cec",
									"id": 1480,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setPriceOracleSentinel",
									"nameLocation": "7984:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "newPriceOracleSentinel",
												"nameLocation": "8015:22:2",
												"nodeType": "VariableDeclaration",
												"scope": 1480,
												"src": "8007:30:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8007:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8006:32:2"
									},
									"returnParameters": {
										"id": 1479,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8047:0:2"
									},
									"scope": 1493,
									"src": "7975:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1481,
										"nodeType": "StructuredDocumentation",
										"src": "8054:112:2",
										"text": " @notice Returns the address of the data provider.\n @return The address of the DataProvider"
									},
									"functionSelector": "e860accb",
									"id": 1486,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolDataProvider",
									"nameLocation": "8179:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8198:2:2"
									},
									"returnParameters": {
										"id": 1485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1484,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "8224:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8224:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8223:9:2"
									},
									"scope": 1493,
									"src": "8170:63:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1487,
										"nodeType": "StructuredDocumentation",
										"src": "8239:131:2",
										"text": " @notice Updates the address of the data provider.\n @param newDataProvider The address of the new DataProvider"
									},
									"functionSelector": "e44e9ed1",
									"id": 1492,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setPoolDataProvider",
									"nameLocation": "8383:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1489,
												"mutability": "mutable",
												"name": "newDataProvider",
												"nameLocation": "8411:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 1492,
												"src": "8403:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8403:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8402:25:2"
									},
									"returnParameters": {
										"id": 1491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8436:0:2"
									},
									"scope": 1493,
									"src": "8374:63:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1494,
							"src": "197:8243:2",
							"usedErrors": []
						}
					],
					"src": "38:8402:2"
				},
				"id": 2
			},
			"interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1571
						]
					},
					"id": 1572,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1495,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1496,
								"nodeType": "StructuredDocumentation",
								"src": "136:72:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1571,
							"linearizedBaseContracts": [
								1571
							],
							"name": "IERC20",
							"nameLocation": "220:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1497,
										"nodeType": "StructuredDocumentation",
										"src": "234:163:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1505,
									"name": "Transfer",
									"nameLocation": "409:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1499,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "434:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "418:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1498,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "418:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1501,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "456:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "440:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "440:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1503,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "468:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "460:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "417:57:3"
									},
									"src": "403:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1506,
										"nodeType": "StructuredDocumentation",
										"src": "483:151:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1514,
									"name": "Approval",
									"nameLocation": "646:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1508,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "671:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1514,
												"src": "655:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1510,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "694:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1514,
												"src": "678:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "678:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1512,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "711:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1514,
												"src": "703:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "703:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:63:3"
									},
									"src": "640:78:3"
								},
								{
									"documentation": {
										"id": 1515,
										"nodeType": "StructuredDocumentation",
										"src": "726:68:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1520,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "809:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1516,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "820:2:3"
									},
									"returnParameters": {
										"id": 1519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1518,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1520,
												"src": "846:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "846:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "845:9:3"
									},
									"scope": 1571,
									"src": "800:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1521,
										"nodeType": "StructuredDocumentation",
										"src": "863:74:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1528,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "952:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1523,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "970:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1528,
												"src": "962:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "962:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "961:17:3"
									},
									"returnParameters": {
										"id": 1527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1528,
												"src": "1002:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1001:9:3"
									},
									"scope": 1571,
									"src": "943:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1529,
										"nodeType": "StructuredDocumentation",
										"src": "1019:208:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1538,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1242:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1531,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1259:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1538,
												"src": "1251:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1251:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1533,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1271:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1538,
												"src": "1263:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1250:28:3"
									},
									"returnParameters": {
										"id": 1537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1536,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1538,
												"src": "1297:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1535,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1297:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1296:6:3"
									},
									"scope": 1571,
									"src": "1233:70:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1539,
										"nodeType": "StructuredDocumentation",
										"src": "1311:270:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1548,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1596:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1541,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1614:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1548,
												"src": "1606:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1606:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1543,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1629:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1548,
												"src": "1621:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1605:32:3"
									},
									"returnParameters": {
										"id": 1547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1546,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1548,
												"src": "1661:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1661:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1660:9:3"
									},
									"scope": 1571,
									"src": "1587:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1549,
										"nodeType": "StructuredDocumentation",
										"src": "1678:655:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1558,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2348:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1551,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2364:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1558,
												"src": "2356:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2356:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1553,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2381:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1558,
												"src": "2373:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1552,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2373:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2355:33:3"
									},
									"returnParameters": {
										"id": 1557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1556,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1558,
												"src": "2407:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1555,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2407:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2406:6:3"
									},
									"scope": 1571,
									"src": "2339:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1559,
										"nodeType": "StructuredDocumentation",
										"src": "2421:295:3",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1570,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2731:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2752:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "2744:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2744:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1563,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2766:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "2758:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2758:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1565,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2778:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "2770:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2770:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2743:42:3"
									},
									"returnParameters": {
										"id": 1569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1568,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "2804:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1567,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2804:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2803:6:3"
									},
									"scope": 1571,
									"src": "2722:88:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1572,
							"src": "210:2603:3",
							"usedErrors": []
						}
					],
					"src": "109:2706:3"
				},
				"id": 3
			},
			"interfaces/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "interfaces/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1571
						],
						"IERC20Metadata": [
							1596
						]
					},
					"id": 1597,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1573,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:4"
						},
						{
							"absolutePath": "interfaces/IERC20.sol",
							"file": "../interfaces/IERC20.sol",
							"id": 1574,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1597,
							"sourceUnit": 1572,
							"src": "140:34:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1576,
										"name": "IERC20",
										"nameLocations": [
											"328:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1571,
										"src": "328:6:4"
									},
									"id": 1577,
									"nodeType": "InheritanceSpecifier",
									"src": "328:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1575,
								"nodeType": "StructuredDocumentation",
								"src": "178:120:4",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 1596,
							"linearizedBaseContracts": [
								1596,
								1571
							],
							"name": "IERC20Metadata",
							"nameLocation": "310:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1578,
										"nodeType": "StructuredDocumentation",
										"src": "342:56:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1583,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "413:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1579,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "417:2:4"
									},
									"returnParameters": {
										"id": 1582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1581,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "443:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1580,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "443:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "442:15:4"
									},
									"scope": 1596,
									"src": "404:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1584,
										"nodeType": "StructuredDocumentation",
										"src": "466:58:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1589,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "539:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1585,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "545:2:4"
									},
									"returnParameters": {
										"id": 1588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1587,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "571:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1586,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "571:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "570:15:4"
									},
									"scope": 1596,
									"src": "530:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1590,
										"nodeType": "StructuredDocumentation",
										"src": "594:67:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1595,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "676:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1591,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "684:2:4"
									},
									"returnParameters": {
										"id": 1594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1593,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1595,
												"src": "710:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1592,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "710:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "709:7:4"
									},
									"scope": 1596,
									"src": "667:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1597,
							"src": "300:420:4",
							"usedErrors": []
						}
					],
					"src": "113:607:4"
				},
				"id": 4
			},
			"interfaces/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "interfaces/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							1632
						]
					},
					"id": 1633,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1598,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "126:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1599,
								"nodeType": "StructuredDocumentation",
								"src": "154:1998:5",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 1632,
							"linearizedBaseContracts": [
								1632
							],
							"name": "IERC20Permit",
							"nameLocation": "2164:12:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1600,
										"nodeType": "StructuredDocumentation",
										"src": "2184:872:5",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 1617,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3071:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1602,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3096:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1617,
												"src": "3088:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3088:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1604,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3120:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1617,
												"src": "3112:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1603,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3112:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1606,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3146:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1617,
												"src": "3138:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1605,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3138:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3170:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1617,
												"src": "3162:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3162:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1610,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3195:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1617,
												"src": "3189:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1609,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3189:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3215:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1617,
												"src": "3207:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1611,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3207:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1614,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3235:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1617,
												"src": "3227:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1613,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3227:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3077:166:5"
									},
									"returnParameters": {
										"id": 1616,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3252:0:5"
									},
									"scope": 1632,
									"src": "3062:191:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1618,
										"nodeType": "StructuredDocumentation",
										"src": "3261:300:5",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 1625,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3576:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1620,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3591:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "3583:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1619,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3583:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3582:15:5"
									},
									"returnParameters": {
										"id": 1624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1623,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "3621:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3621:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3620:9:5"
									},
									"scope": 1632,
									"src": "3567:63:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1626,
										"nodeType": "StructuredDocumentation",
										"src": "3638:130:5",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 1631,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3837:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1627,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3853:2:5"
									},
									"returnParameters": {
										"id": 1630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1629,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1631,
												"src": "3879:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1628,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3879:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3878:9:5"
									},
									"scope": 1632,
									"src": "3828:60:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1633,
							"src": "2154:1737:5",
							"usedErrors": []
						}
					],
					"src": "126:3767:5"
				},
				"id": 5
			},
			"interfaces/ITimeFactory.sol": {
				"ast": {
					"absolutePath": "interfaces/ITimeFactory.sol",
					"exportedSymbols": {
						"ITimeFactory": [
							1657
						]
					},
					"id": 1658,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1634,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "31:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ITimeFactory",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1657,
							"linearizedBaseContracts": [
								1657
							],
							"name": "ITimeFactory",
							"nameLocation": "68:12:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "a8e5862d",
									"id": 1639,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getLastId",
									"nameLocation": "121:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1635,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "130:2:6"
									},
									"returnParameters": {
										"id": 1638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1637,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1639,
												"src": "154:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "154:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "153:9:6"
									},
									"scope": 1657,
									"src": "112:51:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "54e8a20a",
									"id": 1646,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getContractMes",
									"nameLocation": "229:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1641,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "252:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "244:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "244:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "243:13:6"
									},
									"returnParameters": {
										"id": 1645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1644,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "278:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1643,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "278:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "277:9:6"
									},
									"scope": 1657,
									"src": "220:67:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "10c1ceeb",
									"id": 1651,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "thisFeeAddress",
									"nameLocation": "328:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1647,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "342:2:6"
									},
									"returnParameters": {
										"id": 1650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1649,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "366:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "366:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "365:9:6"
									},
									"scope": 1657,
									"src": "319:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e7c9922f",
									"id": 1656,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "thisOwner",
									"nameLocation": "409:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1652,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "418:2:6"
									},
									"returnParameters": {
										"id": 1655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1654,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1656,
												"src": "442:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1653,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "442:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "441:9:6"
									},
									"scope": 1657,
									"src": "400:51:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1658,
							"src": "58:396:6",
							"usedErrors": []
						}
					],
					"src": "31:423:6"
				},
				"id": 6
			},
			"interfaces/ITimeMarket.sol": {
				"ast": {
					"absolutePath": "interfaces/ITimeMarket.sol",
					"exportedSymbols": {
						"ITimeMarket": [
							1753
						]
					},
					"id": 1754,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1659,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "31:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ITimeMarket",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": true,
							"id": 1753,
							"linearizedBaseContracts": [
								1753
							],
							"name": "ITimeMarket",
							"nameLocation": "69:11:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ITimeMarket.doState",
									"id": 1663,
									"members": [
										{
											"id": 1660,
											"name": "buy",
											"nameLocation": "100:3:7",
											"nodeType": "EnumValue",
											"src": "100:3:7"
										},
										{
											"id": 1661,
											"name": "sell",
											"nameLocation": "104:4:7",
											"nodeType": "EnumValue",
											"src": "104:4:7"
										},
										{
											"id": 1662,
											"name": "repay",
											"nameLocation": "109:5:7",
											"nodeType": "EnumValue",
											"src": "109:5:7"
										}
									],
									"name": "doState",
									"nameLocation": "92:7:7",
									"nodeType": "EnumDefinition",
									"src": "87:28:7"
								},
								{
									"canonicalName": "ITimeMarket.tradeState",
									"id": 1669,
									"members": [
										{
											"id": 1664,
											"name": "buying",
											"nameLocation": "139:6:7",
											"nodeType": "EnumValue",
											"src": "139:6:7"
										},
										{
											"id": 1665,
											"name": "selling",
											"nameLocation": "146:7:7",
											"nodeType": "EnumValue",
											"src": "146:7:7"
										},
										{
											"id": 1666,
											"name": "found",
											"nameLocation": "154:5:7",
											"nodeType": "EnumValue",
											"src": "154:5:7"
										},
										{
											"id": 1667,
											"name": "done",
											"nameLocation": "160:4:7",
											"nodeType": "EnumValue",
											"src": "160:4:7"
										},
										{
											"id": 1668,
											"name": "inexistence",
											"nameLocation": "165:11:7",
											"nodeType": "EnumValue",
											"src": "165:11:7"
										}
									],
									"name": "tradeState",
									"nameLocation": "128:10:7",
									"nodeType": "EnumDefinition",
									"src": "123:54:7"
								},
								{
									"canonicalName": "ITimeMarket.tradeMes",
									"id": 1689,
									"members": [
										{
											"constant": false,
											"id": 1671,
											"mutability": "mutable",
											"name": "tradeId",
											"nameLocation": "232:7:7",
											"nodeType": "VariableDeclaration",
											"scope": 1689,
											"src": "225:14:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 1670,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "225:6:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1673,
											"mutability": "mutable",
											"name": "price",
											"nameLocation": "257:5:7",
											"nodeType": "VariableDeclaration",
											"scope": 1689,
											"src": "250:12:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 1672,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "250:6:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1675,
											"mutability": "mutable",
											"name": "time",
											"nameLocation": "315:4:7",
											"nodeType": "VariableDeclaration",
											"scope": 1689,
											"src": "308:11:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint56",
												"typeString": "uint56"
											},
											"typeName": {
												"id": 1674,
												"name": "uint56",
												"nodeType": "ElementaryTypeName",
												"src": "308:6:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint56",
													"typeString": "uint56"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1677,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "366:6:7",
											"nodeType": "VariableDeclaration",
											"scope": 1689,
											"src": "358:14:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 1676,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "358:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1679,
											"mutability": "mutable",
											"name": "tokenOneAmount",
											"nameLocation": "418:14:7",
											"nodeType": "VariableDeclaration",
											"scope": 1689,
											"src": "410:22:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1678,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "410:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1681,
											"mutability": "mutable",
											"name": "tokenAddress",
											"nameLocation": "468:12:7",
											"nodeType": "VariableDeclaration",
											"scope": 1689,
											"src": "460:20:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1680,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "460:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1683,
											"mutability": "mutable",
											"name": "buyerAddress",
											"nameLocation": "499:12:7",
											"nodeType": "VariableDeclaration",
											"scope": 1689,
											"src": "491:20:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1682,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "491:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1685,
											"mutability": "mutable",
											"name": "solderAddress",
											"nameLocation": "530:13:7",
											"nodeType": "VariableDeclaration",
											"scope": 1689,
											"src": "522:21:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1684,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "522:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1688,
											"mutability": "mutable",
											"name": "_tradeState",
											"nameLocation": "565:11:7",
											"nodeType": "VariableDeclaration",
											"scope": 1689,
											"src": "554:22:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_tradeState_$1669",
												"typeString": "enum ITimeMarket.tradeState"
											},
											"typeName": {
												"id": 1687,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1686,
													"name": "tradeState",
													"nameLocations": [
														"554:10:7"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1669,
													"src": "554:10:7"
												},
												"referencedDeclaration": 1669,
												"src": "554:10:7",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_tradeState_$1669",
													"typeString": "enum ITimeMarket.tradeState"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "tradeMes",
									"nameLocation": "206:8:7",
									"nodeType": "StructDefinition",
									"scope": 1753,
									"src": "199:385:7",
									"visibility": "public"
								},
								{
									"canonicalName": "ITimeMarket.userDeposite",
									"id": 1702,
									"members": [
										{
											"constant": false,
											"id": 1691,
											"mutability": "mutable",
											"name": "tradeId",
											"nameLocation": "629:7:7",
											"nodeType": "VariableDeclaration",
											"scope": 1702,
											"src": "622:14:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 1690,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "622:6:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1693,
											"mutability": "mutable",
											"name": "startTime",
											"nameLocation": "654:9:7",
											"nodeType": "VariableDeclaration",
											"scope": 1702,
											"src": "647:16:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint56",
												"typeString": "uint56"
											},
											"typeName": {
												"id": 1692,
												"name": "uint56",
												"nodeType": "ElementaryTypeName",
												"src": "647:6:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint56",
													"typeString": "uint56"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1695,
											"mutability": "mutable",
											"name": "endTime",
											"nameLocation": "681:7:7",
											"nodeType": "VariableDeclaration",
											"scope": 1702,
											"src": "674:14:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint56",
												"typeString": "uint56"
											},
											"typeName": {
												"id": 1694,
												"name": "uint56",
												"nodeType": "ElementaryTypeName",
												"src": "674:6:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint56",
													"typeString": "uint56"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1697,
											"mutability": "mutable",
											"name": "depositeAmount",
											"nameLocation": "707:14:7",
											"nodeType": "VariableDeclaration",
											"scope": 1702,
											"src": "699:22:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1696,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "699:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1699,
											"mutability": "mutable",
											"name": "earnAmount",
											"nameLocation": "740:10:7",
											"nodeType": "VariableDeclaration",
											"scope": 1702,
											"src": "732:18:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1698,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "732:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1701,
											"mutability": "mutable",
											"name": "user",
											"nameLocation": "769:4:7",
											"nodeType": "VariableDeclaration",
											"scope": 1702,
											"src": "761:12:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1700,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "761:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "userDeposite",
									"nameLocation": "599:12:7",
									"nodeType": "StructDefinition",
									"scope": 1753,
									"src": "592:189:7",
									"visibility": "public"
								},
								{
									"errorSelector": "e008b5f9",
									"id": 1704,
									"name": "NotEnoughAmount",
									"nameLocation": "832:15:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1703,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "847:2:7"
									},
									"src": "826:24:7"
								},
								{
									"errorSelector": "42327169",
									"id": 1706,
									"name": "AlreadyInjectToken",
									"nameLocation": "909:18:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1705,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "927:2:7"
									},
									"src": "903:27:7"
								},
								{
									"errorSelector": "de4461cd",
									"id": 1708,
									"name": "NotInjectToken",
									"nameLocation": "989:14:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1707,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1003:2:7"
									},
									"src": "983:23:7"
								},
								{
									"errorSelector": "ee1ea895",
									"id": 1710,
									"name": "OverTime",
									"nameLocation": "1051:8:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1709,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1059:2:7"
									},
									"src": "1045:17:7"
								},
								{
									"errorSelector": "bc53a716",
									"id": 1712,
									"name": "NotEndTime",
									"nameLocation": "1100:10:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1110:2:7"
									},
									"src": "1094:19:7"
								},
								{
									"errorSelector": "472e017e",
									"id": 1714,
									"name": "NotBuyer",
									"nameLocation": "1148:8:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1713,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1156:2:7"
									},
									"src": "1142:17:7"
								},
								{
									"errorSelector": "d7c498bf",
									"id": 1716,
									"name": "NorSolder",
									"nameLocation": "1194:9:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1715,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1203:2:7"
									},
									"src": "1188:18:7"
								},
								{
									"errorSelector": "5b949435",
									"id": 1718,
									"name": "TradeSuccess",
									"nameLocation": "1238:12:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1717,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1250:2:7"
									},
									"src": "1232:21:7"
								},
								{
									"errorSelector": "c0b57b34",
									"id": 1720,
									"name": "FailTrade",
									"nameLocation": "1285:9:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1719,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1294:2:7"
									},
									"src": "1279:18:7"
								},
								{
									"errorSelector": "dfbe32c3",
									"id": 1722,
									"name": "InjectAaveError",
									"nameLocation": "1333:15:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1721,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1348:2:7"
									},
									"src": "1327:24:7"
								},
								{
									"errorSelector": "a7270140",
									"id": 1724,
									"name": "AlreadyWithdraw",
									"nameLocation": "1389:15:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1723,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:2:7"
									},
									"src": "1383:24:7"
								},
								{
									"errorSelector": "dc73e132",
									"id": 1726,
									"name": "FailTransfer",
									"nameLocation": "1444:12:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1725,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1456:2:7"
									},
									"src": "1438:21:7"
								},
								{
									"anonymous": false,
									"eventSelector": "ba9b7d12a3ebb014d737e42021fe275fae4c77d44a0aabcb82a06389a8cd99ac",
									"id": 1734,
									"name": "withdrawAipdrop",
									"nameLocation": "1486:15:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1728,
												"indexed": false,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1510:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1734,
												"src": "1502:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1727,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1502:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1730,
												"indexed": false,
												"mutability": "mutable",
												"name": "_time",
												"nameLocation": "1526:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1734,
												"src": "1518:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1518:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1732,
												"indexed": false,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "1540:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1734,
												"src": "1532:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1731,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1532:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1501:52:7"
									},
									"src": "1480:74:7"
								},
								{
									"anonymous": false,
									"eventSelector": "4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f",
									"id": 1742,
									"name": "Mint",
									"nameLocation": "1566:4:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1736,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1587:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1742,
												"src": "1571:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1735,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1571:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1738,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1600:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1742,
												"src": "1595:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1737,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1595:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1740,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1614:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1742,
												"src": "1609:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1739,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1609:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1570:52:7"
									},
									"src": "1560:63:7"
								},
								{
									"anonymous": false,
									"eventSelector": "dccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496",
									"id": 1752,
									"name": "Burn",
									"nameLocation": "1635:4:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1744,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1656:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1752,
												"src": "1640:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1640:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1746,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1669:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1752,
												"src": "1664:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1745,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1664:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1748,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1683:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1752,
												"src": "1678:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1747,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1678:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1750,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1708:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1752,
												"src": "1692:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1749,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1692:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1639:72:7"
									},
									"src": "1629:83:7"
								}
							],
							"scope": 1754,
							"src": "59:1656:7",
							"usedErrors": [
								1704,
								1706,
								1708,
								1710,
								1712,
								1714,
								1716,
								1718,
								1720,
								1722,
								1724,
								1726
							]
						}
					],
					"src": "31:1684:7"
				},
				"id": 7
			},
			"libraries/Address.sol": {
				"ast": {
					"absolutePath": "libraries/Address.sol",
					"exportedSymbols": {
						"Address": [
							2083
						]
					},
					"id": 2084,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1755,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "104:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1756,
								"nodeType": "StructuredDocumentation",
								"src": "132:69:8",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 2083,
							"linearizedBaseContracts": [
								2083
							],
							"name": "Address",
							"nameLocation": "211:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1770,
										"nodeType": "Block",
										"src": "1518:260:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1764,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1759,
																"src": "1747:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1765,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1755:4:8",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1747:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1766,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1760:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1747:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1767,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1769:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1747:23:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1763,
												"id": 1769,
												"nodeType": "Return",
												"src": "1740:30:8"
											}
										]
									},
									"documentation": {
										"id": 1757,
										"nodeType": "StructuredDocumentation",
										"src": "226:1220:8",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1771,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1461:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1759,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1480:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1771,
												"src": "1472:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1758,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1472:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1471:17:8"
									},
									"returnParameters": {
										"id": 1763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1762,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1771,
												"src": "1512:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1761,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1512:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1511:6:8"
									},
									"scope": 2083,
									"src": "1452:326:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1804,
										"nodeType": "Block",
										"src": "2782:246:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1786,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1782,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2809:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$2083",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$2083",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1781,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2801:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1780,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2801:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1783,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2801:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1784,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2815:7:8",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2801:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1785,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1776,
																"src": "2826:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2801:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1787,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2834:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1779,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2793:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2793:73:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1789,
												"nodeType": "ExpressionStatement",
												"src": "2793:73:8"
											},
											{
												"assignments": [
													1791,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1791,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2885:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1804,
														"src": "2880:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1790,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2880:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1798,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1796,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2928:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1792,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1774,
																"src": "2898:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1793,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2908:4:8",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2898:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1795,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1794,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1776,
																"src": "2920:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2898:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2898:33:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2879:52:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1800,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1791,
															"src": "2950:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1801,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2959:60:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1799,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2942:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2942:78:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1803,
												"nodeType": "ExpressionStatement",
												"src": "2942:78:8"
											}
										]
									},
									"documentation": {
										"id": 1772,
										"nodeType": "StructuredDocumentation",
										"src": "1786:919:8",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1805,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2720:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1774,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2746:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1805,
												"src": "2730:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1773,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2730:15:8",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1776,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2765:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1805,
												"src": "2757:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1775,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2757:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2729:43:8"
									},
									"returnParameters": {
										"id": 1778,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2782:0:8"
									},
									"scope": 2083,
									"src": "2711:317:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1822,
										"nodeType": "Block",
										"src": "3879:98:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1816,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1808,
															"src": "3919:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1817,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1810,
															"src": "3927:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1818,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3933:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1819,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3936:32:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1815,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1863,
															1907
														],
														"referencedDeclaration": 1907,
														"src": "3897:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3897:72:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1814,
												"id": 1821,
												"nodeType": "Return",
												"src": "3890:79:8"
											}
										]
									},
									"documentation": {
										"id": 1806,
										"nodeType": "StructuredDocumentation",
										"src": "3036:748:8",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1823,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3799:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1808,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3820:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1823,
												"src": "3812:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1807,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3812:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1810,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3841:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1823,
												"src": "3828:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1809,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3828:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3811:35:8"
									},
									"returnParameters": {
										"id": 1814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1813,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1823,
												"src": "3865:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1812,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3865:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:14:8"
									},
									"scope": 2083,
									"src": "3790:187:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1842,
										"nodeType": "Block",
										"src": "4358:78:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1836,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1826,
															"src": "4398:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1837,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1828,
															"src": "4406:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1838,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4412:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1839,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1830,
															"src": "4415:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1835,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1863,
															1907
														],
														"referencedDeclaration": 1907,
														"src": "4376:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4376:52:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1834,
												"id": 1841,
												"nodeType": "Return",
												"src": "4369:59:8"
											}
										]
									},
									"documentation": {
										"id": 1824,
										"nodeType": "StructuredDocumentation",
										"src": "3985:216:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1843,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "4216:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1826,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4247:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "4239:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1825,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4239:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1828,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4277:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "4264:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1827,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4264:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1830,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4306:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "4292:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1829,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4292:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4228:97:8"
									},
									"returnParameters": {
										"id": 1834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1833,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "4344:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1832,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4344:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4343:14:8"
									},
									"scope": 2083,
									"src": "4207:229:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1862,
										"nodeType": "Block",
										"src": "4924:113:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1856,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1846,
															"src": "4964:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1857,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1848,
															"src": "4972:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1858,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1850,
															"src": "4978:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1859,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4985:43:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1855,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1863,
															1907
														],
														"referencedDeclaration": 1907,
														"src": "4942:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4942:87:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1854,
												"id": 1861,
												"nodeType": "Return",
												"src": "4935:94:8"
											}
										]
									},
									"documentation": {
										"id": 1844,
										"nodeType": "StructuredDocumentation",
										"src": "4444:361:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1863,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4820:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1846,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4850:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1863,
												"src": "4842:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1845,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4842:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1848,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4871:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1863,
												"src": "4858:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1847,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4858:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1850,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4885:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1863,
												"src": "4877:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1849,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4877:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4841:50:8"
									},
									"returnParameters": {
										"id": 1854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1853,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1863,
												"src": "4910:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1852,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4910:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4909:14:8"
									},
									"scope": 2083,
									"src": "4811:226:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1906,
										"nodeType": "Block",
										"src": "5477:271:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1884,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1880,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5504:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$2083",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$2083",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1879,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5496:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1878,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5496:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1881,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5496:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1882,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5510:7:8",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5496:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1883,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1870,
																"src": "5521:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5496:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1885,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5528:40:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1877,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5488:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5488:81:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1887,
												"nodeType": "ExpressionStatement",
												"src": "5488:81:8"
											},
											{
												"assignments": [
													1889,
													1891
												],
												"declarations": [
													{
														"constant": false,
														"id": 1889,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5586:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1906,
														"src": "5581:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1888,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5581:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1891,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5608:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1906,
														"src": "5595:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1890,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5595:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1898,
												"initialValue": {
													"arguments": [
														{
															"id": 1896,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1868,
															"src": "5648:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1892,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1866,
																"src": "5622:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1893,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5629:4:8",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5622:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1895,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1894,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1870,
																"src": "5641:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5622:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5622:31:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5580:73:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1900,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1866,
															"src": "5698:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1901,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1889,
															"src": "5706:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1902,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1891,
															"src": "5715:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1903,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1872,
															"src": "5727:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1899,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2038,
														"src": "5671:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5671:69:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1876,
												"id": 1905,
												"nodeType": "Return",
												"src": "5664:76:8"
											}
										]
									},
									"documentation": {
										"id": 1864,
										"nodeType": "StructuredDocumentation",
										"src": "5045:242:8",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1907,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5302:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1866,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5342:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1907,
												"src": "5334:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5334:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1868,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5372:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1907,
												"src": "5359:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1867,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5359:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1870,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5395:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1907,
												"src": "5387:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5387:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1872,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5425:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1907,
												"src": "5411:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1871,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5411:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5323:121:8"
									},
									"returnParameters": {
										"id": 1876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1875,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1907,
												"src": "5463:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1874,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5463:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5462:14:8"
									},
									"scope": 2083,
									"src": "5293:455:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1923,
										"nodeType": "Block",
										"src": "6033:99:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1918,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1910,
															"src": "6070:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1919,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1912,
															"src": "6078:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1920,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6084:39:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1917,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1924,
															1953
														],
														"referencedDeclaration": 1953,
														"src": "6051:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6051:73:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1916,
												"id": 1922,
												"nodeType": "Return",
												"src": "6044:80:8"
											}
										]
									},
									"documentation": {
										"id": 1908,
										"nodeType": "StructuredDocumentation",
										"src": "5756:171:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5942:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1910,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5969:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1924,
												"src": "5961:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1909,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5961:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1912,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5990:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1924,
												"src": "5977:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1911,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5977:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5960:35:8"
									},
									"returnParameters": {
										"id": 1916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1915,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1924,
												"src": "6019:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1914,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6019:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6018:14:8"
									},
									"scope": 2083,
									"src": "5933:199:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1952,
										"nodeType": "Block",
										"src": "6486:171:8",
										"statements": [
											{
												"assignments": [
													1937,
													1939
												],
												"declarations": [
													{
														"constant": false,
														"id": 1937,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6503:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1952,
														"src": "6498:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1936,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6498:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1939,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6525:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1952,
														"src": "6512:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1938,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6512:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1944,
												"initialValue": {
													"arguments": [
														{
															"id": 1942,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1929,
															"src": "6557:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1940,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1927,
															"src": "6539:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1941,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6546:10:8",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6539:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6539:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6497:65:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1946,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1927,
															"src": "6607:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1947,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1937,
															"src": "6615:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1948,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1939,
															"src": "6624:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1949,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1931,
															"src": "6636:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1945,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2038,
														"src": "6580:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6580:69:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1935,
												"id": 1951,
												"nodeType": "Return",
												"src": "6573:76:8"
											}
										]
									},
									"documentation": {
										"id": 1925,
										"nodeType": "StructuredDocumentation",
										"src": "6140:178:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1953,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6333:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1927,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6370:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1953,
												"src": "6362:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1926,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6362:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1929,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6400:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1953,
												"src": "6387:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1928,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6387:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1931,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6429:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1953,
												"src": "6415:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1930,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6415:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6351:97:8"
									},
									"returnParameters": {
										"id": 1935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1934,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1953,
												"src": "6472:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1933,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6472:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6471:14:8"
									},
									"scope": 2083,
									"src": "6324:333:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1969,
										"nodeType": "Block",
										"src": "6941:103:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1964,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1956,
															"src": "6980:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1965,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1958,
															"src": "6988:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1966,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6994:41:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1963,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1970,
															1999
														],
														"referencedDeclaration": 1999,
														"src": "6959:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6959:77:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1962,
												"id": 1968,
												"nodeType": "Return",
												"src": "6952:84:8"
											}
										]
									},
									"documentation": {
										"id": 1954,
										"nodeType": "StructuredDocumentation",
										"src": "6665:173:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1970,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6853:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1956,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6882:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1970,
												"src": "6874:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1955,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6874:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1958,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6903:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1970,
												"src": "6890:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1957,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6890:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6873:35:8"
									},
									"returnParameters": {
										"id": 1962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1961,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1970,
												"src": "6927:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1960,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6927:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6926:14:8"
									},
									"scope": 2083,
									"src": "6844:200:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1998,
										"nodeType": "Block",
										"src": "7397:173:8",
										"statements": [
											{
												"assignments": [
													1983,
													1985
												],
												"declarations": [
													{
														"constant": false,
														"id": 1983,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7414:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1998,
														"src": "7409:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1982,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7409:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1985,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7436:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1998,
														"src": "7423:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1984,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7423:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1990,
												"initialValue": {
													"arguments": [
														{
															"id": 1988,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1975,
															"src": "7470:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1986,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1973,
															"src": "7450:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1987,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7457:12:8",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7450:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7450:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7408:67:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1992,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1973,
															"src": "7520:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1993,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1983,
															"src": "7528:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1994,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1985,
															"src": "7537:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1995,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1977,
															"src": "7549:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1991,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2038,
														"src": "7493:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7493:69:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1981,
												"id": 1997,
												"nodeType": "Return",
												"src": "7486:76:8"
											}
										]
									},
									"documentation": {
										"id": 1971,
										"nodeType": "StructuredDocumentation",
										"src": "7052:180:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1999,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7247:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1973,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7286:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1999,
												"src": "7278:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1972,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7278:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1975,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7316:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1999,
												"src": "7303:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1974,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7303:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1977,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7345:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1999,
												"src": "7331:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1976,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7331:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7267:97:8"
									},
									"returnParameters": {
										"id": 1981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1980,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1999,
												"src": "7383:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1979,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7383:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7382:14:8"
									},
									"scope": 2083,
									"src": "7238:332:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2037,
										"nodeType": "Block",
										"src": "8065:445:8",
										"statements": [
											{
												"condition": {
													"id": 2013,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2004,
													"src": "8080:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2035,
													"nodeType": "Block",
													"src": "8443:60:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2031,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2006,
																		"src": "8466:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 2032,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2008,
																		"src": "8478:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2030,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2082,
																	"src": "8458:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 2033,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8458:33:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2034,
															"nodeType": "ExpressionStatement",
															"src": "8458:33:8"
														}
													]
												},
												"id": 2036,
												"nodeType": "IfStatement",
												"src": "8076:427:8",
												"trueBody": {
													"id": 2029,
													"nodeType": "Block",
													"src": "8089:348:8",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2017,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2014,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2006,
																		"src": "8108:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2015,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8119:6:8",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "8108:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2016,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8129:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8108:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2026,
															"nodeType": "IfStatement",
															"src": "8104:290:8",
															"trueBody": {
																"id": 2025,
																"nodeType": "Block",
																"src": "8132:262:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 2020,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2002,
																							"src": "8337:6:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 2019,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1771,
																						"src": "8326:10:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 2021,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8326:18:8",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 2022,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8346:31:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 2018,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8318:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 2023,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8318:60:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2024,
																		"nodeType": "ExpressionStatement",
																		"src": "8318:60:8"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 2027,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2006,
																"src": "8415:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2012,
															"id": 2028,
															"nodeType": "Return",
															"src": "8408:17:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2000,
										"nodeType": "StructuredDocumentation",
										"src": "7578:282:8",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 2038,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7875:26:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2002,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7920:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2038,
												"src": "7912:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2001,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7912:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2004,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7942:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2038,
												"src": "7937:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2003,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7937:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2006,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7973:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 2038,
												"src": "7960:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2005,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7960:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2008,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8008:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 2038,
												"src": "7994:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2007,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7994:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7901:126:8"
									},
									"returnParameters": {
										"id": 2012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2011,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2038,
												"src": "8051:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2010,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8051:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8050:14:8"
									},
									"scope": 2083,
									"src": "7866:644:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2061,
										"nodeType": "Block",
										"src": "8903:141:8",
										"statements": [
											{
												"condition": {
													"id": 2050,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2041,
													"src": "8918:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2059,
													"nodeType": "Block",
													"src": "8977:60:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2055,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2043,
																		"src": "9000:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 2056,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2045,
																		"src": "9012:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2054,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2082,
																	"src": "8992:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 2057,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8992:33:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2058,
															"nodeType": "ExpressionStatement",
															"src": "8992:33:8"
														}
													]
												},
												"id": 2060,
												"nodeType": "IfStatement",
												"src": "8914:123:8",
												"trueBody": {
													"id": 2053,
													"nodeType": "Block",
													"src": "8927:44:8",
													"statements": [
														{
															"expression": {
																"id": 2051,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2043,
																"src": "8949:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2049,
															"id": 2052,
															"nodeType": "Return",
															"src": "8942:17:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2039,
										"nodeType": "StructuredDocumentation",
										"src": "8518:215:8",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 2062,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8748:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2041,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8780:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2062,
												"src": "8775:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2040,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8775:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2043,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8811:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 2062,
												"src": "8798:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2042,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8798:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2045,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8846:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 2062,
												"src": "8832:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2044,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8832:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8764:101:8"
									},
									"returnParameters": {
										"id": 2049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2048,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2062,
												"src": "8889:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2047,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8889:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8888:14:8"
									},
									"scope": 2083,
									"src": "8739:305:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2081,
										"nodeType": "Block",
										"src": "9135:469:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2069,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2064,
															"src": "9213:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2070,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9224:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "9213:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2071,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9233:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9213:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2079,
													"nodeType": "Block",
													"src": "9550:47:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2076,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2066,
																		"src": "9572:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2075,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9565:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 2077,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9565:20:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2078,
															"nodeType": "ExpressionStatement",
															"src": "9565:20:8"
														}
													]
												},
												"id": 2080,
												"nodeType": "IfStatement",
												"src": "9209:388:8",
												"trueBody": {
													"id": 2074,
													"nodeType": "Block",
													"src": "9236:308:8",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "9397:136:8",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9416:40:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9445:10:8"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "9439:5:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9439:17:8"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "9420:15:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9485:2:8",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9489:10:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9481:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9481:19:8"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9502:15:8"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9474:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9474:44:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9474:44:8"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "paris",
															"externalReferences": [
																{
																	"declaration": 2064,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9445:10:8",
																	"valueSize": 1
																},
																{
																	"declaration": 2064,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9489:10:8",
																	"valueSize": 1
																}
															],
															"id": 2073,
															"nodeType": "InlineAssembly",
															"src": "9388:145:8"
														}
													]
												}
											}
										]
									},
									"id": 2082,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "9061:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2064,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "9082:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 2082,
												"src": "9069:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2063,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9069:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2066,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "9108:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 2082,
												"src": "9094:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2065,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9094:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9068:53:8"
									},
									"returnParameters": {
										"id": 2068,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9135:0:8"
									},
									"scope": 2083,
									"src": "9052:552:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2084,
							"src": "203:9404:8",
							"usedErrors": []
						}
					],
					"src": "104:9505:8"
				},
				"id": 8
			},
			"libraries/DataTypes.sol": {
				"ast": {
					"absolutePath": "libraries/DataTypes.sol",
					"exportedSymbols": {
						"DataTypes": [
							2435
						]
					},
					"id": 2436,
					"license": "BUSL-1.1",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2085,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "38:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "DataTypes",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 2435,
							"linearizedBaseContracts": [
								2435
							],
							"name": "DataTypes",
							"nameLocation": "73:9:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "DataTypes.ReserveData",
									"id": 2117,
									"members": [
										{
											"constant": false,
											"id": 2088,
											"mutability": "mutable",
											"name": "configuration",
											"nameLocation": "178:13:9",
											"nodeType": "VariableDeclaration",
											"scope": 2117,
											"src": "154:37:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2120_storage_ptr",
												"typeString": "struct DataTypes.ReserveConfigurationMap"
											},
											"typeName": {
												"id": 2087,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2086,
													"name": "ReserveConfigurationMap",
													"nameLocations": [
														"154:23:9"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2120,
													"src": "154:23:9"
												},
												"referencedDeclaration": 2120,
												"src": "154:23:9",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2120_storage_ptr",
													"typeString": "struct DataTypes.ReserveConfigurationMap"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2090,
											"mutability": "mutable",
											"name": "liquidityIndex",
											"nameLocation": "251:14:9",
											"nodeType": "VariableDeclaration",
											"scope": 2117,
											"src": "243:22:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 2089,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "243:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2092,
											"mutability": "mutable",
											"name": "currentLiquidityRate",
											"nameLocation": "329:20:9",
											"nodeType": "VariableDeclaration",
											"scope": 2117,
											"src": "321:28:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 2091,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "321:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2094,
											"mutability": "mutable",
											"name": "variableBorrowIndex",
											"nameLocation": "411:19:9",
											"nodeType": "VariableDeclaration",
											"scope": 2117,
											"src": "403:27:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 2093,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "403:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2096,
											"mutability": "mutable",
											"name": "currentVariableBorrowRate",
											"nameLocation": "503:25:9",
											"nodeType": "VariableDeclaration",
											"scope": 2117,
											"src": "495:33:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 2095,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "495:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2098,
											"mutability": "mutable",
											"name": "currentStableBorrowRate",
											"nameLocation": "599:23:9",
											"nodeType": "VariableDeclaration",
											"scope": 2117,
											"src": "591:31:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 2097,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "591:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2100,
											"mutability": "mutable",
											"name": "lastUpdateTimestamp",
											"nameLocation": "668:19:9",
											"nodeType": "VariableDeclaration",
											"scope": 2117,
											"src": "661:26:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint40",
												"typeString": "uint40"
											},
											"typeName": {
												"id": 2099,
												"name": "uint40",
												"nodeType": "ElementaryTypeName",
												"src": "661:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint40",
													"typeString": "uint40"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2102,
											"mutability": "mutable",
											"name": "id",
											"nameLocation": "790:2:9",
											"nodeType": "VariableDeclaration",
											"scope": 2117,
											"src": "783:9:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 2101,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "783:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2104,
											"mutability": "mutable",
											"name": "aTokenAddress",
											"nameLocation": "829:13:9",
											"nodeType": "VariableDeclaration",
											"scope": 2117,
											"src": "821:21:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2103,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "821:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2106,
											"mutability": "mutable",
											"name": "stableDebtTokenAddress",
											"nameLocation": "888:22:9",
											"nodeType": "VariableDeclaration",
											"scope": 2117,
											"src": "880:30:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2105,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "880:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2108,
											"mutability": "mutable",
											"name": "variableDebtTokenAddress",
											"nameLocation": "958:24:9",
											"nodeType": "VariableDeclaration",
											"scope": 2117,
											"src": "950:32:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2107,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "950:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2110,
											"mutability": "mutable",
											"name": "interestRateStrategyAddress",
											"nameLocation": "1042:27:9",
											"nodeType": "VariableDeclaration",
											"scope": 2117,
											"src": "1034:35:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2109,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1034:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2112,
											"mutability": "mutable",
											"name": "accruedToTreasury",
											"nameLocation": "1128:17:9",
											"nodeType": "VariableDeclaration",
											"scope": 2117,
											"src": "1120:25:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 2111,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "1120:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2114,
											"mutability": "mutable",
											"name": "unbacked",
											"nameLocation": "1236:8:9",
											"nodeType": "VariableDeclaration",
											"scope": 2117,
											"src": "1228:16:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 2113,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "1228:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2116,
											"mutability": "mutable",
											"name": "isolationModeTotalDebt",
											"nameLocation": "1333:22:9",
											"nodeType": "VariableDeclaration",
											"scope": 2117,
											"src": "1325:30:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 2115,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "1325:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ReserveData",
									"nameLocation": "95:11:9",
									"nodeType": "StructDefinition",
									"scope": 2435,
									"src": "88:1273:9",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.ReserveConfigurationMap",
									"id": 2120,
									"members": [
										{
											"constant": false,
											"id": 2119,
											"mutability": "mutable",
											"name": "data",
											"nameLocation": "2319:4:9",
											"nodeType": "VariableDeclaration",
											"scope": 2120,
											"src": "2311:12:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2118,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2311:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ReserveConfigurationMap",
									"nameLocation": "1374:23:9",
									"nodeType": "StructDefinition",
									"scope": 2435,
									"src": "1367:962:9",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.UserConfigurationMap",
									"id": 2124,
									"members": [
										{
											"constant": false,
											"id": 2123,
											"mutability": "mutable",
											"name": "data",
											"nameLocation": "2646:4:9",
											"nodeType": "VariableDeclaration",
											"scope": 2124,
											"src": "2638:12:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2122,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2638:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserConfigurationMap",
									"nameLocation": "2342:20:9",
									"nodeType": "StructDefinition",
									"scope": 2435,
									"src": "2335:321:9",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.EModeCategory",
									"id": 2135,
									"members": [
										{
											"constant": false,
											"id": 2126,
											"mutability": "mutable",
											"name": "ltv",
											"nameLocation": "2768:3:9",
											"nodeType": "VariableDeclaration",
											"scope": 2135,
											"src": "2761:10:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 2125,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "2761:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2128,
											"mutability": "mutable",
											"name": "liquidationThreshold",
											"nameLocation": "2785:20:9",
											"nodeType": "VariableDeclaration",
											"scope": 2135,
											"src": "2778:27:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 2127,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "2778:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2130,
											"mutability": "mutable",
											"name": "liquidationBonus",
											"nameLocation": "2819:16:9",
											"nodeType": "VariableDeclaration",
											"scope": 2135,
											"src": "2812:23:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 2129,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "2812:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2132,
											"mutability": "mutable",
											"name": "priceSource",
											"nameLocation": "2962:11:9",
											"nodeType": "VariableDeclaration",
											"scope": 2135,
											"src": "2954:19:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2131,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2954:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2134,
											"mutability": "mutable",
											"name": "label",
											"nameLocation": "2987:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 2135,
											"src": "2980:12:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 2133,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "2980:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "EModeCategory",
									"nameLocation": "2669:13:9",
									"nodeType": "StructDefinition",
									"scope": 2435,
									"src": "2662:336:9",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.InterestRateMode",
									"id": 2139,
									"members": [
										{
											"id": 2136,
											"name": "NONE",
											"nameLocation": "3027:4:9",
											"nodeType": "EnumValue",
											"src": "3027:4:9"
										},
										{
											"id": 2137,
											"name": "STABLE",
											"nameLocation": "3033:6:9",
											"nodeType": "EnumValue",
											"src": "3033:6:9"
										},
										{
											"id": 2138,
											"name": "VARIABLE",
											"nameLocation": "3041:8:9",
											"nodeType": "EnumValue",
											"src": "3041:8:9"
										}
									],
									"name": "InterestRateMode",
									"nameLocation": "3009:16:9",
									"nodeType": "EnumDefinition",
									"src": "3004:46:9"
								},
								{
									"canonicalName": "DataTypes.ReserveCache",
									"id": 2181,
									"members": [
										{
											"constant": false,
											"id": 2141,
											"mutability": "mutable",
											"name": "currScaledVariableDebt",
											"nameLocation": "3091:22:9",
											"nodeType": "VariableDeclaration",
											"scope": 2181,
											"src": "3083:30:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2140,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3083:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2143,
											"mutability": "mutable",
											"name": "nextScaledVariableDebt",
											"nameLocation": "3128:22:9",
											"nodeType": "VariableDeclaration",
											"scope": 2181,
											"src": "3120:30:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2142,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3120:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2145,
											"mutability": "mutable",
											"name": "currPrincipalStableDebt",
											"nameLocation": "3165:23:9",
											"nodeType": "VariableDeclaration",
											"scope": 2181,
											"src": "3157:31:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2144,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3157:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2147,
											"mutability": "mutable",
											"name": "currAvgStableBorrowRate",
											"nameLocation": "3203:23:9",
											"nodeType": "VariableDeclaration",
											"scope": 2181,
											"src": "3195:31:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2146,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3195:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2149,
											"mutability": "mutable",
											"name": "currTotalStableDebt",
											"nameLocation": "3241:19:9",
											"nodeType": "VariableDeclaration",
											"scope": 2181,
											"src": "3233:27:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2148,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3233:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2151,
											"mutability": "mutable",
											"name": "nextAvgStableBorrowRate",
											"nameLocation": "3275:23:9",
											"nodeType": "VariableDeclaration",
											"scope": 2181,
											"src": "3267:31:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2150,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3267:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2153,
											"mutability": "mutable",
											"name": "nextTotalStableDebt",
											"nameLocation": "3313:19:9",
											"nodeType": "VariableDeclaration",
											"scope": 2181,
											"src": "3305:27:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2152,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3305:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2155,
											"mutability": "mutable",
											"name": "currLiquidityIndex",
											"nameLocation": "3347:18:9",
											"nodeType": "VariableDeclaration",
											"scope": 2181,
											"src": "3339:26:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2154,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3339:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2157,
											"mutability": "mutable",
											"name": "nextLiquidityIndex",
											"nameLocation": "3380:18:9",
											"nodeType": "VariableDeclaration",
											"scope": 2181,
											"src": "3372:26:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2156,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3372:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2159,
											"mutability": "mutable",
											"name": "currVariableBorrowIndex",
											"nameLocation": "3413:23:9",
											"nodeType": "VariableDeclaration",
											"scope": 2181,
											"src": "3405:31:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2158,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3405:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2161,
											"mutability": "mutable",
											"name": "nextVariableBorrowIndex",
											"nameLocation": "3451:23:9",
											"nodeType": "VariableDeclaration",
											"scope": 2181,
											"src": "3443:31:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2160,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3443:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2163,
											"mutability": "mutable",
											"name": "currLiquidityRate",
											"nameLocation": "3489:17:9",
											"nodeType": "VariableDeclaration",
											"scope": 2181,
											"src": "3481:25:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3481:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2165,
											"mutability": "mutable",
											"name": "currVariableBorrowRate",
											"nameLocation": "3521:22:9",
											"nodeType": "VariableDeclaration",
											"scope": 2181,
											"src": "3513:30:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2164,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3513:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2167,
											"mutability": "mutable",
											"name": "reserveFactor",
											"nameLocation": "3558:13:9",
											"nodeType": "VariableDeclaration",
											"scope": 2181,
											"src": "3550:21:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2166,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3550:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2170,
											"mutability": "mutable",
											"name": "reserveConfiguration",
											"nameLocation": "3602:20:9",
											"nodeType": "VariableDeclaration",
											"scope": 2181,
											"src": "3578:44:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2120_storage_ptr",
												"typeString": "struct DataTypes.ReserveConfigurationMap"
											},
											"typeName": {
												"id": 2169,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2168,
													"name": "ReserveConfigurationMap",
													"nameLocations": [
														"3578:23:9"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2120,
													"src": "3578:23:9"
												},
												"referencedDeclaration": 2120,
												"src": "3578:23:9",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveConfigurationMap_$2120_storage_ptr",
													"typeString": "struct DataTypes.ReserveConfigurationMap"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2172,
											"mutability": "mutable",
											"name": "aTokenAddress",
											"nameLocation": "3637:13:9",
											"nodeType": "VariableDeclaration",
											"scope": 2181,
											"src": "3629:21:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2171,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3629:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2174,
											"mutability": "mutable",
											"name": "stableDebtTokenAddress",
											"nameLocation": "3665:22:9",
											"nodeType": "VariableDeclaration",
											"scope": 2181,
											"src": "3657:30:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2173,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3657:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2176,
											"mutability": "mutable",
											"name": "variableDebtTokenAddress",
											"nameLocation": "3702:24:9",
											"nodeType": "VariableDeclaration",
											"scope": 2181,
											"src": "3694:32:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2175,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3694:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2178,
											"mutability": "mutable",
											"name": "reserveLastUpdateTimestamp",
											"nameLocation": "3740:26:9",
											"nodeType": "VariableDeclaration",
											"scope": 2181,
											"src": "3733:33:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint40",
												"typeString": "uint40"
											},
											"typeName": {
												"id": 2177,
												"name": "uint40",
												"nodeType": "ElementaryTypeName",
												"src": "3733:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint40",
													"typeString": "uint40"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2180,
											"mutability": "mutable",
											"name": "stableDebtLastUpdateTimestamp",
											"nameLocation": "3780:29:9",
											"nodeType": "VariableDeclaration",
											"scope": 2181,
											"src": "3773:36:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint40",
												"typeString": "uint40"
											},
											"typeName": {
												"id": 2179,
												"name": "uint40",
												"nodeType": "ElementaryTypeName",
												"src": "3773:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint40",
													"typeString": "uint40"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ReserveCache",
									"nameLocation": "3063:12:9",
									"nodeType": "StructDefinition",
									"scope": 2435,
									"src": "3056:759:9",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.ExecuteLiquidationCallParams",
									"id": 2200,
									"members": [
										{
											"constant": false,
											"id": 2183,
											"mutability": "mutable",
											"name": "reservesCount",
											"nameLocation": "3872:13:9",
											"nodeType": "VariableDeclaration",
											"scope": 2200,
											"src": "3864:21:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2182,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3864:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2185,
											"mutability": "mutable",
											"name": "debtToCover",
											"nameLocation": "3900:11:9",
											"nodeType": "VariableDeclaration",
											"scope": 2200,
											"src": "3892:19:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2184,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3892:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2187,
											"mutability": "mutable",
											"name": "collateralAsset",
											"nameLocation": "3926:15:9",
											"nodeType": "VariableDeclaration",
											"scope": 2200,
											"src": "3918:23:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2186,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3918:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2189,
											"mutability": "mutable",
											"name": "debtAsset",
											"nameLocation": "3956:9:9",
											"nodeType": "VariableDeclaration",
											"scope": 2200,
											"src": "3948:17:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2188,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3948:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2191,
											"mutability": "mutable",
											"name": "user",
											"nameLocation": "3980:4:9",
											"nodeType": "VariableDeclaration",
											"scope": 2200,
											"src": "3972:12:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2190,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3972:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2193,
											"mutability": "mutable",
											"name": "receiveAToken",
											"nameLocation": "3996:13:9",
											"nodeType": "VariableDeclaration",
											"scope": 2200,
											"src": "3991:18:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2192,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "3991:4:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2195,
											"mutability": "mutable",
											"name": "priceOracle",
											"nameLocation": "4024:11:9",
											"nodeType": "VariableDeclaration",
											"scope": 2200,
											"src": "4016:19:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2194,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4016:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2197,
											"mutability": "mutable",
											"name": "userEModeCategory",
											"nameLocation": "4048:17:9",
											"nodeType": "VariableDeclaration",
											"scope": 2200,
											"src": "4042:23:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 2196,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "4042:5:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2199,
											"mutability": "mutable",
											"name": "priceOracleSentinel",
											"nameLocation": "4080:19:9",
											"nodeType": "VariableDeclaration",
											"scope": 2200,
											"src": "4072:27:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2198,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4072:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExecuteLiquidationCallParams",
									"nameLocation": "3828:28:9",
									"nodeType": "StructDefinition",
									"scope": 2435,
									"src": "3821:284:9",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.ExecuteSupplyParams",
									"id": 2209,
									"members": [
										{
											"constant": false,
											"id": 2202,
											"mutability": "mutable",
											"name": "asset",
											"nameLocation": "4153:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 2209,
											"src": "4145:13:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2201,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4145:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2204,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "4173:6:9",
											"nodeType": "VariableDeclaration",
											"scope": 2209,
											"src": "4165:14:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2203,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4165:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2206,
											"mutability": "mutable",
											"name": "onBehalfOf",
											"nameLocation": "4194:10:9",
											"nodeType": "VariableDeclaration",
											"scope": 2209,
											"src": "4186:18:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2205,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4186:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2208,
											"mutability": "mutable",
											"name": "referralCode",
											"nameLocation": "4218:12:9",
											"nodeType": "VariableDeclaration",
											"scope": 2209,
											"src": "4211:19:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 2207,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "4211:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExecuteSupplyParams",
									"nameLocation": "4118:19:9",
									"nodeType": "StructDefinition",
									"scope": 2435,
									"src": "4111:125:9",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.ExecuteBorrowParams",
									"id": 2235,
									"members": [
										{
											"constant": false,
											"id": 2211,
											"mutability": "mutable",
											"name": "asset",
											"nameLocation": "4284:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 2235,
											"src": "4276:13:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2210,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4276:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2213,
											"mutability": "mutable",
											"name": "user",
											"nameLocation": "4304:4:9",
											"nodeType": "VariableDeclaration",
											"scope": 2235,
											"src": "4296:12:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2212,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4296:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2215,
											"mutability": "mutable",
											"name": "onBehalfOf",
											"nameLocation": "4323:10:9",
											"nodeType": "VariableDeclaration",
											"scope": 2235,
											"src": "4315:18:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2214,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4315:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2217,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "4348:6:9",
											"nodeType": "VariableDeclaration",
											"scope": 2235,
											"src": "4340:14:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2216,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4340:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2220,
											"mutability": "mutable",
											"name": "interestRateMode",
											"nameLocation": "4378:16:9",
											"nodeType": "VariableDeclaration",
											"scope": 2235,
											"src": "4361:33:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_InterestRateMode_$2139",
												"typeString": "enum DataTypes.InterestRateMode"
											},
											"typeName": {
												"id": 2219,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2218,
													"name": "InterestRateMode",
													"nameLocations": [
														"4361:16:9"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2139,
													"src": "4361:16:9"
												},
												"referencedDeclaration": 2139,
												"src": "4361:16:9",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_InterestRateMode_$2139",
													"typeString": "enum DataTypes.InterestRateMode"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2222,
											"mutability": "mutable",
											"name": "referralCode",
											"nameLocation": "4408:12:9",
											"nodeType": "VariableDeclaration",
											"scope": 2235,
											"src": "4401:19:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 2221,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "4401:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2224,
											"mutability": "mutable",
											"name": "releaseUnderlying",
											"nameLocation": "4432:17:9",
											"nodeType": "VariableDeclaration",
											"scope": 2235,
											"src": "4427:22:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2223,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "4427:4:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2226,
											"mutability": "mutable",
											"name": "maxStableRateBorrowSizePercent",
											"nameLocation": "4464:30:9",
											"nodeType": "VariableDeclaration",
											"scope": 2235,
											"src": "4456:38:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2225,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4456:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2228,
											"mutability": "mutable",
											"name": "reservesCount",
											"nameLocation": "4509:13:9",
											"nodeType": "VariableDeclaration",
											"scope": 2235,
											"src": "4501:21:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2227,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4501:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2230,
											"mutability": "mutable",
											"name": "oracle",
											"nameLocation": "4537:6:9",
											"nodeType": "VariableDeclaration",
											"scope": 2235,
											"src": "4529:14:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2229,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4529:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2232,
											"mutability": "mutable",
											"name": "userEModeCategory",
											"nameLocation": "4556:17:9",
											"nodeType": "VariableDeclaration",
											"scope": 2235,
											"src": "4550:23:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 2231,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "4550:5:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2234,
											"mutability": "mutable",
											"name": "priceOracleSentinel",
											"nameLocation": "4588:19:9",
											"nodeType": "VariableDeclaration",
											"scope": 2235,
											"src": "4580:27:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2233,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4580:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExecuteBorrowParams",
									"nameLocation": "4249:19:9",
									"nodeType": "StructDefinition",
									"scope": 2435,
									"src": "4242:371:9",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.ExecuteRepayParams",
									"id": 2247,
									"members": [
										{
											"constant": false,
											"id": 2237,
											"mutability": "mutable",
											"name": "asset",
											"nameLocation": "4660:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 2247,
											"src": "4652:13:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2236,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4652:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2239,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "4680:6:9",
											"nodeType": "VariableDeclaration",
											"scope": 2247,
											"src": "4672:14:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2238,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4672:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2242,
											"mutability": "mutable",
											"name": "interestRateMode",
											"nameLocation": "4710:16:9",
											"nodeType": "VariableDeclaration",
											"scope": 2247,
											"src": "4693:33:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_InterestRateMode_$2139",
												"typeString": "enum DataTypes.InterestRateMode"
											},
											"typeName": {
												"id": 2241,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2240,
													"name": "InterestRateMode",
													"nameLocations": [
														"4693:16:9"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2139,
													"src": "4693:16:9"
												},
												"referencedDeclaration": 2139,
												"src": "4693:16:9",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_InterestRateMode_$2139",
													"typeString": "enum DataTypes.InterestRateMode"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2244,
											"mutability": "mutable",
											"name": "onBehalfOf",
											"nameLocation": "4741:10:9",
											"nodeType": "VariableDeclaration",
											"scope": 2247,
											"src": "4733:18:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2243,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4733:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2246,
											"mutability": "mutable",
											"name": "useATokens",
											"nameLocation": "4763:10:9",
											"nodeType": "VariableDeclaration",
											"scope": 2247,
											"src": "4758:15:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2245,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "4758:4:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExecuteRepayParams",
									"nameLocation": "4626:18:9",
									"nodeType": "StructDefinition",
									"scope": 2435,
									"src": "4619:160:9",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.ExecuteWithdrawParams",
									"id": 2260,
									"members": [
										{
											"constant": false,
											"id": 2249,
											"mutability": "mutable",
											"name": "asset",
											"nameLocation": "4829:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 2260,
											"src": "4821:13:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2248,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4821:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2251,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "4849:6:9",
											"nodeType": "VariableDeclaration",
											"scope": 2260,
											"src": "4841:14:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2250,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4841:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2253,
											"mutability": "mutable",
											"name": "to",
											"nameLocation": "4870:2:9",
											"nodeType": "VariableDeclaration",
											"scope": 2260,
											"src": "4862:10:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2252,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4862:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2255,
											"mutability": "mutable",
											"name": "reservesCount",
											"nameLocation": "4887:13:9",
											"nodeType": "VariableDeclaration",
											"scope": 2260,
											"src": "4879:21:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2254,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4879:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2257,
											"mutability": "mutable",
											"name": "oracle",
											"nameLocation": "4915:6:9",
											"nodeType": "VariableDeclaration",
											"scope": 2260,
											"src": "4907:14:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2256,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4907:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2259,
											"mutability": "mutable",
											"name": "userEModeCategory",
											"nameLocation": "4934:17:9",
											"nodeType": "VariableDeclaration",
											"scope": 2260,
											"src": "4928:23:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 2258,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "4928:5:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExecuteWithdrawParams",
									"nameLocation": "4792:21:9",
									"nodeType": "StructDefinition",
									"scope": 2435,
									"src": "4785:172:9",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.ExecuteSetUserEModeParams",
									"id": 2267,
									"members": [
										{
											"constant": false,
											"id": 2262,
											"mutability": "mutable",
											"name": "reservesCount",
											"nameLocation": "5011:13:9",
											"nodeType": "VariableDeclaration",
											"scope": 2267,
											"src": "5003:21:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2261,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5003:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2264,
											"mutability": "mutable",
											"name": "oracle",
											"nameLocation": "5039:6:9",
											"nodeType": "VariableDeclaration",
											"scope": 2267,
											"src": "5031:14:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2263,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5031:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2266,
											"mutability": "mutable",
											"name": "categoryId",
											"nameLocation": "5058:10:9",
											"nodeType": "VariableDeclaration",
											"scope": 2267,
											"src": "5052:16:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 2265,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "5052:5:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExecuteSetUserEModeParams",
									"nameLocation": "4970:25:9",
									"nodeType": "StructDefinition",
									"scope": 2435,
									"src": "4963:111:9",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.FinalizeTransferParams",
									"id": 2286,
									"members": [
										{
											"constant": false,
											"id": 2269,
											"mutability": "mutable",
											"name": "asset",
											"nameLocation": "5125:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 2286,
											"src": "5117:13:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2268,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5117:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2271,
											"mutability": "mutable",
											"name": "from",
											"nameLocation": "5145:4:9",
											"nodeType": "VariableDeclaration",
											"scope": 2286,
											"src": "5137:12:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2270,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5137:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2273,
											"mutability": "mutable",
											"name": "to",
											"nameLocation": "5164:2:9",
											"nodeType": "VariableDeclaration",
											"scope": 2286,
											"src": "5156:10:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2272,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5156:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2275,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "5181:6:9",
											"nodeType": "VariableDeclaration",
											"scope": 2286,
											"src": "5173:14:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2274,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5173:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2277,
											"mutability": "mutable",
											"name": "balanceFromBefore",
											"nameLocation": "5202:17:9",
											"nodeType": "VariableDeclaration",
											"scope": 2286,
											"src": "5194:25:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2276,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5194:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2279,
											"mutability": "mutable",
											"name": "balanceToBefore",
											"nameLocation": "5234:15:9",
											"nodeType": "VariableDeclaration",
											"scope": 2286,
											"src": "5226:23:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2278,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5226:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2281,
											"mutability": "mutable",
											"name": "reservesCount",
											"nameLocation": "5264:13:9",
											"nodeType": "VariableDeclaration",
											"scope": 2286,
											"src": "5256:21:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2280,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5256:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2283,
											"mutability": "mutable",
											"name": "oracle",
											"nameLocation": "5292:6:9",
											"nodeType": "VariableDeclaration",
											"scope": 2286,
											"src": "5284:14:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2282,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5284:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2285,
											"mutability": "mutable",
											"name": "fromEModeCategory",
											"nameLocation": "5311:17:9",
											"nodeType": "VariableDeclaration",
											"scope": 2286,
											"src": "5305:23:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 2284,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "5305:5:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "FinalizeTransferParams",
									"nameLocation": "5087:22:9",
									"nodeType": "StructDefinition",
									"scope": 2435,
									"src": "5080:254:9",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.FlashloanParams",
									"id": 2318,
									"members": [
										{
											"constant": false,
											"id": 2288,
											"mutability": "mutable",
											"name": "receiverAddress",
											"nameLocation": "5378:15:9",
											"nodeType": "VariableDeclaration",
											"scope": 2318,
											"src": "5370:23:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2287,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5370:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2291,
											"mutability": "mutable",
											"name": "assets",
											"nameLocation": "5410:6:9",
											"nodeType": "VariableDeclaration",
											"scope": 2318,
											"src": "5400:16:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											},
											"typeName": {
												"baseType": {
													"id": 2289,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5400:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2290,
												"nodeType": "ArrayTypeName",
												"src": "5400:9:9",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2294,
											"mutability": "mutable",
											"name": "amounts",
											"nameLocation": "5433:7:9",
											"nodeType": "VariableDeclaration",
											"scope": 2318,
											"src": "5423:17:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											},
											"typeName": {
												"baseType": {
													"id": 2292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5423:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2293,
												"nodeType": "ArrayTypeName",
												"src": "5423:9:9",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2297,
											"mutability": "mutable",
											"name": "interestRateModes",
											"nameLocation": "5457:17:9",
											"nodeType": "VariableDeclaration",
											"scope": 2318,
											"src": "5447:27:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											},
											"typeName": {
												"baseType": {
													"id": 2295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5447:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2296,
												"nodeType": "ArrayTypeName",
												"src": "5447:9:9",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2299,
											"mutability": "mutable",
											"name": "onBehalfOf",
											"nameLocation": "5489:10:9",
											"nodeType": "VariableDeclaration",
											"scope": 2318,
											"src": "5481:18:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2298,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5481:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2301,
											"mutability": "mutable",
											"name": "params",
											"nameLocation": "5512:6:9",
											"nodeType": "VariableDeclaration",
											"scope": 2318,
											"src": "5506:12:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 2300,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "5506:5:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2303,
											"mutability": "mutable",
											"name": "referralCode",
											"nameLocation": "5532:12:9",
											"nodeType": "VariableDeclaration",
											"scope": 2318,
											"src": "5525:19:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 2302,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "5525:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2305,
											"mutability": "mutable",
											"name": "flashLoanPremiumToProtocol",
											"nameLocation": "5559:26:9",
											"nodeType": "VariableDeclaration",
											"scope": 2318,
											"src": "5551:34:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2304,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5551:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2307,
											"mutability": "mutable",
											"name": "flashLoanPremiumTotal",
											"nameLocation": "5600:21:9",
											"nodeType": "VariableDeclaration",
											"scope": 2318,
											"src": "5592:29:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2306,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5592:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2309,
											"mutability": "mutable",
											"name": "maxStableRateBorrowSizePercent",
											"nameLocation": "5636:30:9",
											"nodeType": "VariableDeclaration",
											"scope": 2318,
											"src": "5628:38:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2308,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5628:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2311,
											"mutability": "mutable",
											"name": "reservesCount",
											"nameLocation": "5681:13:9",
											"nodeType": "VariableDeclaration",
											"scope": 2318,
											"src": "5673:21:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5673:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2313,
											"mutability": "mutable",
											"name": "addressesProvider",
											"nameLocation": "5709:17:9",
											"nodeType": "VariableDeclaration",
											"scope": 2318,
											"src": "5701:25:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2312,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5701:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2315,
											"mutability": "mutable",
											"name": "userEModeCategory",
											"nameLocation": "5739:17:9",
											"nodeType": "VariableDeclaration",
											"scope": 2318,
											"src": "5733:23:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 2314,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "5733:5:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2317,
											"mutability": "mutable",
											"name": "isAuthorizedFlashBorrower",
											"nameLocation": "5768:25:9",
											"nodeType": "VariableDeclaration",
											"scope": 2318,
											"src": "5763:30:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2316,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "5763:4:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "FlashloanParams",
									"nameLocation": "5347:15:9",
									"nodeType": "StructDefinition",
									"scope": 2435,
									"src": "5340:459:9",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.FlashloanSimpleParams",
									"id": 2333,
									"members": [
										{
											"constant": false,
											"id": 2320,
											"mutability": "mutable",
											"name": "receiverAddress",
											"nameLocation": "5849:15:9",
											"nodeType": "VariableDeclaration",
											"scope": 2333,
											"src": "5841:23:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2319,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5841:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2322,
											"mutability": "mutable",
											"name": "asset",
											"nameLocation": "5879:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 2333,
											"src": "5871:13:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2321,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5871:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2324,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "5899:6:9",
											"nodeType": "VariableDeclaration",
											"scope": 2333,
											"src": "5891:14:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2323,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5891:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2326,
											"mutability": "mutable",
											"name": "params",
											"nameLocation": "5918:6:9",
											"nodeType": "VariableDeclaration",
											"scope": 2333,
											"src": "5912:12:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 2325,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "5912:5:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2328,
											"mutability": "mutable",
											"name": "referralCode",
											"nameLocation": "5938:12:9",
											"nodeType": "VariableDeclaration",
											"scope": 2333,
											"src": "5931:19:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 2327,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "5931:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2330,
											"mutability": "mutable",
											"name": "flashLoanPremiumToProtocol",
											"nameLocation": "5965:26:9",
											"nodeType": "VariableDeclaration",
											"scope": 2333,
											"src": "5957:34:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2329,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5957:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2332,
											"mutability": "mutable",
											"name": "flashLoanPremiumTotal",
											"nameLocation": "6006:21:9",
											"nodeType": "VariableDeclaration",
											"scope": 2333,
											"src": "5998:29:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2331,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5998:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "FlashloanSimpleParams",
									"nameLocation": "5812:21:9",
									"nodeType": "StructDefinition",
									"scope": 2435,
									"src": "5805:228:9",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.FlashLoanRepaymentParams",
									"id": 2346,
									"members": [
										{
											"constant": false,
											"id": 2335,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "6086:6:9",
											"nodeType": "VariableDeclaration",
											"scope": 2346,
											"src": "6078:14:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2334,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6078:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2337,
											"mutability": "mutable",
											"name": "totalPremium",
											"nameLocation": "6107:12:9",
											"nodeType": "VariableDeclaration",
											"scope": 2346,
											"src": "6099:20:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2336,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6099:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2339,
											"mutability": "mutable",
											"name": "flashLoanPremiumToProtocol",
											"nameLocation": "6134:26:9",
											"nodeType": "VariableDeclaration",
											"scope": 2346,
											"src": "6126:34:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2338,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6126:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2341,
											"mutability": "mutable",
											"name": "asset",
											"nameLocation": "6175:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 2346,
											"src": "6167:13:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2340,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "6167:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2343,
											"mutability": "mutable",
											"name": "receiverAddress",
											"nameLocation": "6195:15:9",
											"nodeType": "VariableDeclaration",
											"scope": 2346,
											"src": "6187:23:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2342,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "6187:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2345,
											"mutability": "mutable",
											"name": "referralCode",
											"nameLocation": "6224:12:9",
											"nodeType": "VariableDeclaration",
											"scope": 2346,
											"src": "6217:19:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 2344,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "6217:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "FlashLoanRepaymentParams",
									"nameLocation": "6046:24:9",
									"nodeType": "StructDefinition",
									"scope": 2435,
									"src": "6039:203:9",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.CalculateUserAccountDataParams",
									"id": 2358,
									"members": [
										{
											"constant": false,
											"id": 2349,
											"mutability": "mutable",
											"name": "userConfig",
											"nameLocation": "6314:10:9",
											"nodeType": "VariableDeclaration",
											"scope": 2358,
											"src": "6293:31:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_UserConfigurationMap_$2124_storage_ptr",
												"typeString": "struct DataTypes.UserConfigurationMap"
											},
											"typeName": {
												"id": 2348,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2347,
													"name": "UserConfigurationMap",
													"nameLocations": [
														"6293:20:9"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2124,
													"src": "6293:20:9"
												},
												"referencedDeclaration": 2124,
												"src": "6293:20:9",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserConfigurationMap_$2124_storage_ptr",
													"typeString": "struct DataTypes.UserConfigurationMap"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2351,
											"mutability": "mutable",
											"name": "reservesCount",
											"nameLocation": "6339:13:9",
											"nodeType": "VariableDeclaration",
											"scope": 2358,
											"src": "6331:21:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2350,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6331:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2353,
											"mutability": "mutable",
											"name": "user",
											"nameLocation": "6367:4:9",
											"nodeType": "VariableDeclaration",
											"scope": 2358,
											"src": "6359:12:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2352,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "6359:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2355,
											"mutability": "mutable",
											"name": "oracle",
											"nameLocation": "6386:6:9",
											"nodeType": "VariableDeclaration",
											"scope": 2358,
											"src": "6378:14:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2354,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "6378:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2357,
											"mutability": "mutable",
											"name": "userEModeCategory",
											"nameLocation": "6405:17:9",
											"nodeType": "VariableDeclaration",
											"scope": 2358,
											"src": "6399:23:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 2356,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "6399:5:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "CalculateUserAccountDataParams",
									"nameLocation": "6255:30:9",
									"nodeType": "StructDefinition",
									"scope": 2435,
									"src": "6248:180:9",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.ValidateBorrowParams",
									"id": 2390,
									"members": [
										{
											"constant": false,
											"id": 2361,
											"mutability": "mutable",
											"name": "reserveCache",
											"nameLocation": "6482:12:9",
											"nodeType": "VariableDeclaration",
											"scope": 2390,
											"src": "6469:25:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_ReserveCache_$2181_storage_ptr",
												"typeString": "struct DataTypes.ReserveCache"
											},
											"typeName": {
												"id": 2360,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2359,
													"name": "ReserveCache",
													"nameLocations": [
														"6469:12:9"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2181,
													"src": "6469:12:9"
												},
												"referencedDeclaration": 2181,
												"src": "6469:12:9",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveCache_$2181_storage_ptr",
													"typeString": "struct DataTypes.ReserveCache"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2364,
											"mutability": "mutable",
											"name": "userConfig",
											"nameLocation": "6522:10:9",
											"nodeType": "VariableDeclaration",
											"scope": 2390,
											"src": "6501:31:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_UserConfigurationMap_$2124_storage_ptr",
												"typeString": "struct DataTypes.UserConfigurationMap"
											},
											"typeName": {
												"id": 2363,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2362,
													"name": "UserConfigurationMap",
													"nameLocations": [
														"6501:20:9"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2124,
													"src": "6501:20:9"
												},
												"referencedDeclaration": 2124,
												"src": "6501:20:9",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserConfigurationMap_$2124_storage_ptr",
													"typeString": "struct DataTypes.UserConfigurationMap"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2366,
											"mutability": "mutable",
											"name": "asset",
											"nameLocation": "6547:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 2390,
											"src": "6539:13:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2365,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "6539:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2368,
											"mutability": "mutable",
											"name": "userAddress",
											"nameLocation": "6567:11:9",
											"nodeType": "VariableDeclaration",
											"scope": 2390,
											"src": "6559:19:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2367,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "6559:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2370,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "6593:6:9",
											"nodeType": "VariableDeclaration",
											"scope": 2390,
											"src": "6585:14:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2369,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6585:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2373,
											"mutability": "mutable",
											"name": "interestRateMode",
											"nameLocation": "6623:16:9",
											"nodeType": "VariableDeclaration",
											"scope": 2390,
											"src": "6606:33:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_InterestRateMode_$2139",
												"typeString": "enum DataTypes.InterestRateMode"
											},
											"typeName": {
												"id": 2372,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2371,
													"name": "InterestRateMode",
													"nameLocations": [
														"6606:16:9"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2139,
													"src": "6606:16:9"
												},
												"referencedDeclaration": 2139,
												"src": "6606:16:9",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_InterestRateMode_$2139",
													"typeString": "enum DataTypes.InterestRateMode"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2375,
											"mutability": "mutable",
											"name": "maxStableLoanPercent",
											"nameLocation": "6654:20:9",
											"nodeType": "VariableDeclaration",
											"scope": 2390,
											"src": "6646:28:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2374,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6646:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2377,
											"mutability": "mutable",
											"name": "reservesCount",
											"nameLocation": "6689:13:9",
											"nodeType": "VariableDeclaration",
											"scope": 2390,
											"src": "6681:21:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2376,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6681:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2379,
											"mutability": "mutable",
											"name": "oracle",
											"nameLocation": "6717:6:9",
											"nodeType": "VariableDeclaration",
											"scope": 2390,
											"src": "6709:14:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2378,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "6709:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2381,
											"mutability": "mutable",
											"name": "userEModeCategory",
											"nameLocation": "6736:17:9",
											"nodeType": "VariableDeclaration",
											"scope": 2390,
											"src": "6730:23:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 2380,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "6730:5:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2383,
											"mutability": "mutable",
											"name": "priceOracleSentinel",
											"nameLocation": "6768:19:9",
											"nodeType": "VariableDeclaration",
											"scope": 2390,
											"src": "6760:27:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2382,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "6760:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2385,
											"mutability": "mutable",
											"name": "isolationModeActive",
											"nameLocation": "6799:19:9",
											"nodeType": "VariableDeclaration",
											"scope": 2390,
											"src": "6794:24:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2384,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "6794:4:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2387,
											"mutability": "mutable",
											"name": "isolationModeCollateralAddress",
											"nameLocation": "6833:30:9",
											"nodeType": "VariableDeclaration",
											"scope": 2390,
											"src": "6825:38:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2386,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "6825:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2389,
											"mutability": "mutable",
											"name": "isolationModeDebtCeiling",
											"nameLocation": "6878:24:9",
											"nodeType": "VariableDeclaration",
											"scope": 2390,
											"src": "6870:32:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2388,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6870:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ValidateBorrowParams",
									"nameLocation": "6441:20:9",
									"nodeType": "StructDefinition",
									"scope": 2435,
									"src": "6434:474:9",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.ValidateLiquidationCallParams",
									"id": 2400,
									"members": [
										{
											"constant": false,
											"id": 2393,
											"mutability": "mutable",
											"name": "debtReserveCache",
											"nameLocation": "6971:16:9",
											"nodeType": "VariableDeclaration",
											"scope": 2400,
											"src": "6958:29:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_ReserveCache_$2181_storage_ptr",
												"typeString": "struct DataTypes.ReserveCache"
											},
											"typeName": {
												"id": 2392,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2391,
													"name": "ReserveCache",
													"nameLocations": [
														"6958:12:9"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2181,
													"src": "6958:12:9"
												},
												"referencedDeclaration": 2181,
												"src": "6958:12:9",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveCache_$2181_storage_ptr",
													"typeString": "struct DataTypes.ReserveCache"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2395,
											"mutability": "mutable",
											"name": "totalDebt",
											"nameLocation": "7002:9:9",
											"nodeType": "VariableDeclaration",
											"scope": 2400,
											"src": "6994:17:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2394,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6994:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2397,
											"mutability": "mutable",
											"name": "healthFactor",
											"nameLocation": "7026:12:9",
											"nodeType": "VariableDeclaration",
											"scope": 2400,
											"src": "7018:20:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2396,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "7018:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2399,
											"mutability": "mutable",
											"name": "priceOracleSentinel",
											"nameLocation": "7053:19:9",
											"nodeType": "VariableDeclaration",
											"scope": 2400,
											"src": "7045:27:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2398,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "7045:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ValidateLiquidationCallParams",
									"nameLocation": "6921:29:9",
									"nodeType": "StructDefinition",
									"scope": 2435,
									"src": "6914:164:9",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.CalculateInterestRatesParams",
									"id": 2419,
									"members": [
										{
											"constant": false,
											"id": 2402,
											"mutability": "mutable",
											"name": "unbacked",
											"nameLocation": "7135:8:9",
											"nodeType": "VariableDeclaration",
											"scope": 2419,
											"src": "7127:16:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2401,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "7127:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2404,
											"mutability": "mutable",
											"name": "liquidityAdded",
											"nameLocation": "7158:14:9",
											"nodeType": "VariableDeclaration",
											"scope": 2419,
											"src": "7150:22:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2403,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "7150:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2406,
											"mutability": "mutable",
											"name": "liquidityTaken",
											"nameLocation": "7187:14:9",
											"nodeType": "VariableDeclaration",
											"scope": 2419,
											"src": "7179:22:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2405,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "7179:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2408,
											"mutability": "mutable",
											"name": "totalStableDebt",
											"nameLocation": "7216:15:9",
											"nodeType": "VariableDeclaration",
											"scope": 2419,
											"src": "7208:23:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2407,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "7208:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2410,
											"mutability": "mutable",
											"name": "totalVariableDebt",
											"nameLocation": "7246:17:9",
											"nodeType": "VariableDeclaration",
											"scope": 2419,
											"src": "7238:25:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2409,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "7238:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2412,
											"mutability": "mutable",
											"name": "averageStableBorrowRate",
											"nameLocation": "7278:23:9",
											"nodeType": "VariableDeclaration",
											"scope": 2419,
											"src": "7270:31:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2411,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "7270:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2414,
											"mutability": "mutable",
											"name": "reserveFactor",
											"nameLocation": "7316:13:9",
											"nodeType": "VariableDeclaration",
											"scope": 2419,
											"src": "7308:21:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2413,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "7308:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2416,
											"mutability": "mutable",
											"name": "reserve",
											"nameLocation": "7344:7:9",
											"nodeType": "VariableDeclaration",
											"scope": 2419,
											"src": "7336:15:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2415,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "7336:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2418,
											"mutability": "mutable",
											"name": "aToken",
											"nameLocation": "7366:6:9",
											"nodeType": "VariableDeclaration",
											"scope": 2419,
											"src": "7358:14:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2417,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "7358:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "CalculateInterestRatesParams",
									"nameLocation": "7091:28:9",
									"nodeType": "StructDefinition",
									"scope": 2435,
									"src": "7084:294:9",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.InitReserveParams",
									"id": 2434,
									"members": [
										{
											"constant": false,
											"id": 2421,
											"mutability": "mutable",
											"name": "asset",
											"nameLocation": "7424:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 2434,
											"src": "7416:13:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2420,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "7416:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2423,
											"mutability": "mutable",
											"name": "aTokenAddress",
											"nameLocation": "7444:13:9",
											"nodeType": "VariableDeclaration",
											"scope": 2434,
											"src": "7436:21:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2422,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "7436:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2425,
											"mutability": "mutable",
											"name": "stableDebtAddress",
											"nameLocation": "7472:17:9",
											"nodeType": "VariableDeclaration",
											"scope": 2434,
											"src": "7464:25:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2424,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "7464:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2427,
											"mutability": "mutable",
											"name": "variableDebtAddress",
											"nameLocation": "7504:19:9",
											"nodeType": "VariableDeclaration",
											"scope": 2434,
											"src": "7496:27:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2426,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "7496:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2429,
											"mutability": "mutable",
											"name": "interestRateStrategyAddress",
											"nameLocation": "7538:27:9",
											"nodeType": "VariableDeclaration",
											"scope": 2434,
											"src": "7530:35:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2428,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "7530:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2431,
											"mutability": "mutable",
											"name": "reservesCount",
											"nameLocation": "7579:13:9",
											"nodeType": "VariableDeclaration",
											"scope": 2434,
											"src": "7572:20:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 2430,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "7572:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2433,
											"mutability": "mutable",
											"name": "maxNumberReserves",
											"nameLocation": "7606:17:9",
											"nodeType": "VariableDeclaration",
											"scope": 2434,
											"src": "7599:24:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 2432,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "7599:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitReserveParams",
									"nameLocation": "7391:17:9",
									"nodeType": "StructDefinition",
									"scope": 2435,
									"src": "7384:245:9",
									"visibility": "public"
								}
							],
							"scope": 2436,
							"src": "65:7567:9",
							"usedErrors": []
						}
					],
					"src": "38:7594:9"
				},
				"id": 9
			},
			"libraries/SafeERC20.sol": {
				"ast": {
					"absolutePath": "libraries/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							2083
						],
						"IERC20": [
							1571
						],
						"IERC20Permit": [
							1632
						],
						"SafeERC20": [
							2814
						]
					},
					"id": 2815,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2437,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "118:24:10"
						},
						{
							"absolutePath": "interfaces/IERC20.sol",
							"file": "../interfaces/IERC20.sol",
							"id": 2439,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2815,
							"sourceUnit": 1572,
							"src": "146:48:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2438,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1571,
										"src": "154:6:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/IERC20Permit.sol",
							"file": "../interfaces/IERC20Permit.sol",
							"id": 2441,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2815,
							"sourceUnit": 1633,
							"src": "196:60:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2440,
										"name": "IERC20Permit",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1632,
										"src": "204:12:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "libraries/Address.sol",
							"file": "../libraries/Address.sol",
							"id": 2443,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2815,
							"sourceUnit": 2084,
							"src": "258:49:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2442,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2083,
										"src": "266:7:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2444,
								"nodeType": "StructuredDocumentation",
								"src": "311:465:10",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 2814,
							"linearizedBaseContracts": [
								2814
							],
							"name": "SafeERC20",
							"nameLocation": "786:9:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2447,
									"libraryName": {
										"id": 2445,
										"name": "Address",
										"nameLocations": [
											"809:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2083,
										"src": "809:7:10"
									},
									"nodeType": "UsingForDirective",
									"src": "803:26:10",
									"typeName": {
										"id": 2446,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "821:7:10",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 2470,
										"nodeType": "Block",
										"src": "1097:105:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2459,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2451,
															"src": "1128:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1571",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 2462,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2451,
																			"src": "1158:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1571",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 2463,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1164:8:10",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1538,
																		"src": "1158:14:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 2464,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1173:8:10",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1158:23:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 2465,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2453,
																	"src": "1183:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2466,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2455,
																	"src": "1187:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2460,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1135:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2461,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1139:18:10",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1135:22:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1135:58:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1571",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2458,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2765,
														"src": "1108:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1571_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 2468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1108:86:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2469,
												"nodeType": "ExpressionStatement",
												"src": "1108:86:10"
											}
										]
									},
									"documentation": {
										"id": 2448,
										"nodeType": "StructuredDocumentation",
										"src": "837:182:10",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 2471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1034:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2451,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1054:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2471,
												"src": "1047:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1571",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2450,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2449,
														"name": "IERC20",
														"nameLocations": [
															"1047:6:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1571,
														"src": "1047:6:10"
													},
													"referencedDeclaration": 1571,
													"src": "1047:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1571",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2453,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1069:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2471,
												"src": "1061:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1061:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2455,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1081:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2471,
												"src": "1073:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1046:41:10"
									},
									"returnParameters": {
										"id": 2457,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1097:0:10"
									},
									"scope": 2814,
									"src": "1025:177:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2497,
										"nodeType": "Block",
										"src": "1537:115:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2485,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2475,
															"src": "1568:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1571",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 2488,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2475,
																			"src": "1598:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1571",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 2489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1604:12:10",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1570,
																		"src": "1598:18:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 2490,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1617:8:10",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1598:27:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 2491,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2477,
																	"src": "1627:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2492,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2479,
																	"src": "1633:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2493,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2481,
																	"src": "1637:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2486,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1575:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2487,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1579:18:10",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1575:22:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1575:68:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1571",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2484,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2765,
														"src": "1548:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1571_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 2495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1548:96:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2496,
												"nodeType": "ExpressionStatement",
												"src": "1548:96:10"
											}
										]
									},
									"documentation": {
										"id": 2472,
										"nodeType": "StructuredDocumentation",
										"src": "1210:231:10",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 2498,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1456:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2475,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1480:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2498,
												"src": "1473:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1571",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2474,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2473,
														"name": "IERC20",
														"nameLocations": [
															"1473:6:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1571,
														"src": "1473:6:10"
													},
													"referencedDeclaration": 1571,
													"src": "1473:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1571",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2477,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1495:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2498,
												"src": "1487:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1487:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2479,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1509:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2498,
												"src": "1501:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1501:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2481,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1521:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2498,
												"src": "1513:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1513:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1472:55:10"
									},
									"returnParameters": {
										"id": 2483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1537:0:10"
									},
									"scope": 2814,
									"src": "1447:205:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2541,
										"nodeType": "Block",
										"src": "1997:506:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2512,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2510,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2506,
																			"src": "2251:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2511,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2260:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "2251:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 2513,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2250:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2523,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 2518,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "2291:4:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$2814",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$2814",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 2517,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "2283:7:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 2516,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "2283:7:10",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2519,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2283:13:10",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2520,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2504,
																					"src": "2298:7:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 2514,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2502,
																					"src": "2267:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$1571",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 2515,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2273:9:10",
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1548,
																				"src": "2267:15:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 2521,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2267:39:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2522,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2310:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "2267:44:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 2524,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2266:46:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2250:62:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 2526,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2327:56:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 2509,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2228:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2228:166:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2528,
												"nodeType": "ExpressionStatement",
												"src": "2228:166:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2530,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2502,
															"src": "2425:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1571",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 2533,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2502,
																			"src": "2455:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1571",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 2534,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2461:7:10",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1558,
																		"src": "2455:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 2535,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2469:8:10",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2455:22:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 2536,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2504,
																	"src": "2479:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2537,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2506,
																	"src": "2488:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2531,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2432:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2532,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2436:18:10",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2432:22:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2538,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2432:62:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1571",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2529,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2765,
														"src": "2405:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1571_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 2539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2405:90:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2540,
												"nodeType": "ExpressionStatement",
												"src": "2405:90:10"
											}
										]
									},
									"documentation": {
										"id": 2499,
										"nodeType": "StructuredDocumentation",
										"src": "1660:255:10",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 2542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1930:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2502,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1949:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2542,
												"src": "1942:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1571",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2501,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2500,
														"name": "IERC20",
														"nameLocations": [
															"1942:6:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1571,
														"src": "1942:6:10"
													},
													"referencedDeclaration": 1571,
													"src": "1942:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1571",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2504,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1964:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2542,
												"src": "1956:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1956:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2506,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1981:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2542,
												"src": "1973:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1973:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1941:46:10"
									},
									"returnParameters": {
										"id": 2508,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1997:0:10"
									},
									"scope": 2814,
									"src": "1921:582:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2578,
										"nodeType": "Block",
										"src": "2786:197:10",
										"statements": [
											{
												"assignments": [
													2554
												],
												"declarations": [
													{
														"constant": false,
														"id": 2554,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2805:12:10",
														"nodeType": "VariableDeclaration",
														"scope": 2578,
														"src": "2797:20:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2553,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2797:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2563,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2559,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2844:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$2814",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$2814",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 2558,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2836:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2557,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2836:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2560,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2836:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2561,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2548,
															"src": "2851:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2555,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2546,
															"src": "2820:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1571",
																"typeString": "contract IERC20"
															}
														},
														"id": 2556,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2826:9:10",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1548,
														"src": "2820:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 2562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2820:39:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2797:62:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2565,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2546,
															"src": "2890:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1571",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 2568,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2546,
																			"src": "2920:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1571",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 2569,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2926:7:10",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1558,
																		"src": "2920:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 2570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2934:8:10",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2920:22:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 2571,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2548,
																	"src": "2944:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2574,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2572,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2554,
																		"src": "2953:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 2573,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2550,
																		"src": "2968:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2953:20:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2566,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2897:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2567,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2901:18:10",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2897:22:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2575,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2897:77:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1571",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2564,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2765,
														"src": "2870:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1571_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 2576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2870:105:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2577,
												"nodeType": "ExpressionStatement",
												"src": "2870:105:10"
											}
										]
									},
									"documentation": {
										"id": 2543,
										"nodeType": "StructuredDocumentation",
										"src": "2511:183:10",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 2579,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2709:21:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2546,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2738:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2579,
												"src": "2731:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1571",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2545,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2544,
														"name": "IERC20",
														"nameLocations": [
															"2731:6:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1571,
														"src": "2731:6:10"
													},
													"referencedDeclaration": 1571,
													"src": "2731:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1571",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2548,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2753:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2579,
												"src": "2745:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2745:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2550,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2770:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2579,
												"src": "2762:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2762:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2730:46:10"
									},
									"returnParameters": {
										"id": 2552,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2786:0:10"
									},
									"scope": 2814,
									"src": "2700:283:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2623,
										"nodeType": "Block",
										"src": "3266:327:10",
										"statements": [
											{
												"id": 2622,
												"nodeType": "UncheckedBlock",
												"src": "3277:309:10",
												"statements": [
													{
														"assignments": [
															2591
														],
														"declarations": [
															{
																"constant": false,
																"id": 2591,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "3310:12:10",
																"nodeType": "VariableDeclaration",
																"scope": 2622,
																"src": "3302:20:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2590,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3302:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2600,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2596,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3349:4:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$2814",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$2814",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 2595,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3341:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2594,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3341:7:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3341:13:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2598,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2585,
																	"src": "3356:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 2592,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2583,
																	"src": "3325:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1571",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 2593,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3331:9:10",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1548,
																"src": "3325:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 2599,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3325:39:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3302:62:10"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2602,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2591,
																		"src": "3387:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 2603,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2587,
																		"src": "3403:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3387:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 2605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3410:43:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 2601,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "3379:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 2606,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3379:75:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2607,
														"nodeType": "ExpressionStatement",
														"src": "3379:75:10"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2609,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2583,
																	"src": "3489:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1571",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 2612,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2583,
																					"src": "3519:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$1571",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 2613,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3525:7:10",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1558,
																				"src": "3519:13:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 2614,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3533:8:10",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "3519:22:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 2615,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2585,
																			"src": "3543:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2618,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2616,
																				"name": "oldAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2591,
																				"src": "3552:12:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 2617,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2587,
																				"src": "3567:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3552:20:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 2610,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "3496:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 2611,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "3500:18:10",
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "3496:22:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 2619,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3496:77:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$1571",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2608,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2765,
																"src": "3469:19:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1571_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 2620,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3469:105:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2621,
														"nodeType": "ExpressionStatement",
														"src": "3469:105:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2580,
										"nodeType": "StructuredDocumentation",
										"src": "2991:183:10",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 2624,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "3189:21:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2583,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3218:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2624,
												"src": "3211:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1571",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2582,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2581,
														"name": "IERC20",
														"nameLocations": [
															"3211:6:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1571,
														"src": "3211:6:10"
													},
													"referencedDeclaration": 1571,
													"src": "3211:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1571",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2585,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3233:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2624,
												"src": "3225:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2584,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3225:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2587,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3250:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2624,
												"src": "3242:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2586,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3242:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:46:10"
									},
									"returnParameters": {
										"id": 2589,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3266:0:10"
									},
									"scope": 2814,
									"src": "3180:413:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2670,
										"nodeType": "Block",
										"src": "3996:340:10",
										"statements": [
											{
												"assignments": [
													2636
												],
												"declarations": [
													{
														"constant": false,
														"id": 2636,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "4020:12:10",
														"nodeType": "VariableDeclaration",
														"scope": 2670,
														"src": "4007:25:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2635,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4007:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2645,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"expression": {
																	"id": 2639,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2628,
																	"src": "4058:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1571",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 2640,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4064:7:10",
																"memberName": "approve",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1558,
																"src": "4058:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 2641,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4072:8:10",
															"memberName": "selector",
															"nodeType": "MemberAccess",
															"src": "4058:22:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														{
															"id": 2642,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2630,
															"src": "4082:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2643,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2632,
															"src": "4091:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2637,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "4035:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 2638,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4039:18:10",
														"memberName": "encodeWithSelector",
														"nodeType": "MemberAccess",
														"src": "4035:22:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes4) pure returns (bytes memory)"
														}
													},
													"id": 2644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4035:62:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4007:90:10"
											},
											{
												"condition": {
													"id": 2650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4114:45:10",
													"subExpression": {
														"arguments": [
															{
																"id": 2647,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2628,
																"src": "4139:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$1571",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 2648,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2636,
																"src": "4146:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$1571",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 2646,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2813,
															"src": "4115:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1571_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 2649,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4115:44:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2669,
												"nodeType": "IfStatement",
												"src": "4110:219:10",
												"trueBody": {
													"id": 2668,
													"nodeType": "Block",
													"src": "4161:168:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2652,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2628,
																		"src": "4196:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1571",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"expression": {
																						"id": 2655,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2628,
																						"src": "4226:5:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$1571",
																							"typeString": "contract IERC20"
																						}
																					},
																					"id": 2656,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "4232:7:10",
																					"memberName": "approve",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1558,
																					"src": "4226:13:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																						"typeString": "function (address,uint256) external returns (bool)"
																					}
																				},
																				"id": 2657,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4240:8:10",
																				"memberName": "selector",
																				"nodeType": "MemberAccess",
																				"src": "4226:22:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			},
																			{
																				"id": 2658,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2630,
																				"src": "4250:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"hexValue": "30",
																				"id": 2659,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4259:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"expression": {
																				"id": 2653,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4203:3:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 2654,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4207:18:10",
																			"memberName": "encodeWithSelector",
																			"nodeType": "MemberAccess",
																			"src": "4203:22:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function (bytes4) pure returns (bytes memory)"
																			}
																		},
																		"id": 2660,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4203:58:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$1571",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 2651,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2765,
																	"src": "4176:19:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1571_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 2661,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4176:86:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2662,
															"nodeType": "ExpressionStatement",
															"src": "4176:86:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2664,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2628,
																		"src": "4297:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1571",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 2665,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2636,
																		"src": "4304:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$1571",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 2663,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2765,
																	"src": "4277:19:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1571_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 2666,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4277:40:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2667,
															"nodeType": "ExpressionStatement",
															"src": "4277:40:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2625,
										"nodeType": "StructuredDocumentation",
										"src": "3601:312:10",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 2671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3928:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2628,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3948:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2671,
												"src": "3941:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1571",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2627,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2626,
														"name": "IERC20",
														"nameLocations": [
															"3941:6:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1571,
														"src": "3941:6:10"
													},
													"referencedDeclaration": 1571,
													"src": "3941:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1571",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2630,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3963:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2671,
												"src": "3955:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3955:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2632,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3980:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2671,
												"src": "3972:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3972:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3940:46:10"
									},
									"returnParameters": {
										"id": 2634,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3996:0:10"
									},
									"scope": 2814,
									"src": "3919:417:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2727,
										"nodeType": "Block",
										"src": "4718:262:10",
										"statements": [
											{
												"assignments": [
													2693
												],
												"declarations": [
													{
														"constant": false,
														"id": 2693,
														"mutability": "mutable",
														"name": "nonceBefore",
														"nameLocation": "4737:11:10",
														"nodeType": "VariableDeclaration",
														"scope": 2727,
														"src": "4729:19:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2692,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4729:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2698,
												"initialValue": {
													"arguments": [
														{
															"id": 2696,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2677,
															"src": "4764:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2694,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2675,
															"src": "4751:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$1632",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 2695,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4757:6:10",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1625,
														"src": "4751:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 2697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4751:19:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4729:41:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2702,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2677,
															"src": "4794:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2703,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2679,
															"src": "4801:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2704,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2681,
															"src": "4810:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2705,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2683,
															"src": "4817:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2706,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2685,
															"src": "4827:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 2707,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2687,
															"src": "4830:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2708,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2689,
															"src": "4833:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 2699,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2675,
															"src": "4781:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$1632",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 2701,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4787:6:10",
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1617,
														"src": "4781:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 2709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4781:54:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2710,
												"nodeType": "ExpressionStatement",
												"src": "4781:54:10"
											},
											{
												"assignments": [
													2712
												],
												"declarations": [
													{
														"constant": false,
														"id": 2712,
														"mutability": "mutable",
														"name": "nonceAfter",
														"nameLocation": "4854:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 2727,
														"src": "4846:18:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2711,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4846:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2717,
												"initialValue": {
													"arguments": [
														{
															"id": 2715,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2677,
															"src": "4880:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2713,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2675,
															"src": "4867:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$1632",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 2714,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4873:6:10",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1625,
														"src": "4867:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 2716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4867:19:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4846:40:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2723,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2719,
																"name": "nonceAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2712,
																"src": "4905:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2722,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2720,
																	"name": "nonceBefore",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2693,
																	"src": "4919:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2721,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4933:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "4919:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4905:29:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a207065726d697420646964206e6f742073756363656564",
															"id": 2724,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4936:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															},
															"value": "SafeERC20: permit did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															}
														],
														"id": 2718,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4897:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:75:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2726,
												"nodeType": "ExpressionStatement",
												"src": "4897:75:10"
											}
										]
									},
									"documentation": {
										"id": 2672,
										"nodeType": "StructuredDocumentation",
										"src": "4344:144:10",
										"text": " @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n Revert on invalid signature."
									},
									"id": 2728,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safePermit",
									"nameLocation": "4503:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2675,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4537:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2728,
												"src": "4524:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Permit_$1632",
													"typeString": "contract IERC20Permit"
												},
												"typeName": {
													"id": 2674,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2673,
														"name": "IERC20Permit",
														"nameLocations": [
															"4524:12:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1632,
														"src": "4524:12:10"
													},
													"referencedDeclaration": 1632,
													"src": "4524:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Permit_$1632",
														"typeString": "contract IERC20Permit"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2677,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4561:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2728,
												"src": "4553:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4553:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2679,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4585:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2728,
												"src": "4577:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4577:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2681,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4611:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2728,
												"src": "4603:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4603:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2683,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "4635:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2728,
												"src": "4627:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2682,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4627:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2685,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "4660:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2728,
												"src": "4654:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2684,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4654:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2687,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4680:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2728,
												"src": "4672:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2686,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4672:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2689,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "4700:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2728,
												"src": "4692:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2688,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4692:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4513:195:10"
									},
									"returnParameters": {
										"id": 2691,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4718:0:10"
									},
									"scope": 2814,
									"src": "4494:486:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2764,
										"nodeType": "Block",
										"src": "5441:579:10",
										"statements": [
											{
												"assignments": [
													2738
												],
												"declarations": [
													{
														"constant": false,
														"id": 2738,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5808:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 2764,
														"src": "5795:23:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2737,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5795:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2747,
												"initialValue": {
													"arguments": [
														{
															"id": 2744,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2734,
															"src": "5849:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 2745,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5855:34:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2741,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2732,
																	"src": "5829:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1571",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$1571",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 2740,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5821:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2739,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5821:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2742,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5821:14:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2743,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5836:12:10",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1843,
														"src": "5821:27:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 2746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5821:69:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5795:95:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2760,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2752,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2749,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2738,
																		"src": "5909:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2750,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5920:6:10",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "5909:17:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2751,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5930:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5909:22:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 2755,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2738,
																		"src": "5946:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"components": [
																			{
																				"id": 2757,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5959:4:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				},
																				"typeName": {
																					"id": 2756,
																					"name": "bool",
																					"nodeType": "ElementaryTypeName",
																					"src": "5959:4:10",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"id": 2758,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5958:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bool_$",
																			"typeString": "type(bool)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_type$_t_bool_$",
																			"typeString": "type(bool)"
																		}
																	],
																	"expression": {
																		"id": 2753,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "5935:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 2754,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "5939:6:10",
																	"memberName": "decode",
																	"nodeType": "MemberAccess",
																	"src": "5935:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2759,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5935:30:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5909:56:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
															"id": 2761,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5967:44:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
															},
															"value": "SafeERC20: ERC20 operation did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
															}
														],
														"id": 2748,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5901:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5901:111:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2763,
												"nodeType": "ExpressionStatement",
												"src": "5901:111:10"
											}
										]
									},
									"documentation": {
										"id": 2729,
										"nodeType": "StructuredDocumentation",
										"src": "4988:377:10",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 2765,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "5380:19:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2732,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5407:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2765,
												"src": "5400:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1571",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2731,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2730,
														"name": "IERC20",
														"nameLocations": [
															"5400:6:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1571,
														"src": "5400:6:10"
													},
													"referencedDeclaration": 1571,
													"src": "5400:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1571",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2734,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5427:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2765,
												"src": "5414:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2733,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5414:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5399:33:10"
									},
									"returnParameters": {
										"id": 2736,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5441:0:10"
									},
									"scope": 2814,
									"src": "5371:649:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2812,
										"nodeType": "Block",
										"src": "6620:513:10",
										"statements": [
											{
												"assignments": [
													2777,
													2779
												],
												"declarations": [
													{
														"constant": false,
														"id": 2777,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6926:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 2812,
														"src": "6921:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2776,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6921:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2779,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6948:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 2812,
														"src": "6935:23:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2778,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6935:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2787,
												"initialValue": {
													"arguments": [
														{
															"id": 2785,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2771,
															"src": "6982:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2782,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2769,
																	"src": "6970:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1571",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$1571",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 2781,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6962:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2780,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6962:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2783,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6962:14:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2784,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6977:4:10",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "6962:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6962:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6920:67:10"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 2802,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2788,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2777,
															"src": "7018:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 2800,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 2789,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2779,
																				"src": "7030:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 2790,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "7041:6:10",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "7030:17:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2791,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7051:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "7030:22:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 2795,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2779,
																				"src": "7067:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 2797,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "7080:4:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 2796,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "7080:4:10",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 2798,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "7079:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 2793,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "7056:3:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 2794,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "7060:6:10",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "7056:10:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2799,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7056:30:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "7030:56:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 2801,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "7029:58:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "7018:69:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2807,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2769,
																		"src": "7118:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1571",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$1571",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 2806,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7110:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2805,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7110:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 2808,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7110:14:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 2803,
																"name": "Address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2083,
																"src": "7091:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Address_$2083_$",
																	"typeString": "type(library Address)"
																}
															},
															"id": 2804,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7099:10:10",
															"memberName": "isContract",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1771,
															"src": "7091:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																"typeString": "function (address) view returns (bool)"
															}
														},
														"id": 2809,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7091:34:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "7018:107:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2775,
												"id": 2811,
												"nodeType": "Return",
												"src": "6998:127:10"
											}
										]
									},
									"documentation": {
										"id": 2766,
										"nodeType": "StructuredDocumentation",
										"src": "6028:497:10",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 2813,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "6540:23:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2769,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6571:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2813,
												"src": "6564:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1571",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2768,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2767,
														"name": "IERC20",
														"nameLocations": [
															"6564:6:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1571,
														"src": "6564:6:10"
													},
													"referencedDeclaration": 1571,
													"src": "6564:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1571",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2771,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6591:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2813,
												"src": "6578:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2770,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6578:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6563:33:10"
									},
									"returnParameters": {
										"id": 2775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2774,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2813,
												"src": "6614:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2773,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6614:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6613:6:10"
									},
									"scope": 2814,
									"src": "6531:602:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2815,
							"src": "778:6358:10",
							"usedErrors": []
						}
					],
					"src": "118:7020:10"
				},
				"id": 10
			},
			"libraries/TimeLibrary.sol": {
				"ast": {
					"absolutePath": "libraries/TimeLibrary.sol",
					"exportedSymbols": {
						"TimeLibrary": [
							2977
						]
					},
					"id": 2978,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2816,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "31:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TimeLibrary",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 2977,
							"linearizedBaseContracts": [
								2977
							],
							"name": "TimeLibrary",
							"nameLocation": "67:11:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2873,
										"nodeType": "Block",
										"src": "361:406:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2829,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2825,
															"name": "stableAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2820,
															"src": "375:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2828,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "313030",
																"id": 2826,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "389:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2827,
																"name": "_tokenOneAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2818,
																"src": "393:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "389:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "375:33:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2834,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2830,
															"name": "stableAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2820,
															"src": "412:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2833,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "31303030",
																"id": 2831,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "425:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000_by_1",
																	"typeString": "int_const 1000"
																},
																"value": "1000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2832,
																"name": "_tokenOneAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2818,
																"src": "430:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "425:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "412:33:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "375:70:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 2851,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2841,
																"name": "stableAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2820,
																"src": "504:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2844,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "31303030",
																	"id": 2842,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "518:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	},
																	"value": "1000"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2843,
																	"name": "_tokenOneAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2818,
																	"src": "523:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "518:20:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "504:34:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2850,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2846,
																"name": "stableAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2820,
																"src": "542:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2849,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130303030",
																	"id": 2847,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "555:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	},
																	"value": "10000"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2848,
																	"name": "_tokenOneAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2818,
																	"src": "561:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "555:21:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "542:34:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "504:72:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2861,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2857,
																"name": "stableAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2820,
																"src": "635:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2860,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130303030",
																	"id": 2858,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "649:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	},
																	"value": "10000"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2859,
																	"name": "_tokenOneAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2818,
																	"src": "655:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "649:21:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "635:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 2869,
															"nodeType": "Block",
															"src": "725:35:11",
															"statements": [
																{
																	"expression": {
																		"hexValue": "30",
																		"id": 2867,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "747:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"functionReturnParameters": 2824,
																	"id": 2868,
																	"nodeType": "Return",
																	"src": "740:8:11"
																}
															]
														},
														"id": 2870,
														"nodeType": "IfStatement",
														"src": "632:128:11",
														"trueBody": {
															"id": 2866,
															"nodeType": "Block",
															"src": "671:50:11",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2864,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2862,
																			"name": "stableAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2820,
																			"src": "693:12:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"hexValue": "323030",
																			"id": 2863,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "706:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_200_by_1",
																				"typeString": "int_const 200"
																			},
																			"value": "200"
																		},
																		"src": "693:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2824,
																	"id": 2865,
																	"nodeType": "Return",
																	"src": "686:23:11"
																}
															]
														}
													},
													"id": 2871,
													"nodeType": "IfStatement",
													"src": "501:259:11",
													"trueBody": {
														"id": 2856,
														"nodeType": "Block",
														"src": "577:50:11",
														"statements": [
															{
																"expression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2854,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2852,
																		"name": "stableAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2820,
																		"src": "599:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "313235",
																		"id": 2853,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "612:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_125_by_1",
																			"typeString": "int_const 125"
																		},
																		"value": "125"
																	},
																	"src": "599:16:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 2824,
																"id": 2855,
																"nodeType": "Return",
																"src": "592:23:11"
															}
														]
													}
												},
												"id": 2872,
												"nodeType": "IfStatement",
												"src": "372:388:11",
												"trueBody": {
													"id": 2840,
													"nodeType": "Block",
													"src": "446:50:11",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2838,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2836,
																	"name": "stableAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2820,
																	"src": "468:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 2837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "481:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "468:16:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2824,
															"id": 2839,
															"nodeType": "Return",
															"src": "461:23:11"
														}
													]
												}
											}
										]
									},
									"id": 2874,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fee",
									"nameLocation": "272:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2818,
												"mutability": "mutable",
												"name": "_tokenOneAmount",
												"nameLocation": "284:15:11",
												"nodeType": "VariableDeclaration",
												"scope": 2874,
												"src": "276:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "276:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2820,
												"mutability": "mutable",
												"name": "stableAmount",
												"nameLocation": "308:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 2874,
												"src": "300:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2819,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "300:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "275:46:11"
									},
									"returnParameters": {
										"id": 2824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2823,
												"mutability": "mutable",
												"name": "stableFee",
												"nameLocation": "351:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 2874,
												"src": "343:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2822,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "343:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "342:19:11"
									},
									"scope": 2977,
									"src": "263:504:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2955,
										"nodeType": "Block",
										"src": "945:530:11",
										"statements": [
											{
												"assignments": [
													2886
												],
												"declarations": [
													{
														"constant": false,
														"id": 2886,
														"mutability": "mutable",
														"name": "thisAmount",
														"nameLocation": "964:10:11",
														"nodeType": "VariableDeclaration",
														"scope": 2955,
														"src": "956:18:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2885,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "956:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2895,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2892,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2889,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2887,
																		"name": "_soldPrice",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2876,
																		"src": "978:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2888,
																		"name": "_tokenOneAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2880,
																		"src": "989:15:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "978:26:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2890,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "977:28:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "31303030",
															"id": 2891,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1006:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															},
															"value": "1000"
														},
														"src": "977:33:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 2893,
														"name": "_soldAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2878,
														"src": "1011:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "977:45:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "956:66:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2900,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2896,
															"name": "thisAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2886,
															"src": "1037:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2899,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "313030",
																"id": 2897,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1051:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2898,
																"name": "_tokenOneAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2880,
																"src": "1055:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1051:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1037:33:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2905,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2901,
															"name": "thisAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2886,
															"src": "1074:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2904,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "31303030",
																"id": 2902,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1087:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000_by_1",
																	"typeString": "int_const 1000"
																},
																"value": "1000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2903,
																"name": "_tokenOneAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2880,
																"src": "1092:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1087:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1074:33:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1037:70:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 2925,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2919,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2915,
																"name": "thisAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2886,
																"src": "1176:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2918,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "31303030",
																	"id": 2916,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1190:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	},
																	"value": "1000"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2917,
																	"name": "_tokenOneAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2880,
																	"src": "1195:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1190:20:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1176:34:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2924,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2920,
																"name": "thisAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2886,
																"src": "1214:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2923,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130303030",
																	"id": 2921,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1227:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	},
																	"value": "10000"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2922,
																	"name": "_tokenOneAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2880,
																	"src": "1233:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1227:21:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1214:34:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1176:72:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2938,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2934,
																"name": "thisAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2886,
																"src": "1317:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2937,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130303030",
																	"id": 2935,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1330:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	},
																	"value": "10000"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2936,
																	"name": "_tokenOneAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2880,
																	"src": "1336:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1330:21:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1317:34:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 2951,
															"nodeType": "Block",
															"src": "1416:52:11",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "4e6f74456e6f756768416d6f756e74",
																				"id": 2948,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1438:17:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_af7f2376237d82b64a9ac325d328c27c0d0e024fb10aa509cd6a208eea933a24",
																					"typeString": "literal_string \"NotEnoughAmount\""
																				},
																				"value": "NotEnoughAmount"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_af7f2376237d82b64a9ac325d328c27c0d0e024fb10aa509cd6a208eea933a24",
																					"typeString": "literal_string \"NotEnoughAmount\""
																				}
																			],
																			"id": 2947,
																			"name": "revert",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				4294967277,
																				4294967277
																			],
																			"referencedDeclaration": 4294967277,
																			"src": "1431:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																				"typeString": "function (string memory) pure"
																			}
																		},
																		"id": 2949,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1431:25:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2950,
																	"nodeType": "ExpressionStatement",
																	"src": "1431:25:11"
																}
															]
														},
														"id": 2952,
														"nodeType": "IfStatement",
														"src": "1313:155:11",
														"trueBody": {
															"id": 2946,
															"nodeType": "Block",
															"src": "1353:57:11",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2944,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2941,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2939,
																						"name": "thisAmount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2886,
																						"src": "1376:10:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"hexValue": "3235",
																						"id": 2940,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1389:2:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_25_by_1",
																							"typeString": "int_const 25"
																						},
																						"value": "25"
																					},
																					"src": "1376:15:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 2942,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "1375:17:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"hexValue": "313030",
																			"id": 2943,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1395:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"value": "100"
																		},
																		"src": "1375:23:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2884,
																	"id": 2945,
																	"nodeType": "Return",
																	"src": "1368:30:11"
																}
															]
														}
													},
													"id": 2953,
													"nodeType": "IfStatement",
													"src": "1172:296:11",
													"trueBody": {
														"id": 2933,
														"nodeType": "Block",
														"src": "1250:57:11",
														"statements": [
															{
																"expression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2931,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2928,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2926,
																					"name": "thisAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2886,
																					"src": "1273:10:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "3430",
																					"id": 2927,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1286:2:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_40_by_1",
																						"typeString": "int_const 40"
																					},
																					"value": "40"
																				},
																				"src": "1273:15:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2929,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1272:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "313030",
																		"id": 2930,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1292:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	},
																	"src": "1272:23:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 2884,
																"id": 2932,
																"nodeType": "Return",
																"src": "1265:30:11"
															}
														]
													}
												},
												"id": 2954,
												"nodeType": "IfStatement",
												"src": "1033:435:11",
												"trueBody": {
													"id": 2914,
													"nodeType": "Block",
													"src": "1109:57:11",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2912,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2909,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2907,
																				"name": "thisAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2886,
																				"src": "1132:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"hexValue": "3530",
																				"id": 2908,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1145:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_50_by_1",
																					"typeString": "int_const 50"
																				},
																				"value": "50"
																			},
																			"src": "1132:15:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2910,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1131:17:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 2911,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1151:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "1131:23:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2884,
															"id": 2913,
															"nodeType": "Return",
															"src": "1124:30:11"
														}
													]
												}
											}
										]
									},
									"id": 2956,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPenal",
									"nameLocation": "842:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2876,
												"mutability": "mutable",
												"name": "_soldPrice",
												"nameLocation": "858:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 2956,
												"src": "851:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2875,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "851:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2878,
												"mutability": "mutable",
												"name": "_soldAmount",
												"nameLocation": "878:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2956,
												"src": "870:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2877,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "870:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2880,
												"mutability": "mutable",
												"name": "_tokenOneAmount",
												"nameLocation": "898:15:11",
												"nodeType": "VariableDeclaration",
												"scope": 2956,
												"src": "890:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2879,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "890:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "850:64:11"
									},
									"returnParameters": {
										"id": 2884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2883,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2956,
												"src": "937:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "937:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "936:9:11"
									},
									"scope": 2977,
									"src": "833:642:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2975,
										"nodeType": "Block",
										"src": "1638:69:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														},
														"id": 2971,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															},
															"id": 2969,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2967,
																"name": "_soldAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2960,
																"src": "1656:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2968,
																"name": "_soldPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2958,
																"src": "1668:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"src": "1656:22:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "31303030",
															"id": 2970,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1679:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															},
															"value": "1000"
														},
														"src": "1656:27:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 2972,
														"name": "_tokenOneAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2962,
														"src": "1684:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1656:43:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2966,
												"id": 2974,
												"nodeType": "Return",
												"src": "1649:50:11"
											}
										]
									},
									"id": 2976,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalStable",
									"nameLocation": "1530:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2958,
												"mutability": "mutable",
												"name": "_soldPrice",
												"nameLocation": "1552:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 2976,
												"src": "1545:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2957,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1545:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2960,
												"mutability": "mutable",
												"name": "_soldAmount",
												"nameLocation": "1572:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2976,
												"src": "1564:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2959,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1564:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2962,
												"mutability": "mutable",
												"name": "_tokenOneAmount",
												"nameLocation": "1592:15:11",
												"nodeType": "VariableDeclaration",
												"scope": 2976,
												"src": "1584:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2961,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1584:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1544:64:11"
									},
									"returnParameters": {
										"id": 2966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2965,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2976,
												"src": "1630:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1630:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1629:9:11"
									},
									"scope": 2977,
									"src": "1521:186:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2978,
							"src": "59:1651:11",
							"usedErrors": []
						}
					],
					"src": "31:1679:11"
				},
				"id": 11
			}
		}
	}
}