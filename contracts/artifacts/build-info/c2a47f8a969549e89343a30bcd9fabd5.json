{
	"id": "c2a47f8a969549e89343a30bcd9fabd5",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.19",
	"solcLongVersion": "0.8.19+commit.7dd6d404",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/TimeMarket.sol": {
				"content": "//SPDX-License-Identifier:MIT\r\npragma solidity ^0.8.9;\r\npragma abicoder v2;\r\nimport \"../libraries/SafeERC20.sol\";\r\nimport \"../interfaces/ITimeStruct.sol\";\r\nimport \"../interfaces/IError.sol\";\r\nimport \"../libraries/TimeFee.sol\";\r\n\r\n//uniswap v3\r\nimport '../interfaces/IERC721Receiver.sol';\r\nimport '../interfaces/IUniswapV3Factory.sol';\r\nimport '../interfaces/UniswapV3/INonfungiblePositionManager.sol';\r\n\r\n//uniswap v2\r\nimport '../interfaces/UniswapV2/IUniswapV2Factory.sol';\r\nimport '../interfaces/UniswapV2/IUniswapV2Router02.sol';\r\n\r\ncontract TimeMarket is ITimeStruct, IError{\r\n    using SafeERC20 for IERC20;\r\n    uint56 private clearingTime;\r\n    uint64 id;\r\n    address private airdropToken;\r\n\r\n    //uni v2\r\n    address private uniV2Factory;\r\n    address private uniV2Router02;\r\n\r\n    //uni v3\r\n    address private uniV3Factory=0x1F98431c8aD98523631AE4a59f267346ea31F984;\r\n    address private NonfungiblePositionManager=0xC36442b4a4522E871399CD717aBDD847Ab11FE88;\r\n\r\n    constructor(address _airdropToken,uint _clearingTime){\r\n        airdropToken=_airdropToken;\r\n        clearingTime=uint56(_clearingTime);\r\n    }\r\n\r\n    mapping(uint64=>tradeMes)private _tradeMes;\r\n    //出售者是否在交易时间结束前存入某个交易的空投代币\r\n    mapping(address => mapping(uint256=>bool))private ifInject; \r\n\r\n    //交易成功，购买者是否提取空投代币\r\n    mapping(address => mapping(uint256=>bool))public userIfWithdraw1;\r\n    //交易成功，出售者是否提取稳定币\r\n    mapping(address => mapping(uint256=>bool))public userIfWithdraw2;\r\n    //交易失败，购买者是否提取违约金\r\n    mapping(address => mapping(uint256=>bool))public userIfWithdraw3;\r\n    //未交易，购买者取回money\r\n    mapping(address => mapping(uint256=>bool))public userIfWithdraw4;\r\n\r\n    //购买\r\n    function buy(address _tokenAddress,address token1,uint128 _buyAmount,uint128 _buyPrice)external{\r\n        uint total=_buyAmount*_buyPrice;\r\n        //默认选择交易量高的fee，默认选择token1为usdc地址\r\n        address thisPool=getPoolAddress(_tokenAddress,token1,1000);\r\n        if(total<100 ether){\r\n            revert NotEnoughAmount();\r\n        }\r\n        tradeMes memory newTradeMes=tradeMes({\r\n            tradeState:1,\r\n            tradeId:id,\r\n            buyTime:uint56(block.timestamp),\r\n            buyTotalAmount:_buyAmount,\r\n            buyPrice:_buyPrice,\r\n            tokenAddress:_tokenAddress,\r\n            buyerAddress:msg.sender,\r\n            solderAddress:address(this)\r\n        });\r\n        _tradeMes[id]=newTradeMes;\r\n        //将代币转入该合约\r\n        IERC20(_tokenAddress).safeTransferFrom(msg.sender,address(this),total);\r\n        //合约授权并转入uniswap v3的对应池子地址\r\n        IERC20(_tokenAddress).safeApprove(thisPool,total);\r\n        IUniswapV2Router02(uniV2Router02).addLiquidity(\r\n            _tokenAddress,\r\n            token1,\r\n            total,\r\n            0,\r\n            1000,\r\n            0,\r\n            address(this),\r\n            block.timestamp+1 hours\r\n        );\r\n        id++;\r\n    }\r\n\r\n    //出售版本 \r\n    function Sale(uint64 _id,address token1) external {\r\n        tradeMes memory maxTradeMes=_tradeMes[_id];\r\n        require(maxTradeMes.tradeState==1);  //未产生交易的事务\r\n        address promiseStableToken=maxTradeMes.tokenAddress;\r\n    \r\n        //默认选择交易量高的fee，默认选择token1为usdc地址\r\n        address thisPool=getPoolAddress(promiseStableToken,token1,1000);\r\n        uint penalAmount=getPenal(maxTradeMes.buyPrice, maxTradeMes.buyTotalAmount);\r\n        //质押违约金\r\n        IERC20(promiseStableToken).safeTransferFrom(\r\n            msg.sender,\r\n            address(this),\r\n            penalAmount\r\n        );\r\n        //合约授权并转入uniswap v3的对应池子地址\r\n        IERC20(promiseStableToken).safeApprove(thisPool,penalAmount);\r\n        IERC20(promiseStableToken).safeTransferFrom(address(this),thisPool,penalAmount);\r\n        IUniswapV2Router02(uniV2Router02).addLiquidity(\r\n            promiseStableToken,\r\n            token1,\r\n            penalAmount,\r\n            0,\r\n            1000,\r\n            0,\r\n            address(this),\r\n            block.timestamp+1 hours\r\n        );\r\n        _tradeMes[_id].solderAddress=msg.sender;\r\n        //寻找到出售者则更改为3\r\n        _tradeMes[_id].tradeState=2;\r\n    }\r\n\r\n    //出售者放入自己成交的空投token数量(在清算结束1小时前存入空投代币，否则视为违约)\r\n    function injectFutureToken(uint64 _id)external{\r\n        //是否已放入约定的空投代币数量\r\n        if(ifInject[msg.sender][_id]=false){revert AlreadyInjectToken();}\r\n        //发送者是否是出售者,同时也意味着出售者已经质押\r\n        if(getSolder(_id)!=msg.sender){revert NorSolder();}\r\n\r\n        //需要质押的空投代币数量\r\n        uint256 thisAirdropAmount=_tradeMes[_id].buyTotalAmount;\r\n        IERC20(airdropToken).safeTransferFrom(msg.sender,address(this),thisAirdropAmount);\r\n        ifInject[msg.sender][_id]=true;\r\n        _tradeMes[_id].tradeState=3;\r\n    }\r\n\r\n    function buyerWithdrawAirdorp(uint64 _id)external{\r\n        address buyer=getBuyer(_id);\r\n        //是否是该购买者\r\n        if(msg.sender!=buyer){revert NotBuyer();}\r\n        //该笔交易是否出售者已经质押空投代币\r\n        if(_tradeMes[_id].tradeState!=3){revert NotInjectToken();} \r\n        uint128 buyAmount=_tradeMes[_id].buyTotalAmount;\r\n        uint128 buyerPrice=_tradeMes[_id].buyPrice;\r\n        //费用=购买数量*购买价格\r\n        uint256 fee=TimeFee.fee(buyAmount*buyerPrice);\r\n        //转移费用给协议所有者\r\n        IERC20(airdropToken).safeTransfer(address(this),fee);\r\n        //转移给购买者\r\n        IERC20(airdropToken).safeTransfer(buyer,buyAmount-fee);\r\n        _tradeMes[_id].tradeState=4;\r\n    }\r\n\r\n    //交易成功,出售者提取稳定币\r\n    function solderWithdrawStable(uint64 _id)external{\r\n        address solder=getSolder(_id);\r\n        //是否是该出售者\r\n        require(msg.sender==solder); \r\n        //交易对手是否质押相应成交的空投token\r\n        require(ifInject[solder][_id]);\r\n        //购买者是否提取\r\n        require(userIfWithdraw2[msg.sender][_id]==false);\r\n        address promiseStableToken=_tradeMes[_id].tokenAddress;\r\n        uint256 total=_tradeMes[_id].buyPrice*_tradeMes[_id].buyTotalAmount;\r\n        uint256 penalSumAmount=getPenal(_tradeMes[_id].buyPrice,_tradeMes[_id].buyTotalAmount);\r\n        uint256 fee=TimeFee.fee(total);\r\n        //转移费用给协议所有者\r\n        IERC20(promiseStableToken).safeTransfer(address(this),fee);\r\n        //转移给出售者\r\n        IERC20(promiseStableToken).safeTransfer(\r\n            solder,\r\n            total-fee\r\n        );\r\n        //转移质押的违约金给出售者\r\n        IERC20(promiseStableToken).safeTransfer(\r\n            solder,\r\n            penalSumAmount\r\n        );\r\n        //用户提取设置为true\r\n        userIfWithdraw2[msg.sender][_id]=true; \r\n    }\r\n\r\n    //交易失败，购买者提取违约金（未产生交易退回money）\r\n    function buyerWithdrawRefund(uint64 _id)external{\r\n        address buyer=getBuyer(_id);\r\n        address solder=getSolder(_id);\r\n        //是否是该出售者\r\n        require(msg.sender==buyer); \r\n        //交易对手是否质押相应成交的空投token\r\n        require(ifInject[solder][_id]==false);\r\n        require(userIfWithdraw3[msg.sender][_id]==false);\r\n        //是否是该购买者\r\n        require(msg.sender==buyer);  \r\n        address promiseStableToken=_tradeMes[_id].tokenAddress;\r\n        uint256 penalSumAmount=getPenal(_tradeMes[_id].buyPrice,_tradeMes[_id].buyTotalAmount);\r\n        uint256 fee=TimeFee.fee(penalSumAmount);\r\n        //费用\r\n        IERC20(promiseStableToken).safeTransfer(\r\n            address(this),\r\n            fee\r\n        );\r\n        //转移相应稳定币到购买者\r\n        IERC20(promiseStableToken).safeTransfer(\r\n            buyer,\r\n            penalSumAmount-fee\r\n        );\r\n        userIfWithdraw3[msg.sender][_id]=true;\r\n\r\n        if(_tradeMes[_id].tradeState==1){\r\n            require(userIfWithdraw4[msg.sender][_id]==false);\r\n            uint256 total=_tradeMes[_id].buyPrice*_tradeMes[_id].buyTotalAmount;\r\n            //取回token\r\n            IERC20(promiseStableToken).safeTransfer(\r\n                getBuyer(_id),\r\n                total\r\n            );\r\n            userIfWithdraw4[msg.sender][_id]=true;\r\n        }\r\n        _tradeMes[_id].tradeState=5;\r\n    }\r\n\r\n    //计算个人放入univ3获得的利息是多少\r\n    function profileEarn(uint64 _id)public {\r\n\r\n    }\r\n\r\n    //根据token0,token1获取到V3池子地址(第二种方法)\r\n    function getPoolAddress(address token0,address token1,uint24 _fee)public view returns(address thisPool){\r\n        thisPool = IUniswapV3Factory(uniV3Factory).getPool(\r\n            token0,\r\n            token1,\r\n            _fee\r\n        );\r\n        return thisPool;\r\n    }\r\n   \r\n    //根据交易id获取到购买者\r\n    function getBuyer(uint64 _id)internal view returns(address){\r\n        return _tradeMes[_id].buyerAddress;\r\n    }\r\n\r\n    //根据交易id获取到出售者\r\n    function getSolder(uint64 _id)internal view returns(address){\r\n        return _tradeMes[_id].solderAddress;\r\n    }\r\n\r\n    //计算出售者需要质押的违约金(稳定币)\r\n    function getPenal(uint128 _soldPrice, uint128 _soldAmount)public pure returns (uint256){\r\n        uint256 thisAmount = _soldPrice*_soldAmount;\r\n        if (thisAmount >= 100 ether && thisAmount < 1000 ether) {\r\n            return (thisAmount * 50) / 100;\r\n        } else if (thisAmount >= 1000 ether && thisAmount < 10000 ether) {\r\n            return (thisAmount * 40) / 100;\r\n        } else if (thisAmount > 10000 ether) {\r\n            return (thisAmount * 25) / 100;\r\n        } else {\r\n            revert NotEnoughAmount();\r\n        }\r\n    }\r\n\r\n}"
			},
			"interfaces/UniswapV2/IUniswapV2Router02.sol": {
				"content": "//SPDX-License-Identifier:MIT\r\npragma solidity >=0.8.0;\r\n\r\nimport \"./IUniswapV2Router01.sol\";\r\n\r\ninterface IUniswapV2Router02 is IUniswapV2Router01 {\r\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\r\n        address token,\r\n        uint liquidity,\r\n        uint amountTokenMin,\r\n        uint amountETHMin,\r\n        address to,\r\n        uint deadline\r\n    ) external returns (uint amountETH);\r\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\r\n        address token,\r\n        uint liquidity,\r\n        uint amountTokenMin,\r\n        uint amountETHMin,\r\n        address to,\r\n        uint deadline,\r\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\r\n    ) external returns (uint amountETH);\r\n\r\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\r\n        uint amountIn,\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external;\r\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external payable;\r\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n        uint amountIn,\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external;\r\n}\r\n"
			},
			"interfaces/UniswapV2/IUniswapV2Factory.sol": {
				"content": "//SPDX-License-Identifier:MIT\r\npragma solidity >=0.8.0;\r\n\r\ninterface IUniswapV2Factory {\r\n    event PairCreated(address indexed token0, address indexed token1, address pair, uint);\r\n\r\n    function feeTo() external view returns (address);\r\n    function feeToSetter() external view returns (address);\r\n\r\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\r\n    function allPairs(uint) external view returns (address pair);\r\n    function allPairsLength() external view returns (uint);\r\n\r\n    function createPair(address tokenA, address tokenB) external returns (address pair);\r\n\r\n    function setFeeTo(address) external;\r\n    function setFeeToSetter(address) external;\r\n}\r\n"
			},
			"interfaces/UniswapV3/INonfungiblePositionManager.sol": {
				"content": "//SPDX-License-Identifier:MIT\r\npragma solidity >=0.8.0;\r\npragma abicoder v2;\r\n\r\nimport '../../interfaces/IERC721Metadata.sol';\r\nimport '../../interfaces/IERC721Enumerable.sol';\r\n\r\nimport '../../interfaces/UniswapV3/IPoolInitializer.sol';\r\nimport '../../interfaces/UniswapV3/IERC721Permit.sol';\r\nimport '../../interfaces/UniswapV3/IPeripheryPayments.sol';\r\nimport '../../interfaces/UniswapV3/IPeripheryImmutableState.sol';\r\nimport '../../libraries/PoolAddress.sol';\r\n\r\n/// @title Non-fungible token for positions\r\n/// @notice Wraps Uniswap V3 positions in a non-fungible token interface which allows for them to be transferred\r\n/// and authorized.\r\ninterface INonfungiblePositionManager is\r\n    IPoolInitializer,\r\n    IPeripheryPayments,\r\n    IPeripheryImmutableState,\r\n    IERC721Metadata,\r\n    IERC721Enumerable,\r\n    IERC721Permit\r\n{\r\n    /// @notice Emitted when liquidity is increased for a position NFT\r\n    /// @dev Also emitted when a token is minted\r\n    /// @param tokenId The ID of the token for which liquidity was increased\r\n    /// @param liquidity The amount by which liquidity for the NFT position was increased\r\n    /// @param amount0 The amount of token0 that was paid for the increase in liquidity\r\n    /// @param amount1 The amount of token1 that was paid for the increase in liquidity\r\n    event IncreaseLiquidity(uint256 indexed tokenId, uint128 liquidity, uint256 amount0, uint256 amount1);\r\n    /// @notice Emitted when liquidity is decreased for a position NFT\r\n    /// @param tokenId The ID of the token for which liquidity was decreased\r\n    /// @param liquidity The amount by which liquidity for the NFT position was decreased\r\n    /// @param amount0 The amount of token0 that was accounted for the decrease in liquidity\r\n    /// @param amount1 The amount of token1 that was accounted for the decrease in liquidity\r\n    event DecreaseLiquidity(uint256 indexed tokenId, uint128 liquidity, uint256 amount0, uint256 amount1);\r\n    /// @notice Emitted when tokens are collected for a position NFT\r\n    /// @dev The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior\r\n    /// @param tokenId The ID of the token for which underlying tokens were collected\r\n    /// @param recipient The address of the account that received the collected tokens\r\n    /// @param amount0 The amount of token0 owed to the position that was collected\r\n    /// @param amount1 The amount of token1 owed to the position that was collected\r\n    event Collect(uint256 indexed tokenId, address recipient, uint256 amount0, uint256 amount1);\r\n\r\n    /// @notice Returns the position information associated with a given token ID.\r\n    /// @dev Throws if the token ID is not valid.\r\n    /// @param tokenId The ID of the token that represents the position\r\n    /// @return nonce The nonce for permits\r\n    /// @return operator The address that is approved for spending\r\n    /// @return token0 The address of the token0 for a specific pool\r\n    /// @return token1 The address of the token1 for a specific pool\r\n    /// @return fee The fee associated with the pool\r\n    /// @return tickLower The lower end of the tick range for the position\r\n    /// @return tickUpper The higher end of the tick range for the position\r\n    /// @return liquidity The liquidity of the position\r\n    /// @return feeGrowthInside0LastX128 The fee growth of token0 as of the last action on the individual position\r\n    /// @return feeGrowthInside1LastX128 The fee growth of token1 as of the last action on the individual position\r\n    /// @return tokensOwed0 The uncollected amount of token0 owed to the position as of the last computation\r\n    /// @return tokensOwed1 The uncollected amount of token1 owed to the position as of the last computation\r\n    function positions(uint256 tokenId)\r\n        external\r\n        view\r\n        returns (\r\n            uint96 nonce,\r\n            address operator,\r\n            address token0,\r\n            address token1,\r\n            uint24 fee,\r\n            int24 tickLower,\r\n            int24 tickUpper,\r\n            uint128 liquidity,\r\n            uint256 feeGrowthInside0LastX128,\r\n            uint256 feeGrowthInside1LastX128,\r\n            uint128 tokensOwed0,\r\n            uint128 tokensOwed1\r\n        );\r\n\r\n    struct MintParams {\r\n        address token0;\r\n        address token1;\r\n        uint24 fee;\r\n        int24 tickLower;\r\n        int24 tickUpper;\r\n        uint256 amount0Desired;\r\n        uint256 amount1Desired;\r\n        uint256 amount0Min;\r\n        uint256 amount1Min;\r\n        address recipient;\r\n        uint256 deadline;\r\n    }\r\n\r\n    /// @notice Creates a new position wrapped in a NFT\r\n    /// @dev Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized\r\n    /// a method does not exist, i.e. the pool is assumed to be initialized.\r\n    /// @param params The params necessary to mint a position, encoded as `MintParams` in calldata\r\n    /// @return tokenId The ID of the token that represents the minted position\r\n    /// @return liquidity The amount of liquidity for this position\r\n    /// @return amount0 The amount of token0\r\n    /// @return amount1 The amount of token1\r\n    function mint(MintParams calldata params)\r\n        external\r\n        payable\r\n        returns (\r\n            uint256 tokenId,\r\n            uint128 liquidity,\r\n            uint256 amount0,\r\n            uint256 amount1\r\n        );\r\n\r\n    struct IncreaseLiquidityParams {\r\n        uint256 tokenId;\r\n        uint256 amount0Desired;\r\n        uint256 amount1Desired;\r\n        uint256 amount0Min;\r\n        uint256 amount1Min;\r\n        uint256 deadline;\r\n    }\r\n\r\n    /// @notice Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`\r\n    /// @param params tokenId The ID of the token for which liquidity is being increased,\r\n    /// amount0Desired The desired amount of token0 to be spent,\r\n    /// amount1Desired The desired amount of token1 to be spent,\r\n    /// amount0Min The minimum amount of token0 to spend, which serves as a slippage check,\r\n    /// amount1Min The minimum amount of token1 to spend, which serves as a slippage check,\r\n    /// deadline The time by which the transaction must be included to effect the change\r\n    /// @return liquidity The new liquidity amount as a result of the increase\r\n    /// @return amount0 The amount of token0 to acheive resulting liquidity\r\n    /// @return amount1 The amount of token1 to acheive resulting liquidity\r\n    function increaseLiquidity(IncreaseLiquidityParams calldata params)\r\n        external\r\n        payable\r\n        returns (\r\n            uint128 liquidity,\r\n            uint256 amount0,\r\n            uint256 amount1\r\n        );\r\n\r\n    struct DecreaseLiquidityParams {\r\n        uint256 tokenId;\r\n        uint128 liquidity;\r\n        uint256 amount0Min;\r\n        uint256 amount1Min;\r\n        uint256 deadline;\r\n    }\r\n\r\n    /// @notice Decreases the amount of liquidity in a position and accounts it to the position\r\n    /// @param params tokenId The ID of the token for which liquidity is being decreased,\r\n    /// amount The amount by which liquidity will be decreased,\r\n    /// amount0Min The minimum amount of token0 that should be accounted for the burned liquidity,\r\n    /// amount1Min The minimum amount of token1 that should be accounted for the burned liquidity,\r\n    /// deadline The time by which the transaction must be included to effect the change\r\n    /// @return amount0 The amount of token0 accounted to the position's tokens owed\r\n    /// @return amount1 The amount of token1 accounted to the position's tokens owed\r\n    function decreaseLiquidity(DecreaseLiquidityParams calldata params)\r\n        external\r\n        payable\r\n        returns (uint256 amount0, uint256 amount1);\r\n\r\n    struct CollectParams {\r\n        uint256 tokenId;\r\n        address recipient;\r\n        uint128 amount0Max;\r\n        uint128 amount1Max;\r\n    }\r\n\r\n    /// @notice Collects up to a maximum amount of fees owed to a specific position to the recipient\r\n    /// @param params tokenId The ID of the NFT for which tokens are being collected,\r\n    /// recipient The account that should receive the tokens,\r\n    /// amount0Max The maximum amount of token0 to collect,\r\n    /// amount1Max The maximum amount of token1 to collect\r\n    /// @return amount0 The amount of fees collected in token0\r\n    /// @return amount1 The amount of fees collected in token1\r\n    function collect(CollectParams calldata params) external payable returns (uint256 amount0, uint256 amount1);\r\n\r\n    /// @notice Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens\r\n    /// must be collected first.\r\n    /// @param tokenId The ID of the token that is being burned\r\n    function burn(uint256 tokenId) external payable;\r\n}"
			},
			"interfaces/IUniswapV3Factory.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.8.0;\r\n\r\n/// @title The interface for the Uniswap V3 Factory\r\n/// @notice The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\r\ninterface IUniswapV3Factory {\r\n    /// @notice Emitted when the owner of the factory is changed\r\n    /// @param oldOwner The owner before the owner was changed\r\n    /// @param newOwner The owner after the owner was changed\r\n    event OwnerChanged(address indexed oldOwner, address indexed newOwner);\r\n\r\n    /// @notice Emitted when a pool is created\r\n    /// @param token0 The first token of the pool by address sort order\r\n    /// @param token1 The second token of the pool by address sort order\r\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\r\n    /// @param tickSpacing The minimum number of ticks between initialized ticks\r\n    /// @param pool The address of the created pool\r\n    event PoolCreated(\r\n        address indexed token0,\r\n        address indexed token1,\r\n        uint24 indexed fee,\r\n        int24 tickSpacing,\r\n        address pool\r\n    );\r\n\r\n    /// @notice Emitted when a new fee amount is enabled for pool creation via the factory\r\n    /// @param fee The enabled fee, denominated in hundredths of a bip\r\n    /// @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee\r\n    event FeeAmountEnabled(uint24 indexed fee, int24 indexed tickSpacing);\r\n\r\n    /// @notice Returns the current owner of the factory\r\n    /// @dev Can be changed by the current owner via setOwner\r\n    /// @return The address of the factory owner\r\n    function owner() external view returns (address);\r\n\r\n    /// @notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\r\n    /// @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\r\n    /// @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\r\n    /// @return The tick spacing\r\n    function feeAmountTickSpacing(uint24 fee) external view returns (int24);\r\n\r\n    /// @notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\r\n    /// @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\r\n    /// @param tokenA The contract address of either token0 or token1\r\n    /// @param tokenB The contract address of the other token\r\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\r\n    /// @return pool The pool address\r\n    function getPool(\r\n        address tokenA,\r\n        address tokenB,\r\n        uint24 fee\r\n    ) external view returns (address pool);\r\n\r\n    /// @notice Creates a pool for the given two tokens and fee\r\n    /// @param tokenA One of the two tokens in the desired pool\r\n    /// @param tokenB The other of the two tokens in the desired pool\r\n    /// @param fee The desired fee for the pool\r\n    /// @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\r\n    /// from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\r\n    /// are invalid.\r\n    /// @return pool The address of the newly created pool\r\n    function createPool(\r\n        address tokenA,\r\n        address tokenB,\r\n        uint24 fee\r\n    ) external returns (address pool);\r\n\r\n    /// @notice Updates the owner of the factory\r\n    /// @dev Must be called by the current owner\r\n    /// @param _owner The new owner of the factory\r\n    function setOwner(address _owner) external;\r\n\r\n    /// @notice Enables a fee amount with the given tickSpacing\r\n    /// @dev Fee amounts may never be removed once enabled\r\n    /// @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\r\n    /// @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount\r\n    function enableFeeAmount(uint24 fee, int24 tickSpacing) external;\r\n}"
			},
			"interfaces/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\r\n\r\npragma solidity >=0.8.0;\r\n\r\n/**\r\n * @title ERC721 token receiver interface\r\n * @dev Interface for any contract that wants to support safeTransfers\r\n * from ERC721 asset contracts.\r\n */\r\ninterface IERC721Receiver {\r\n    /**\r\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\r\n     * by `operator` from `from`, this function is called.\r\n     *\r\n     * It must return its Solidity selector to confirm the token transfer.\r\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\r\n     *\r\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\r\n     */\r\n    function onERC721Received(\r\n        address operator,\r\n        address from,\r\n        uint256 tokenId,\r\n        bytes calldata data\r\n    ) external returns (bytes4);\r\n}"
			},
			"libraries/TimeFee.sol": {
				"content": "//SPDX-License-Identifier:MIT\r\npragma solidity >=0.8.9;\r\n\r\nlibrary TimeFee{\r\n    /*\r\n        *  100 ether<=amount<1000 ether, 1%\r\n        *  1000 ether<=amount<10000 ether,0.5%\r\n        *  amount>10000 ether,0.25%\r\n        * other error\r\n    */\r\n    function fee(uint256 stableAmount)internal pure returns(uint256 stableFee){\r\n        if(stableAmount>=100 ether && stableAmount<1000 ether){\r\n            return stableAmount/100;\r\n        }else if(stableAmount>=1000 ether && stableAmount<10000 ether){\r\n            return stableAmount/200;\r\n        }else if(stableAmount>=10000 ether){\r\n            return stableAmount/400;\r\n        }else{\r\n            return 0;\r\n        }\r\n    }\r\n}"
			},
			"interfaces/IError.sol": {
				"content": "//SPDX-License-Identifier:MIT\r\npragma solidity >=0.8.0;\r\n\r\ninterface IError{\r\n    //购买数量<100\r\n    error NotEnoughAmount();\r\n    //已经放入约定的空投代币数量\r\n    error AlreadyInjectToken();\r\n    //没有放入约定的空投代币数量\r\n    error NotInjectToken();\r\n    //不是购买者\r\n    error NotBuyer();\r\n    //不是出售者\r\n    error NorSolder();\r\n}"
			},
			"interfaces/ITimeStruct.sol": {
				"content": "//SPDX-License-Identifier:MIT\r\npragma solidity >=0.8.0;\r\n\r\ninterface ITimeStruct{\r\n    struct tradeMes{\r\n        uint8 tradeState; \r\n        uint64 tradeId;\r\n        uint56 buyTime;\r\n        uint128 buyTotalAmount; //预期空投代币数量\r\n        uint128 buyPrice;       //buyPrice/1000=当前价格\r\n        address tokenAddress;\r\n        address buyerAddress;\r\n        address solderAddress;\r\n    }\r\n}"
			},
			"libraries/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\r\n\r\npragma solidity >=0.8.0;\r\n\r\nimport {IERC20} from \"../interfaces/IERC20.sol\";\r\nimport {IERC20Permit} from \"../interfaces/IERC20Permit.sol\";\r\nimport {Address} from \"../libraries/Address.sol\";\r\n\r\n/**\r\n * @title SafeERC20\r\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\r\n * contract returns false). Tokens that return no value (and instead revert or\r\n * throw on failure) are also supported, non-reverting calls are assumed to be\r\n * successful.\r\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\r\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\r\n */\r\nlibrary SafeERC20 {\r\n    using Address for address;\r\n\r\n    /**\r\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\r\n     * non-reverting calls are assumed to be successful.\r\n     */\r\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\r\n    }\r\n\r\n    /**\r\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\r\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\r\n     */\r\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\r\n    }\r\n\r\n    /**\r\n     * @dev Deprecated. This function has issues similar to the ones found in\r\n     * {IERC20-approve}, and its usage is discouraged.\r\n     *\r\n     * Whenever possible, use {safeIncreaseAllowance} and\r\n     * {safeDecreaseAllowance} instead.\r\n     */\r\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\r\n        // safeApprove should only be called when setting an initial allowance,\r\n        // or when resetting it to zero. To increase and decrease it, use\r\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\r\n        require(\r\n            (value == 0) || (token.allowance(address(this), spender) == 0),\r\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\r\n        );\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\r\n    }\r\n\r\n    /**\r\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\r\n     * non-reverting calls are assumed to be successful.\r\n     */\r\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\r\n        uint256 oldAllowance = token.allowance(address(this), spender);\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\r\n    }\r\n\r\n    /**\r\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\r\n     * non-reverting calls are assumed to be successful.\r\n     */\r\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\r\n        unchecked {\r\n            uint256 oldAllowance = token.allowance(address(this), spender);\r\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\r\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\r\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\r\n     * to be set to zero before setting it to a non-zero value, such as USDT.\r\n     */\r\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\r\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\r\n\r\n        if (!_callOptionalReturnBool(token, approvalCall)) {\r\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\r\n            _callOptionalReturn(token, approvalCall);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\r\n     * Revert on invalid signature.\r\n     */\r\n    function safePermit(\r\n        IERC20Permit token,\r\n        address owner,\r\n        address spender,\r\n        uint256 value,\r\n        uint256 deadline,\r\n        uint8 v,\r\n        bytes32 r,\r\n        bytes32 s\r\n    ) internal {\r\n        uint256 nonceBefore = token.nonces(owner);\r\n        token.permit(owner, spender, value, deadline, v, r, s);\r\n        uint256 nonceAfter = token.nonces(owner);\r\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\r\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\r\n     * @param token The token targeted by the call.\r\n     * @param data The call data (encoded using abi.encode or one of its variants).\r\n     */\r\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\r\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\r\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\r\n        // the target address contains contract code and also asserts for success in the low-level call.\r\n\r\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\r\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\r\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\r\n     * @param token The token targeted by the call.\r\n     * @param data The call data (encoded using abi.encode or one of its variants).\r\n     *\r\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\r\n     */\r\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\r\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\r\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\r\n        // and not revert is the subcall reverts.\r\n\r\n        (bool success, bytes memory returndata) = address(token).call(data);\r\n        return\r\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\r\n    }\r\n}\r\n"
			},
			"libraries/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\r\n\r\npragma solidity >=0.8.0;\r\n\r\n/**\r\n * @dev Collection of functions related to the address type\r\n */\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     *\r\n     * Furthermore, `isContract` will also return true if the target contract within\r\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\r\n     * which only has an effect at the end of a transaction.\r\n     * ====\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\r\n     *\r\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\r\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\r\n     * constructor.\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize/address.code.length, which returns 0\r\n        // for contracts in construction, since the code is only stored at the end\r\n        // of the constructor execution.\r\n\r\n        return account.code.length > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        (bool success, ) = recipient.call{value: amount}(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain `call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\r\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        (bool success, bytes memory returndata) = target.delegatecall(data);\r\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\r\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\r\n     *\r\n     * _Available since v4.8._\r\n     */\r\n    function verifyCallResultFromTarget(\r\n        address target,\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        if (success) {\r\n            if (returndata.length == 0) {\r\n                // only check isContract if the call was successful and the return data is empty\r\n                // otherwise we already know that it was a contract\r\n                require(isContract(target), \"Address: call to non-contract\");\r\n            }\r\n            return returndata;\r\n        } else {\r\n            _revert(returndata, errorMessage);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\r\n     * revert reason or using the provided one.\r\n     *\r\n     * _Available since v4.3._\r\n     */\r\n    function verifyCallResult(\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal pure returns (bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            _revert(returndata, errorMessage);\r\n        }\r\n    }\r\n\r\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\r\n        // Look for revert reason and bubble it up if present\r\n        if (returndata.length > 0) {\r\n            // The easiest way to bubble the revert reason is using memory via assembly\r\n            /// @solidity memory-safe-assembly\r\n            assembly {\r\n                let returndata_size := mload(returndata)\r\n                revert(add(32, returndata), returndata_size)\r\n            }\r\n        } else {\r\n            revert(errorMessage);\r\n        }\r\n    }\r\n}\r\n"
			},
			"interfaces/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\r\n\r\npragma solidity >=0.8.0;\r\n\r\n/**\r\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\r\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\r\n *\r\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\r\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\r\n * need to send a transaction, and thus is not required to hold Ether at all.\r\n *\r\n * ==== Security Considerations\r\n *\r\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\r\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\r\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\r\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\r\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\r\n * generally recommended is:\r\n *\r\n * ```solidity\r\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\r\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\r\n *     doThing(..., value);\r\n * }\r\n *\r\n * function doThing(..., uint256 value) public {\r\n *     token.safeTransferFrom(msg.sender, address(this), value);\r\n *     ...\r\n * }\r\n * ```\r\n *\r\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\r\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\r\n * {SafeERC20-safeTransferFrom}).\r\n *\r\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\r\n * contracts should have entry points that don't rely on permit.\r\n */\r\ninterface IERC20Permit {\r\n    /**\r\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\r\n     * given ``owner``'s signed approval.\r\n     *\r\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\r\n     * ordering also apply here.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     * - `deadline` must be a timestamp in the future.\r\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\r\n     * over the EIP712-formatted function arguments.\r\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\r\n     *\r\n     * For more information on the signature format, see the\r\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\r\n     * section].\r\n     *\r\n     * CAUTION: See Security Considerations above.\r\n     */\r\n    function permit(\r\n        address owner,\r\n        address spender,\r\n        uint256 value,\r\n        uint256 deadline,\r\n        uint8 v,\r\n        bytes32 r,\r\n        bytes32 s\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Returns the current nonce for `owner`. This value must be\r\n     * included whenever a signature is generated for {permit}.\r\n     *\r\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\r\n     * prevents a signature from being used multiple times.\r\n     */\r\n    function nonces(address owner) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\r\n     */\r\n    // solhint-disable-next-line func-name-mixedcase\r\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\r\n}\r\n"
			},
			"interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `to`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address to, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `from` to `to` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\r\n}\r\n"
			},
			"libraries/PoolAddress.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.8.0;\r\n\r\n/// @title Provides functions for deriving a pool address from the factory, tokens, and the fee\r\nlibrary PoolAddress {\r\n    bytes32 internal constant POOL_INIT_CODE_HASH = 0xe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b54;\r\n\r\n    /// @notice The identifying key of the pool\r\n    struct PoolKey {\r\n        address token0;\r\n        address token1;\r\n        uint24 fee;\r\n    }\r\n\r\n    /// @notice Returns PoolKey: the ordered tokens with the matched fee levels\r\n    /// @param tokenA The first token of a pool, unsorted\r\n    /// @param tokenB The second token of a pool, unsorted\r\n    /// @param fee The fee level of the pool\r\n    /// @return Poolkey The pool details with ordered token0 and token1 assignments\r\n    function getPoolKey(\r\n        address tokenA,\r\n        address tokenB,\r\n        uint24 fee\r\n    ) internal pure returns (PoolKey memory) {\r\n        if (tokenA > tokenB) (tokenA, tokenB) = (tokenB, tokenA);\r\n        return PoolKey({token0: tokenA, token1: tokenB, fee: fee});\r\n    }\r\n\r\n    /// @notice Deterministically computes the pool address given the factory and PoolKey\r\n    /// @param factory The Uniswap V3 factory contract address\r\n    /// @param key The PoolKey\r\n    /// @return pool The contract address of the V3 pool\r\n    function computeAddress(address factory, PoolKey memory key) internal pure returns (address pool) {\r\n        require(key.token0 < key.token1);\r\n        pool = address(uint160(uint(\r\n                keccak256(\r\n                    abi.encodePacked(\r\n                        bytes1(0xff),\r\n                        factory,\r\n                        keccak256(abi.encode(key.token0, key.token1, key.fee)),\r\n                        POOL_INIT_CODE_HASH\r\n                    )\r\n                )\r\n            )\r\n        ));\r\n    }\r\n}"
			},
			"interfaces/UniswapV3/IPeripheryImmutableState.sol": {
				"content": "//SPDX-License-Identifier:MIT\r\npragma solidity >=0.8.0;\r\n\r\n/// @title Immutable state\r\n/// @notice Functions that return immutable state of the router\r\ninterface IPeripheryImmutableState {\r\n    /// @return Returns the address of the Uniswap V3 factory\r\n    function factory() external view returns (address);\r\n\r\n    /// @return Returns the address of WETH9\r\n    function WETH9() external view returns (address);\r\n}"
			},
			"interfaces/UniswapV3/IPeripheryPayments.sol": {
				"content": "//SPDX-License-Identifier:MIT\r\npragma solidity >=0.8.0;\r\n\r\n/// @title Periphery Payments\r\n/// @notice Functions to ease deposits and withdrawals of ETH\r\ninterface IPeripheryPayments {\r\n    /// @notice Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\r\n    /// @dev The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\r\n    /// @param amountMinimum The minimum amount of WETH9 to unwrap\r\n    /// @param recipient The address receiving ETH\r\n    function unwrapWETH9(uint256 amountMinimum, address recipient) external payable;\r\n\r\n    /// @notice Refunds any ETH balance held by this contract to the `msg.sender`\r\n    /// @dev Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps\r\n    /// that use ether for the input amount\r\n    function refundETH() external payable;\r\n\r\n    /// @notice Transfers the full amount of a token held by this contract to recipient\r\n    /// @dev The amountMinimum parameter prevents malicious contracts from stealing the token from users\r\n    /// @param token The contract address of the token which will be transferred to `recipient`\r\n    /// @param amountMinimum The minimum amount of token required for a transfer\r\n    /// @param recipient The destination address of the token\r\n    function sweepToken(\r\n        address token,\r\n        uint256 amountMinimum,\r\n        address recipient\r\n    ) external payable;\r\n}"
			},
			"interfaces/UniswapV3/IERC721Permit.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.8.0;\r\n\r\nimport '../../interfaces/IERC721.sol';\r\n\r\n/// @title ERC721 with permit\r\n/// @notice Extension to ERC721 that includes a permit function for signature based approvals\r\ninterface IERC721Permit is IERC721 {\r\n    /// @notice The permit typehash used in the permit signature\r\n    /// @return The typehash for the permit\r\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\r\n\r\n    /// @notice The domain separator used in the permit signature\r\n    /// @return The domain seperator used in encoding of permit signature\r\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\r\n\r\n    /// @notice Approve of a specific token ID for spending by spender via signature\r\n    /// @param spender The account that is being approved\r\n    /// @param tokenId The ID of the token that is being approved for spending\r\n    /// @param deadline The deadline timestamp by which the call must be mined for the approve to work\r\n    /// @param v Must produce valid secp256k1 signature from the holder along with `r` and `s`\r\n    /// @param r Must produce valid secp256k1 signature from the holder along with `v` and `s`\r\n    /// @param s Must produce valid secp256k1 signature from the holder along with `r` and `v`\r\n    function permit(\r\n        address spender,\r\n        uint256 tokenId,\r\n        uint256 deadline,\r\n        uint8 v,\r\n        bytes32 r,\r\n        bytes32 s\r\n    ) external payable;\r\n}"
			},
			"interfaces/UniswapV3/IPoolInitializer.sol": {
				"content": "//SPDX-License-Identifier:MIT\r\npragma solidity >=0.8.0;\r\npragma abicoder v2;\r\n\r\n/// @title Creates and initializes V3 Pools\r\n/// @notice Provides a method for creating and initializing a pool, if necessary, for bundling with other methods that\r\n/// require the pool to exist.\r\ninterface IPoolInitializer {\r\n    /// @notice Creates a new pool if it does not exist, then initializes if not initialized\r\n    /// @dev This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool\r\n    /// @param token0 The contract address of token0 of the pool\r\n    /// @param token1 The contract address of token1 of the pool\r\n    /// @param fee The fee amount of the v3 pool for the specified token pair\r\n    /// @param sqrtPriceX96 The initial square root price of the pool as a Q64.96 value\r\n    /// @return pool Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary\r\n    function createAndInitializePoolIfNecessary(\r\n        address token0,\r\n        address token1,\r\n        uint24 fee,\r\n        uint160 sqrtPriceX96\r\n    ) external payable returns (address pool);\r\n}"
			},
			"interfaces/IERC721Enumerable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity >=0.8.0;\r\n\r\nimport \"../interfaces/IERC721.sol\";\r\n\r\n/**\r\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\r\n * @dev See https://eips.ethereum.org/EIPS/eip-721\r\n */\r\ninterface IERC721Enumerable is IERC721 {\r\n\r\n    /**\r\n     * @dev Returns the total amount of tokens stored by the contract.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\r\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\r\n     */\r\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256 tokenId);\r\n\r\n    /**\r\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\r\n     * Use along with {totalSupply} to enumerate all tokens.\r\n     */\r\n    function tokenByIndex(uint256 index) external view returns (uint256);\r\n}\r\n"
			},
			"interfaces/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\r\n\r\npragma solidity >=0.8.0;\r\n\r\nimport \"../interfaces/IERC721.sol\";\r\n\r\n/**\r\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\r\n * @dev See https://eips.ethereum.org/EIPS/eip-721\r\n */\r\ninterface IERC721Metadata is IERC721 {\r\n    /**\r\n     * @dev Returns the token collection name.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the token collection symbol.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\r\n     */\r\n    function tokenURI(uint256 tokenId) external view returns (string memory);\r\n}"
			},
			"interfaces/UniswapV2/IUniswapV2Router01.sol": {
				"content": "//SPDX-License-Identifier:MIT\r\npragma solidity >=0.8.0;\r\n\r\ninterface IUniswapV2Router01 {\r\n    function factory() external pure returns (address);\r\n    function WETH() external pure returns (address);\r\n\r\n    function addLiquidity(\r\n        address tokenA,\r\n        address tokenB,\r\n        uint amountADesired,\r\n        uint amountBDesired,\r\n        uint amountAMin,\r\n        uint amountBMin,\r\n        address to,\r\n        uint deadline\r\n    ) external returns (uint amountA, uint amountB, uint liquidity);\r\n    function addLiquidityETH(\r\n        address token,\r\n        uint amountTokenDesired,\r\n        uint amountTokenMin,\r\n        uint amountETHMin,\r\n        address to,\r\n        uint deadline\r\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\r\n    function removeLiquidity(\r\n        address tokenA,\r\n        address tokenB,\r\n        uint liquidity,\r\n        uint amountAMin,\r\n        uint amountBMin,\r\n        address to,\r\n        uint deadline\r\n    ) external returns (uint amountA, uint amountB);\r\n    function removeLiquidityETH(\r\n        address token,\r\n        uint liquidity,\r\n        uint amountTokenMin,\r\n        uint amountETHMin,\r\n        address to,\r\n        uint deadline\r\n    ) external returns (uint amountToken, uint amountETH);\r\n    function removeLiquidityWithPermit(\r\n        address tokenA,\r\n        address tokenB,\r\n        uint liquidity,\r\n        uint amountAMin,\r\n        uint amountBMin,\r\n        address to,\r\n        uint deadline,\r\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\r\n    ) external returns (uint amountA, uint amountB);\r\n    function removeLiquidityETHWithPermit(\r\n        address token,\r\n        uint liquidity,\r\n        uint amountTokenMin,\r\n        uint amountETHMin,\r\n        address to,\r\n        uint deadline,\r\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\r\n    ) external returns (uint amountToken, uint amountETH);\r\n    function swapExactTokensForTokens(\r\n        uint amountIn,\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external returns (uint[] memory amounts);\r\n    function swapTokensForExactTokens(\r\n        uint amountOut,\r\n        uint amountInMax,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external returns (uint[] memory amounts);\r\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\r\n        external\r\n        payable\r\n        returns (uint[] memory amounts);\r\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\r\n        external\r\n        returns (uint[] memory amounts);\r\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\r\n        external\r\n        returns (uint[] memory amounts);\r\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\r\n        external\r\n        payable\r\n        returns (uint[] memory amounts);\r\n\r\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\r\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\r\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\r\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\r\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\r\n}\r\n"
			},
			"interfaces/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\r\n\r\npragma solidity >=0.8.0;\r\n\r\nimport {IERC165} from \"../interfaces/IERC165.sol\";\r\n\r\n/**\r\n * @dev Required interface of an ERC721 compliant contract.\r\n */\r\ninterface IERC721 is IERC165 {\r\n    /**\r\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\r\n     */\r\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\r\n     */\r\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\r\n\r\n    /**\r\n     * @dev Returns the number of tokens in ``owner``'s account.\r\n     */\r\n    function balanceOf(address owner) external view returns (uint256 balance);\r\n\r\n    /**\r\n     * @dev Returns the owner of the `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function ownerOf(uint256 tokenId) external view returns (address owner);\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\r\n     *   a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\r\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\r\n     *   {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\r\n     *   a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` token from `from` to `to`.\r\n     *\r\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\r\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\r\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address from, address to, uint256 tokenId) external;\r\n\r\n    /**\r\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\r\n     * The approval is cleared when the token is transferred.\r\n     *\r\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The caller must own the token or be an approved operator.\r\n     * - `tokenId` must exist.\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address to, uint256 tokenId) external;\r\n\r\n    /**\r\n     * @dev Approve or remove `operator` as an operator for the caller.\r\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The `operator` cannot be the address zero.\r\n     *\r\n     * Emits an {ApprovalForAll} event.\r\n     */\r\n    function setApprovalForAll(address operator, bool approved) external;\r\n\r\n    /**\r\n     * @dev Returns the account approved for `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function getApproved(uint256 tokenId) external view returns (address operator);\r\n\r\n    /**\r\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\r\n     *\r\n     * See {setApprovalForAll}\r\n     */\r\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\r\n}\r\n"
			},
			"interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\r\n\r\npragma solidity >=0.8.0;\r\n\r\n/**\r\n * @dev Interface of the ERC165 standard, as defined in the\r\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\r\n *\r\n * Implementers can declare support of contract interfaces, which can then be\r\n * queried by others ({ERC165Checker}).\r\n *\r\n * For an implementation, see {ERC165}.\r\n */\r\ninterface IERC165 {\r\n    /**\r\n     * @dev Returns true if this contract implements the interface defined by\r\n     * `interfaceId`. See the corresponding\r\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\r\n     * to learn more about how these ids are created.\r\n     *\r\n     * This function call must use less than 30 000 gas.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/TimeMarket.sol": {
				"TimeMarket": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_airdropToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_clearingTime",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AlreadyInjectToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NorSolder",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotBuyer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotEnoughAmount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInjectToken",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "_id",
									"type": "uint64"
								},
								{
									"internalType": "address",
									"name": "token1",
									"type": "address"
								}
							],
							"name": "Sale",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "_buyAmount",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "_buyPrice",
									"type": "uint128"
								}
							],
							"name": "buy",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "_id",
									"type": "uint64"
								}
							],
							"name": "buyerWithdrawAirdorp",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "_id",
									"type": "uint64"
								}
							],
							"name": "buyerWithdrawRefund",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint128",
									"name": "_soldPrice",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "_soldAmount",
									"type": "uint128"
								}
							],
							"name": "getPenal",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "_fee",
									"type": "uint24"
								}
							],
							"name": "getPoolAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "thisPool",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "_id",
									"type": "uint64"
								}
							],
							"name": "injectFutureToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "_id",
									"type": "uint64"
								}
							],
							"name": "profileEarn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "_id",
									"type": "uint64"
								}
							],
							"name": "solderWithdrawStable",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "userIfWithdraw1",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "userIfWithdraw2",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "userIfWithdraw3",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "userIfWithdraw4",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/TimeMarket.sol\":536:10015  contract TimeMarket is ITimeStruct, IError{... */\n  mstore(0x40, 0x80)\n    /* \"contracts/TimeMarket.sol\":835:877  0x1F98431c8aD98523631AE4a59f267346ea31F984 */\n  0x1f98431c8ad98523631ae4a59f267346ea31f984\n    /* \"contracts/TimeMarket.sol\":806:877  address private uniV3Factory=0x1F98431c8aD98523631AE4a59f267346ea31F984 */\n  0x04\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/TimeMarket.sol\":927:969  0xC36442b4a4522E871399CD717aBDD847Ab11FE88 */\n  0xc36442b4a4522e871399cd717abdd847ab11fe88\n    /* \"contracts/TimeMarket.sol\":884:969  address private NonfungiblePositionManager=0xC36442b4a4522E871399CD717aBDD847Ab11FE88 */\n  0x05\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/TimeMarket.sol\":978:1121  constructor(address _airdropToken,uint _clearingTime){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/TimeMarket.sol\":1055:1068  _airdropToken */\n  dup2\n    /* \"contracts/TimeMarket.sol\":1042:1054  airdropToken */\n  0x01\n  0x00\n    /* \"contracts/TimeMarket.sol\":1042:1068  airdropToken=_airdropToken */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/TimeMarket.sol\":1099:1112  _clearingTime */\n  dup1\n    /* \"contracts/TimeMarket.sol\":1079:1091  clearingTime */\n  0x00\n  dup1\n    /* \"contracts/TimeMarket.sol\":1079:1113  clearingTime=uint56(_clearingTime) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/TimeMarket.sol\":978:1121  constructor(address _airdropToken,uint _clearingTime){... */\n  pop\n  pop\n    /* \"contracts/TimeMarket.sol\":536:10015  contract TimeMarket is ITimeStruct, IError{... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_23\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_25\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_26:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_28\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:922   */\ntag_14:\n    /* \"#utility.yul\":882:889   */\n  0x00\n    /* \"#utility.yul\":911:916   */\n  dup2\n    /* \"#utility.yul\":900:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":845:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_15:\n    /* \"#utility.yul\":1001:1025   */\n  tag_31\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_14\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  dup1\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_32:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_16:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_34\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_15\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:1712   */\ntag_3:\n    /* \"#utility.yul\":1284:1290   */\n  0x00\n    /* \"#utility.yul\":1292:1298   */\n  dup1\n    /* \"#utility.yul\":1341:1343   */\n  0x40\n    /* \"#utility.yul\":1329:1338   */\n  dup4\n    /* \"#utility.yul\":1320:1327   */\n  dup6\n    /* \"#utility.yul\":1316:1339   */\n  sub\n    /* \"#utility.yul\":1312:1344   */\n  slt\n    /* \"#utility.yul\":1309:1428   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1347:1426   */\n  tag_37\n  tag_8\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":1309:1428   */\ntag_36:\n    /* \"#utility.yul\":1467:1468   */\n  0x00\n    /* \"#utility.yul\":1492:1556   */\n  tag_38\n    /* \"#utility.yul\":1548:1555   */\n  dup6\n    /* \"#utility.yul\":1539:1545   */\n  dup3\n    /* \"#utility.yul\":1528:1537   */\n  dup7\n    /* \"#utility.yul\":1524:1546   */\n  add\n    /* \"#utility.yul\":1492:1556   */\n  tag_13\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1482:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1438:1566   */\n  pop\n    /* \"#utility.yul\":1605:1607   */\n  0x20\n    /* \"#utility.yul\":1631:1695   */\n  tag_39\n    /* \"#utility.yul\":1687:1694   */\n  dup6\n    /* \"#utility.yul\":1678:1684   */\n  dup3\n    /* \"#utility.yul\":1667:1676   */\n  dup7\n    /* \"#utility.yul\":1663:1685   */\n  add\n    /* \"#utility.yul\":1631:1695   */\n  tag_16\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1621:1695   */\n  swap2\n  pop\n    /* \"#utility.yul\":1576:1705   */\n  pop\n    /* \"#utility.yul\":1205:1712   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/TimeMarket.sol\":536:10015  contract TimeMarket is ITimeStruct, IError{... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/TimeMarket.sol\":536:10015  contract TimeMarket is ITimeStruct, IError{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x98c50fdd\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xc3cf1aa6\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xc3cf1aa6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xd91af492\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xdf0905c6\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xfc993ea8\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x98c50fdd\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xb8d7f980\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xc0102de4\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_16:\n      dup1\n      0x0d45431d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x25ac3a73\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2895cb7b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x59de2f60\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x696d6283\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x77bcd8a6\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/TimeMarket.sol\":1828:3096  function buy(address _tokenAddress,address token1,uint128 _buyAmount,uint128 _buyPrice)external{... */\n    tag_3:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      stop\n        /* \"contracts/TimeMarket.sol\":4534:5141  function injectFutureToken(uint64 _id)external{... */\n    tag_4:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      stop\n        /* \"contracts/TimeMarket.sol\":7186:8619  function buyerWithdrawRefund(uint64 _id)external{... */\n    tag_5:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_27:\n      tag_28\n      jump\t// in\n    tag_26:\n      stop\n        /* \"contracts/TimeMarket.sol\":1382:1446  mapping(address => mapping(uint256=>bool))public userIfWithdraw1 */\n    tag_6:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TimeMarket.sol\":8806:9076  function getPoolAddress(address token0,address token1,uint24 _fee)public view returns(address thisPool){... */\n    tag_7:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TimeMarket.sol\":5962:7099  function solderWithdrawStable(uint64 _id)external{... */\n    tag_8:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_42:\n      tag_43\n      jump\t// in\n    tag_41:\n      stop\n        /* \"contracts/TimeMarket.sol\":9467:10010  function getPenal(uint128 _soldPrice, uint128 _soldAmount)public pure returns (uint256){... */\n    tag_9:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TimeMarket.sol\":1630:1694  mapping(address => mapping(uint256=>bool))public userIfWithdraw3 */\n    tag_10:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TimeMarket.sol\":5149:5909  function buyerWithdrawAirdorp(uint64 _id)external{... */\n    tag_11:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n    tag_54:\n      stop\n        /* \"contracts/TimeMarket.sol\":8682:8731  function profileEarn(uint64 _id)public {... */\n    tag_12:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_58:\n      tag_59\n      jump\t// in\n    tag_57:\n      stop\n        /* \"contracts/TimeMarket.sol\":3125:4405  function Sale(uint64 _id,address token1) external {... */\n    tag_13:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n    tag_60:\n      stop\n        /* \"contracts/TimeMarket.sol\":1506:1570  mapping(address => mapping(uint256=>bool))public userIfWithdraw2 */\n    tag_14:\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_65:\n      tag_66\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TimeMarket.sol\":1741:1805  mapping(address => mapping(uint256=>bool))public userIfWithdraw4 */\n    tag_15:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_69:\n      tag_70\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TimeMarket.sol\":1828:3096  function buy(address _tokenAddress,address token1,uint128 _buyAmount,uint128 _buyPrice)external{... */\n    tag_21:\n        /* \"contracts/TimeMarket.sol\":1934:1944  uint total */\n      0x00\n        /* \"contracts/TimeMarket.sol\":1956:1965  _buyPrice */\n      dup2\n        /* \"contracts/TimeMarket.sol\":1945:1955  _buyAmount */\n      dup4\n        /* \"contracts/TimeMarket.sol\":1945:1965  _buyAmount*_buyPrice */\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n        /* \"contracts/TimeMarket.sol\":1934:1965  uint total=_buyAmount*_buyPrice */\n      0xffffffffffffffffffffffffffffffff\n      and\n      swap1\n      pop\n        /* \"contracts/TimeMarket.sol\":2052:2068  address thisPool */\n      0x00\n        /* \"contracts/TimeMarket.sol\":2069:2110  getPoolAddress(_tokenAddress,token1,1000) */\n      tag_75\n        /* \"contracts/TimeMarket.sol\":2084:2097  _tokenAddress */\n      dup7\n        /* \"contracts/TimeMarket.sol\":2098:2104  token1 */\n      dup7\n        /* \"contracts/TimeMarket.sol\":2105:2109  1000 */\n      0x03e8\n        /* \"contracts/TimeMarket.sol\":2069:2083  getPoolAddress */\n      tag_38\n        /* \"contracts/TimeMarket.sol\":2069:2110  getPoolAddress(_tokenAddress,token1,1000) */\n      jump\t// in\n    tag_75:\n        /* \"contracts/TimeMarket.sol\":2052:2110  address thisPool=getPoolAddress(_tokenAddress,token1,1000) */\n      swap1\n      pop\n        /* \"contracts/TimeMarket.sol\":2130:2139  100 ether */\n      0x056bc75e2d63100000\n        /* \"contracts/TimeMarket.sol\":2124:2129  total */\n      dup3\n        /* \"contracts/TimeMarket.sol\":2124:2139  total<100 ether */\n      lt\n        /* \"contracts/TimeMarket.sol\":2121:2191  if(total<100 ether){... */\n      iszero\n      tag_76\n      jumpi\n        /* \"contracts/TimeMarket.sol\":2162:2179  NotEnoughAmount() */\n      mload(0x40)\n      0xe008b5f900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/TimeMarket.sol\":2121:2191  if(total<100 ether){... */\n    tag_76:\n        /* \"contracts/TimeMarket.sol\":2201:2228  tradeMes memory newTradeMes */\n      0x00\n        /* \"contracts/TimeMarket.sol\":2229:2542  tradeMes({... */\n      mload(0x40)\n      dup1\n      0x0100\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/TimeMarket.sol\":2264:2265  1 */\n      0x01\n        /* \"contracts/TimeMarket.sol\":2229:2542  tradeMes({... */\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/TimeMarket.sol\":2288:2290  id */\n      0x00\n      0x07\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"contracts/TimeMarket.sol\":2229:2542  tradeMes({... */\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/TimeMarket.sol\":2320:2335  block.timestamp */\n      timestamp\n        /* \"contracts/TimeMarket.sol\":2229:2542  tradeMes({... */\n      0xffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/TimeMarket.sol\":2366:2376  _buyAmount */\n      dup7\n        /* \"contracts/TimeMarket.sol\":2229:2542  tradeMes({... */\n      0xffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/TimeMarket.sol\":2400:2409  _buyPrice */\n      dup6\n        /* \"contracts/TimeMarket.sol\":2229:2542  tradeMes({... */\n      0xffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/TimeMarket.sol\":2437:2450  _tokenAddress */\n      dup9\n        /* \"contracts/TimeMarket.sol\":2229:2542  tradeMes({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/TimeMarket.sol\":2478:2488  msg.sender */\n      caller\n        /* \"contracts/TimeMarket.sol\":2229:2542  tradeMes({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/TimeMarket.sol\":2525:2529  this */\n      address\n        /* \"contracts/TimeMarket.sol\":2229:2542  tradeMes({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"contracts/TimeMarket.sol\":2201:2542  tradeMes memory newTradeMes=tradeMes({... */\n      swap1\n      pop\n        /* \"contracts/TimeMarket.sol\":2567:2578  newTradeMes */\n      dup1\n        /* \"contracts/TimeMarket.sol\":2553:2562  _tradeMes */\n      0x06\n        /* \"contracts/TimeMarket.sol\":2553:2566  _tradeMes[id] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":2563:2565  id */\n      dup1\n      0x07\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"contracts/TimeMarket.sol\":2553:2566  _tradeMes[id] */\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeMarket.sol\":2553:2578  _tradeMes[id]=newTradeMes */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x01)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x09)\n      dup2\n      sload\n      dup2\n      0xffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x10)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0xa0\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0xc0\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0xe0\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"contracts/TimeMarket.sol\":2625:2695  IERC20(_tokenAddress).safeTransferFrom(msg.sender,address(this),total) */\n      tag_77\n        /* \"contracts/TimeMarket.sol\":2664:2674  msg.sender */\n      caller\n        /* \"contracts/TimeMarket.sol\":2683:2687  this */\n      address\n        /* \"contracts/TimeMarket.sol\":2689:2694  total */\n      dup6\n        /* \"contracts/TimeMarket.sol\":2632:2645  _tokenAddress */\n      dup11\n        /* \"contracts/TimeMarket.sol\":2625:2663  IERC20(_tokenAddress).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_78\n      swap1\n        /* \"contracts/TimeMarket.sol\":2625:2695  IERC20(_tokenAddress).safeTransferFrom(msg.sender,address(this),total) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_77:\n        /* \"contracts/TimeMarket.sol\":2770:2819  IERC20(_tokenAddress).safeApprove(thisPool,total) */\n      tag_79\n        /* \"contracts/TimeMarket.sol\":2804:2812  thisPool */\n      dup3\n        /* \"contracts/TimeMarket.sol\":2813:2818  total */\n      dup5\n        /* \"contracts/TimeMarket.sol\":2777:2790  _tokenAddress */\n      dup10\n        /* \"contracts/TimeMarket.sol\":2770:2803  IERC20(_tokenAddress).safeApprove */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_80\n      swap1\n        /* \"contracts/TimeMarket.sol\":2770:2819  IERC20(_tokenAddress).safeApprove(thisPool,total) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_79:\n        /* \"contracts/TimeMarket.sol\":2849:2862  uniV2Router02 */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TimeMarket.sol\":2830:2876  IUniswapV2Router02(uniV2Router02).addLiquidity */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe8e33700\n        /* \"contracts/TimeMarket.sol\":2891:2904  _tokenAddress */\n      dup9\n        /* \"contracts/TimeMarket.sol\":2919:2925  token1 */\n      dup9\n        /* \"contracts/TimeMarket.sol\":2940:2945  total */\n      dup7\n        /* \"contracts/TimeMarket.sol\":2960:2961  0 */\n      0x00\n        /* \"contracts/TimeMarket.sol\":2976:2980  1000 */\n      0x03e8\n        /* \"contracts/TimeMarket.sol\":2995:2996  0 */\n      0x00\n        /* \"contracts/TimeMarket.sol\":3019:3023  this */\n      address\n        /* \"contracts/TimeMarket.sol\":3055:3062  1 hours */\n      0x0e10\n        /* \"contracts/TimeMarket.sol\":3039:3054  block.timestamp */\n      timestamp\n        /* \"contracts/TimeMarket.sol\":3039:3062  block.timestamp+1 hours */\n      tag_81\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n        /* \"contracts/TimeMarket.sol\":2830:3073  IUniswapV2Router02(uniV2Router02).addLiquidity(... */\n      mload(0x40)\n      dup10\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_83\n      swap9\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      0x60\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_86\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_86:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n      pop\n      pop\n      pop\n        /* \"contracts/TimeMarket.sol\":3084:3086  id */\n      0x00\n      0x07\n        /* \"contracts/TimeMarket.sol\":3084:3088  id++ */\n      dup2\n      dup2\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_89\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      swap2\n      swap1\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n        /* \"contracts/TimeMarket.sol\":1923:3096  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/TimeMarket.sol\":1828:3096  function buy(address _tokenAddress,address token1,uint128 _buyAmount,uint128 _buyPrice)external{... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TimeMarket.sol\":4534:5141  function injectFutureToken(uint64 _id)external{... */\n    tag_25:\n        /* \"contracts/TimeMarket.sol\":4674:4679  false */\n      0x00\n        /* \"contracts/TimeMarket.sol\":4648:4656  ifInject */\n      0x07\n        /* \"contracts/TimeMarket.sol\":4648:4668  ifInject[msg.sender] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":4657:4667  msg.sender */\n      caller\n        /* \"contracts/TimeMarket.sol\":4648:4668  ifInject[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeMarket.sol\":4648:4673  ifInject[msg.sender][_id] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":4669:4672  _id */\n      dup4\n        /* \"contracts/TimeMarket.sol\":4648:4673  ifInject[msg.sender][_id] */\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/TimeMarket.sol\":4648:4679  ifInject[msg.sender][_id]=false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n        /* \"contracts/TimeMarket.sol\":4645:4710  if(ifInject[msg.sender][_id]=false){revert AlreadyInjectToken();} */\n      iszero\n      tag_92\n      jumpi\n        /* \"contracts/TimeMarket.sol\":4688:4708  AlreadyInjectToken() */\n      mload(0x40)\n      0x4232716900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/TimeMarket.sol\":4645:4710  if(ifInject[msg.sender][_id]=false){revert AlreadyInjectToken();} */\n    tag_92:\n        /* \"contracts/TimeMarket.sol\":4818:4828  msg.sender */\n      caller\n        /* \"contracts/TimeMarket.sol\":4802:4828  getSolder(_id)!=msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TimeMarket.sol\":4802:4816  getSolder(_id) */\n      tag_93\n        /* \"contracts/TimeMarket.sol\":4812:4815  _id */\n      dup3\n        /* \"contracts/TimeMarket.sol\":4802:4811  getSolder */\n      tag_94\n        /* \"contracts/TimeMarket.sol\":4802:4816  getSolder(_id) */\n      jump\t// in\n    tag_93:\n        /* \"contracts/TimeMarket.sol\":4802:4828  getSolder(_id)!=msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/TimeMarket.sol\":4799:4850  if(getSolder(_id)!=msg.sender){revert NorSolder();} */\n      tag_95\n      jumpi\n        /* \"contracts/TimeMarket.sol\":4837:4848  NorSolder() */\n      mload(0x40)\n      0xd7c498bf00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/TimeMarket.sol\":4799:4850  if(getSolder(_id)!=msg.sender){revert NorSolder();} */\n    tag_95:\n        /* \"contracts/TimeMarket.sol\":4907:4932  uint256 thisAirdropAmount */\n      0x00\n        /* \"contracts/TimeMarket.sol\":4933:4942  _tradeMes */\n      0x06\n        /* \"contracts/TimeMarket.sol\":4933:4947  _tradeMes[_id] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":4943:4946  _id */\n      dup4\n        /* \"contracts/TimeMarket.sol\":4933:4947  _tradeMes[_id] */\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeMarket.sol\":4933:4962  _tradeMes[_id].buyTotalAmount */\n      0x00\n      add\n      0x10\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TimeMarket.sol\":4907:4962  uint256 thisAirdropAmount=_tradeMes[_id].buyTotalAmount */\n      0xffffffffffffffffffffffffffffffff\n      and\n      swap1\n      pop\n        /* \"contracts/TimeMarket.sol\":4973:5054  IERC20(airdropToken).safeTransferFrom(msg.sender,address(this),thisAirdropAmount) */\n      tag_96\n        /* \"contracts/TimeMarket.sol\":5011:5021  msg.sender */\n      caller\n        /* \"contracts/TimeMarket.sol\":5030:5034  this */\n      address\n        /* \"contracts/TimeMarket.sol\":5036:5053  thisAirdropAmount */\n      dup4\n        /* \"contracts/TimeMarket.sol\":4980:4992  airdropToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TimeMarket.sol\":4973:5010  IERC20(airdropToken).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_78\n      swap1\n        /* \"contracts/TimeMarket.sol\":4973:5054  IERC20(airdropToken).safeTransferFrom(msg.sender,address(this),thisAirdropAmount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_96:\n        /* \"contracts/TimeMarket.sol\":5091:5095  true */\n      0x01\n        /* \"contracts/TimeMarket.sol\":5065:5073  ifInject */\n      0x07\n        /* \"contracts/TimeMarket.sol\":5065:5085  ifInject[msg.sender] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":5074:5084  msg.sender */\n      caller\n        /* \"contracts/TimeMarket.sol\":5065:5085  ifInject[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeMarket.sol\":5065:5090  ifInject[msg.sender][_id] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":5086:5089  _id */\n      dup5\n        /* \"contracts/TimeMarket.sol\":5065:5090  ifInject[msg.sender][_id] */\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/TimeMarket.sol\":5065:5095  ifInject[msg.sender][_id]=true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/TimeMarket.sol\":5132:5133  3 */\n      0x03\n        /* \"contracts/TimeMarket.sol\":5106:5115  _tradeMes */\n      0x06\n        /* \"contracts/TimeMarket.sol\":5106:5120  _tradeMes[_id] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":5116:5119  _id */\n      dup5\n        /* \"contracts/TimeMarket.sol\":5106:5120  _tradeMes[_id] */\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeMarket.sol\":5106:5131  _tradeMes[_id].tradeState */\n      0x00\n      add\n      0x00\n        /* \"contracts/TimeMarket.sol\":5106:5133  _tradeMes[_id].tradeState=3 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/TimeMarket.sol\":4580:5141  {... */\n      pop\n        /* \"contracts/TimeMarket.sol\":4534:5141  function injectFutureToken(uint64 _id)external{... */\n      pop\n      jump\t// out\n        /* \"contracts/TimeMarket.sol\":7186:8619  function buyerWithdrawRefund(uint64 _id)external{... */\n    tag_28:\n        /* \"contracts/TimeMarket.sol\":7245:7258  address buyer */\n      0x00\n        /* \"contracts/TimeMarket.sol\":7259:7272  getBuyer(_id) */\n      tag_98\n        /* \"contracts/TimeMarket.sol\":7268:7271  _id */\n      dup3\n        /* \"contracts/TimeMarket.sol\":7259:7267  getBuyer */\n      tag_99\n        /* \"contracts/TimeMarket.sol\":7259:7272  getBuyer(_id) */\n      jump\t// in\n    tag_98:\n        /* \"contracts/TimeMarket.sol\":7245:7272  address buyer=getBuyer(_id) */\n      swap1\n      pop\n        /* \"contracts/TimeMarket.sol\":7283:7297  address solder */\n      0x00\n        /* \"contracts/TimeMarket.sol\":7298:7312  getSolder(_id) */\n      tag_100\n        /* \"contracts/TimeMarket.sol\":7308:7311  _id */\n      dup4\n        /* \"contracts/TimeMarket.sol\":7298:7307  getSolder */\n      tag_94\n        /* \"contracts/TimeMarket.sol\":7298:7312  getSolder(_id) */\n      jump\t// in\n    tag_100:\n        /* \"contracts/TimeMarket.sol\":7283:7312  address solder=getSolder(_id) */\n      swap1\n      pop\n        /* \"contracts/TimeMarket.sol\":7376:7381  buyer */\n      dup2\n        /* \"contracts/TimeMarket.sol\":7364:7381  msg.sender==buyer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TimeMarket.sol\":7364:7374  msg.sender */\n      caller\n        /* \"contracts/TimeMarket.sol\":7364:7381  msg.sender==buyer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/TimeMarket.sol\":7356:7382  require(msg.sender==buyer) */\n      tag_101\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_101:\n        /* \"contracts/TimeMarket.sol\":7487:7492  false */\n      0x00\n        /* \"contracts/TimeMarket.sol\":7464:7492  ifInject[solder][_id]==false */\n      iszero\n      iszero\n        /* \"contracts/TimeMarket.sol\":7464:7472  ifInject */\n      0x07\n        /* \"contracts/TimeMarket.sol\":7464:7480  ifInject[solder] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":7473:7479  solder */\n      dup4\n        /* \"contracts/TimeMarket.sol\":7464:7480  ifInject[solder] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeMarket.sol\":7464:7485  ifInject[solder][_id] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":7481:7484  _id */\n      dup6\n        /* \"contracts/TimeMarket.sol\":7464:7485  ifInject[solder][_id] */\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/TimeMarket.sol\":7464:7492  ifInject[solder][_id]==false */\n      iszero\n      iszero\n      eq\n        /* \"contracts/TimeMarket.sol\":7456:7493  require(ifInject[solder][_id]==false) */\n      tag_102\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_102:\n        /* \"contracts/TimeMarket.sol\":7546:7551  false */\n      0x00\n        /* \"contracts/TimeMarket.sol\":7512:7551  userIfWithdraw3[msg.sender][_id]==false */\n      iszero\n      iszero\n        /* \"contracts/TimeMarket.sol\":7512:7527  userIfWithdraw3 */\n      0x0a\n        /* \"contracts/TimeMarket.sol\":7512:7539  userIfWithdraw3[msg.sender] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":7528:7538  msg.sender */\n      caller\n        /* \"contracts/TimeMarket.sol\":7512:7539  userIfWithdraw3[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeMarket.sol\":7512:7544  userIfWithdraw3[msg.sender][_id] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":7540:7543  _id */\n      dup6\n        /* \"contracts/TimeMarket.sol\":7512:7544  userIfWithdraw3[msg.sender][_id] */\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/TimeMarket.sol\":7512:7551  userIfWithdraw3[msg.sender][_id]==false */\n      iszero\n      iszero\n      eq\n        /* \"contracts/TimeMarket.sol\":7504:7552  require(userIfWithdraw3[msg.sender][_id]==false) */\n      tag_103\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_103:\n        /* \"contracts/TimeMarket.sol\":7616:7621  buyer */\n      dup2\n        /* \"contracts/TimeMarket.sol\":7604:7621  msg.sender==buyer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TimeMarket.sol\":7604:7614  msg.sender */\n      caller\n        /* \"contracts/TimeMarket.sol\":7604:7621  msg.sender==buyer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/TimeMarket.sol\":7596:7622  require(msg.sender==buyer) */\n      tag_104\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_104:\n        /* \"contracts/TimeMarket.sol\":7635:7661  address promiseStableToken */\n      0x00\n        /* \"contracts/TimeMarket.sol\":7662:7671  _tradeMes */\n      0x06\n        /* \"contracts/TimeMarket.sol\":7662:7676  _tradeMes[_id] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":7672:7675  _id */\n      dup6\n        /* \"contracts/TimeMarket.sol\":7662:7676  _tradeMes[_id] */\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeMarket.sol\":7662:7689  _tradeMes[_id].tokenAddress */\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TimeMarket.sol\":7635:7689  address promiseStableToken=_tradeMes[_id].tokenAddress */\n      swap1\n      pop\n        /* \"contracts/TimeMarket.sol\":7700:7722  uint256 penalSumAmount */\n      0x00\n        /* \"contracts/TimeMarket.sol\":7723:7786  getPenal(_tradeMes[_id].buyPrice,_tradeMes[_id].buyTotalAmount) */\n      tag_105\n        /* \"contracts/TimeMarket.sol\":7732:7741  _tradeMes */\n      0x06\n        /* \"contracts/TimeMarket.sol\":7732:7746  _tradeMes[_id] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":7742:7745  _id */\n      dup8\n        /* \"contracts/TimeMarket.sol\":7732:7746  _tradeMes[_id] */\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeMarket.sol\":7732:7755  _tradeMes[_id].buyPrice */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TimeMarket.sol\":7756:7765  _tradeMes */\n      0x06\n        /* \"contracts/TimeMarket.sol\":7756:7770  _tradeMes[_id] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":7766:7769  _id */\n      dup9\n        /* \"contracts/TimeMarket.sol\":7756:7770  _tradeMes[_id] */\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeMarket.sol\":7756:7785  _tradeMes[_id].buyTotalAmount */\n      0x00\n      add\n      0x10\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TimeMarket.sol\":7723:7731  getPenal */\n      tag_47\n        /* \"contracts/TimeMarket.sol\":7723:7786  getPenal(_tradeMes[_id].buyPrice,_tradeMes[_id].buyTotalAmount) */\n      jump\t// in\n    tag_105:\n        /* \"contracts/TimeMarket.sol\":7700:7786  uint256 penalSumAmount=getPenal(_tradeMes[_id].buyPrice,_tradeMes[_id].buyTotalAmount) */\n      swap1\n      pop\n        /* \"contracts/TimeMarket.sol\":7797:7808  uint256 fee */\n      0x00\n        /* \"contracts/TimeMarket.sol\":7809:7836  TimeFee.fee(penalSumAmount) */\n      tag_106\n        /* \"contracts/TimeMarket.sol\":7821:7835  penalSumAmount */\n      dup3\n        /* \"contracts/TimeMarket.sol\":7809:7820  TimeFee.fee */\n      tag_107\n        /* \"contracts/TimeMarket.sol\":7809:7836  TimeFee.fee(penalSumAmount) */\n      jump\t// in\n    tag_106:\n        /* \"contracts/TimeMarket.sol\":7797:7836  uint256 fee=TimeFee.fee(penalSumAmount) */\n      swap1\n      pop\n        /* \"contracts/TimeMarket.sol\":7865:7961  IERC20(promiseStableToken).safeTransfer(... */\n      tag_108\n        /* \"contracts/TimeMarket.sol\":7927:7931  this */\n      address\n        /* \"contracts/TimeMarket.sol\":7947:7950  fee */\n      dup3\n        /* \"contracts/TimeMarket.sol\":7872:7890  promiseStableToken */\n      dup6\n        /* \"contracts/TimeMarket.sol\":7865:7904  IERC20(promiseStableToken).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_109\n      swap1\n        /* \"contracts/TimeMarket.sol\":7865:7961  IERC20(promiseStableToken).safeTransfer(... */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_108:\n        /* \"contracts/TimeMarket.sol\":8017:8120  IERC20(promiseStableToken).safeTransfer(... */\n      tag_110\n        /* \"contracts/TimeMarket.sol\":8071:8076  buyer */\n      dup6\n        /* \"contracts/TimeMarket.sol\":8106:8109  fee */\n      dup3\n        /* \"contracts/TimeMarket.sol\":8091:8105  penalSumAmount */\n      dup5\n        /* \"contracts/TimeMarket.sol\":8091:8109  penalSumAmount-fee */\n      tag_111\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n        /* \"contracts/TimeMarket.sol\":8024:8042  promiseStableToken */\n      dup6\n        /* \"contracts/TimeMarket.sol\":8017:8056  IERC20(promiseStableToken).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_109\n      swap1\n        /* \"contracts/TimeMarket.sol\":8017:8120  IERC20(promiseStableToken).safeTransfer(... */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_110:\n        /* \"contracts/TimeMarket.sol\":8164:8168  true */\n      0x01\n        /* \"contracts/TimeMarket.sol\":8131:8146  userIfWithdraw3 */\n      0x0a\n        /* \"contracts/TimeMarket.sol\":8131:8158  userIfWithdraw3[msg.sender] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":8147:8157  msg.sender */\n      caller\n        /* \"contracts/TimeMarket.sol\":8131:8158  userIfWithdraw3[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeMarket.sol\":8131:8163  userIfWithdraw3[msg.sender][_id] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":8159:8162  _id */\n      dup9\n        /* \"contracts/TimeMarket.sol\":8131:8163  userIfWithdraw3[msg.sender][_id] */\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/TimeMarket.sol\":8131:8168  userIfWithdraw3[msg.sender][_id]=true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/TimeMarket.sol\":8211:8212  1 */\n      0x01\n        /* \"contracts/TimeMarket.sol\":8184:8193  _tradeMes */\n      0x06\n        /* \"contracts/TimeMarket.sol\":8184:8198  _tradeMes[_id] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":8194:8197  _id */\n      dup9\n        /* \"contracts/TimeMarket.sol\":8184:8198  _tradeMes[_id] */\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeMarket.sol\":8184:8209  _tradeMes[_id].tradeState */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/TimeMarket.sol\":8184:8212  _tradeMes[_id].tradeState==1 */\n      0xff\n      and\n      sub\n        /* \"contracts/TimeMarket.sol\":8181:8574  if(_tradeMes[_id].tradeState==1){... */\n      tag_113\n      jumpi\n        /* \"contracts/TimeMarket.sol\":8270:8275  false */\n      0x00\n        /* \"contracts/TimeMarket.sol\":8236:8275  userIfWithdraw4[msg.sender][_id]==false */\n      iszero\n      iszero\n        /* \"contracts/TimeMarket.sol\":8236:8251  userIfWithdraw4 */\n      0x0b\n        /* \"contracts/TimeMarket.sol\":8236:8263  userIfWithdraw4[msg.sender] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":8252:8262  msg.sender */\n      caller\n        /* \"contracts/TimeMarket.sol\":8236:8263  userIfWithdraw4[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeMarket.sol\":8236:8268  userIfWithdraw4[msg.sender][_id] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":8264:8267  _id */\n      dup9\n        /* \"contracts/TimeMarket.sol\":8236:8268  userIfWithdraw4[msg.sender][_id] */\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/TimeMarket.sol\":8236:8275  userIfWithdraw4[msg.sender][_id]==false */\n      iszero\n      iszero\n      eq\n        /* \"contracts/TimeMarket.sol\":8228:8276  require(userIfWithdraw4[msg.sender][_id]==false) */\n      tag_114\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_114:\n        /* \"contracts/TimeMarket.sol\":8291:8304  uint256 total */\n      0x00\n        /* \"contracts/TimeMarket.sol\":8329:8338  _tradeMes */\n      0x06\n        /* \"contracts/TimeMarket.sol\":8329:8343  _tradeMes[_id] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":8339:8342  _id */\n      dup9\n        /* \"contracts/TimeMarket.sol\":8329:8343  _tradeMes[_id] */\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeMarket.sol\":8329:8358  _tradeMes[_id].buyTotalAmount */\n      0x00\n      add\n      0x10\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TimeMarket.sol\":8305:8314  _tradeMes */\n      0x06\n        /* \"contracts/TimeMarket.sol\":8305:8319  _tradeMes[_id] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":8315:8318  _id */\n      dup10\n        /* \"contracts/TimeMarket.sol\":8305:8319  _tradeMes[_id] */\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeMarket.sol\":8305:8328  _tradeMes[_id].buyPrice */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TimeMarket.sol\":8305:8358  _tradeMes[_id].buyPrice*_tradeMes[_id].buyTotalAmount */\n      tag_115\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_115:\n        /* \"contracts/TimeMarket.sol\":8291:8358  uint256 total=_tradeMes[_id].buyPrice*_tradeMes[_id].buyTotalAmount */\n      0xffffffffffffffffffffffffffffffff\n      and\n      swap1\n      pop\n        /* \"contracts/TimeMarket.sol\":8400:8510  IERC20(promiseStableToken).safeTransfer(... */\n      tag_116\n        /* \"contracts/TimeMarket.sol\":8458:8471  getBuyer(_id) */\n      tag_117\n        /* \"contracts/TimeMarket.sol\":8467:8470  _id */\n      dup9\n        /* \"contracts/TimeMarket.sol\":8458:8466  getBuyer */\n      tag_99\n        /* \"contracts/TimeMarket.sol\":8458:8471  getBuyer(_id) */\n      jump\t// in\n    tag_117:\n        /* \"contracts/TimeMarket.sol\":8490:8495  total */\n      dup3\n        /* \"contracts/TimeMarket.sol\":8407:8425  promiseStableToken */\n      dup7\n        /* \"contracts/TimeMarket.sol\":8400:8439  IERC20(promiseStableToken).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_109\n      swap1\n        /* \"contracts/TimeMarket.sol\":8400:8510  IERC20(promiseStableToken).safeTransfer(... */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_116:\n        /* \"contracts/TimeMarket.sol\":8558:8562  true */\n      0x01\n        /* \"contracts/TimeMarket.sol\":8525:8540  userIfWithdraw4 */\n      0x0b\n        /* \"contracts/TimeMarket.sol\":8525:8552  userIfWithdraw4[msg.sender] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":8541:8551  msg.sender */\n      caller\n        /* \"contracts/TimeMarket.sol\":8525:8552  userIfWithdraw4[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeMarket.sol\":8525:8557  userIfWithdraw4[msg.sender][_id] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":8553:8556  _id */\n      dup10\n        /* \"contracts/TimeMarket.sol\":8525:8557  userIfWithdraw4[msg.sender][_id] */\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/TimeMarket.sol\":8525:8562  userIfWithdraw4[msg.sender][_id]=true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/TimeMarket.sol\":8213:8574  {... */\n      pop\n        /* \"contracts/TimeMarket.sol\":8181:8574  if(_tradeMes[_id].tradeState==1){... */\n    tag_113:\n        /* \"contracts/TimeMarket.sol\":8610:8611  5 */\n      0x05\n        /* \"contracts/TimeMarket.sol\":8584:8593  _tradeMes */\n      0x06\n        /* \"contracts/TimeMarket.sol\":8584:8598  _tradeMes[_id] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":8594:8597  _id */\n      dup9\n        /* \"contracts/TimeMarket.sol\":8584:8598  _tradeMes[_id] */\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeMarket.sol\":8584:8609  _tradeMes[_id].tradeState */\n      0x00\n      add\n      0x00\n        /* \"contracts/TimeMarket.sol\":8584:8611  _tradeMes[_id].tradeState=5 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/TimeMarket.sol\":7234:8619  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/TimeMarket.sol\":7186:8619  function buyerWithdrawRefund(uint64 _id)external{... */\n      pop\n      jump\t// out\n        /* \"contracts/TimeMarket.sol\":1382:1446  mapping(address => mapping(uint256=>bool))public userIfWithdraw1 */\n    tag_32:\n      mstore(0x20, 0x08)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/TimeMarket.sol\":8806:9076  function getPoolAddress(address token0,address token1,uint24 _fee)public view returns(address thisPool){... */\n    tag_38:\n        /* \"contracts/TimeMarket.sol\":8892:8908  address thisPool */\n      0x00\n        /* \"contracts/TimeMarket.sol\":8949:8961  uniV3Factory */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TimeMarket.sol\":8931:8970  IUniswapV3Factory(uniV3Factory).getPool */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1698ee82\n        /* \"contracts/TimeMarket.sol\":8985:8991  token0 */\n      dup6\n        /* \"contracts/TimeMarket.sol\":9006:9012  token1 */\n      dup6\n        /* \"contracts/TimeMarket.sol\":9027:9031  _fee */\n      dup6\n        /* \"contracts/TimeMarket.sol\":8931:9042  IUniswapV3Factory(uniV3Factory).getPool(... */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_119\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_122\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_122:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_123\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n        /* \"contracts/TimeMarket.sol\":8920:9042  thisPool = IUniswapV3Factory(uniV3Factory).getPool(... */\n      swap1\n      pop\n        /* \"contracts/TimeMarket.sol\":8806:9076  function getPoolAddress(address token0,address token1,uint24 _fee)public view returns(address thisPool){... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TimeMarket.sol\":5962:7099  function solderWithdrawStable(uint64 _id)external{... */\n    tag_43:\n        /* \"contracts/TimeMarket.sol\":6022:6036  address solder */\n      0x00\n        /* \"contracts/TimeMarket.sol\":6037:6051  getSolder(_id) */\n      tag_126\n        /* \"contracts/TimeMarket.sol\":6047:6050  _id */\n      dup3\n        /* \"contracts/TimeMarket.sol\":6037:6046  getSolder */\n      tag_94\n        /* \"contracts/TimeMarket.sol\":6037:6051  getSolder(_id) */\n      jump\t// in\n    tag_126:\n        /* \"contracts/TimeMarket.sol\":6022:6051  address solder=getSolder(_id) */\n      swap1\n      pop\n        /* \"contracts/TimeMarket.sol\":6115:6121  solder */\n      dup1\n        /* \"contracts/TimeMarket.sol\":6103:6121  msg.sender==solder */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TimeMarket.sol\":6103:6113  msg.sender */\n      caller\n        /* \"contracts/TimeMarket.sol\":6103:6121  msg.sender==solder */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/TimeMarket.sol\":6095:6122  require(msg.sender==solder) */\n      tag_127\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_127:\n        /* \"contracts/TimeMarket.sol\":6204:6212  ifInject */\n      0x07\n        /* \"contracts/TimeMarket.sol\":6204:6220  ifInject[solder] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":6213:6219  solder */\n      dup3\n        /* \"contracts/TimeMarket.sol\":6204:6220  ifInject[solder] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeMarket.sol\":6204:6225  ifInject[solder][_id] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":6221:6224  _id */\n      dup4\n        /* \"contracts/TimeMarket.sol\":6204:6225  ifInject[solder][_id] */\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/TimeMarket.sol\":6196:6226  require(ifInject[solder][_id]) */\n      tag_128\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_128:\n        /* \"contracts/TimeMarket.sol\":6312:6317  false */\n      0x00\n        /* \"contracts/TimeMarket.sol\":6278:6317  userIfWithdraw2[msg.sender][_id]==false */\n      iszero\n      iszero\n        /* \"contracts/TimeMarket.sol\":6278:6293  userIfWithdraw2 */\n      0x09\n        /* \"contracts/TimeMarket.sol\":6278:6305  userIfWithdraw2[msg.sender] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":6294:6304  msg.sender */\n      caller\n        /* \"contracts/TimeMarket.sol\":6278:6305  userIfWithdraw2[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeMarket.sol\":6278:6310  userIfWithdraw2[msg.sender][_id] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":6306:6309  _id */\n      dup5\n        /* \"contracts/TimeMarket.sol\":6278:6310  userIfWithdraw2[msg.sender][_id] */\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/TimeMarket.sol\":6278:6317  userIfWithdraw2[msg.sender][_id]==false */\n      iszero\n      iszero\n      eq\n        /* \"contracts/TimeMarket.sol\":6270:6318  require(userIfWithdraw2[msg.sender][_id]==false) */\n      tag_129\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_129:\n        /* \"contracts/TimeMarket.sol\":6329:6355  address promiseStableToken */\n      0x00\n        /* \"contracts/TimeMarket.sol\":6356:6365  _tradeMes */\n      0x06\n        /* \"contracts/TimeMarket.sol\":6356:6370  _tradeMes[_id] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":6366:6369  _id */\n      dup5\n        /* \"contracts/TimeMarket.sol\":6356:6370  _tradeMes[_id] */\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeMarket.sol\":6356:6383  _tradeMes[_id].tokenAddress */\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TimeMarket.sol\":6329:6383  address promiseStableToken=_tradeMes[_id].tokenAddress */\n      swap1\n      pop\n        /* \"contracts/TimeMarket.sol\":6394:6407  uint256 total */\n      0x00\n        /* \"contracts/TimeMarket.sol\":6432:6441  _tradeMes */\n      0x06\n        /* \"contracts/TimeMarket.sol\":6432:6446  _tradeMes[_id] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":6442:6445  _id */\n      dup6\n        /* \"contracts/TimeMarket.sol\":6432:6446  _tradeMes[_id] */\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeMarket.sol\":6432:6461  _tradeMes[_id].buyTotalAmount */\n      0x00\n      add\n      0x10\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TimeMarket.sol\":6408:6417  _tradeMes */\n      0x06\n        /* \"contracts/TimeMarket.sol\":6408:6422  _tradeMes[_id] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":6418:6421  _id */\n      dup7\n        /* \"contracts/TimeMarket.sol\":6408:6422  _tradeMes[_id] */\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeMarket.sol\":6408:6431  _tradeMes[_id].buyPrice */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TimeMarket.sol\":6408:6461  _tradeMes[_id].buyPrice*_tradeMes[_id].buyTotalAmount */\n      tag_130\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_130:\n        /* \"contracts/TimeMarket.sol\":6394:6461  uint256 total=_tradeMes[_id].buyPrice*_tradeMes[_id].buyTotalAmount */\n      0xffffffffffffffffffffffffffffffff\n      and\n      swap1\n      pop\n        /* \"contracts/TimeMarket.sol\":6472:6494  uint256 penalSumAmount */\n      0x00\n        /* \"contracts/TimeMarket.sol\":6495:6558  getPenal(_tradeMes[_id].buyPrice,_tradeMes[_id].buyTotalAmount) */\n      tag_131\n        /* \"contracts/TimeMarket.sol\":6504:6513  _tradeMes */\n      0x06\n        /* \"contracts/TimeMarket.sol\":6504:6518  _tradeMes[_id] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":6514:6517  _id */\n      dup8\n        /* \"contracts/TimeMarket.sol\":6504:6518  _tradeMes[_id] */\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeMarket.sol\":6504:6527  _tradeMes[_id].buyPrice */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TimeMarket.sol\":6528:6537  _tradeMes */\n      0x06\n        /* \"contracts/TimeMarket.sol\":6528:6542  _tradeMes[_id] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":6538:6541  _id */\n      dup9\n        /* \"contracts/TimeMarket.sol\":6528:6542  _tradeMes[_id] */\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeMarket.sol\":6528:6557  _tradeMes[_id].buyTotalAmount */\n      0x00\n      add\n      0x10\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TimeMarket.sol\":6495:6503  getPenal */\n      tag_47\n        /* \"contracts/TimeMarket.sol\":6495:6558  getPenal(_tradeMes[_id].buyPrice,_tradeMes[_id].buyTotalAmount) */\n      jump\t// in\n    tag_131:\n        /* \"contracts/TimeMarket.sol\":6472:6558  uint256 penalSumAmount=getPenal(_tradeMes[_id].buyPrice,_tradeMes[_id].buyTotalAmount) */\n      swap1\n      pop\n        /* \"contracts/TimeMarket.sol\":6569:6580  uint256 fee */\n      0x00\n        /* \"contracts/TimeMarket.sol\":6581:6599  TimeFee.fee(total) */\n      tag_132\n        /* \"contracts/TimeMarket.sol\":6593:6598  total */\n      dup4\n        /* \"contracts/TimeMarket.sol\":6581:6592  TimeFee.fee */\n      tag_107\n        /* \"contracts/TimeMarket.sol\":6581:6599  TimeFee.fee(total) */\n      jump\t// in\n    tag_132:\n        /* \"contracts/TimeMarket.sol\":6569:6599  uint256 fee=TimeFee.fee(total) */\n      swap1\n      pop\n        /* \"contracts/TimeMarket.sol\":6652:6710  IERC20(promiseStableToken).safeTransfer(address(this),fee) */\n      tag_133\n        /* \"contracts/TimeMarket.sol\":6700:6704  this */\n      address\n        /* \"contracts/TimeMarket.sol\":6706:6709  fee */\n      dup3\n        /* \"contracts/TimeMarket.sol\":6659:6677  promiseStableToken */\n      dup7\n        /* \"contracts/TimeMarket.sol\":6652:6691  IERC20(promiseStableToken).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_109\n      swap1\n        /* \"contracts/TimeMarket.sol\":6652:6710  IERC20(promiseStableToken).safeTransfer(address(this),fee) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_133:\n        /* \"contracts/TimeMarket.sol\":6751:6846  IERC20(promiseStableToken).safeTransfer(... */\n      tag_134\n        /* \"contracts/TimeMarket.sol\":6805:6811  solder */\n      dup6\n        /* \"contracts/TimeMarket.sol\":6832:6835  fee */\n      dup3\n        /* \"contracts/TimeMarket.sol\":6826:6831  total */\n      dup6\n        /* \"contracts/TimeMarket.sol\":6826:6835  total-fee */\n      tag_135\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_135:\n        /* \"contracts/TimeMarket.sol\":6758:6776  promiseStableToken */\n      dup7\n        /* \"contracts/TimeMarket.sol\":6751:6790  IERC20(promiseStableToken).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_109\n      swap1\n        /* \"contracts/TimeMarket.sol\":6751:6846  IERC20(promiseStableToken).safeTransfer(... */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_134:\n        /* \"contracts/TimeMarket.sol\":6905:7005  IERC20(promiseStableToken).safeTransfer(... */\n      tag_136\n        /* \"contracts/TimeMarket.sol\":6959:6965  solder */\n      dup6\n        /* \"contracts/TimeMarket.sol\":6980:6994  penalSumAmount */\n      dup4\n        /* \"contracts/TimeMarket.sol\":6912:6930  promiseStableToken */\n      dup7\n        /* \"contracts/TimeMarket.sol\":6905:6944  IERC20(promiseStableToken).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_109\n      swap1\n        /* \"contracts/TimeMarket.sol\":6905:7005  IERC20(promiseStableToken).safeTransfer(... */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_136:\n        /* \"contracts/TimeMarket.sol\":7086:7090  true */\n      0x01\n        /* \"contracts/TimeMarket.sol\":7053:7068  userIfWithdraw2 */\n      0x09\n        /* \"contracts/TimeMarket.sol\":7053:7080  userIfWithdraw2[msg.sender] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":7069:7079  msg.sender */\n      caller\n        /* \"contracts/TimeMarket.sol\":7053:7080  userIfWithdraw2[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeMarket.sol\":7053:7085  userIfWithdraw2[msg.sender][_id] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":7081:7084  _id */\n      dup9\n        /* \"contracts/TimeMarket.sol\":7053:7085  userIfWithdraw2[msg.sender][_id] */\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/TimeMarket.sol\":7053:7090  userIfWithdraw2[msg.sender][_id]=true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/TimeMarket.sol\":6011:7099  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/TimeMarket.sol\":5962:7099  function solderWithdrawStable(uint64 _id)external{... */\n      pop\n      jump\t// out\n        /* \"contracts/TimeMarket.sol\":9467:10010  function getPenal(uint128 _soldPrice, uint128 _soldAmount)public pure returns (uint256){... */\n    tag_47:\n        /* \"contracts/TimeMarket.sol\":9546:9553  uint256 */\n      0x00\n        /* \"contracts/TimeMarket.sol\":9565:9583  uint256 thisAmount */\n      dup1\n        /* \"contracts/TimeMarket.sol\":9597:9608  _soldAmount */\n      dup3\n        /* \"contracts/TimeMarket.sol\":9586:9596  _soldPrice */\n      dup5\n        /* \"contracts/TimeMarket.sol\":9586:9608  _soldPrice*_soldAmount */\n      tag_138\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_138:\n        /* \"contracts/TimeMarket.sol\":9565:9608  uint256 thisAmount = _soldPrice*_soldAmount */\n      0xffffffffffffffffffffffffffffffff\n      and\n      swap1\n      pop\n        /* \"contracts/TimeMarket.sol\":9637:9646  100 ether */\n      0x056bc75e2d63100000\n        /* \"contracts/TimeMarket.sol\":9623:9633  thisAmount */\n      dup2\n        /* \"contracts/TimeMarket.sol\":9623:9646  thisAmount >= 100 ether */\n      lt\n      iszero\n        /* \"contracts/TimeMarket.sol\":9623:9673  thisAmount >= 100 ether && thisAmount < 1000 ether */\n      dup1\n      iszero\n      tag_139\n      jumpi\n      pop\n        /* \"contracts/TimeMarket.sol\":9663:9673  1000 ether */\n      0x3635c9adc5dea00000\n        /* \"contracts/TimeMarket.sol\":9650:9660  thisAmount */\n      dup2\n        /* \"contracts/TimeMarket.sol\":9650:9673  thisAmount < 1000 ether */\n      lt\n        /* \"contracts/TimeMarket.sol\":9623:9673  thisAmount >= 100 ether && thisAmount < 1000 ether */\n    tag_139:\n        /* \"contracts/TimeMarket.sol\":9619:10003  if (thisAmount >= 100 ether && thisAmount < 1000 ether) {... */\n      iszero\n      tag_140\n      jumpi\n        /* \"contracts/TimeMarket.sol\":9717:9720  100 */\n      0x64\n        /* \"contracts/TimeMarket.sol\":9711:9713  50 */\n      0x32\n        /* \"contracts/TimeMarket.sol\":9698:9708  thisAmount */\n      dup3\n        /* \"contracts/TimeMarket.sol\":9698:9713  thisAmount * 50 */\n      tag_141\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_141:\n        /* \"contracts/TimeMarket.sol\":9697:9720  (thisAmount * 50) / 100 */\n      tag_143\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_143:\n        /* \"contracts/TimeMarket.sol\":9690:9720  return (thisAmount * 50) / 100 */\n      swap2\n      pop\n      pop\n      jump(tag_137)\n        /* \"contracts/TimeMarket.sol\":9619:10003  if (thisAmount >= 100 ether && thisAmount < 1000 ether) {... */\n    tag_140:\n        /* \"contracts/TimeMarket.sol\":9756:9766  1000 ether */\n      0x3635c9adc5dea00000\n        /* \"contracts/TimeMarket.sol\":9742:9752  thisAmount */\n      dup2\n        /* \"contracts/TimeMarket.sol\":9742:9766  thisAmount >= 1000 ether */\n      lt\n      iszero\n        /* \"contracts/TimeMarket.sol\":9742:9794  thisAmount >= 1000 ether && thisAmount < 10000 ether */\n      dup1\n      iszero\n      tag_146\n      jumpi\n      pop\n        /* \"contracts/TimeMarket.sol\":9783:9794  10000 ether */\n      0x021e19e0c9bab2400000\n        /* \"contracts/TimeMarket.sol\":9770:9780  thisAmount */\n      dup2\n        /* \"contracts/TimeMarket.sol\":9770:9794  thisAmount < 10000 ether */\n      lt\n        /* \"contracts/TimeMarket.sol\":9742:9794  thisAmount >= 1000 ether && thisAmount < 10000 ether */\n    tag_146:\n        /* \"contracts/TimeMarket.sol\":9738:10003  if (thisAmount >= 1000 ether && thisAmount < 10000 ether) {... */\n      iszero\n      tag_147\n      jumpi\n        /* \"contracts/TimeMarket.sol\":9838:9841  100 */\n      0x64\n        /* \"contracts/TimeMarket.sol\":9832:9834  40 */\n      0x28\n        /* \"contracts/TimeMarket.sol\":9819:9829  thisAmount */\n      dup3\n        /* \"contracts/TimeMarket.sol\":9819:9834  thisAmount * 40 */\n      tag_148\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_148:\n        /* \"contracts/TimeMarket.sol\":9818:9841  (thisAmount * 40) / 100 */\n      tag_149\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_149:\n        /* \"contracts/TimeMarket.sol\":9811:9841  return (thisAmount * 40) / 100 */\n      swap2\n      pop\n      pop\n      jump(tag_137)\n        /* \"contracts/TimeMarket.sol\":9738:10003  if (thisAmount >= 1000 ether && thisAmount < 10000 ether) {... */\n    tag_147:\n        /* \"contracts/TimeMarket.sol\":9876:9887  10000 ether */\n      0x021e19e0c9bab2400000\n        /* \"contracts/TimeMarket.sol\":9863:9873  thisAmount */\n      dup2\n        /* \"contracts/TimeMarket.sol\":9863:9887  thisAmount > 10000 ether */\n      gt\n        /* \"contracts/TimeMarket.sol\":9859:10003  if (thisAmount > 10000 ether) {... */\n      iszero\n      tag_151\n      jumpi\n        /* \"contracts/TimeMarket.sol\":9931:9934  100 */\n      0x64\n        /* \"contracts/TimeMarket.sol\":9925:9927  25 */\n      0x19\n        /* \"contracts/TimeMarket.sol\":9912:9922  thisAmount */\n      dup3\n        /* \"contracts/TimeMarket.sol\":9912:9927  thisAmount * 25 */\n      tag_152\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_152:\n        /* \"contracts/TimeMarket.sol\":9911:9934  (thisAmount * 25) / 100 */\n      tag_153\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_153:\n        /* \"contracts/TimeMarket.sol\":9904:9934  return (thisAmount * 25) / 100 */\n      swap2\n      pop\n      pop\n      jump(tag_137)\n        /* \"contracts/TimeMarket.sol\":9859:10003  if (thisAmount > 10000 ether) {... */\n    tag_151:\n        /* \"contracts/TimeMarket.sol\":9974:9991  NotEnoughAmount() */\n      mload(0x40)\n      0xe008b5f900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/TimeMarket.sol\":9467:10010  function getPenal(uint128 _soldPrice, uint128 _soldAmount)public pure returns (uint256){... */\n    tag_137:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TimeMarket.sol\":1630:1694  mapping(address => mapping(uint256=>bool))public userIfWithdraw3 */\n    tag_52:\n      mstore(0x20, 0x0a)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/TimeMarket.sol\":5149:5909  function buyerWithdrawAirdorp(uint64 _id)external{... */\n    tag_56:\n        /* \"contracts/TimeMarket.sol\":5209:5222  address buyer */\n      0x00\n        /* \"contracts/TimeMarket.sol\":5223:5236  getBuyer(_id) */\n      tag_156\n        /* \"contracts/TimeMarket.sol\":5232:5235  _id */\n      dup3\n        /* \"contracts/TimeMarket.sol\":5223:5231  getBuyer */\n      tag_99\n        /* \"contracts/TimeMarket.sol\":5223:5236  getBuyer(_id) */\n      jump\t// in\n    tag_156:\n        /* \"contracts/TimeMarket.sol\":5209:5236  address buyer=getBuyer(_id) */\n      swap1\n      pop\n        /* \"contracts/TimeMarket.sol\":5295:5300  buyer */\n      dup1\n        /* \"contracts/TimeMarket.sol\":5283:5300  msg.sender!=buyer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TimeMarket.sol\":5283:5293  msg.sender */\n      caller\n        /* \"contracts/TimeMarket.sol\":5283:5300  msg.sender!=buyer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/TimeMarket.sol\":5280:5321  if(msg.sender!=buyer){revert NotBuyer();} */\n      tag_157\n      jumpi\n        /* \"contracts/TimeMarket.sol\":5309:5319  NotBuyer() */\n      mload(0x40)\n      0x472e017e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/TimeMarket.sol\":5280:5321  if(msg.sender!=buyer){revert NotBuyer();} */\n    tag_157:\n        /* \"contracts/TimeMarket.sol\":5424:5425  3 */\n      0x03\n        /* \"contracts/TimeMarket.sol\":5397:5406  _tradeMes */\n      0x06\n        /* \"contracts/TimeMarket.sol\":5397:5411  _tradeMes[_id] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":5407:5410  _id */\n      dup5\n        /* \"contracts/TimeMarket.sol\":5397:5411  _tradeMes[_id] */\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeMarket.sol\":5397:5422  _tradeMes[_id].tradeState */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/TimeMarket.sol\":5397:5425  _tradeMes[_id].tradeState!=3 */\n      0xff\n      and\n      eq\n        /* \"contracts/TimeMarket.sol\":5394:5452  if(_tradeMes[_id].tradeState!=3){revert NotInjectToken();} */\n      tag_158\n      jumpi\n        /* \"contracts/TimeMarket.sol\":5434:5450  NotInjectToken() */\n      mload(0x40)\n      0xde4461cd00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/TimeMarket.sol\":5394:5452  if(_tradeMes[_id].tradeState!=3){revert NotInjectToken();} */\n    tag_158:\n        /* \"contracts/TimeMarket.sol\":5463:5480  uint128 buyAmount */\n      0x00\n        /* \"contracts/TimeMarket.sol\":5481:5490  _tradeMes */\n      0x06\n        /* \"contracts/TimeMarket.sol\":5481:5495  _tradeMes[_id] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":5491:5494  _id */\n      dup5\n        /* \"contracts/TimeMarket.sol\":5481:5495  _tradeMes[_id] */\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeMarket.sol\":5481:5510  _tradeMes[_id].buyTotalAmount */\n      0x00\n      add\n      0x10\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TimeMarket.sol\":5463:5510  uint128 buyAmount=_tradeMes[_id].buyTotalAmount */\n      swap1\n      pop\n        /* \"contracts/TimeMarket.sol\":5521:5539  uint128 buyerPrice */\n      0x00\n        /* \"contracts/TimeMarket.sol\":5540:5549  _tradeMes */\n      0x06\n        /* \"contracts/TimeMarket.sol\":5540:5554  _tradeMes[_id] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":5550:5553  _id */\n      dup6\n        /* \"contracts/TimeMarket.sol\":5540:5554  _tradeMes[_id] */\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeMarket.sol\":5540:5563  _tradeMes[_id].buyPrice */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TimeMarket.sol\":5521:5563  uint128 buyerPrice=_tradeMes[_id].buyPrice */\n      swap1\n      pop\n        /* \"contracts/TimeMarket.sol\":5618:5629  uint256 fee */\n      0x00\n        /* \"contracts/TimeMarket.sol\":5630:5663  TimeFee.fee(buyAmount*buyerPrice) */\n      tag_159\n        /* \"contracts/TimeMarket.sol\":5652:5662  buyerPrice */\n      dup3\n        /* \"contracts/TimeMarket.sol\":5642:5651  buyAmount */\n      dup5\n        /* \"contracts/TimeMarket.sol\":5642:5662  buyAmount*buyerPrice */\n      tag_160\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_160:\n        /* \"contracts/TimeMarket.sol\":5630:5663  TimeFee.fee(buyAmount*buyerPrice) */\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TimeMarket.sol\":5630:5641  TimeFee.fee */\n      tag_107\n        /* \"contracts/TimeMarket.sol\":5630:5663  TimeFee.fee(buyAmount*buyerPrice) */\n      jump\t// in\n    tag_159:\n        /* \"contracts/TimeMarket.sol\":5618:5663  uint256 fee=TimeFee.fee(buyAmount*buyerPrice) */\n      swap1\n      pop\n        /* \"contracts/TimeMarket.sol\":5716:5768  IERC20(airdropToken).safeTransfer(address(this),fee) */\n      tag_161\n        /* \"contracts/TimeMarket.sol\":5758:5762  this */\n      address\n        /* \"contracts/TimeMarket.sol\":5764:5767  fee */\n      dup3\n        /* \"contracts/TimeMarket.sol\":5723:5735  airdropToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TimeMarket.sol\":5716:5749  IERC20(airdropToken).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_109\n      swap1\n        /* \"contracts/TimeMarket.sol\":5716:5768  IERC20(airdropToken).safeTransfer(address(this),fee) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_161:\n        /* \"contracts/TimeMarket.sol\":5809:5863  IERC20(airdropToken).safeTransfer(buyer,buyAmount-fee) */\n      tag_162\n        /* \"contracts/TimeMarket.sol\":5843:5848  buyer */\n      dup5\n        /* \"contracts/TimeMarket.sol\":5859:5862  fee */\n      dup3\n        /* \"contracts/TimeMarket.sol\":5849:5858  buyAmount */\n      dup6\n        /* \"contracts/TimeMarket.sol\":5849:5862  buyAmount-fee */\n      0xffffffffffffffffffffffffffffffff\n      and\n      tag_163\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_163:\n        /* \"contracts/TimeMarket.sol\":5816:5828  airdropToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TimeMarket.sol\":5809:5842  IERC20(airdropToken).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_109\n      swap1\n        /* \"contracts/TimeMarket.sol\":5809:5863  IERC20(airdropToken).safeTransfer(buyer,buyAmount-fee) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_162:\n        /* \"contracts/TimeMarket.sol\":5900:5901  4 */\n      0x04\n        /* \"contracts/TimeMarket.sol\":5874:5883  _tradeMes */\n      0x06\n        /* \"contracts/TimeMarket.sol\":5874:5888  _tradeMes[_id] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":5884:5887  _id */\n      dup8\n        /* \"contracts/TimeMarket.sol\":5874:5888  _tradeMes[_id] */\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeMarket.sol\":5874:5899  _tradeMes[_id].tradeState */\n      0x00\n      add\n      0x00\n        /* \"contracts/TimeMarket.sol\":5874:5901  _tradeMes[_id].tradeState=4 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/TimeMarket.sol\":5198:5909  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/TimeMarket.sol\":5149:5909  function buyerWithdrawAirdorp(uint64 _id)external{... */\n      pop\n      jump\t// out\n        /* \"contracts/TimeMarket.sol\":8682:8731  function profileEarn(uint64 _id)public {... */\n    tag_59:\n      pop\n      jump\t// out\n        /* \"contracts/TimeMarket.sol\":3125:4405  function Sale(uint64 _id,address token1) external {... */\n    tag_63:\n        /* \"contracts/TimeMarket.sol\":3186:3213  tradeMes memory maxTradeMes */\n      0x00\n        /* \"contracts/TimeMarket.sol\":3214:3223  _tradeMes */\n      0x06\n        /* \"contracts/TimeMarket.sol\":3214:3228  _tradeMes[_id] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":3224:3227  _id */\n      dup5\n        /* \"contracts/TimeMarket.sol\":3214:3228  _tradeMes[_id] */\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeMarket.sol\":3186:3228  tradeMes memory maxTradeMes=_tradeMes[_id] */\n      mload(0x40)\n      dup1\n      0x0100\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x09\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffff\n      and\n      0xffffffffffffff\n      and\n      0xffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x10\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/TimeMarket.sol\":3271:3272  1 */\n      0x01\n        /* \"contracts/TimeMarket.sol\":3247:3258  maxTradeMes */\n      dup2\n        /* \"contracts/TimeMarket.sol\":3247:3269  maxTradeMes.tradeState */\n      0x00\n      add\n      mload\n        /* \"contracts/TimeMarket.sol\":3247:3272  maxTradeMes.tradeState==1 */\n      0xff\n      and\n      eq\n        /* \"contracts/TimeMarket.sol\":3239:3273  require(maxTradeMes.tradeState==1) */\n      tag_166\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_166:\n        /* \"contracts/TimeMarket.sol\":3312:3338  address promiseStableToken */\n      0x00\n        /* \"contracts/TimeMarket.sol\":3339:3350  maxTradeMes */\n      dup2\n        /* \"contracts/TimeMarket.sol\":3339:3363  maxTradeMes.tokenAddress */\n      0xa0\n      add\n      mload\n        /* \"contracts/TimeMarket.sol\":3312:3363  address promiseStableToken=maxTradeMes.tokenAddress */\n      swap1\n      pop\n        /* \"contracts/TimeMarket.sol\":3456:3472  address thisPool */\n      0x00\n        /* \"contracts/TimeMarket.sol\":3473:3519  getPoolAddress(promiseStableToken,token1,1000) */\n      tag_167\n        /* \"contracts/TimeMarket.sol\":3488:3506  promiseStableToken */\n      dup3\n        /* \"contracts/TimeMarket.sol\":3507:3513  token1 */\n      dup6\n        /* \"contracts/TimeMarket.sol\":3514:3518  1000 */\n      0x03e8\n        /* \"contracts/TimeMarket.sol\":3473:3487  getPoolAddress */\n      tag_38\n        /* \"contracts/TimeMarket.sol\":3473:3519  getPoolAddress(promiseStableToken,token1,1000) */\n      jump\t// in\n    tag_167:\n        /* \"contracts/TimeMarket.sol\":3456:3519  address thisPool=getPoolAddress(promiseStableToken,token1,1000) */\n      swap1\n      pop\n        /* \"contracts/TimeMarket.sol\":3530:3546  uint penalAmount */\n      0x00\n        /* \"contracts/TimeMarket.sol\":3547:3605  getPenal(maxTradeMes.buyPrice, maxTradeMes.buyTotalAmount) */\n      tag_168\n        /* \"contracts/TimeMarket.sol\":3556:3567  maxTradeMes */\n      dup5\n        /* \"contracts/TimeMarket.sol\":3556:3576  maxTradeMes.buyPrice */\n      0x80\n      add\n      mload\n        /* \"contracts/TimeMarket.sol\":3578:3589  maxTradeMes */\n      dup6\n        /* \"contracts/TimeMarket.sol\":3578:3604  maxTradeMes.buyTotalAmount */\n      0x60\n      add\n      mload\n        /* \"contracts/TimeMarket.sol\":3547:3555  getPenal */\n      tag_47\n        /* \"contracts/TimeMarket.sol\":3547:3605  getPenal(maxTradeMes.buyPrice, maxTradeMes.buyTotalAmount) */\n      jump\t// in\n    tag_168:\n        /* \"contracts/TimeMarket.sol\":3530:3605  uint penalAmount=getPenal(maxTradeMes.buyPrice, maxTradeMes.buyTotalAmount) */\n      swap1\n      pop\n        /* \"contracts/TimeMarket.sol\":3643:3776  IERC20(promiseStableToken).safeTransferFrom(... */\n      tag_169\n        /* \"contracts/TimeMarket.sol\":3701:3711  msg.sender */\n      caller\n        /* \"contracts/TimeMarket.sol\":3734:3738  this */\n      address\n        /* \"contracts/TimeMarket.sol\":3754:3765  penalAmount */\n      dup4\n        /* \"contracts/TimeMarket.sol\":3650:3668  promiseStableToken */\n      dup7\n        /* \"contracts/TimeMarket.sol\":3643:3686  IERC20(promiseStableToken).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_78\n      swap1\n        /* \"contracts/TimeMarket.sol\":3643:3776  IERC20(promiseStableToken).safeTransferFrom(... */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_169:\n        /* \"contracts/TimeMarket.sol\":3851:3911  IERC20(promiseStableToken).safeApprove(thisPool,penalAmount) */\n      tag_170\n        /* \"contracts/TimeMarket.sol\":3890:3898  thisPool */\n      dup3\n        /* \"contracts/TimeMarket.sol\":3899:3910  penalAmount */\n      dup3\n        /* \"contracts/TimeMarket.sol\":3858:3876  promiseStableToken */\n      dup6\n        /* \"contracts/TimeMarket.sol\":3851:3889  IERC20(promiseStableToken).safeApprove */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_80\n      swap1\n        /* \"contracts/TimeMarket.sol\":3851:3911  IERC20(promiseStableToken).safeApprove(thisPool,penalAmount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_170:\n        /* \"contracts/TimeMarket.sol\":3922:4001  IERC20(promiseStableToken).safeTransferFrom(address(this),thisPool,penalAmount) */\n      tag_171\n        /* \"contracts/TimeMarket.sol\":3974:3978  this */\n      address\n        /* \"contracts/TimeMarket.sol\":3980:3988  thisPool */\n      dup4\n        /* \"contracts/TimeMarket.sol\":3989:4000  penalAmount */\n      dup4\n        /* \"contracts/TimeMarket.sol\":3929:3947  promiseStableToken */\n      dup7\n        /* \"contracts/TimeMarket.sol\":3922:3965  IERC20(promiseStableToken).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_78\n      swap1\n        /* \"contracts/TimeMarket.sol\":3922:4001  IERC20(promiseStableToken).safeTransferFrom(address(this),thisPool,penalAmount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_171:\n        /* \"contracts/TimeMarket.sol\":4031:4044  uniV2Router02 */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TimeMarket.sol\":4012:4058  IUniswapV2Router02(uniV2Router02).addLiquidity */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe8e33700\n        /* \"contracts/TimeMarket.sol\":4073:4091  promiseStableToken */\n      dup5\n        /* \"contracts/TimeMarket.sol\":4106:4112  token1 */\n      dup8\n        /* \"contracts/TimeMarket.sol\":4127:4138  penalAmount */\n      dup5\n        /* \"contracts/TimeMarket.sol\":4153:4154  0 */\n      0x00\n        /* \"contracts/TimeMarket.sol\":4169:4173  1000 */\n      0x03e8\n        /* \"contracts/TimeMarket.sol\":4188:4189  0 */\n      0x00\n        /* \"contracts/TimeMarket.sol\":4212:4216  this */\n      address\n        /* \"contracts/TimeMarket.sol\":4248:4255  1 hours */\n      0x0e10\n        /* \"contracts/TimeMarket.sol\":4232:4247  block.timestamp */\n      timestamp\n        /* \"contracts/TimeMarket.sol\":4232:4255  block.timestamp+1 hours */\n      tag_172\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_172:\n        /* \"contracts/TimeMarket.sol\":4012:4266  IUniswapV2Router02(uniV2Router02).addLiquidity(... */\n      mload(0x40)\n      dup10\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap9\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_173:\n      0x60\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_175\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_175:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_176\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_176:\n      pop\n      pop\n      pop\n        /* \"contracts/TimeMarket.sol\":4306:4316  msg.sender */\n      caller\n        /* \"contracts/TimeMarket.sol\":4277:4286  _tradeMes */\n      0x06\n        /* \"contracts/TimeMarket.sol\":4277:4291  _tradeMes[_id] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":4287:4290  _id */\n      dup9\n        /* \"contracts/TimeMarket.sol\":4277:4291  _tradeMes[_id] */\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeMarket.sol\":4277:4305  _tradeMes[_id].solderAddress */\n      0x04\n      add\n      0x00\n        /* \"contracts/TimeMarket.sol\":4277:4316  _tradeMes[_id].solderAddress=msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/TimeMarket.sol\":4396:4397  2 */\n      0x02\n        /* \"contracts/TimeMarket.sol\":4370:4379  _tradeMes */\n      0x06\n        /* \"contracts/TimeMarket.sol\":4370:4384  _tradeMes[_id] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":4380:4383  _id */\n      dup9\n        /* \"contracts/TimeMarket.sol\":4370:4384  _tradeMes[_id] */\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeMarket.sol\":4370:4395  _tradeMes[_id].tradeState */\n      0x00\n      add\n      0x00\n        /* \"contracts/TimeMarket.sol\":4370:4397  _tradeMes[_id].tradeState=2 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/TimeMarket.sol\":3175:4405  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/TimeMarket.sol\":3125:4405  function Sale(uint64 _id,address token1) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TimeMarket.sol\":1506:1570  mapping(address => mapping(uint256=>bool))public userIfWithdraw2 */\n    tag_66:\n      mstore(0x20, 0x09)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/TimeMarket.sol\":1741:1805  mapping(address => mapping(uint256=>bool))public userIfWithdraw4 */\n    tag_70:\n      mstore(0x20, 0x0b)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"libraries/SafeERC20.sol\":1447:1652  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_78:\n        /* \"libraries/SafeERC20.sol\":1548:1644  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_178\n        /* \"libraries/SafeERC20.sol\":1568:1573  token */\n      dup5\n        /* \"libraries/SafeERC20.sol\":1598:1625  token.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"libraries/SafeERC20.sol\":1627:1631  from */\n      dup6\n        /* \"libraries/SafeERC20.sol\":1633:1635  to */\n      dup6\n        /* \"libraries/SafeERC20.sol\":1637:1642  value */\n      dup6\n        /* \"libraries/SafeERC20.sol\":1575:1643  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_179\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_179:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"libraries/SafeERC20.sol\":1548:1567  _callOptionalReturn */\n      tag_181\n        /* \"libraries/SafeERC20.sol\":1548:1644  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_178:\n        /* \"libraries/SafeERC20.sol\":1447:1652  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"libraries/SafeERC20.sol\":1921:2503  function safeApprove(IERC20 token, address spender, uint256 value) internal {... */\n    tag_80:\n        /* \"libraries/SafeERC20.sol\":2260:2261  0 */\n      0x00\n        /* \"libraries/SafeERC20.sol\":2251:2256  value */\n      dup2\n        /* \"libraries/SafeERC20.sol\":2251:2261  value == 0 */\n      eq\n        /* \"libraries/SafeERC20.sol\":2250:2312  (value == 0) || (token.allowance(address(this), spender) == 0) */\n      dup1\n      tag_183\n      jumpi\n      pop\n        /* \"libraries/SafeERC20.sol\":2310:2311  0 */\n      0x00\n        /* \"libraries/SafeERC20.sol\":2267:2272  token */\n      dup4\n        /* \"libraries/SafeERC20.sol\":2267:2282  token.allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"libraries/SafeERC20.sol\":2291:2295  this */\n      address\n        /* \"libraries/SafeERC20.sol\":2298:2305  spender */\n      dup6\n        /* \"libraries/SafeERC20.sol\":2267:2306  token.allowance(address(this), spender) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_184\n      swap3\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_184:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_187\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_187:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_188\n      swap2\n      swap1\n      tag_189\n      jump\t// in\n    tag_188:\n        /* \"libraries/SafeERC20.sol\":2267:2311  token.allowance(address(this), spender) == 0 */\n      eq\n        /* \"libraries/SafeERC20.sol\":2250:2312  (value == 0) || (token.allowance(address(this), spender) == 0) */\n    tag_183:\n        /* \"libraries/SafeERC20.sol\":2228:2394  require(... */\n      tag_190\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_192\n      jump\t// in\n    tag_191:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_190:\n        /* \"libraries/SafeERC20.sol\":2405:2495  _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value)) */\n      tag_193\n        /* \"libraries/SafeERC20.sol\":2425:2430  token */\n      dup4\n        /* \"libraries/SafeERC20.sol\":2455:2477  token.approve.selector */\n      shl(0xe0, 0x095ea7b3)\n        /* \"libraries/SafeERC20.sol\":2479:2486  spender */\n      dup5\n        /* \"libraries/SafeERC20.sol\":2488:2493  value */\n      dup5\n        /* \"libraries/SafeERC20.sol\":2432:2494  abi.encodeWithSelector(token.approve.selector, spender, value) */\n      add(0x24, mload(0x40))\n      tag_194\n      swap3\n      swap2\n      swap1\n      tag_195\n      jump\t// in\n    tag_194:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"libraries/SafeERC20.sol\":2405:2424  _callOptionalReturn */\n      tag_181\n        /* \"libraries/SafeERC20.sol\":2405:2495  _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value)) */\n      jump\t// in\n    tag_193:\n        /* \"libraries/SafeERC20.sol\":1921:2503  function safeApprove(IERC20 token, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TimeMarket.sol\":9287:9401  function getSolder(uint64 _id)internal view returns(address){... */\n    tag_94:\n        /* \"contracts/TimeMarket.sol\":9339:9346  address */\n      0x00\n        /* \"contracts/TimeMarket.sol\":9365:9374  _tradeMes */\n      0x06\n        /* \"contracts/TimeMarket.sol\":9365:9379  _tradeMes[_id] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":9375:9378  _id */\n      dup4\n        /* \"contracts/TimeMarket.sol\":9365:9379  _tradeMes[_id] */\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeMarket.sol\":9365:9393  _tradeMes[_id].solderAddress */\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TimeMarket.sol\":9358:9393  return _tradeMes[_id].solderAddress */\n      swap1\n      pop\n        /* \"contracts/TimeMarket.sol\":9287:9401  function getSolder(uint64 _id)internal view returns(address){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/TimeMarket.sol\":9127:9239  function getBuyer(uint64 _id)internal view returns(address){... */\n    tag_99:\n        /* \"contracts/TimeMarket.sol\":9178:9185  address */\n      0x00\n        /* \"contracts/TimeMarket.sol\":9204:9213  _tradeMes */\n      0x06\n        /* \"contracts/TimeMarket.sol\":9204:9218  _tradeMes[_id] */\n      0x00\n        /* \"contracts/TimeMarket.sol\":9214:9217  _id */\n      dup4\n        /* \"contracts/TimeMarket.sol\":9204:9218  _tradeMes[_id] */\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TimeMarket.sol\":9204:9231  _tradeMes[_id].buyerAddress */\n      0x03\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TimeMarket.sol\":9197:9231  return _tradeMes[_id].buyerAddress */\n      swap1\n      pop\n        /* \"contracts/TimeMarket.sol\":9127:9239  function getBuyer(uint64 _id)internal view returns(address){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"libraries/TimeFee.sol\":250:680  function fee(uint256 stableAmount)internal pure returns(uint256 stableFee){... */\n    tag_107:\n        /* \"libraries/TimeFee.sol\":306:323  uint256 stableFee */\n      0x00\n        /* \"libraries/TimeFee.sol\":352:361  100 ether */\n      0x056bc75e2d63100000\n        /* \"libraries/TimeFee.sol\":338:350  stableAmount */\n      dup3\n        /* \"libraries/TimeFee.sol\":338:361  stableAmount>=100 ether */\n      lt\n      iszero\n        /* \"libraries/TimeFee.sol\":338:388  stableAmount>=100 ether && stableAmount<1000 ether */\n      dup1\n      iszero\n      tag_199\n      jumpi\n      pop\n        /* \"libraries/TimeFee.sol\":378:388  1000 ether */\n      0x3635c9adc5dea00000\n        /* \"libraries/TimeFee.sol\":365:377  stableAmount */\n      dup3\n        /* \"libraries/TimeFee.sol\":365:388  stableAmount<1000 ether */\n      lt\n        /* \"libraries/TimeFee.sol\":338:388  stableAmount>=100 ether && stableAmount<1000 ether */\n    tag_199:\n        /* \"libraries/TimeFee.sol\":335:673  if(stableAmount>=100 ether && stableAmount<1000 ether){... */\n      iszero\n      tag_200\n      jumpi\n        /* \"libraries/TimeFee.sol\":424:427  100 */\n      0x64\n        /* \"libraries/TimeFee.sol\":411:423  stableAmount */\n      dup3\n        /* \"libraries/TimeFee.sol\":411:427  stableAmount/100 */\n      tag_201\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_201:\n        /* \"libraries/TimeFee.sol\":404:427  return stableAmount/100 */\n      swap1\n      pop\n      jump(tag_198)\n        /* \"libraries/TimeFee.sol\":335:673  if(stableAmount>=100 ether && stableAmount<1000 ether){... */\n    tag_200:\n        /* \"libraries/TimeFee.sol\":461:471  1000 ether */\n      0x3635c9adc5dea00000\n        /* \"libraries/TimeFee.sol\":447:459  stableAmount */\n      dup3\n        /* \"libraries/TimeFee.sol\":447:471  stableAmount>=1000 ether */\n      lt\n      iszero\n        /* \"libraries/TimeFee.sol\":447:499  stableAmount>=1000 ether && stableAmount<10000 ether */\n      dup1\n      iszero\n      tag_203\n      jumpi\n      pop\n        /* \"libraries/TimeFee.sol\":488:499  10000 ether */\n      0x021e19e0c9bab2400000\n        /* \"libraries/TimeFee.sol\":475:487  stableAmount */\n      dup3\n        /* \"libraries/TimeFee.sol\":475:499  stableAmount<10000 ether */\n      lt\n        /* \"libraries/TimeFee.sol\":447:499  stableAmount>=1000 ether && stableAmount<10000 ether */\n    tag_203:\n        /* \"libraries/TimeFee.sol\":444:673  if(stableAmount>=1000 ether && stableAmount<10000 ether){... */\n      iszero\n      tag_204\n      jumpi\n        /* \"libraries/TimeFee.sol\":535:538  200 */\n      0xc8\n        /* \"libraries/TimeFee.sol\":522:534  stableAmount */\n      dup3\n        /* \"libraries/TimeFee.sol\":522:538  stableAmount/200 */\n      tag_205\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_205:\n        /* \"libraries/TimeFee.sol\":515:538  return stableAmount/200 */\n      swap1\n      pop\n      jump(tag_198)\n        /* \"libraries/TimeFee.sol\":444:673  if(stableAmount>=1000 ether && stableAmount<10000 ether){... */\n    tag_204:\n        /* \"libraries/TimeFee.sol\":572:583  10000 ether */\n      0x021e19e0c9bab2400000\n        /* \"libraries/TimeFee.sol\":558:570  stableAmount */\n      dup3\n        /* \"libraries/TimeFee.sol\":558:583  stableAmount>=10000 ether */\n      lt\n        /* \"libraries/TimeFee.sol\":555:673  if(stableAmount>=10000 ether){... */\n      tag_207\n      jumpi\n        /* \"libraries/TimeFee.sol\":619:622  400 */\n      0x0190\n        /* \"libraries/TimeFee.sol\":606:618  stableAmount */\n      dup3\n        /* \"libraries/TimeFee.sol\":606:622  stableAmount/400 */\n      tag_208\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_208:\n        /* \"libraries/TimeFee.sol\":599:622  return stableAmount/400 */\n      swap1\n      pop\n      jump(tag_198)\n        /* \"libraries/TimeFee.sol\":555:673  if(stableAmount>=10000 ether){... */\n    tag_207:\n        /* \"libraries/TimeFee.sol\":660:661  0 */\n      0x00\n        /* \"libraries/TimeFee.sol\":653:661  return 0 */\n      swap1\n      pop\n        /* \"libraries/TimeFee.sol\":250:680  function fee(uint256 stableAmount)internal pure returns(uint256 stableFee){... */\n    tag_198:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"libraries/SafeERC20.sol\":1025:1202  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_109:\n        /* \"libraries/SafeERC20.sol\":1108:1194  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_211\n        /* \"libraries/SafeERC20.sol\":1128:1133  token */\n      dup4\n        /* \"libraries/SafeERC20.sol\":1158:1181  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"libraries/SafeERC20.sol\":1183:1185  to */\n      dup5\n        /* \"libraries/SafeERC20.sol\":1187:1192  value */\n      dup5\n        /* \"libraries/SafeERC20.sol\":1135:1193  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_212\n      swap3\n      swap2\n      swap1\n      tag_195\n      jump\t// in\n    tag_212:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"libraries/SafeERC20.sol\":1108:1127  _callOptionalReturn */\n      tag_181\n        /* \"libraries/SafeERC20.sol\":1108:1194  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_211:\n        /* \"libraries/SafeERC20.sol\":1025:1202  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"libraries/SafeERC20.sol\":5371:6020  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_181:\n        /* \"libraries/SafeERC20.sol\":5795:5818  bytes memory returndata */\n      0x00\n        /* \"libraries/SafeERC20.sol\":5821:5890  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_214\n        /* \"libraries/SafeERC20.sol\":5849:5853  data */\n      dup3\n        /* \"libraries/SafeERC20.sol\":5821:5890  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"libraries/SafeERC20.sol\":5829:5834  token */\n      dup6\n        /* \"libraries/SafeERC20.sol\":5821:5848  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_215\n      swap1\n        /* \"libraries/SafeERC20.sol\":5821:5890  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_214:\n        /* \"libraries/SafeERC20.sol\":5795:5890  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      pop\n        /* \"libraries/SafeERC20.sol\":5930:5931  0 */\n      0x00\n        /* \"libraries/SafeERC20.sol\":5909:5919  returndata */\n      dup2\n        /* \"libraries/SafeERC20.sol\":5909:5926  returndata.length */\n      mload\n        /* \"libraries/SafeERC20.sol\":5909:5931  returndata.length == 0 */\n      eq\n        /* \"libraries/SafeERC20.sol\":5909:5965  returndata.length == 0 || abi.decode(returndata, (bool)) */\n      dup1\n      tag_216\n      jumpi\n      pop\n        /* \"libraries/SafeERC20.sol\":5946:5956  returndata */\n      dup1\n        /* \"libraries/SafeERC20.sol\":5935:5965  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_217\n      swap2\n      swap1\n      tag_218\n      jump\t// in\n    tag_217:\n        /* \"libraries/SafeERC20.sol\":5909:5965  returndata.length == 0 || abi.decode(returndata, (bool)) */\n    tag_216:\n        /* \"libraries/SafeERC20.sol\":5901:6012  require(returndata.length == 0 || abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_219\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap1\n      tag_221\n      jump\t// in\n    tag_220:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_219:\n        /* \"libraries/SafeERC20.sol\":5441:6020  {... */\n      pop\n        /* \"libraries/SafeERC20.sol\":5371:6020  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"libraries/Address.sol\":4207:4436  function functionCall(... */\n    tag_215:\n        /* \"libraries/Address.sol\":4344:4356  bytes memory */\n      0x60\n        /* \"libraries/Address.sol\":4376:4428  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_223\n        /* \"libraries/Address.sol\":4398:4404  target */\n      dup5\n        /* \"libraries/Address.sol\":4406:4410  data */\n      dup5\n        /* \"libraries/Address.sol\":4412:4413  0 */\n      0x00\n        /* \"libraries/Address.sol\":4415:4427  errorMessage */\n      dup6\n        /* \"libraries/Address.sol\":4376:4397  functionCallWithValue */\n      tag_224\n        /* \"libraries/Address.sol\":4376:4428  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_223:\n        /* \"libraries/Address.sol\":4369:4428  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"libraries/Address.sol\":4207:4436  function functionCall(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"libraries/Address.sol\":5293:5748  function functionCallWithValue(... */\n    tag_224:\n        /* \"libraries/Address.sol\":5463:5475  bytes memory */\n      0x60\n        /* \"libraries/Address.sol\":5521:5526  value */\n      dup3\n        /* \"libraries/Address.sol\":5496:5517  address(this).balance */\n      selfbalance\n        /* \"libraries/Address.sol\":5496:5526  address(this).balance >= value */\n      lt\n      iszero\n        /* \"libraries/Address.sol\":5488:5569  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_226\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_227\n      swap1\n      tag_228\n      jump\t// in\n    tag_227:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_226:\n        /* \"libraries/Address.sol\":5581:5593  bool success */\n      0x00\n        /* \"libraries/Address.sol\":5595:5618  bytes memory returndata */\n      dup1\n        /* \"libraries/Address.sol\":5622:5628  target */\n      dup7\n        /* \"libraries/Address.sol\":5622:5633  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"libraries/Address.sol\":5641:5646  value */\n      dup6\n        /* \"libraries/Address.sol\":5648:5652  data */\n      dup8\n        /* \"libraries/Address.sol\":5622:5653  target.call{value: value}(data) */\n      mload(0x40)\n      tag_229\n      swap2\n      swap1\n      tag_230\n      jump\t// in\n    tag_229:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_233\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_232)\n    tag_233:\n      0x60\n      swap2\n      pop\n    tag_232:\n      pop\n        /* \"libraries/Address.sol\":5580:5653  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"libraries/Address.sol\":5671:5740  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      tag_234\n        /* \"libraries/Address.sol\":5698:5704  target */\n      dup8\n        /* \"libraries/Address.sol\":5706:5713  success */\n      dup4\n        /* \"libraries/Address.sol\":5715:5725  returndata */\n      dup4\n        /* \"libraries/Address.sol\":5727:5739  errorMessage */\n      dup8\n        /* \"libraries/Address.sol\":5671:5697  verifyCallResultFromTarget */\n      tag_235\n        /* \"libraries/Address.sol\":5671:5740  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      jump\t// in\n    tag_234:\n        /* \"libraries/Address.sol\":5664:5740  return verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"libraries/Address.sol\":5293:5748  function functionCallWithValue(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"libraries/Address.sol\":7866:8510  function verifyCallResultFromTarget(... */\n    tag_235:\n        /* \"libraries/Address.sol\":8051:8063  bytes memory */\n      0x60\n        /* \"libraries/Address.sol\":8080:8087  success */\n      dup4\n        /* \"libraries/Address.sol\":8076:8503  if (success) {... */\n      iszero\n      tag_237\n      jumpi\n        /* \"libraries/Address.sol\":8129:8130  0 */\n      0x00\n        /* \"libraries/Address.sol\":8108:8118  returndata */\n      dup4\n        /* \"libraries/Address.sol\":8108:8125  returndata.length */\n      mload\n        /* \"libraries/Address.sol\":8108:8130  returndata.length == 0 */\n      sub\n        /* \"libraries/Address.sol\":8104:8394  if (returndata.length == 0) {... */\n      tag_238\n      jumpi\n        /* \"libraries/Address.sol\":8326:8344  isContract(target) */\n      tag_239\n        /* \"libraries/Address.sol\":8337:8343  target */\n      dup6\n        /* \"libraries/Address.sol\":8326:8336  isContract */\n      tag_240\n        /* \"libraries/Address.sol\":8326:8344  isContract(target) */\n      jump\t// in\n    tag_239:\n        /* \"libraries/Address.sol\":8318:8378  require(isContract(target), \"Address: call to non-contract\") */\n      tag_241\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_242\n      swap1\n      tag_243\n      jump\t// in\n    tag_242:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_241:\n        /* \"libraries/Address.sol\":8104:8394  if (returndata.length == 0) {... */\n    tag_238:\n        /* \"libraries/Address.sol\":8415:8425  returndata */\n      dup3\n        /* \"libraries/Address.sol\":8408:8425  return returndata */\n      swap1\n      pop\n      jump(tag_236)\n        /* \"libraries/Address.sol\":8076:8503  if (success) {... */\n    tag_237:\n        /* \"libraries/Address.sol\":8458:8491  _revert(returndata, errorMessage) */\n      tag_245\n        /* \"libraries/Address.sol\":8466:8476  returndata */\n      dup4\n        /* \"libraries/Address.sol\":8478:8490  errorMessage */\n      dup4\n        /* \"libraries/Address.sol\":8458:8465  _revert */\n      tag_246\n        /* \"libraries/Address.sol\":8458:8491  _revert(returndata, errorMessage) */\n      jump\t// in\n    tag_245:\n        /* \"libraries/Address.sol\":7866:8510  function verifyCallResultFromTarget(... */\n    tag_236:\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"libraries/Address.sol\":1452:1778  function isContract(address account) internal view returns (bool) {... */\n    tag_240:\n        /* \"libraries/Address.sol\":1512:1516  bool */\n      0x00\n        /* \"libraries/Address.sol\":1769:1770  0 */\n      dup1\n        /* \"libraries/Address.sol\":1747:1754  account */\n      dup3\n        /* \"libraries/Address.sol\":1747:1766  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"libraries/Address.sol\":1747:1770  account.code.length > 0 */\n      gt\n        /* \"libraries/Address.sol\":1740:1770  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"libraries/Address.sol\":1452:1778  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"libraries/Address.sol\":9052:9604  function _revert(bytes memory returndata, string memory errorMessage) private pure {... */\n    tag_246:\n        /* \"libraries/Address.sol\":9233:9234  0 */\n      0x00\n        /* \"libraries/Address.sol\":9213:9223  returndata */\n      dup3\n        /* \"libraries/Address.sol\":9213:9230  returndata.length */\n      mload\n        /* \"libraries/Address.sol\":9213:9234  returndata.length > 0 */\n      gt\n        /* \"libraries/Address.sol\":9209:9597  if (returndata.length > 0) {... */\n      iszero\n      tag_249\n      jumpi\n        /* \"libraries/Address.sol\":9445:9455  returndata */\n      dup2\n        /* \"libraries/Address.sol\":9439:9456  mload(returndata) */\n      mload\n        /* \"libraries/Address.sol\":9502:9517  returndata_size */\n      dup1\n        /* \"libraries/Address.sol\":9489:9499  returndata */\n      dup4\n        /* \"libraries/Address.sol\":9485:9487  32 */\n      0x20\n        /* \"libraries/Address.sol\":9481:9500  add(32, returndata) */\n      add\n        /* \"libraries/Address.sol\":9474:9518  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"libraries/Address.sol\":9209:9597  if (returndata.length > 0) {... */\n    tag_249:\n        /* \"libraries/Address.sol\":9572:9584  errorMessage */\n      dup1\n        /* \"libraries/Address.sol\":9565:9585  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_251\n      swap2\n      swap1\n      tag_252\n      jump\t// in\n    tag_251:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":88:205   */\n    tag_254:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_256:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_257:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_312\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_256\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_258:\n        /* \"#utility.yul\":641:665   */\n      tag_314\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_257\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_315\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_315:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_259:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_317\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_258\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:959   */\n    tag_260:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":918:952   */\n      0xffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":911:916   */\n      dup3\n        /* \"#utility.yul\":907:953   */\n      and\n        /* \"#utility.yul\":896:953   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:959   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":965:1087   */\n    tag_261:\n        /* \"#utility.yul\":1038:1062   */\n      tag_320\n        /* \"#utility.yul\":1056:1061   */\n      dup2\n        /* \"#utility.yul\":1038:1062   */\n      tag_260\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":1031:1036   */\n      dup2\n        /* \"#utility.yul\":1028:1063   */\n      eq\n        /* \"#utility.yul\":1018:1081   */\n      tag_321\n      jumpi\n        /* \"#utility.yul\":1077:1078   */\n      0x00\n        /* \"#utility.yul\":1074:1075   */\n      dup1\n        /* \"#utility.yul\":1067:1079   */\n      revert\n        /* \"#utility.yul\":1018:1081   */\n    tag_321:\n        /* \"#utility.yul\":965:1087   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1093:1232   */\n    tag_262:\n        /* \"#utility.yul\":1139:1144   */\n      0x00\n        /* \"#utility.yul\":1177:1183   */\n      dup2\n        /* \"#utility.yul\":1164:1184   */\n      calldataload\n        /* \"#utility.yul\":1155:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1193:1226   */\n      tag_323\n        /* \"#utility.yul\":1220:1225   */\n      dup2\n        /* \"#utility.yul\":1193:1226   */\n      tag_261\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":1093:1232   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1238:2003   */\n    tag_20:\n        /* \"#utility.yul\":1324:1330   */\n      0x00\n        /* \"#utility.yul\":1332:1338   */\n      dup1\n        /* \"#utility.yul\":1340:1346   */\n      0x00\n        /* \"#utility.yul\":1348:1354   */\n      dup1\n        /* \"#utility.yul\":1397:1400   */\n      0x80\n        /* \"#utility.yul\":1385:1394   */\n      dup6\n        /* \"#utility.yul\":1376:1383   */\n      dup8\n        /* \"#utility.yul\":1372:1395   */\n      sub\n        /* \"#utility.yul\":1368:1401   */\n      slt\n        /* \"#utility.yul\":1365:1485   */\n      iszero\n      tag_325\n      jumpi\n        /* \"#utility.yul\":1404:1483   */\n      tag_326\n      tag_254\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":1365:1485   */\n    tag_325:\n        /* \"#utility.yul\":1524:1525   */\n      0x00\n        /* \"#utility.yul\":1549:1602   */\n      tag_327\n        /* \"#utility.yul\":1594:1601   */\n      dup8\n        /* \"#utility.yul\":1585:1591   */\n      dup3\n        /* \"#utility.yul\":1574:1583   */\n      dup9\n        /* \"#utility.yul\":1570:1592   */\n      add\n        /* \"#utility.yul\":1549:1602   */\n      tag_259\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":1539:1602   */\n      swap5\n      pop\n        /* \"#utility.yul\":1495:1612   */\n      pop\n        /* \"#utility.yul\":1651:1653   */\n      0x20\n        /* \"#utility.yul\":1677:1730   */\n      tag_328\n        /* \"#utility.yul\":1722:1729   */\n      dup8\n        /* \"#utility.yul\":1713:1719   */\n      dup3\n        /* \"#utility.yul\":1702:1711   */\n      dup9\n        /* \"#utility.yul\":1698:1720   */\n      add\n        /* \"#utility.yul\":1677:1730   */\n      tag_259\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":1667:1730   */\n      swap4\n      pop\n        /* \"#utility.yul\":1622:1740   */\n      pop\n        /* \"#utility.yul\":1779:1781   */\n      0x40\n        /* \"#utility.yul\":1805:1858   */\n      tag_329\n        /* \"#utility.yul\":1850:1857   */\n      dup8\n        /* \"#utility.yul\":1841:1847   */\n      dup3\n        /* \"#utility.yul\":1830:1839   */\n      dup9\n        /* \"#utility.yul\":1826:1848   */\n      add\n        /* \"#utility.yul\":1805:1858   */\n      tag_262\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":1795:1858   */\n      swap3\n      pop\n        /* \"#utility.yul\":1750:1868   */\n      pop\n        /* \"#utility.yul\":1907:1909   */\n      0x60\n        /* \"#utility.yul\":1933:1986   */\n      tag_330\n        /* \"#utility.yul\":1978:1985   */\n      dup8\n        /* \"#utility.yul\":1969:1975   */\n      dup3\n        /* \"#utility.yul\":1958:1967   */\n      dup9\n        /* \"#utility.yul\":1954:1976   */\n      add\n        /* \"#utility.yul\":1933:1986   */\n      tag_262\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":1923:1986   */\n      swap2\n      pop\n        /* \"#utility.yul\":1878:1996   */\n      pop\n        /* \"#utility.yul\":1238:2003   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2009:2110   */\n    tag_263:\n        /* \"#utility.yul\":2045:2052   */\n      0x00\n        /* \"#utility.yul\":2085:2103   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2078:2083   */\n      dup3\n        /* \"#utility.yul\":2074:2104   */\n      and\n        /* \"#utility.yul\":2063:2104   */\n      swap1\n      pop\n        /* \"#utility.yul\":2009:2110   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2116:2236   */\n    tag_264:\n        /* \"#utility.yul\":2188:2211   */\n      tag_333\n        /* \"#utility.yul\":2205:2210   */\n      dup2\n        /* \"#utility.yul\":2188:2211   */\n      tag_263\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":2181:2186   */\n      dup2\n        /* \"#utility.yul\":2178:2212   */\n      eq\n        /* \"#utility.yul\":2168:2230   */\n      tag_334\n      jumpi\n        /* \"#utility.yul\":2226:2227   */\n      0x00\n        /* \"#utility.yul\":2223:2224   */\n      dup1\n        /* \"#utility.yul\":2216:2228   */\n      revert\n        /* \"#utility.yul\":2168:2230   */\n    tag_334:\n        /* \"#utility.yul\":2116:2236   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2242:2379   */\n    tag_265:\n        /* \"#utility.yul\":2287:2292   */\n      0x00\n        /* \"#utility.yul\":2325:2331   */\n      dup2\n        /* \"#utility.yul\":2312:2332   */\n      calldataload\n        /* \"#utility.yul\":2303:2332   */\n      swap1\n      pop\n        /* \"#utility.yul\":2341:2373   */\n      tag_336\n        /* \"#utility.yul\":2367:2372   */\n      dup2\n        /* \"#utility.yul\":2341:2373   */\n      tag_264\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":2242:2379   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2385:2712   */\n    tag_24:\n        /* \"#utility.yul\":2443:2449   */\n      0x00\n        /* \"#utility.yul\":2492:2494   */\n      0x20\n        /* \"#utility.yul\":2480:2489   */\n      dup3\n        /* \"#utility.yul\":2471:2478   */\n      dup5\n        /* \"#utility.yul\":2467:2490   */\n      sub\n        /* \"#utility.yul\":2463:2495   */\n      slt\n        /* \"#utility.yul\":2460:2579   */\n      iszero\n      tag_338\n      jumpi\n        /* \"#utility.yul\":2498:2577   */\n      tag_339\n      tag_254\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":2460:2579   */\n    tag_338:\n        /* \"#utility.yul\":2618:2619   */\n      0x00\n        /* \"#utility.yul\":2643:2695   */\n      tag_340\n        /* \"#utility.yul\":2687:2694   */\n      dup5\n        /* \"#utility.yul\":2678:2684   */\n      dup3\n        /* \"#utility.yul\":2667:2676   */\n      dup6\n        /* \"#utility.yul\":2663:2685   */\n      add\n        /* \"#utility.yul\":2643:2695   */\n      tag_265\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":2633:2695   */\n      swap2\n      pop\n        /* \"#utility.yul\":2589:2705   */\n      pop\n        /* \"#utility.yul\":2385:2712   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2718:2795   */\n    tag_266:\n        /* \"#utility.yul\":2755:2762   */\n      0x00\n        /* \"#utility.yul\":2784:2789   */\n      dup2\n        /* \"#utility.yul\":2773:2789   */\n      swap1\n      pop\n        /* \"#utility.yul\":2718:2795   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2801:2923   */\n    tag_267:\n        /* \"#utility.yul\":2874:2898   */\n      tag_343\n        /* \"#utility.yul\":2892:2897   */\n      dup2\n        /* \"#utility.yul\":2874:2898   */\n      tag_266\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":2867:2872   */\n      dup2\n        /* \"#utility.yul\":2864:2899   */\n      eq\n        /* \"#utility.yul\":2854:2917   */\n      tag_344\n      jumpi\n        /* \"#utility.yul\":2913:2914   */\n      0x00\n        /* \"#utility.yul\":2910:2911   */\n      dup1\n        /* \"#utility.yul\":2903:2915   */\n      revert\n        /* \"#utility.yul\":2854:2917   */\n    tag_344:\n        /* \"#utility.yul\":2801:2923   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2929:3068   */\n    tag_268:\n        /* \"#utility.yul\":2975:2980   */\n      0x00\n        /* \"#utility.yul\":3013:3019   */\n      dup2\n        /* \"#utility.yul\":3000:3020   */\n      calldataload\n        /* \"#utility.yul\":2991:3020   */\n      swap1\n      pop\n        /* \"#utility.yul\":3029:3062   */\n      tag_346\n        /* \"#utility.yul\":3056:3061   */\n      dup2\n        /* \"#utility.yul\":3029:3062   */\n      tag_267\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":2929:3068   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3074:3548   */\n    tag_31:\n        /* \"#utility.yul\":3142:3148   */\n      0x00\n        /* \"#utility.yul\":3150:3156   */\n      dup1\n        /* \"#utility.yul\":3199:3201   */\n      0x40\n        /* \"#utility.yul\":3187:3196   */\n      dup4\n        /* \"#utility.yul\":3178:3185   */\n      dup6\n        /* \"#utility.yul\":3174:3197   */\n      sub\n        /* \"#utility.yul\":3170:3202   */\n      slt\n        /* \"#utility.yul\":3167:3286   */\n      iszero\n      tag_348\n      jumpi\n        /* \"#utility.yul\":3205:3284   */\n      tag_349\n      tag_254\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":3167:3286   */\n    tag_348:\n        /* \"#utility.yul\":3325:3326   */\n      0x00\n        /* \"#utility.yul\":3350:3403   */\n      tag_350\n        /* \"#utility.yul\":3395:3402   */\n      dup6\n        /* \"#utility.yul\":3386:3392   */\n      dup3\n        /* \"#utility.yul\":3375:3384   */\n      dup7\n        /* \"#utility.yul\":3371:3393   */\n      add\n        /* \"#utility.yul\":3350:3403   */\n      tag_259\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":3340:3403   */\n      swap3\n      pop\n        /* \"#utility.yul\":3296:3413   */\n      pop\n        /* \"#utility.yul\":3452:3454   */\n      0x20\n        /* \"#utility.yul\":3478:3531   */\n      tag_351\n        /* \"#utility.yul\":3523:3530   */\n      dup6\n        /* \"#utility.yul\":3514:3520   */\n      dup3\n        /* \"#utility.yul\":3503:3512   */\n      dup7\n        /* \"#utility.yul\":3499:3521   */\n      add\n        /* \"#utility.yul\":3478:3531   */\n      tag_268\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":3468:3531   */\n      swap2\n      pop\n        /* \"#utility.yul\":3423:3541   */\n      pop\n        /* \"#utility.yul\":3074:3548   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3554:3644   */\n    tag_269:\n        /* \"#utility.yul\":3588:3595   */\n      0x00\n        /* \"#utility.yul\":3631:3636   */\n      dup2\n        /* \"#utility.yul\":3624:3637   */\n      iszero\n        /* \"#utility.yul\":3617:3638   */\n      iszero\n        /* \"#utility.yul\":3606:3638   */\n      swap1\n      pop\n        /* \"#utility.yul\":3554:3644   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3650:3759   */\n    tag_270:\n        /* \"#utility.yul\":3731:3752   */\n      tag_354\n        /* \"#utility.yul\":3746:3751   */\n      dup2\n        /* \"#utility.yul\":3731:3752   */\n      tag_269\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":3726:3729   */\n      dup3\n        /* \"#utility.yul\":3719:3753   */\n      mstore\n        /* \"#utility.yul\":3650:3759   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3765:3975   */\n    tag_34:\n        /* \"#utility.yul\":3852:3856   */\n      0x00\n        /* \"#utility.yul\":3890:3892   */\n      0x20\n        /* \"#utility.yul\":3879:3888   */\n      dup3\n        /* \"#utility.yul\":3875:3893   */\n      add\n        /* \"#utility.yul\":3867:3893   */\n      swap1\n      pop\n        /* \"#utility.yul\":3903:3968   */\n      tag_356\n        /* \"#utility.yul\":3965:3966   */\n      0x00\n        /* \"#utility.yul\":3954:3963   */\n      dup4\n        /* \"#utility.yul\":3950:3967   */\n      add\n        /* \"#utility.yul\":3941:3947   */\n      dup5\n        /* \"#utility.yul\":3903:3968   */\n      tag_270\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":3765:3975   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3981:4072   */\n    tag_271:\n        /* \"#utility.yul\":4017:4024   */\n      0x00\n        /* \"#utility.yul\":4057:4065   */\n      0xffffff\n        /* \"#utility.yul\":4050:4055   */\n      dup3\n        /* \"#utility.yul\":4046:4066   */\n      and\n        /* \"#utility.yul\":4035:4066   */\n      swap1\n      pop\n        /* \"#utility.yul\":3981:4072   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4078:4198   */\n    tag_272:\n        /* \"#utility.yul\":4150:4173   */\n      tag_359\n        /* \"#utility.yul\":4167:4172   */\n      dup2\n        /* \"#utility.yul\":4150:4173   */\n      tag_271\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":4143:4148   */\n      dup2\n        /* \"#utility.yul\":4140:4174   */\n      eq\n        /* \"#utility.yul\":4130:4192   */\n      tag_360\n      jumpi\n        /* \"#utility.yul\":4188:4189   */\n      0x00\n        /* \"#utility.yul\":4185:4186   */\n      dup1\n        /* \"#utility.yul\":4178:4190   */\n      revert\n        /* \"#utility.yul\":4130:4192   */\n    tag_360:\n        /* \"#utility.yul\":4078:4198   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4204:4341   */\n    tag_273:\n        /* \"#utility.yul\":4249:4254   */\n      0x00\n        /* \"#utility.yul\":4287:4293   */\n      dup2\n        /* \"#utility.yul\":4274:4294   */\n      calldataload\n        /* \"#utility.yul\":4265:4294   */\n      swap1\n      pop\n        /* \"#utility.yul\":4303:4335   */\n      tag_362\n        /* \"#utility.yul\":4329:4334   */\n      dup2\n        /* \"#utility.yul\":4303:4335   */\n      tag_272\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":4204:4341   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4347:4964   */\n    tag_37:\n        /* \"#utility.yul\":4423:4429   */\n      0x00\n        /* \"#utility.yul\":4431:4437   */\n      dup1\n        /* \"#utility.yul\":4439:4445   */\n      0x00\n        /* \"#utility.yul\":4488:4490   */\n      0x60\n        /* \"#utility.yul\":4476:4485   */\n      dup5\n        /* \"#utility.yul\":4467:4474   */\n      dup7\n        /* \"#utility.yul\":4463:4486   */\n      sub\n        /* \"#utility.yul\":4459:4491   */\n      slt\n        /* \"#utility.yul\":4456:4575   */\n      iszero\n      tag_364\n      jumpi\n        /* \"#utility.yul\":4494:4573   */\n      tag_365\n      tag_254\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":4456:4575   */\n    tag_364:\n        /* \"#utility.yul\":4614:4615   */\n      0x00\n        /* \"#utility.yul\":4639:4692   */\n      tag_366\n        /* \"#utility.yul\":4684:4691   */\n      dup7\n        /* \"#utility.yul\":4675:4681   */\n      dup3\n        /* \"#utility.yul\":4664:4673   */\n      dup8\n        /* \"#utility.yul\":4660:4682   */\n      add\n        /* \"#utility.yul\":4639:4692   */\n      tag_259\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":4629:4692   */\n      swap4\n      pop\n        /* \"#utility.yul\":4585:4702   */\n      pop\n        /* \"#utility.yul\":4741:4743   */\n      0x20\n        /* \"#utility.yul\":4767:4820   */\n      tag_367\n        /* \"#utility.yul\":4812:4819   */\n      dup7\n        /* \"#utility.yul\":4803:4809   */\n      dup3\n        /* \"#utility.yul\":4792:4801   */\n      dup8\n        /* \"#utility.yul\":4788:4810   */\n      add\n        /* \"#utility.yul\":4767:4820   */\n      tag_259\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":4757:4820   */\n      swap3\n      pop\n        /* \"#utility.yul\":4712:4830   */\n      pop\n        /* \"#utility.yul\":4869:4871   */\n      0x40\n        /* \"#utility.yul\":4895:4947   */\n      tag_368\n        /* \"#utility.yul\":4939:4946   */\n      dup7\n        /* \"#utility.yul\":4930:4936   */\n      dup3\n        /* \"#utility.yul\":4919:4928   */\n      dup8\n        /* \"#utility.yul\":4915:4937   */\n      add\n        /* \"#utility.yul\":4895:4947   */\n      tag_273\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":4885:4947   */\n      swap2\n      pop\n        /* \"#utility.yul\":4840:4957   */\n      pop\n        /* \"#utility.yul\":4347:4964   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4970:5088   */\n    tag_274:\n        /* \"#utility.yul\":5057:5081   */\n      tag_370\n        /* \"#utility.yul\":5075:5080   */\n      dup2\n        /* \"#utility.yul\":5057:5081   */\n      tag_257\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":5052:5055   */\n      dup3\n        /* \"#utility.yul\":5045:5082   */\n      mstore\n        /* \"#utility.yul\":4970:5088   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5094:5316   */\n    tag_40:\n        /* \"#utility.yul\":5187:5191   */\n      0x00\n        /* \"#utility.yul\":5225:5227   */\n      0x20\n        /* \"#utility.yul\":5214:5223   */\n      dup3\n        /* \"#utility.yul\":5210:5228   */\n      add\n        /* \"#utility.yul\":5202:5228   */\n      swap1\n      pop\n        /* \"#utility.yul\":5238:5309   */\n      tag_372\n        /* \"#utility.yul\":5306:5307   */\n      0x00\n        /* \"#utility.yul\":5295:5304   */\n      dup4\n        /* \"#utility.yul\":5291:5308   */\n      add\n        /* \"#utility.yul\":5282:5288   */\n      dup5\n        /* \"#utility.yul\":5238:5309   */\n      tag_274\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":5094:5316   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5322:5796   */\n    tag_46:\n        /* \"#utility.yul\":5390:5396   */\n      0x00\n        /* \"#utility.yul\":5398:5404   */\n      dup1\n        /* \"#utility.yul\":5447:5449   */\n      0x40\n        /* \"#utility.yul\":5435:5444   */\n      dup4\n        /* \"#utility.yul\":5426:5433   */\n      dup6\n        /* \"#utility.yul\":5422:5445   */\n      sub\n        /* \"#utility.yul\":5418:5450   */\n      slt\n        /* \"#utility.yul\":5415:5534   */\n      iszero\n      tag_374\n      jumpi\n        /* \"#utility.yul\":5453:5532   */\n      tag_375\n      tag_254\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":5415:5534   */\n    tag_374:\n        /* \"#utility.yul\":5573:5574   */\n      0x00\n        /* \"#utility.yul\":5598:5651   */\n      tag_376\n        /* \"#utility.yul\":5643:5650   */\n      dup6\n        /* \"#utility.yul\":5634:5640   */\n      dup3\n        /* \"#utility.yul\":5623:5632   */\n      dup7\n        /* \"#utility.yul\":5619:5641   */\n      add\n        /* \"#utility.yul\":5598:5651   */\n      tag_262\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":5588:5651   */\n      swap3\n      pop\n        /* \"#utility.yul\":5544:5661   */\n      pop\n        /* \"#utility.yul\":5700:5702   */\n      0x20\n        /* \"#utility.yul\":5726:5779   */\n      tag_377\n        /* \"#utility.yul\":5771:5778   */\n      dup6\n        /* \"#utility.yul\":5762:5768   */\n      dup3\n        /* \"#utility.yul\":5751:5760   */\n      dup7\n        /* \"#utility.yul\":5747:5769   */\n      add\n        /* \"#utility.yul\":5726:5779   */\n      tag_262\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":5716:5779   */\n      swap2\n      pop\n        /* \"#utility.yul\":5671:5789   */\n      pop\n        /* \"#utility.yul\":5322:5796   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5802:5920   */\n    tag_275:\n        /* \"#utility.yul\":5889:5913   */\n      tag_379\n        /* \"#utility.yul\":5907:5912   */\n      dup2\n        /* \"#utility.yul\":5889:5913   */\n      tag_266\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":5884:5887   */\n      dup3\n        /* \"#utility.yul\":5877:5914   */\n      mstore\n        /* \"#utility.yul\":5802:5920   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5926:6148   */\n    tag_49:\n        /* \"#utility.yul\":6019:6023   */\n      0x00\n        /* \"#utility.yul\":6057:6059   */\n      0x20\n        /* \"#utility.yul\":6046:6055   */\n      dup3\n        /* \"#utility.yul\":6042:6060   */\n      add\n        /* \"#utility.yul\":6034:6060   */\n      swap1\n      pop\n        /* \"#utility.yul\":6070:6141   */\n      tag_381\n        /* \"#utility.yul\":6138:6139   */\n      0x00\n        /* \"#utility.yul\":6127:6136   */\n      dup4\n        /* \"#utility.yul\":6123:6140   */\n      add\n        /* \"#utility.yul\":6114:6120   */\n      dup5\n        /* \"#utility.yul\":6070:6141   */\n      tag_275\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":5926:6148   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6154:6626   */\n    tag_62:\n        /* \"#utility.yul\":6221:6227   */\n      0x00\n        /* \"#utility.yul\":6229:6235   */\n      dup1\n        /* \"#utility.yul\":6278:6280   */\n      0x40\n        /* \"#utility.yul\":6266:6275   */\n      dup4\n        /* \"#utility.yul\":6257:6264   */\n      dup6\n        /* \"#utility.yul\":6253:6276   */\n      sub\n        /* \"#utility.yul\":6249:6281   */\n      slt\n        /* \"#utility.yul\":6246:6365   */\n      iszero\n      tag_383\n      jumpi\n        /* \"#utility.yul\":6284:6363   */\n      tag_384\n      tag_254\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":6246:6365   */\n    tag_383:\n        /* \"#utility.yul\":6404:6405   */\n      0x00\n        /* \"#utility.yul\":6429:6481   */\n      tag_385\n        /* \"#utility.yul\":6473:6480   */\n      dup6\n        /* \"#utility.yul\":6464:6470   */\n      dup3\n        /* \"#utility.yul\":6453:6462   */\n      dup7\n        /* \"#utility.yul\":6449:6471   */\n      add\n        /* \"#utility.yul\":6429:6481   */\n      tag_265\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":6419:6481   */\n      swap3\n      pop\n        /* \"#utility.yul\":6375:6491   */\n      pop\n        /* \"#utility.yul\":6530:6532   */\n      0x20\n        /* \"#utility.yul\":6556:6609   */\n      tag_386\n        /* \"#utility.yul\":6601:6608   */\n      dup6\n        /* \"#utility.yul\":6592:6598   */\n      dup3\n        /* \"#utility.yul\":6581:6590   */\n      dup7\n        /* \"#utility.yul\":6577:6599   */\n      add\n        /* \"#utility.yul\":6556:6609   */\n      tag_259\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":6546:6609   */\n      swap2\n      pop\n        /* \"#utility.yul\":6501:6619   */\n      pop\n        /* \"#utility.yul\":6154:6626   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6632:6812   */\n    tag_276:\n        /* \"#utility.yul\":6680:6757   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6677:6678   */\n      0x00\n        /* \"#utility.yul\":6670:6758   */\n      mstore\n        /* \"#utility.yul\":6777:6781   */\n      0x11\n        /* \"#utility.yul\":6774:6775   */\n      0x04\n        /* \"#utility.yul\":6767:6782   */\n      mstore\n        /* \"#utility.yul\":6801:6805   */\n      0x24\n        /* \"#utility.yul\":6798:6799   */\n      0x00\n        /* \"#utility.yul\":6791:6806   */\n      revert\n        /* \"#utility.yul\":6818:7097   */\n    tag_74:\n        /* \"#utility.yul\":6858:6865   */\n      0x00\n        /* \"#utility.yul\":6881:6901   */\n      tag_389\n        /* \"#utility.yul\":6899:6900   */\n      dup3\n        /* \"#utility.yul\":6881:6901   */\n      tag_260\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":6876:6901   */\n      swap2\n      pop\n        /* \"#utility.yul\":6915:6935   */\n      tag_390\n        /* \"#utility.yul\":6933:6934   */\n      dup4\n        /* \"#utility.yul\":6915:6935   */\n      tag_260\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":6910:6935   */\n      swap3\n      pop\n        /* \"#utility.yul\":6970:6971   */\n      dup3\n        /* \"#utility.yul\":6967:6968   */\n      dup3\n        /* \"#utility.yul\":6963:6972   */\n      mul\n        /* \"#utility.yul\":6992:7022   */\n      tag_391\n        /* \"#utility.yul\":7010:7021   */\n      dup2\n        /* \"#utility.yul\":6992:7022   */\n      tag_260\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":6981:7022   */\n      swap2\n      pop\n        /* \"#utility.yul\":7054:7065   */\n      dup1\n        /* \"#utility.yul\":7045:7052   */\n      dup3\n        /* \"#utility.yul\":7042:7066   */\n      eq\n        /* \"#utility.yul\":7032:7090   */\n      tag_392\n      jumpi\n        /* \"#utility.yul\":7070:7088   */\n      tag_393\n      tag_276\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":7032:7090   */\n    tag_392:\n        /* \"#utility.yul\":6866:7097   */\n      pop\n        /* \"#utility.yul\":6818:7097   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7103:7294   */\n    tag_82:\n        /* \"#utility.yul\":7143:7146   */\n      0x00\n        /* \"#utility.yul\":7162:7182   */\n      tag_395\n        /* \"#utility.yul\":7180:7181   */\n      dup3\n        /* \"#utility.yul\":7162:7182   */\n      tag_266\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":7157:7182   */\n      swap2\n      pop\n        /* \"#utility.yul\":7196:7216   */\n      tag_396\n        /* \"#utility.yul\":7214:7215   */\n      dup4\n        /* \"#utility.yul\":7196:7216   */\n      tag_266\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":7191:7216   */\n      swap3\n      pop\n        /* \"#utility.yul\":7239:7240   */\n      dup3\n        /* \"#utility.yul\":7236:7237   */\n      dup3\n        /* \"#utility.yul\":7232:7241   */\n      add\n        /* \"#utility.yul\":7225:7241   */\n      swap1\n      pop\n        /* \"#utility.yul\":7260:7263   */\n      dup1\n        /* \"#utility.yul\":7257:7258   */\n      dup3\n        /* \"#utility.yul\":7254:7264   */\n      gt\n        /* \"#utility.yul\":7251:7287   */\n      iszero\n      tag_397\n      jumpi\n        /* \"#utility.yul\":7267:7285   */\n      tag_398\n      tag_276\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":7251:7287   */\n    tag_397:\n        /* \"#utility.yul\":7103:7294   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7300:7385   */\n    tag_277:\n        /* \"#utility.yul\":7345:7352   */\n      0x00\n        /* \"#utility.yul\":7374:7379   */\n      dup2\n        /* \"#utility.yul\":7363:7379   */\n      swap1\n      pop\n        /* \"#utility.yul\":7300:7385   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7391:7451   */\n    tag_278:\n        /* \"#utility.yul\":7419:7422   */\n      0x00\n        /* \"#utility.yul\":7440:7445   */\n      dup2\n        /* \"#utility.yul\":7433:7445   */\n      swap1\n      pop\n        /* \"#utility.yul\":7391:7451   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7457:7615   */\n    tag_279:\n        /* \"#utility.yul\":7515:7524   */\n      0x00\n        /* \"#utility.yul\":7548:7609   */\n      tag_402\n        /* \"#utility.yul\":7566:7608   */\n      tag_403\n        /* \"#utility.yul\":7575:7607   */\n      tag_404\n        /* \"#utility.yul\":7601:7606   */\n      dup5\n        /* \"#utility.yul\":7575:7607   */\n      tag_277\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":7566:7608   */\n      tag_278\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":7548:7609   */\n      tag_266\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":7535:7609   */\n      swap1\n      pop\n        /* \"#utility.yul\":7457:7615   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7621:7768   */\n    tag_280:\n        /* \"#utility.yul\":7716:7761   */\n      tag_406\n        /* \"#utility.yul\":7755:7760   */\n      dup2\n        /* \"#utility.yul\":7716:7761   */\n      tag_279\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":7711:7714   */\n      dup3\n        /* \"#utility.yul\":7704:7762   */\n      mstore\n        /* \"#utility.yul\":7621:7768   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7774:7862   */\n    tag_281:\n        /* \"#utility.yul\":7822:7829   */\n      0x00\n        /* \"#utility.yul\":7851:7856   */\n      dup2\n        /* \"#utility.yul\":7840:7856   */\n      swap1\n      pop\n        /* \"#utility.yul\":7774:7862   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7868:8032   */\n    tag_282:\n        /* \"#utility.yul\":7929:7938   */\n      0x00\n        /* \"#utility.yul\":7962:8026   */\n      tag_409\n        /* \"#utility.yul\":7980:8025   */\n      tag_410\n        /* \"#utility.yul\":7989:8024   */\n      tag_411\n        /* \"#utility.yul\":8018:8023   */\n      dup5\n        /* \"#utility.yul\":7989:8024   */\n      tag_281\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":7980:8025   */\n      tag_278\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":7962:8026   */\n      tag_266\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":7949:8026   */\n      swap1\n      pop\n        /* \"#utility.yul\":7868:8032   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8038:8191   */\n    tag_283:\n        /* \"#utility.yul\":8136:8184   */\n      tag_413\n        /* \"#utility.yul\":8178:8183   */\n      dup2\n        /* \"#utility.yul\":8136:8184   */\n      tag_282\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":8131:8134   */\n      dup3\n        /* \"#utility.yul\":8124:8185   */\n      mstore\n        /* \"#utility.yul\":8038:8191   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8197:9248   */\n    tag_84:\n        /* \"#utility.yul\":8513:8517   */\n      0x00\n        /* \"#utility.yul\":8551:8554   */\n      0x0100\n        /* \"#utility.yul\":8540:8549   */\n      dup3\n        /* \"#utility.yul\":8536:8555   */\n      add\n        /* \"#utility.yul\":8528:8555   */\n      swap1\n      pop\n        /* \"#utility.yul\":8565:8636   */\n      tag_415\n        /* \"#utility.yul\":8633:8634   */\n      0x00\n        /* \"#utility.yul\":8622:8631   */\n      dup4\n        /* \"#utility.yul\":8618:8635   */\n      add\n        /* \"#utility.yul\":8609:8615   */\n      dup12\n        /* \"#utility.yul\":8565:8636   */\n      tag_274\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":8646:8718   */\n      tag_416\n        /* \"#utility.yul\":8714:8716   */\n      0x20\n        /* \"#utility.yul\":8703:8712   */\n      dup4\n        /* \"#utility.yul\":8699:8717   */\n      add\n        /* \"#utility.yul\":8690:8696   */\n      dup11\n        /* \"#utility.yul\":8646:8718   */\n      tag_274\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":8728:8800   */\n      tag_417\n        /* \"#utility.yul\":8796:8798   */\n      0x40\n        /* \"#utility.yul\":8785:8794   */\n      dup4\n        /* \"#utility.yul\":8781:8799   */\n      add\n        /* \"#utility.yul\":8772:8778   */\n      dup10\n        /* \"#utility.yul\":8728:8800   */\n      tag_275\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":8810:8890   */\n      tag_418\n        /* \"#utility.yul\":8886:8888   */\n      0x60\n        /* \"#utility.yul\":8875:8884   */\n      dup4\n        /* \"#utility.yul\":8871:8889   */\n      add\n        /* \"#utility.yul\":8862:8868   */\n      dup9\n        /* \"#utility.yul\":8810:8890   */\n      tag_280\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":8900:8984   */\n      tag_419\n        /* \"#utility.yul\":8979:8982   */\n      0x80\n        /* \"#utility.yul\":8968:8977   */\n      dup4\n        /* \"#utility.yul\":8964:8983   */\n      add\n        /* \"#utility.yul\":8955:8961   */\n      dup8\n        /* \"#utility.yul\":8900:8984   */\n      tag_283\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":8994:9075   */\n      tag_420\n        /* \"#utility.yul\":9070:9073   */\n      0xa0\n        /* \"#utility.yul\":9059:9068   */\n      dup4\n        /* \"#utility.yul\":9055:9074   */\n      add\n        /* \"#utility.yul\":9046:9052   */\n      dup7\n        /* \"#utility.yul\":8994:9075   */\n      tag_280\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":9085:9158   */\n      tag_421\n        /* \"#utility.yul\":9153:9156   */\n      0xc0\n        /* \"#utility.yul\":9142:9151   */\n      dup4\n        /* \"#utility.yul\":9138:9157   */\n      add\n        /* \"#utility.yul\":9129:9135   */\n      dup6\n        /* \"#utility.yul\":9085:9158   */\n      tag_274\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":9168:9241   */\n      tag_422\n        /* \"#utility.yul\":9236:9239   */\n      0xe0\n        /* \"#utility.yul\":9225:9234   */\n      dup4\n        /* \"#utility.yul\":9221:9240   */\n      add\n        /* \"#utility.yul\":9212:9218   */\n      dup5\n        /* \"#utility.yul\":9168:9241   */\n      tag_275\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":8197:9248   */\n      swap10\n      swap9\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9254:9397   */\n    tag_284:\n        /* \"#utility.yul\":9311:9316   */\n      0x00\n        /* \"#utility.yul\":9342:9348   */\n      dup2\n        /* \"#utility.yul\":9336:9349   */\n      mload\n        /* \"#utility.yul\":9327:9349   */\n      swap1\n      pop\n        /* \"#utility.yul\":9358:9391   */\n      tag_424\n        /* \"#utility.yul\":9385:9390   */\n      dup2\n        /* \"#utility.yul\":9358:9391   */\n      tag_267\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":9254:9397   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9403:10066   */\n    tag_88:\n        /* \"#utility.yul\":9491:9497   */\n      0x00\n        /* \"#utility.yul\":9499:9505   */\n      dup1\n        /* \"#utility.yul\":9507:9513   */\n      0x00\n        /* \"#utility.yul\":9556:9558   */\n      0x60\n        /* \"#utility.yul\":9544:9553   */\n      dup5\n        /* \"#utility.yul\":9535:9542   */\n      dup7\n        /* \"#utility.yul\":9531:9554   */\n      sub\n        /* \"#utility.yul\":9527:9559   */\n      slt\n        /* \"#utility.yul\":9524:9643   */\n      iszero\n      tag_426\n      jumpi\n        /* \"#utility.yul\":9562:9641   */\n      tag_427\n      tag_254\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":9524:9643   */\n    tag_426:\n        /* \"#utility.yul\":9682:9683   */\n      0x00\n        /* \"#utility.yul\":9707:9771   */\n      tag_428\n        /* \"#utility.yul\":9763:9770   */\n      dup7\n        /* \"#utility.yul\":9754:9760   */\n      dup3\n        /* \"#utility.yul\":9743:9752   */\n      dup8\n        /* \"#utility.yul\":9739:9761   */\n      add\n        /* \"#utility.yul\":9707:9771   */\n      tag_284\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":9697:9771   */\n      swap4\n      pop\n        /* \"#utility.yul\":9653:9781   */\n      pop\n        /* \"#utility.yul\":9820:9822   */\n      0x20\n        /* \"#utility.yul\":9846:9910   */\n      tag_429\n        /* \"#utility.yul\":9902:9909   */\n      dup7\n        /* \"#utility.yul\":9893:9899   */\n      dup3\n        /* \"#utility.yul\":9882:9891   */\n      dup8\n        /* \"#utility.yul\":9878:9900   */\n      add\n        /* \"#utility.yul\":9846:9910   */\n      tag_284\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":9836:9910   */\n      swap3\n      pop\n        /* \"#utility.yul\":9791:9920   */\n      pop\n        /* \"#utility.yul\":9959:9961   */\n      0x40\n        /* \"#utility.yul\":9985:10049   */\n      tag_430\n        /* \"#utility.yul\":10041:10048   */\n      dup7\n        /* \"#utility.yul\":10032:10038   */\n      dup3\n        /* \"#utility.yul\":10021:10030   */\n      dup8\n        /* \"#utility.yul\":10017:10039   */\n      add\n        /* \"#utility.yul\":9985:10049   */\n      tag_284\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":9975:10049   */\n      swap2\n      pop\n        /* \"#utility.yul\":9930:10059   */\n      pop\n        /* \"#utility.yul\":9403:10066   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":10072:10255   */\n    tag_90:\n        /* \"#utility.yul\":10110:10113   */\n      0x00\n        /* \"#utility.yul\":10133:10156   */\n      tag_432\n        /* \"#utility.yul\":10150:10155   */\n      dup3\n        /* \"#utility.yul\":10133:10156   */\n      tag_263\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":10124:10156   */\n      swap2\n      pop\n        /* \"#utility.yul\":10178:10196   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10171:10176   */\n      dup3\n        /* \"#utility.yul\":10168:10197   */\n      sub\n        /* \"#utility.yul\":10165:10220   */\n      tag_433\n      jumpi\n        /* \"#utility.yul\":10200:10218   */\n      tag_434\n      tag_276\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":10165:10220   */\n    tag_433:\n        /* \"#utility.yul\":10247:10248   */\n      0x01\n        /* \"#utility.yul\":10240:10245   */\n      dup3\n        /* \"#utility.yul\":10236:10249   */\n      add\n        /* \"#utility.yul\":10229:10249   */\n      swap1\n      pop\n        /* \"#utility.yul\":10072:10255   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10261:10455   */\n    tag_112:\n        /* \"#utility.yul\":10301:10305   */\n      0x00\n        /* \"#utility.yul\":10321:10341   */\n      tag_436\n        /* \"#utility.yul\":10339:10340   */\n      dup3\n        /* \"#utility.yul\":10321:10341   */\n      tag_266\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":10316:10341   */\n      swap2\n      pop\n        /* \"#utility.yul\":10355:10375   */\n      tag_437\n        /* \"#utility.yul\":10373:10374   */\n      dup4\n        /* \"#utility.yul\":10355:10375   */\n      tag_266\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":10350:10375   */\n      swap3\n      pop\n        /* \"#utility.yul\":10399:10400   */\n      dup3\n        /* \"#utility.yul\":10396:10397   */\n      dup3\n        /* \"#utility.yul\":10392:10401   */\n      sub\n        /* \"#utility.yul\":10384:10401   */\n      swap1\n      pop\n        /* \"#utility.yul\":10423:10424   */\n      dup2\n        /* \"#utility.yul\":10417:10421   */\n      dup2\n        /* \"#utility.yul\":10414:10425   */\n      gt\n        /* \"#utility.yul\":10411:10448   */\n      iszero\n      tag_438\n      jumpi\n        /* \"#utility.yul\":10428:10446   */\n      tag_439\n      tag_276\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":10411:10448   */\n    tag_438:\n        /* \"#utility.yul\":10261:10455   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10461:10576   */\n    tag_285:\n        /* \"#utility.yul\":10546:10569   */\n      tag_441\n        /* \"#utility.yul\":10563:10568   */\n      dup2\n        /* \"#utility.yul\":10546:10569   */\n      tag_271\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":10541:10544   */\n      dup3\n        /* \"#utility.yul\":10534:10570   */\n      mstore\n        /* \"#utility.yul\":10461:10576   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10582:11020   */\n    tag_120:\n        /* \"#utility.yul\":10729:10733   */\n      0x00\n        /* \"#utility.yul\":10767:10769   */\n      0x60\n        /* \"#utility.yul\":10756:10765   */\n      dup3\n        /* \"#utility.yul\":10752:10770   */\n      add\n        /* \"#utility.yul\":10744:10770   */\n      swap1\n      pop\n        /* \"#utility.yul\":10780:10851   */\n      tag_443\n        /* \"#utility.yul\":10848:10849   */\n      0x00\n        /* \"#utility.yul\":10837:10846   */\n      dup4\n        /* \"#utility.yul\":10833:10850   */\n      add\n        /* \"#utility.yul\":10824:10830   */\n      dup7\n        /* \"#utility.yul\":10780:10851   */\n      tag_274\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":10861:10933   */\n      tag_444\n        /* \"#utility.yul\":10929:10931   */\n      0x20\n        /* \"#utility.yul\":10918:10927   */\n      dup4\n        /* \"#utility.yul\":10914:10932   */\n      add\n        /* \"#utility.yul\":10905:10911   */\n      dup6\n        /* \"#utility.yul\":10861:10933   */\n      tag_274\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":10943:11013   */\n      tag_445\n        /* \"#utility.yul\":11009:11011   */\n      0x40\n        /* \"#utility.yul\":10998:11007   */\n      dup4\n        /* \"#utility.yul\":10994:11012   */\n      add\n        /* \"#utility.yul\":10985:10991   */\n      dup5\n        /* \"#utility.yul\":10943:11013   */\n      tag_285\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":10582:11020   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11026:11169   */\n    tag_286:\n        /* \"#utility.yul\":11083:11088   */\n      0x00\n        /* \"#utility.yul\":11114:11120   */\n      dup2\n        /* \"#utility.yul\":11108:11121   */\n      mload\n        /* \"#utility.yul\":11099:11121   */\n      swap1\n      pop\n        /* \"#utility.yul\":11130:11163   */\n      tag_447\n        /* \"#utility.yul\":11157:11162   */\n      dup2\n        /* \"#utility.yul\":11130:11163   */\n      tag_258\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":11026:11169   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11175:11526   */\n    tag_124:\n        /* \"#utility.yul\":11245:11251   */\n      0x00\n        /* \"#utility.yul\":11294:11296   */\n      0x20\n        /* \"#utility.yul\":11282:11291   */\n      dup3\n        /* \"#utility.yul\":11273:11280   */\n      dup5\n        /* \"#utility.yul\":11269:11292   */\n      sub\n        /* \"#utility.yul\":11265:11297   */\n      slt\n        /* \"#utility.yul\":11262:11381   */\n      iszero\n      tag_449\n      jumpi\n        /* \"#utility.yul\":11300:11379   */\n      tag_450\n      tag_254\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":11262:11381   */\n    tag_449:\n        /* \"#utility.yul\":11420:11421   */\n      0x00\n        /* \"#utility.yul\":11445:11509   */\n      tag_451\n        /* \"#utility.yul\":11501:11508   */\n      dup5\n        /* \"#utility.yul\":11492:11498   */\n      dup3\n        /* \"#utility.yul\":11481:11490   */\n      dup6\n        /* \"#utility.yul\":11477:11499   */\n      add\n        /* \"#utility.yul\":11445:11509   */\n      tag_286\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":11435:11509   */\n      swap2\n      pop\n        /* \"#utility.yul\":11391:11519   */\n      pop\n        /* \"#utility.yul\":11175:11526   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11532:11942   */\n    tag_142:\n        /* \"#utility.yul\":11572:11579   */\n      0x00\n        /* \"#utility.yul\":11595:11615   */\n      tag_453\n        /* \"#utility.yul\":11613:11614   */\n      dup3\n        /* \"#utility.yul\":11595:11615   */\n      tag_266\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":11590:11615   */\n      swap2\n      pop\n        /* \"#utility.yul\":11629:11649   */\n      tag_454\n        /* \"#utility.yul\":11647:11648   */\n      dup4\n        /* \"#utility.yul\":11629:11649   */\n      tag_266\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":11624:11649   */\n      swap3\n      pop\n        /* \"#utility.yul\":11684:11685   */\n      dup3\n        /* \"#utility.yul\":11681:11682   */\n      dup3\n        /* \"#utility.yul\":11677:11686   */\n      mul\n        /* \"#utility.yul\":11706:11736   */\n      tag_455\n        /* \"#utility.yul\":11724:11735   */\n      dup2\n        /* \"#utility.yul\":11706:11736   */\n      tag_266\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":11695:11736   */\n      swap2\n      pop\n        /* \"#utility.yul\":11885:11886   */\n      dup3\n        /* \"#utility.yul\":11876:11883   */\n      dup3\n        /* \"#utility.yul\":11872:11887   */\n      div\n        /* \"#utility.yul\":11869:11870   */\n      dup5\n        /* \"#utility.yul\":11866:11888   */\n      eq\n        /* \"#utility.yul\":11846:11847   */\n      dup4\n        /* \"#utility.yul\":11839:11848   */\n      iszero\n        /* \"#utility.yul\":11819:11902   */\n      or\n        /* \"#utility.yul\":11796:11935   */\n      tag_456\n      jumpi\n        /* \"#utility.yul\":11915:11933   */\n      tag_457\n      tag_276\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":11796:11935   */\n    tag_456:\n        /* \"#utility.yul\":11580:11942   */\n      pop\n        /* \"#utility.yul\":11532:11942   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11948:12128   */\n    tag_287:\n        /* \"#utility.yul\":11996:12073   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11993:11994   */\n      0x00\n        /* \"#utility.yul\":11986:12074   */\n      mstore\n        /* \"#utility.yul\":12093:12097   */\n      0x12\n        /* \"#utility.yul\":12090:12091   */\n      0x04\n        /* \"#utility.yul\":12083:12098   */\n      mstore\n        /* \"#utility.yul\":12117:12121   */\n      0x24\n        /* \"#utility.yul\":12114:12115   */\n      0x00\n        /* \"#utility.yul\":12107:12122   */\n      revert\n        /* \"#utility.yul\":12134:12319   */\n    tag_144:\n        /* \"#utility.yul\":12174:12175   */\n      0x00\n        /* \"#utility.yul\":12191:12211   */\n      tag_460\n        /* \"#utility.yul\":12209:12210   */\n      dup3\n        /* \"#utility.yul\":12191:12211   */\n      tag_266\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":12186:12211   */\n      swap2\n      pop\n        /* \"#utility.yul\":12225:12245   */\n      tag_461\n        /* \"#utility.yul\":12243:12244   */\n      dup4\n        /* \"#utility.yul\":12225:12245   */\n      tag_266\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":12220:12245   */\n      swap3\n      pop\n        /* \"#utility.yul\":12264:12265   */\n      dup3\n        /* \"#utility.yul\":12254:12289   */\n      tag_462\n      jumpi\n        /* \"#utility.yul\":12269:12287   */\n      tag_463\n      tag_287\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":12254:12289   */\n    tag_462:\n        /* \"#utility.yul\":12311:12312   */\n      dup3\n        /* \"#utility.yul\":12308:12309   */\n      dup3\n        /* \"#utility.yul\":12304:12313   */\n      div\n        /* \"#utility.yul\":12299:12313   */\n      swap1\n      pop\n        /* \"#utility.yul\":12134:12319   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12325:12767   */\n    tag_180:\n        /* \"#utility.yul\":12474:12478   */\n      0x00\n        /* \"#utility.yul\":12512:12514   */\n      0x60\n        /* \"#utility.yul\":12501:12510   */\n      dup3\n        /* \"#utility.yul\":12497:12515   */\n      add\n        /* \"#utility.yul\":12489:12515   */\n      swap1\n      pop\n        /* \"#utility.yul\":12525:12596   */\n      tag_465\n        /* \"#utility.yul\":12593:12594   */\n      0x00\n        /* \"#utility.yul\":12582:12591   */\n      dup4\n        /* \"#utility.yul\":12578:12595   */\n      add\n        /* \"#utility.yul\":12569:12575   */\n      dup7\n        /* \"#utility.yul\":12525:12596   */\n      tag_274\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":12606:12678   */\n      tag_466\n        /* \"#utility.yul\":12674:12676   */\n      0x20\n        /* \"#utility.yul\":12663:12672   */\n      dup4\n        /* \"#utility.yul\":12659:12677   */\n      add\n        /* \"#utility.yul\":12650:12656   */\n      dup6\n        /* \"#utility.yul\":12606:12678   */\n      tag_274\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":12688:12760   */\n      tag_467\n        /* \"#utility.yul\":12756:12758   */\n      0x40\n        /* \"#utility.yul\":12745:12754   */\n      dup4\n        /* \"#utility.yul\":12741:12759   */\n      add\n        /* \"#utility.yul\":12732:12738   */\n      dup5\n        /* \"#utility.yul\":12688:12760   */\n      tag_275\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":12325:12767   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12773:13105   */\n    tag_185:\n        /* \"#utility.yul\":12894:12898   */\n      0x00\n        /* \"#utility.yul\":12932:12934   */\n      0x40\n        /* \"#utility.yul\":12921:12930   */\n      dup3\n        /* \"#utility.yul\":12917:12935   */\n      add\n        /* \"#utility.yul\":12909:12935   */\n      swap1\n      pop\n        /* \"#utility.yul\":12945:13016   */\n      tag_469\n        /* \"#utility.yul\":13013:13014   */\n      0x00\n        /* \"#utility.yul\":13002:13011   */\n      dup4\n        /* \"#utility.yul\":12998:13015   */\n      add\n        /* \"#utility.yul\":12989:12995   */\n      dup6\n        /* \"#utility.yul\":12945:13016   */\n      tag_274\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":13026:13098   */\n      tag_470\n        /* \"#utility.yul\":13094:13096   */\n      0x20\n        /* \"#utility.yul\":13083:13092   */\n      dup4\n        /* \"#utility.yul\":13079:13097   */\n      add\n        /* \"#utility.yul\":13070:13076   */\n      dup5\n        /* \"#utility.yul\":13026:13098   */\n      tag_274\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":12773:13105   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13111:13462   */\n    tag_189:\n        /* \"#utility.yul\":13181:13187   */\n      0x00\n        /* \"#utility.yul\":13230:13232   */\n      0x20\n        /* \"#utility.yul\":13218:13227   */\n      dup3\n        /* \"#utility.yul\":13209:13216   */\n      dup5\n        /* \"#utility.yul\":13205:13228   */\n      sub\n        /* \"#utility.yul\":13201:13233   */\n      slt\n        /* \"#utility.yul\":13198:13317   */\n      iszero\n      tag_472\n      jumpi\n        /* \"#utility.yul\":13236:13315   */\n      tag_473\n      tag_254\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":13198:13317   */\n    tag_472:\n        /* \"#utility.yul\":13356:13357   */\n      0x00\n        /* \"#utility.yul\":13381:13445   */\n      tag_474\n        /* \"#utility.yul\":13437:13444   */\n      dup5\n        /* \"#utility.yul\":13428:13434   */\n      dup3\n        /* \"#utility.yul\":13417:13426   */\n      dup6\n        /* \"#utility.yul\":13413:13435   */\n      add\n        /* \"#utility.yul\":13381:13445   */\n      tag_284\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":13371:13445   */\n      swap2\n      pop\n        /* \"#utility.yul\":13327:13455   */\n      pop\n        /* \"#utility.yul\":13111:13462   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13468:13637   */\n    tag_288:\n        /* \"#utility.yul\":13552:13563   */\n      0x00\n        /* \"#utility.yul\":13586:13592   */\n      dup3\n        /* \"#utility.yul\":13581:13584   */\n      dup3\n        /* \"#utility.yul\":13574:13593   */\n      mstore\n        /* \"#utility.yul\":13626:13630   */\n      0x20\n        /* \"#utility.yul\":13621:13624   */\n      dup3\n        /* \"#utility.yul\":13617:13631   */\n      add\n        /* \"#utility.yul\":13602:13631   */\n      swap1\n      pop\n        /* \"#utility.yul\":13468:13637   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13643:13884   */\n    tag_289:\n        /* \"#utility.yul\":13783:13817   */\n      0x5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f\n        /* \"#utility.yul\":13779:13780   */\n      0x00\n        /* \"#utility.yul\":13771:13777   */\n      dup3\n        /* \"#utility.yul\":13767:13781   */\n      add\n        /* \"#utility.yul\":13760:13818   */\n      mstore\n        /* \"#utility.yul\":13852:13876   */\n      0x20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000\n        /* \"#utility.yul\":13847:13849   */\n      0x20\n        /* \"#utility.yul\":13839:13845   */\n      dup3\n        /* \"#utility.yul\":13835:13850   */\n      add\n        /* \"#utility.yul\":13828:13877   */\n      mstore\n        /* \"#utility.yul\":13643:13884   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13890:14256   */\n    tag_290:\n        /* \"#utility.yul\":14032:14035   */\n      0x00\n        /* \"#utility.yul\":14053:14120   */\n      tag_478\n        /* \"#utility.yul\":14117:14119   */\n      0x36\n        /* \"#utility.yul\":14112:14115   */\n      dup4\n        /* \"#utility.yul\":14053:14120   */\n      tag_288\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":14046:14120   */\n      swap2\n      pop\n        /* \"#utility.yul\":14129:14222   */\n      tag_479\n        /* \"#utility.yul\":14218:14221   */\n      dup3\n        /* \"#utility.yul\":14129:14222   */\n      tag_289\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":14247:14249   */\n      0x40\n        /* \"#utility.yul\":14242:14245   */\n      dup3\n        /* \"#utility.yul\":14238:14250   */\n      add\n        /* \"#utility.yul\":14231:14250   */\n      swap1\n      pop\n        /* \"#utility.yul\":13890:14256   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14262:14681   */\n    tag_192:\n        /* \"#utility.yul\":14428:14432   */\n      0x00\n        /* \"#utility.yul\":14466:14468   */\n      0x20\n        /* \"#utility.yul\":14455:14464   */\n      dup3\n        /* \"#utility.yul\":14451:14469   */\n      add\n        /* \"#utility.yul\":14443:14469   */\n      swap1\n      pop\n        /* \"#utility.yul\":14515:14524   */\n      dup2\n        /* \"#utility.yul\":14509:14513   */\n      dup2\n        /* \"#utility.yul\":14505:14525   */\n      sub\n        /* \"#utility.yul\":14501:14502   */\n      0x00\n        /* \"#utility.yul\":14490:14499   */\n      dup4\n        /* \"#utility.yul\":14486:14503   */\n      add\n        /* \"#utility.yul\":14479:14526   */\n      mstore\n        /* \"#utility.yul\":14543:14674   */\n      tag_481\n        /* \"#utility.yul\":14669:14673   */\n      dup2\n        /* \"#utility.yul\":14543:14674   */\n      tag_290\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":14535:14674   */\n      swap1\n      pop\n        /* \"#utility.yul\":14262:14681   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14687:15019   */\n    tag_195:\n        /* \"#utility.yul\":14808:14812   */\n      0x00\n        /* \"#utility.yul\":14846:14848   */\n      0x40\n        /* \"#utility.yul\":14835:14844   */\n      dup3\n        /* \"#utility.yul\":14831:14849   */\n      add\n        /* \"#utility.yul\":14823:14849   */\n      swap1\n      pop\n        /* \"#utility.yul\":14859:14930   */\n      tag_483\n        /* \"#utility.yul\":14927:14928   */\n      0x00\n        /* \"#utility.yul\":14916:14925   */\n      dup4\n        /* \"#utility.yul\":14912:14929   */\n      add\n        /* \"#utility.yul\":14903:14909   */\n      dup6\n        /* \"#utility.yul\":14859:14930   */\n      tag_274\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":14940:15012   */\n      tag_484\n        /* \"#utility.yul\":15008:15010   */\n      0x20\n        /* \"#utility.yul\":14997:15006   */\n      dup4\n        /* \"#utility.yul\":14993:15011   */\n      add\n        /* \"#utility.yul\":14984:14990   */\n      dup5\n        /* \"#utility.yul\":14940:15012   */\n      tag_275\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":14687:15019   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15025:15141   */\n    tag_291:\n        /* \"#utility.yul\":15095:15116   */\n      tag_486\n        /* \"#utility.yul\":15110:15115   */\n      dup2\n        /* \"#utility.yul\":15095:15116   */\n      tag_269\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":15088:15093   */\n      dup2\n        /* \"#utility.yul\":15085:15117   */\n      eq\n        /* \"#utility.yul\":15075:15135   */\n      tag_487\n      jumpi\n        /* \"#utility.yul\":15131:15132   */\n      0x00\n        /* \"#utility.yul\":15128:15129   */\n      dup1\n        /* \"#utility.yul\":15121:15133   */\n      revert\n        /* \"#utility.yul\":15075:15135   */\n    tag_487:\n        /* \"#utility.yul\":15025:15141   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15147:15284   */\n    tag_292:\n        /* \"#utility.yul\":15201:15206   */\n      0x00\n        /* \"#utility.yul\":15232:15238   */\n      dup2\n        /* \"#utility.yul\":15226:15239   */\n      mload\n        /* \"#utility.yul\":15217:15239   */\n      swap1\n      pop\n        /* \"#utility.yul\":15248:15278   */\n      tag_489\n        /* \"#utility.yul\":15272:15277   */\n      dup2\n        /* \"#utility.yul\":15248:15278   */\n      tag_291\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":15147:15284   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15290:15635   */\n    tag_218:\n        /* \"#utility.yul\":15357:15363   */\n      0x00\n        /* \"#utility.yul\":15406:15408   */\n      0x20\n        /* \"#utility.yul\":15394:15403   */\n      dup3\n        /* \"#utility.yul\":15385:15392   */\n      dup5\n        /* \"#utility.yul\":15381:15404   */\n      sub\n        /* \"#utility.yul\":15377:15409   */\n      slt\n        /* \"#utility.yul\":15374:15493   */\n      iszero\n      tag_491\n      jumpi\n        /* \"#utility.yul\":15412:15491   */\n      tag_492\n      tag_254\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":15374:15493   */\n    tag_491:\n        /* \"#utility.yul\":15532:15533   */\n      0x00\n        /* \"#utility.yul\":15557:15618   */\n      tag_493\n        /* \"#utility.yul\":15610:15617   */\n      dup5\n        /* \"#utility.yul\":15601:15607   */\n      dup3\n        /* \"#utility.yul\":15590:15599   */\n      dup6\n        /* \"#utility.yul\":15586:15608   */\n      add\n        /* \"#utility.yul\":15557:15618   */\n      tag_292\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":15547:15618   */\n      swap2\n      pop\n        /* \"#utility.yul\":15503:15628   */\n      pop\n        /* \"#utility.yul\":15290:15635   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15641:15870   */\n    tag_293:\n        /* \"#utility.yul\":15781:15815   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":15777:15778   */\n      0x00\n        /* \"#utility.yul\":15769:15775   */\n      dup3\n        /* \"#utility.yul\":15765:15779   */\n      add\n        /* \"#utility.yul\":15758:15816   */\n      mstore\n        /* \"#utility.yul\":15850:15862   */\n      0x6f74207375636365656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15845:15847   */\n      0x20\n        /* \"#utility.yul\":15837:15843   */\n      dup3\n        /* \"#utility.yul\":15833:15848   */\n      add\n        /* \"#utility.yul\":15826:15863   */\n      mstore\n        /* \"#utility.yul\":15641:15870   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15876:16242   */\n    tag_294:\n        /* \"#utility.yul\":16018:16021   */\n      0x00\n        /* \"#utility.yul\":16039:16106   */\n      tag_496\n        /* \"#utility.yul\":16103:16105   */\n      0x2a\n        /* \"#utility.yul\":16098:16101   */\n      dup4\n        /* \"#utility.yul\":16039:16106   */\n      tag_288\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":16032:16106   */\n      swap2\n      pop\n        /* \"#utility.yul\":16115:16208   */\n      tag_497\n        /* \"#utility.yul\":16204:16207   */\n      dup3\n        /* \"#utility.yul\":16115:16208   */\n      tag_293\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":16233:16235   */\n      0x40\n        /* \"#utility.yul\":16228:16231   */\n      dup3\n        /* \"#utility.yul\":16224:16236   */\n      add\n        /* \"#utility.yul\":16217:16236   */\n      swap1\n      pop\n        /* \"#utility.yul\":15876:16242   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16248:16667   */\n    tag_221:\n        /* \"#utility.yul\":16414:16418   */\n      0x00\n        /* \"#utility.yul\":16452:16454   */\n      0x20\n        /* \"#utility.yul\":16441:16450   */\n      dup3\n        /* \"#utility.yul\":16437:16455   */\n      add\n        /* \"#utility.yul\":16429:16455   */\n      swap1\n      pop\n        /* \"#utility.yul\":16501:16510   */\n      dup2\n        /* \"#utility.yul\":16495:16499   */\n      dup2\n        /* \"#utility.yul\":16491:16511   */\n      sub\n        /* \"#utility.yul\":16487:16488   */\n      0x00\n        /* \"#utility.yul\":16476:16485   */\n      dup4\n        /* \"#utility.yul\":16472:16489   */\n      add\n        /* \"#utility.yul\":16465:16512   */\n      mstore\n        /* \"#utility.yul\":16529:16660   */\n      tag_499\n        /* \"#utility.yul\":16655:16659   */\n      dup2\n        /* \"#utility.yul\":16529:16660   */\n      tag_294\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":16521:16660   */\n      swap1\n      pop\n        /* \"#utility.yul\":16248:16667   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16673:16898   */\n    tag_295:\n        /* \"#utility.yul\":16813:16847   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":16809:16810   */\n      0x00\n        /* \"#utility.yul\":16801:16807   */\n      dup3\n        /* \"#utility.yul\":16797:16811   */\n      add\n        /* \"#utility.yul\":16790:16848   */\n      mstore\n        /* \"#utility.yul\":16882:16890   */\n      0x722063616c6c0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16877:16879   */\n      0x20\n        /* \"#utility.yul\":16869:16875   */\n      dup3\n        /* \"#utility.yul\":16865:16880   */\n      add\n        /* \"#utility.yul\":16858:16891   */\n      mstore\n        /* \"#utility.yul\":16673:16898   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16904:17270   */\n    tag_296:\n        /* \"#utility.yul\":17046:17049   */\n      0x00\n        /* \"#utility.yul\":17067:17134   */\n      tag_502\n        /* \"#utility.yul\":17131:17133   */\n      0x26\n        /* \"#utility.yul\":17126:17129   */\n      dup4\n        /* \"#utility.yul\":17067:17134   */\n      tag_288\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":17060:17134   */\n      swap2\n      pop\n        /* \"#utility.yul\":17143:17236   */\n      tag_503\n        /* \"#utility.yul\":17232:17235   */\n      dup3\n        /* \"#utility.yul\":17143:17236   */\n      tag_295\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":17261:17263   */\n      0x40\n        /* \"#utility.yul\":17256:17259   */\n      dup3\n        /* \"#utility.yul\":17252:17264   */\n      add\n        /* \"#utility.yul\":17245:17264   */\n      swap1\n      pop\n        /* \"#utility.yul\":16904:17270   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17276:17695   */\n    tag_228:\n        /* \"#utility.yul\":17442:17446   */\n      0x00\n        /* \"#utility.yul\":17480:17482   */\n      0x20\n        /* \"#utility.yul\":17469:17478   */\n      dup3\n        /* \"#utility.yul\":17465:17483   */\n      add\n        /* \"#utility.yul\":17457:17483   */\n      swap1\n      pop\n        /* \"#utility.yul\":17529:17538   */\n      dup2\n        /* \"#utility.yul\":17523:17527   */\n      dup2\n        /* \"#utility.yul\":17519:17539   */\n      sub\n        /* \"#utility.yul\":17515:17516   */\n      0x00\n        /* \"#utility.yul\":17504:17513   */\n      dup4\n        /* \"#utility.yul\":17500:17517   */\n      add\n        /* \"#utility.yul\":17493:17540   */\n      mstore\n        /* \"#utility.yul\":17557:17688   */\n      tag_505\n        /* \"#utility.yul\":17683:17687   */\n      dup2\n        /* \"#utility.yul\":17557:17688   */\n      tag_296\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":17549:17688   */\n      swap1\n      pop\n        /* \"#utility.yul\":17276:17695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17701:17799   */\n    tag_297:\n        /* \"#utility.yul\":17752:17758   */\n      0x00\n        /* \"#utility.yul\":17786:17791   */\n      dup2\n        /* \"#utility.yul\":17780:17792   */\n      mload\n        /* \"#utility.yul\":17770:17792   */\n      swap1\n      pop\n        /* \"#utility.yul\":17701:17799   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17805:17952   */\n    tag_298:\n        /* \"#utility.yul\":17906:17917   */\n      0x00\n        /* \"#utility.yul\":17943:17946   */\n      dup2\n        /* \"#utility.yul\":17928:17946   */\n      swap1\n      pop\n        /* \"#utility.yul\":17805:17952   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17958:18204   */\n    tag_299:\n        /* \"#utility.yul\":18039:18040   */\n      0x00\n        /* \"#utility.yul\":18049:18162   */\n    tag_509:\n        /* \"#utility.yul\":18063:18069   */\n      dup4\n        /* \"#utility.yul\":18060:18061   */\n      dup2\n        /* \"#utility.yul\":18057:18070   */\n      lt\n        /* \"#utility.yul\":18049:18162   */\n      iszero\n      tag_511\n      jumpi\n        /* \"#utility.yul\":18148:18149   */\n      dup1\n        /* \"#utility.yul\":18143:18146   */\n      dup3\n        /* \"#utility.yul\":18139:18150   */\n      add\n        /* \"#utility.yul\":18133:18151   */\n      mload\n        /* \"#utility.yul\":18129:18130   */\n      dup2\n        /* \"#utility.yul\":18124:18127   */\n      dup5\n        /* \"#utility.yul\":18120:18131   */\n      add\n        /* \"#utility.yul\":18113:18152   */\n      mstore\n        /* \"#utility.yul\":18085:18087   */\n      0x20\n        /* \"#utility.yul\":18082:18083   */\n      dup2\n        /* \"#utility.yul\":18078:18088   */\n      add\n        /* \"#utility.yul\":18073:18088   */\n      swap1\n      pop\n        /* \"#utility.yul\":18049:18162   */\n      jump(tag_509)\n    tag_511:\n        /* \"#utility.yul\":18196:18197   */\n      0x00\n        /* \"#utility.yul\":18187:18193   */\n      dup5\n        /* \"#utility.yul\":18182:18185   */\n      dup5\n        /* \"#utility.yul\":18178:18194   */\n      add\n        /* \"#utility.yul\":18171:18198   */\n      mstore\n        /* \"#utility.yul\":18020:18204   */\n      pop\n        /* \"#utility.yul\":17958:18204   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18210:18596   */\n    tag_300:\n        /* \"#utility.yul\":18314:18317   */\n      0x00\n        /* \"#utility.yul\":18342:18380   */\n      tag_513\n        /* \"#utility.yul\":18374:18379   */\n      dup3\n        /* \"#utility.yul\":18342:18380   */\n      tag_297\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":18396:18484   */\n      tag_514\n        /* \"#utility.yul\":18477:18483   */\n      dup2\n        /* \"#utility.yul\":18472:18475   */\n      dup6\n        /* \"#utility.yul\":18396:18484   */\n      tag_298\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":18389:18484   */\n      swap4\n      pop\n        /* \"#utility.yul\":18493:18558   */\n      tag_515\n        /* \"#utility.yul\":18551:18557   */\n      dup2\n        /* \"#utility.yul\":18546:18549   */\n      dup6\n        /* \"#utility.yul\":18539:18543   */\n      0x20\n        /* \"#utility.yul\":18532:18537   */\n      dup7\n        /* \"#utility.yul\":18528:18544   */\n      add\n        /* \"#utility.yul\":18493:18558   */\n      tag_299\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":18583:18589   */\n      dup1\n        /* \"#utility.yul\":18578:18581   */\n      dup5\n        /* \"#utility.yul\":18574:18590   */\n      add\n        /* \"#utility.yul\":18567:18590   */\n      swap2\n      pop\n        /* \"#utility.yul\":18318:18596   */\n      pop\n        /* \"#utility.yul\":18210:18596   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18602:18873   */\n    tag_230:\n        /* \"#utility.yul\":18732:18735   */\n      0x00\n        /* \"#utility.yul\":18754:18847   */\n      tag_517\n        /* \"#utility.yul\":18843:18846   */\n      dup3\n        /* \"#utility.yul\":18834:18840   */\n      dup5\n        /* \"#utility.yul\":18754:18847   */\n      tag_300\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":18747:18847   */\n      swap2\n      pop\n        /* \"#utility.yul\":18864:18867   */\n      dup2\n        /* \"#utility.yul\":18857:18867   */\n      swap1\n      pop\n        /* \"#utility.yul\":18602:18873   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18879:19058   */\n    tag_301:\n        /* \"#utility.yul\":19019:19050   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":19015:19016   */\n      0x00\n        /* \"#utility.yul\":19007:19013   */\n      dup3\n        /* \"#utility.yul\":19003:19017   */\n      add\n        /* \"#utility.yul\":18996:19051   */\n      mstore\n        /* \"#utility.yul\":18879:19058   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19064:19430   */\n    tag_302:\n        /* \"#utility.yul\":19206:19209   */\n      0x00\n        /* \"#utility.yul\":19227:19294   */\n      tag_520\n        /* \"#utility.yul\":19291:19293   */\n      0x1d\n        /* \"#utility.yul\":19286:19289   */\n      dup4\n        /* \"#utility.yul\":19227:19294   */\n      tag_288\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":19220:19294   */\n      swap2\n      pop\n        /* \"#utility.yul\":19303:19396   */\n      tag_521\n        /* \"#utility.yul\":19392:19395   */\n      dup3\n        /* \"#utility.yul\":19303:19396   */\n      tag_301\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":19421:19423   */\n      0x20\n        /* \"#utility.yul\":19416:19419   */\n      dup3\n        /* \"#utility.yul\":19412:19424   */\n      add\n        /* \"#utility.yul\":19405:19424   */\n      swap1\n      pop\n        /* \"#utility.yul\":19064:19430   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19436:19855   */\n    tag_243:\n        /* \"#utility.yul\":19602:19606   */\n      0x00\n        /* \"#utility.yul\":19640:19642   */\n      0x20\n        /* \"#utility.yul\":19629:19638   */\n      dup3\n        /* \"#utility.yul\":19625:19643   */\n      add\n        /* \"#utility.yul\":19617:19643   */\n      swap1\n      pop\n        /* \"#utility.yul\":19689:19698   */\n      dup2\n        /* \"#utility.yul\":19683:19687   */\n      dup2\n        /* \"#utility.yul\":19679:19699   */\n      sub\n        /* \"#utility.yul\":19675:19676   */\n      0x00\n        /* \"#utility.yul\":19664:19673   */\n      dup4\n        /* \"#utility.yul\":19660:19677   */\n      add\n        /* \"#utility.yul\":19653:19700   */\n      mstore\n        /* \"#utility.yul\":19717:19848   */\n      tag_523\n        /* \"#utility.yul\":19843:19847   */\n      dup2\n        /* \"#utility.yul\":19717:19848   */\n      tag_302\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":19709:19848   */\n      swap1\n      pop\n        /* \"#utility.yul\":19436:19855   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19861:19960   */\n    tag_303:\n        /* \"#utility.yul\":19913:19919   */\n      0x00\n        /* \"#utility.yul\":19947:19952   */\n      dup2\n        /* \"#utility.yul\":19941:19953   */\n      mload\n        /* \"#utility.yul\":19931:19953   */\n      swap1\n      pop\n        /* \"#utility.yul\":19861:19960   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19966:20068   */\n    tag_304:\n        /* \"#utility.yul\":20007:20013   */\n      0x00\n        /* \"#utility.yul\":20058:20060   */\n      0x1f\n        /* \"#utility.yul\":20054:20061   */\n      not\n        /* \"#utility.yul\":20049:20051   */\n      0x1f\n        /* \"#utility.yul\":20042:20047   */\n      dup4\n        /* \"#utility.yul\":20038:20052   */\n      add\n        /* \"#utility.yul\":20034:20062   */\n      and\n        /* \"#utility.yul\":20024:20062   */\n      swap1\n      pop\n        /* \"#utility.yul\":19966:20068   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20074:20451   */\n    tag_305:\n        /* \"#utility.yul\":20162:20165   */\n      0x00\n        /* \"#utility.yul\":20190:20229   */\n      tag_527\n        /* \"#utility.yul\":20223:20228   */\n      dup3\n        /* \"#utility.yul\":20190:20229   */\n      tag_303\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":20245:20316   */\n      tag_528\n        /* \"#utility.yul\":20309:20315   */\n      dup2\n        /* \"#utility.yul\":20304:20307   */\n      dup6\n        /* \"#utility.yul\":20245:20316   */\n      tag_288\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":20238:20316   */\n      swap4\n      pop\n        /* \"#utility.yul\":20325:20390   */\n      tag_529\n        /* \"#utility.yul\":20383:20389   */\n      dup2\n        /* \"#utility.yul\":20378:20381   */\n      dup6\n        /* \"#utility.yul\":20371:20375   */\n      0x20\n        /* \"#utility.yul\":20364:20369   */\n      dup7\n        /* \"#utility.yul\":20360:20376   */\n      add\n        /* \"#utility.yul\":20325:20390   */\n      tag_299\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":20415:20444   */\n      tag_530\n        /* \"#utility.yul\":20437:20443   */\n      dup2\n        /* \"#utility.yul\":20415:20444   */\n      tag_304\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":20410:20413   */\n      dup5\n        /* \"#utility.yul\":20406:20445   */\n      add\n        /* \"#utility.yul\":20399:20445   */\n      swap2\n      pop\n        /* \"#utility.yul\":20166:20451   */\n      pop\n        /* \"#utility.yul\":20074:20451   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20457:20770   */\n    tag_252:\n        /* \"#utility.yul\":20570:20574   */\n      0x00\n        /* \"#utility.yul\":20608:20610   */\n      0x20\n        /* \"#utility.yul\":20597:20606   */\n      dup3\n        /* \"#utility.yul\":20593:20611   */\n      add\n        /* \"#utility.yul\":20585:20611   */\n      swap1\n      pop\n        /* \"#utility.yul\":20657:20666   */\n      dup2\n        /* \"#utility.yul\":20651:20655   */\n      dup2\n        /* \"#utility.yul\":20647:20667   */\n      sub\n        /* \"#utility.yul\":20643:20644   */\n      0x00\n        /* \"#utility.yul\":20632:20641   */\n      dup4\n        /* \"#utility.yul\":20628:20645   */\n      add\n        /* \"#utility.yul\":20621:20668   */\n      mstore\n        /* \"#utility.yul\":20685:20763   */\n      tag_532\n        /* \"#utility.yul\":20758:20762   */\n      dup2\n        /* \"#utility.yul\":20749:20755   */\n      dup5\n        /* \"#utility.yul\":20685:20763   */\n      tag_305\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":20677:20763   */\n      swap1\n      pop\n        /* \"#utility.yul\":20457:20770   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212201c9df1b035e4fabdd704b7c1b9093b589a4419f25669a21492bb2f973d19f01864736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_54": {
									"entryPoint": null,
									"id": 54,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 419,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 478,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256_fromMemory": {
									"entryPoint": 501,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 373,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 341,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 442,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 336,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 393,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 452,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1715:23",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:23",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:23",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:23"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:23"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:23",
														"type": ""
													}
												],
												"src": "7:75:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:23",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:23"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:23",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:23"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:23",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:23",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:23"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:23"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:23",
														"type": ""
													}
												],
												"src": "334:126:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:23",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:23"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:23"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:23"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:23",
														"type": ""
													}
												],
												"src": "466:96:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:23",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:23",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:23",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:23"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:23"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:23"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:23"
															},
															"nodeType": "YulIf",
															"src": "621:63:23"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:23",
														"type": ""
													}
												],
												"src": "568:122:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:23",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:23"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:23"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:23"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:23"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:23",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:23",
														"type": ""
													}
												],
												"src": "696:143:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "890:32:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "900:16:23",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "911:5:23"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "900:7:23"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "872:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "882:7:23",
														"type": ""
													}
												],
												"src": "845:77:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "971:79:23",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1028:16:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:23",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:23",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:23"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:23"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:23"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "984:43:23"
															},
															"nodeType": "YulIf",
															"src": "981:63:23"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "964:5:23",
														"type": ""
													}
												],
												"src": "928:122:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1119:80:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1129:22:23",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:23"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "1138:13:23"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:23"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "1160:33:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:23"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1097:6:23",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1105:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1113:5:23",
														"type": ""
													}
												],
												"src": "1056:143:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1299:413:23",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1345:83:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1347:77:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1347:79:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1347:79:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1320:7:23"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1329:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1316:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1316:23:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1341:2:23",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1312:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "1312:32:23"
															},
															"nodeType": "YulIf",
															"src": "1309:119:23"
														},
														{
															"nodeType": "YulBlock",
															"src": "1438:128:23",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1453:15:23",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1467:1:23",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1457:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1482:74:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1528:9:23"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1539:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1524:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1524:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1548:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1492:31:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1492:64:23"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1482:6:23"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1576:129:23",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1591:16:23",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1605:2:23",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1595:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1621:74:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1667:9:23"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1678:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1663:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1663:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1687:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1631:31:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1631:64:23"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1621:6:23"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1261:9:23",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1272:7:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1284:6:23",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1292:6:23",
														"type": ""
													}
												],
												"src": "1205:507:23"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 23,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052731f98431c8ad98523631ae4a59f267346ea31f984600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073c36442b4a4522e871399cd717abdd847ab11fe88600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550348015620000bb57600080fd5b5060405162003151380380620031518339818101604052810190620000e19190620001f5565b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806000806101000a81548166ffffffffffffff021916908366ffffffffffffff16021790555050506200023c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001828262000155565b9050919050565b620001948162000175565b8114620001a057600080fd5b50565b600081519050620001b48162000189565b92915050565b6000819050919050565b620001cf81620001ba565b8114620001db57600080fd5b50565b600081519050620001ef81620001c4565b92915050565b600080604083850312156200020f576200020e62000150565b5b60006200021f85828601620001a3565b92505060206200023285828601620001de565b9150509250929050565b612f05806200024c6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806398c50fdd1161008c578063c3cf1aa611610066578063c3cf1aa614610220578063d91af4921461023c578063df0905c614610258578063fc993ea814610288576100cf565b806398c50fdd146101a4578063b8d7f980146101d4578063c0102de414610204576100cf565b80630d45431d146100d457806325ac3a73146100f05780632895cb7b1461010c57806359de2f6014610128578063696d62831461015857806377bcd8a614610188575b600080fd5b6100ee60048036038101906100e99190612418565b6102b8565b005b61010a600480360381019061010591906124bf565b61077d565b005b610126600480360381019061012191906124bf565b6109fa565b005b610142600480360381019061013d9190612522565b610f9a565b60405161014f919061257d565b60405180910390f35b610172600480360381019061016d91906125d3565b610fc9565b60405161017f9190612635565b60405180910390f35b6101a2600480360381019061019d91906124bf565b611074565b005b6101be60048036038101906101b99190612650565b61144d565b6040516101cb919061269f565b60405180910390f35b6101ee60048036038101906101e99190612522565b61156a565b6040516101fb919061257d565b60405180910390f35b61021e600480360381019061021991906124bf565b611599565b005b61023a600480360381019061023591906124bf565b611841565b005b610256600480360381019061025191906126ba565b611844565b005b610272600480360381019061026d9190612522565b611ccd565b60405161027f919061257d565b60405180910390f35b6102a2600480360381019061029d9190612522565b611cfc565b6040516102af919061257d565b60405180910390f35b600081836102c69190612729565b6fffffffffffffffffffffffffffffffff16905060006102e986866103e8610fc9565b905068056bc75e2d6310000082101561032e576040517fe008b5f900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000604051806101000160405280600160ff168152602001600060079054906101000a900467ffffffffffffffff1667ffffffffffffffff1681526020014266ffffffffffffff168152602001866fffffffffffffffffffffffffffffffff168152602001856fffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff1681526020013073ffffffffffffffffffffffffffffffffffffffff16815250905080600660008060079054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548160ff021916908360ff16021790555060208201518160000160016101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060408201518160000160096101000a81548166ffffffffffffff021916908366ffffffffffffff16021790555060608201518160000160106101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555060808201518160010160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555060a08201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c08201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060e08201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505061063c3330858a73ffffffffffffffffffffffffffffffffffffffff16611d2b909392919063ffffffff16565b61066782848973ffffffffffffffffffffffffffffffffffffffff16611db49092919063ffffffff16565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e8e3370088888660006103e8600030610e10426106be9190612766565b6040518963ffffffff1660e01b81526004016106e198979695949392919061281a565b6060604051808303816000875af1158015610700573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072491906128ad565b5050506000600781819054906101000a900467ffffffffffffffff168092919061074d90612900565b91906101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505050505050505050565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008367ffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905515610826576040517f4232716900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff1661084682611f03565b73ffffffffffffffffffffffffffffffffffffffff1614610893576040517fd7c498bf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600660008367ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16905061093f333083600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611d2b909392919063ffffffff16565b6001600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008467ffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506003600660008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff021916908360ff1602179055505050565b6000610a0582611f57565b90506000610a1283611f03565b90508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a4c57600080fd5b60001515600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008567ffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514610ac457600080fd5b60001515600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008567ffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514610b3c57600080fd5b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b7457600080fd5b6000600660008567ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000610c5b600660008767ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060010160009054906101000a90046fffffffffffffffffffffffffffffffff16600660008867ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160109054906101000a90046fffffffffffffffffffffffffffffffff1661144d565b90506000610c6882611fab565b9050610c9530828573ffffffffffffffffffffffffffffffffffffffff166120529092919063ffffffff16565b610ccb858284610ca59190612930565b8573ffffffffffffffffffffffffffffffffffffffff166120529092919063ffffffff16565b6001600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008867ffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600660008867ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1660ff1603610f4e5760001515600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008867ffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514610df857600080fd5b6000600660008867ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160109054906101000a90046fffffffffffffffffffffffffffffffff16600660008967ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060010160009054906101000a90046fffffffffffffffffffffffffffffffff16610e929190612729565b6fffffffffffffffffffffffffffffffff169050610ed9610eb288611f57565b828673ffffffffffffffffffffffffffffffffffffffff166120529092919063ffffffff16565b6001600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008967ffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505b6005600660008867ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff021916908360ff160217905550505050505050565b60086020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631698ee828585856040518463ffffffff1660e01b815260040161102a93929190612973565b602060405180830381865afa158015611047573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061106b91906129bf565b90509392505050565b600061107f82611f03565b90508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146110b957600080fd5b600760008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008367ffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661112a57600080fd5b60001515600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008467ffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515146111a257600080fd5b6000600660008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600660008567ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160109054906101000a90046fffffffffffffffffffffffffffffffff16600660008667ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060010160009054906101000a90046fffffffffffffffffffffffffffffffff1661128b9190612729565b6fffffffffffffffffffffffffffffffff1690506000611337600660008767ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060010160009054906101000a90046fffffffffffffffffffffffffffffffff16600660008867ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160109054906101000a90046fffffffffffffffffffffffffffffffff1661144d565b9050600061134483611fab565b905061137130828673ffffffffffffffffffffffffffffffffffffffff166120529092919063ffffffff16565b6113a78582856113819190612930565b8673ffffffffffffffffffffffffffffffffffffffff166120529092919063ffffffff16565b6113d285838673ffffffffffffffffffffffffffffffffffffffff166120529092919063ffffffff16565b6001600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008867ffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505050505050565b600080828461145c9190612729565b6fffffffffffffffffffffffffffffffff16905068056bc75e2d6310000081101580156114915750683635c9adc5dea0000081105b156114b75760646032826114a591906129ec565b6114af9190612a5d565b915050611564565b683635c9adc5dea0000081101580156114d9575069021e19e0c9bab240000081105b156114ff5760646028826114ed91906129ec565b6114f79190612a5d565b915050611564565b69021e19e0c9bab240000081111561153257606460198261152091906129ec565b61152a9190612a5d565b915050611564565b6040517fe008b5f900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b92915050565b600a6020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b60006115a482611f57565b90508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461160b576040517f472e017e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6003600660008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1660ff161461167f576040517fde4461cd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600660008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160109054906101000a90046fffffffffffffffffffffffffffffffff1690506000600660008567ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060010160009054906101000a90046fffffffffffffffffffffffffffffffff169050600061173d82846117269190612729565b6fffffffffffffffffffffffffffffffff16611fab565b905061178c3082600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166120529092919063ffffffff16565b6117f68482856fffffffffffffffffffffffffffffffff166117ae9190612930565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166120529092919063ffffffff16565b6004600660008767ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff021916908360ff1602179055505050505050565b50565b6000600660008467ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020604051806101000160405290816000820160009054906101000a900460ff1660ff1660ff1681526020016000820160019054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016000820160099054906101000a900466ffffffffffffff1666ffffffffffffff1666ffffffffffffff1681526020016000820160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090506001816000015160ff1614611aa357600080fd5b60008160a0015190506000611abb82856103e8610fc9565b90506000611ad18460800151856060015161144d565b9050611b003330838673ffffffffffffffffffffffffffffffffffffffff16611d2b909392919063ffffffff16565b611b2b82828573ffffffffffffffffffffffffffffffffffffffff16611db49092919063ffffffff16565b611b583083838673ffffffffffffffffffffffffffffffffffffffff16611d2b909392919063ffffffff16565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e8e3370084878460006103e8600030610e1042611baf9190612766565b6040518963ffffffff1660e01b8152600401611bd298979695949392919061281a565b6060604051808303816000875af1158015611bf1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c1591906128ad565b50505033600660008867ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002600660008867ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff021916908360ff160217905550505050505050565b60096020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b600b6020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b611dae846323b872dd60e01b858585604051602401611d4c93929190612a8e565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506120d8565b50505050565b6000811480611e3e575060008373ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30856040518363ffffffff1660e01b8152600401611dfb929190612ac5565b602060405180830381865afa158015611e18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e3c9190612aee565b145b611e7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e7490612b9e565b60405180910390fd5b611efe8363095ea7b360e01b8484604051602401611e9c929190612bbe565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506120d8565b505050565b6000600660008367ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000600660008367ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600068056bc75e2d631000008210158015611fce5750683635c9adc5dea0000082105b15611fe757606482611fe09190612a5d565b905061204d565b683635c9adc5dea000008210158015612009575069021e19e0c9bab240000082105b156120225760c88261201b9190612a5d565b905061204d565b69021e19e0c9bab2400000821061204857610190826120419190612a5d565b905061204d565b600090505b919050565b6120d38363a9059cbb60e01b8484604051602401612071929190612bbe565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506120d8565b505050565b600061213a826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166121a09092919063ffffffff16565b905060008151148061215c57508080602001905181019061215b9190612c13565b5b61219b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161219290612cb2565b60405180910390fd5b505050565b60606121af84846000856121b8565b90509392505050565b6060824710156121fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121f490612d44565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516122269190612dd5565b60006040518083038185875af1925050503d8060008114612263576040519150601f19603f3d011682016040523d82523d6000602084013e612268565b606091505b509150915061227987838387612285565b92505050949350505050565b606083156122e75760008351036122df5761229f856122fa565b6122de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122d590612e38565b60405180910390fd5b5b8290506122f2565b6122f1838361231d565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000825111156123305781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016123649190612ead565b60405180910390fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061239d82612372565b9050919050565b6123ad81612392565b81146123b857600080fd5b50565b6000813590506123ca816123a4565b92915050565b60006fffffffffffffffffffffffffffffffff82169050919050565b6123f5816123d0565b811461240057600080fd5b50565b600081359050612412816123ec565b92915050565b600080600080608085870312156124325761243161236d565b5b6000612440878288016123bb565b9450506020612451878288016123bb565b935050604061246287828801612403565b925050606061247387828801612403565b91505092959194509250565b600067ffffffffffffffff82169050919050565b61249c8161247f565b81146124a757600080fd5b50565b6000813590506124b981612493565b92915050565b6000602082840312156124d5576124d461236d565b5b60006124e3848285016124aa565b91505092915050565b6000819050919050565b6124ff816124ec565b811461250a57600080fd5b50565b60008135905061251c816124f6565b92915050565b600080604083850312156125395761253861236d565b5b6000612547858286016123bb565b92505060206125588582860161250d565b9150509250929050565b60008115159050919050565b61257781612562565b82525050565b6000602082019050612592600083018461256e565b92915050565b600062ffffff82169050919050565b6125b081612598565b81146125bb57600080fd5b50565b6000813590506125cd816125a7565b92915050565b6000806000606084860312156125ec576125eb61236d565b5b60006125fa868287016123bb565b935050602061260b868287016123bb565b925050604061261c868287016125be565b9150509250925092565b61262f81612392565b82525050565b600060208201905061264a6000830184612626565b92915050565b600080604083850312156126675761266661236d565b5b600061267585828601612403565b925050602061268685828601612403565b9150509250929050565b612699816124ec565b82525050565b60006020820190506126b46000830184612690565b92915050565b600080604083850312156126d1576126d061236d565b5b60006126df858286016124aa565b92505060206126f0858286016123bb565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612734826123d0565b915061273f836123d0565b925082820261274d816123d0565b915080821461275f5761275e6126fa565b5b5092915050565b6000612771826124ec565b915061277c836124ec565b9250828201905080821115612794576127936126fa565b5b92915050565b6000819050919050565b6000819050919050565b60006127c96127c46127bf8461279a565b6127a4565b6124ec565b9050919050565b6127d9816127ae565b82525050565b6000819050919050565b60006128046127ff6127fa846127df565b6127a4565b6124ec565b9050919050565b612814816127e9565b82525050565b600061010082019050612830600083018b612626565b61283d602083018a612626565b61284a6040830189612690565b61285760608301886127d0565b612864608083018761280b565b61287160a08301866127d0565b61287e60c0830185612626565b61288b60e0830184612690565b9998505050505050505050565b6000815190506128a7816124f6565b92915050565b6000806000606084860312156128c6576128c561236d565b5b60006128d486828701612898565b93505060206128e586828701612898565b92505060406128f686828701612898565b9150509250925092565b600061290b8261247f565b915067ffffffffffffffff8203612925576129246126fa565b5b600182019050919050565b600061293b826124ec565b9150612946836124ec565b925082820390508181111561295e5761295d6126fa565b5b92915050565b61296d81612598565b82525050565b60006060820190506129886000830186612626565b6129956020830185612626565b6129a26040830184612964565b949350505050565b6000815190506129b9816123a4565b92915050565b6000602082840312156129d5576129d461236d565b5b60006129e3848285016129aa565b91505092915050565b60006129f7826124ec565b9150612a02836124ec565b9250828202612a10816124ec565b91508282048414831517612a2757612a266126fa565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612a68826124ec565b9150612a73836124ec565b925082612a8357612a82612a2e565b5b828204905092915050565b6000606082019050612aa36000830186612626565b612ab06020830185612626565b612abd6040830184612690565b949350505050565b6000604082019050612ada6000830185612626565b612ae76020830184612626565b9392505050565b600060208284031215612b0457612b0361236d565b5b6000612b1284828501612898565b91505092915050565b600082825260208201905092915050565b7f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60008201527f20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000602082015250565b6000612b88603683612b1b565b9150612b9382612b2c565b604082019050919050565b60006020820190508181036000830152612bb781612b7b565b9050919050565b6000604082019050612bd36000830185612626565b612be06020830184612690565b9392505050565b612bf081612562565b8114612bfb57600080fd5b50565b600081519050612c0d81612be7565b92915050565b600060208284031215612c2957612c2861236d565b5b6000612c3784828501612bfe565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000612c9c602a83612b1b565b9150612ca782612c40565b604082019050919050565b60006020820190508181036000830152612ccb81612c8f565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000612d2e602683612b1b565b9150612d3982612cd2565b604082019050919050565b60006020820190508181036000830152612d5d81612d21565b9050919050565b600081519050919050565b600081905092915050565b60005b83811015612d98578082015181840152602081019050612d7d565b60008484015250505050565b6000612daf82612d64565b612db98185612d6f565b9350612dc9818560208601612d7a565b80840191505092915050565b6000612de18284612da4565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000612e22601d83612b1b565b9150612e2d82612dec565b602082019050919050565b60006020820190508181036000830152612e5181612e15565b9050919050565b600081519050919050565b6000601f19601f8301169050919050565b6000612e7f82612e58565b612e898185612b1b565b9350612e99818560208601612d7a565b612ea281612e63565b840191505092915050565b60006020820190508181036000830152612ec78184612e74565b90509291505056fea26469706673582212201c9df1b035e4fabdd704b7c1b9093b589a4419f25669a21492bb2f973d19f01864736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0x1F98431C8AD98523631AE4A59F267346EA31F984 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0xC36442B4A4522E871399CD717ABDD847AB11FE88 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH3 0xBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x3151 CODESIZE SUB DUP1 PUSH3 0x3151 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0xE1 SWAP2 SWAP1 PUSH3 0x1F5 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH7 0xFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH7 0xFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH3 0x23C JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x182 DUP3 PUSH3 0x155 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x194 DUP2 PUSH3 0x175 JUMP JUMPDEST DUP2 EQ PUSH3 0x1A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1B4 DUP2 PUSH3 0x189 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1CF DUP2 PUSH3 0x1BA JUMP JUMPDEST DUP2 EQ PUSH3 0x1DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1EF DUP2 PUSH3 0x1C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x20F JUMPI PUSH3 0x20E PUSH3 0x150 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x21F DUP6 DUP3 DUP7 ADD PUSH3 0x1A3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x232 DUP6 DUP3 DUP7 ADD PUSH3 0x1DE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2F05 DUP1 PUSH3 0x24C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x98C50FDD GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xC3CF1AA6 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xC3CF1AA6 EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0xD91AF492 EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0xDF0905C6 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0xFC993EA8 EQ PUSH2 0x288 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x98C50FDD EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0xB8D7F980 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0xC0102DE4 EQ PUSH2 0x204 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0xD45431D EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x25AC3A73 EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0x2895CB7B EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x59DE2F60 EQ PUSH2 0x128 JUMPI DUP1 PUSH4 0x696D6283 EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x77BCD8A6 EQ PUSH2 0x188 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x2418 JUMP JUMPDEST PUSH2 0x2B8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x105 SWAP2 SWAP1 PUSH2 0x24BF JUMP JUMPDEST PUSH2 0x77D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x126 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x24BF JUMP JUMPDEST PUSH2 0x9FA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x142 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13D SWAP2 SWAP1 PUSH2 0x2522 JUMP JUMPDEST PUSH2 0xF9A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14F SWAP2 SWAP1 PUSH2 0x257D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x172 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16D SWAP2 SWAP1 PUSH2 0x25D3 JUMP JUMPDEST PUSH2 0xFC9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17F SWAP2 SWAP1 PUSH2 0x2635 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19D SWAP2 SWAP1 PUSH2 0x24BF JUMP JUMPDEST PUSH2 0x1074 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B9 SWAP2 SWAP1 PUSH2 0x2650 JUMP JUMPDEST PUSH2 0x144D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CB SWAP2 SWAP1 PUSH2 0x269F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x2522 JUMP JUMPDEST PUSH2 0x156A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0x257D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x219 SWAP2 SWAP1 PUSH2 0x24BF JUMP JUMPDEST PUSH2 0x1599 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x235 SWAP2 SWAP1 PUSH2 0x24BF JUMP JUMPDEST PUSH2 0x1841 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x256 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x251 SWAP2 SWAP1 PUSH2 0x26BA JUMP JUMPDEST PUSH2 0x1844 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x272 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26D SWAP2 SWAP1 PUSH2 0x2522 JUMP JUMPDEST PUSH2 0x1CCD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x257D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29D SWAP2 SWAP1 PUSH2 0x2522 JUMP JUMPDEST PUSH2 0x1CFC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AF SWAP2 SWAP1 PUSH2 0x257D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2C6 SWAP2 SWAP1 PUSH2 0x2729 JUMP JUMPDEST PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH2 0x2E9 DUP7 DUP7 PUSH2 0x3E8 PUSH2 0xFC9 JUMP JUMPDEST SWAP1 POP PUSH9 0x56BC75E2D63100000 DUP3 LT ISZERO PUSH2 0x32E JUMPI PUSH1 0x40 MLOAD PUSH32 0xE008B5F900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x7 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP PUSH7 0xFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP DUP1 PUSH1 0x6 PUSH1 0x0 DUP1 PUSH1 0x7 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x9 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH7 0xFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH7 0xFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH2 0x63C CALLER ADDRESS DUP6 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D2B SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x667 DUP3 DUP5 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1DB4 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE8E33700 DUP9 DUP9 DUP7 PUSH1 0x0 PUSH2 0x3E8 PUSH1 0x0 ADDRESS PUSH2 0xE10 TIMESTAMP PUSH2 0x6BE SWAP2 SWAP1 PUSH2 0x2766 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP10 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E1 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x281A JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x700 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x724 SWAP2 SWAP1 PUSH2 0x28AD JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH1 0x7 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x74D SWAP1 PUSH2 0x2900 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE ISZERO PUSH2 0x826 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4232716900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x846 DUP3 PUSH2 0x1F03 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x893 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7C498BF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH2 0x93F CALLER ADDRESS DUP4 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D2B SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA05 DUP3 PUSH2 0x1F57 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xA12 DUP4 PUSH2 0x1F03 JUMP JUMPDEST SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xAC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xB3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH2 0xC5B PUSH1 0x6 PUSH1 0x0 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x0 DUP9 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x144D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC68 DUP3 PUSH2 0x1FAB JUMP JUMPDEST SWAP1 POP PUSH2 0xC95 ADDRESS DUP3 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2052 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xCCB DUP6 DUP3 DUP5 PUSH2 0xCA5 SWAP2 SWAP1 PUSH2 0x2930 JUMP JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2052 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 DUP9 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND SUB PUSH2 0xF4E JUMPI PUSH1 0x0 ISZERO ISZERO PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xDF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP9 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x0 DUP10 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE92 SWAP2 SWAP1 PUSH2 0x2729 JUMP JUMPDEST PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH2 0xED9 PUSH2 0xEB2 DUP9 PUSH2 0x1F57 JUMP JUMPDEST DUP3 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2052 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x5 PUSH1 0x6 PUSH1 0x0 DUP9 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1698EE82 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x102A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2973 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1047 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x106B SWAP2 SWAP1 PUSH2 0x29BF JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x107F DUP3 PUSH2 0x1F03 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x112A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x11A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x0 DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x128B SWAP2 SWAP1 PUSH2 0x2729 JUMP JUMPDEST PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH2 0x1337 PUSH1 0x6 PUSH1 0x0 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x0 DUP9 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x144D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1344 DUP4 PUSH2 0x1FAB JUMP JUMPDEST SWAP1 POP PUSH2 0x1371 ADDRESS DUP3 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2052 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x13A7 DUP6 DUP3 DUP6 PUSH2 0x1381 SWAP2 SWAP1 PUSH2 0x2930 JUMP JUMPDEST DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2052 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x13D2 DUP6 DUP4 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2052 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 PUSH2 0x145C SWAP2 SWAP1 PUSH2 0x2729 JUMP JUMPDEST PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH9 0x56BC75E2D63100000 DUP2 LT ISZERO DUP1 ISZERO PUSH2 0x1491 JUMPI POP PUSH9 0x3635C9ADC5DEA00000 DUP2 LT JUMPDEST ISZERO PUSH2 0x14B7 JUMPI PUSH1 0x64 PUSH1 0x32 DUP3 PUSH2 0x14A5 SWAP2 SWAP1 PUSH2 0x29EC JUMP JUMPDEST PUSH2 0x14AF SWAP2 SWAP1 PUSH2 0x2A5D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1564 JUMP JUMPDEST PUSH9 0x3635C9ADC5DEA00000 DUP2 LT ISZERO DUP1 ISZERO PUSH2 0x14D9 JUMPI POP PUSH10 0x21E19E0C9BAB2400000 DUP2 LT JUMPDEST ISZERO PUSH2 0x14FF JUMPI PUSH1 0x64 PUSH1 0x28 DUP3 PUSH2 0x14ED SWAP2 SWAP1 PUSH2 0x29EC JUMP JUMPDEST PUSH2 0x14F7 SWAP2 SWAP1 PUSH2 0x2A5D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1564 JUMP JUMPDEST PUSH10 0x21E19E0C9BAB2400000 DUP2 GT ISZERO PUSH2 0x1532 JUMPI PUSH1 0x64 PUSH1 0x19 DUP3 PUSH2 0x1520 SWAP2 SWAP1 PUSH2 0x29EC JUMP JUMPDEST PUSH2 0x152A SWAP2 SWAP1 PUSH2 0x2A5D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1564 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xE008B5F900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15A4 DUP3 PUSH2 0x1F57 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x160B JUMPI PUSH1 0x40 MLOAD PUSH32 0x472E017E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ PUSH2 0x167F JUMPI PUSH1 0x40 MLOAD PUSH32 0xDE4461CD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH2 0x173D DUP3 DUP5 PUSH2 0x1726 SWAP2 SWAP1 PUSH2 0x2729 JUMP JUMPDEST PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1FAB JUMP JUMPDEST SWAP1 POP PUSH2 0x178C ADDRESS DUP3 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2052 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x17F6 DUP5 DUP3 DUP6 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17AE SWAP2 SWAP1 PUSH2 0x2930 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2052 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 PUSH1 0x6 PUSH1 0x0 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x9 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH7 0xFFFFFFFFFFFFFF AND PUSH7 0xFFFFFFFFFFFFFF AND PUSH7 0xFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x0 ADD MLOAD PUSH1 0xFF AND EQ PUSH2 0x1AA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xA0 ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x1ABB DUP3 DUP6 PUSH2 0x3E8 PUSH2 0xFC9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1AD1 DUP5 PUSH1 0x80 ADD MLOAD DUP6 PUSH1 0x60 ADD MLOAD PUSH2 0x144D JUMP JUMPDEST SWAP1 POP PUSH2 0x1B00 CALLER ADDRESS DUP4 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D2B SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1B2B DUP3 DUP3 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1DB4 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1B58 ADDRESS DUP4 DUP4 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D2B SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE8E33700 DUP5 DUP8 DUP5 PUSH1 0x0 PUSH2 0x3E8 PUSH1 0x0 ADDRESS PUSH2 0xE10 TIMESTAMP PUSH2 0x1BAF SWAP2 SWAP1 PUSH2 0x2766 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP10 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BD2 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x281A JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1BF1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C15 SWAP2 SWAP1 PUSH2 0x28AD JUMP JUMPDEST POP POP POP CALLER PUSH1 0x6 PUSH1 0x0 DUP9 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x6 PUSH1 0x0 DUP9 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x1DAE DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1D4C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A8E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x20D8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 EQ DUP1 PUSH2 0x1E3E JUMPI POP PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E ADDRESS DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DFB SWAP3 SWAP2 SWAP1 PUSH2 0x2AC5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E18 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E3C SWAP2 SWAP1 PUSH2 0x2AEE JUMP JUMPDEST EQ JUMPDEST PUSH2 0x1E7D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E74 SWAP1 PUSH2 0x2B9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1EFE DUP4 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1E9C SWAP3 SWAP2 SWAP1 PUSH2 0x2BBE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x20D8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH9 0x56BC75E2D63100000 DUP3 LT ISZERO DUP1 ISZERO PUSH2 0x1FCE JUMPI POP PUSH9 0x3635C9ADC5DEA00000 DUP3 LT JUMPDEST ISZERO PUSH2 0x1FE7 JUMPI PUSH1 0x64 DUP3 PUSH2 0x1FE0 SWAP2 SWAP1 PUSH2 0x2A5D JUMP JUMPDEST SWAP1 POP PUSH2 0x204D JUMP JUMPDEST PUSH9 0x3635C9ADC5DEA00000 DUP3 LT ISZERO DUP1 ISZERO PUSH2 0x2009 JUMPI POP PUSH10 0x21E19E0C9BAB2400000 DUP3 LT JUMPDEST ISZERO PUSH2 0x2022 JUMPI PUSH1 0xC8 DUP3 PUSH2 0x201B SWAP2 SWAP1 PUSH2 0x2A5D JUMP JUMPDEST SWAP1 POP PUSH2 0x204D JUMP JUMPDEST PUSH10 0x21E19E0C9BAB2400000 DUP3 LT PUSH2 0x2048 JUMPI PUSH2 0x190 DUP3 PUSH2 0x2041 SWAP2 SWAP1 PUSH2 0x2A5D JUMP JUMPDEST SWAP1 POP PUSH2 0x204D JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20D3 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2071 SWAP3 SWAP2 SWAP1 PUSH2 0x2BBE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x20D8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x213A DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x21A0 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ DUP1 PUSH2 0x215C JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x215B SWAP2 SWAP1 PUSH2 0x2C13 JUMP JUMPDEST JUMPDEST PUSH2 0x219B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2192 SWAP1 PUSH2 0x2CB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x21AF DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x21B8 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x21FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21F4 SWAP1 PUSH2 0x2D44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x2226 SWAP2 SWAP1 PUSH2 0x2DD5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2263 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2268 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2279 DUP8 DUP4 DUP4 DUP8 PUSH2 0x2285 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x22E7 JUMPI PUSH1 0x0 DUP4 MLOAD SUB PUSH2 0x22DF JUMPI PUSH2 0x229F DUP6 PUSH2 0x22FA JUMP JUMPDEST PUSH2 0x22DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22D5 SWAP1 PUSH2 0x2E38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x22F2 JUMP JUMPDEST PUSH2 0x22F1 DUP4 DUP4 PUSH2 0x231D JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x2330 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2364 SWAP2 SWAP1 PUSH2 0x2EAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x239D DUP3 PUSH2 0x2372 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23AD DUP2 PUSH2 0x2392 JUMP JUMPDEST DUP2 EQ PUSH2 0x23B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x23CA DUP2 PUSH2 0x23A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23F5 DUP2 PUSH2 0x23D0 JUMP JUMPDEST DUP2 EQ PUSH2 0x2400 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2412 DUP2 PUSH2 0x23EC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2432 JUMPI PUSH2 0x2431 PUSH2 0x236D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2440 DUP8 DUP3 DUP9 ADD PUSH2 0x23BB JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2451 DUP8 DUP3 DUP9 ADD PUSH2 0x23BB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2462 DUP8 DUP3 DUP9 ADD PUSH2 0x2403 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x2473 DUP8 DUP3 DUP9 ADD PUSH2 0x2403 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x249C DUP2 PUSH2 0x247F JUMP JUMPDEST DUP2 EQ PUSH2 0x24A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x24B9 DUP2 PUSH2 0x2493 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24D5 JUMPI PUSH2 0x24D4 PUSH2 0x236D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x24E3 DUP5 DUP3 DUP6 ADD PUSH2 0x24AA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24FF DUP2 PUSH2 0x24EC JUMP JUMPDEST DUP2 EQ PUSH2 0x250A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x251C DUP2 PUSH2 0x24F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2539 JUMPI PUSH2 0x2538 PUSH2 0x236D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2547 DUP6 DUP3 DUP7 ADD PUSH2 0x23BB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2558 DUP6 DUP3 DUP7 ADD PUSH2 0x250D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2577 DUP2 PUSH2 0x2562 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2592 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x256E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x25B0 DUP2 PUSH2 0x2598 JUMP JUMPDEST DUP2 EQ PUSH2 0x25BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x25CD DUP2 PUSH2 0x25A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x25EC JUMPI PUSH2 0x25EB PUSH2 0x236D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x25FA DUP7 DUP3 DUP8 ADD PUSH2 0x23BB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x260B DUP7 DUP3 DUP8 ADD PUSH2 0x23BB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x261C DUP7 DUP3 DUP8 ADD PUSH2 0x25BE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x262F DUP2 PUSH2 0x2392 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x264A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2626 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2667 JUMPI PUSH2 0x2666 PUSH2 0x236D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2675 DUP6 DUP3 DUP7 ADD PUSH2 0x2403 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2686 DUP6 DUP3 DUP7 ADD PUSH2 0x2403 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2699 DUP2 PUSH2 0x24EC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x26B4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2690 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x26D1 JUMPI PUSH2 0x26D0 PUSH2 0x236D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x26DF DUP6 DUP3 DUP7 ADD PUSH2 0x24AA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x26F0 DUP6 DUP3 DUP7 ADD PUSH2 0x23BB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2734 DUP3 PUSH2 0x23D0 JUMP JUMPDEST SWAP2 POP PUSH2 0x273F DUP4 PUSH2 0x23D0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x274D DUP2 PUSH2 0x23D0 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 EQ PUSH2 0x275F JUMPI PUSH2 0x275E PUSH2 0x26FA JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2771 DUP3 PUSH2 0x24EC JUMP JUMPDEST SWAP2 POP PUSH2 0x277C DUP4 PUSH2 0x24EC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2794 JUMPI PUSH2 0x2793 PUSH2 0x26FA JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27C9 PUSH2 0x27C4 PUSH2 0x27BF DUP5 PUSH2 0x279A JUMP JUMPDEST PUSH2 0x27A4 JUMP JUMPDEST PUSH2 0x24EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x27D9 DUP2 PUSH2 0x27AE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2804 PUSH2 0x27FF PUSH2 0x27FA DUP5 PUSH2 0x27DF JUMP JUMPDEST PUSH2 0x27A4 JUMP JUMPDEST PUSH2 0x24EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2814 DUP2 PUSH2 0x27E9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x2830 PUSH1 0x0 DUP4 ADD DUP12 PUSH2 0x2626 JUMP JUMPDEST PUSH2 0x283D PUSH1 0x20 DUP4 ADD DUP11 PUSH2 0x2626 JUMP JUMPDEST PUSH2 0x284A PUSH1 0x40 DUP4 ADD DUP10 PUSH2 0x2690 JUMP JUMPDEST PUSH2 0x2857 PUSH1 0x60 DUP4 ADD DUP9 PUSH2 0x27D0 JUMP JUMPDEST PUSH2 0x2864 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x280B JUMP JUMPDEST PUSH2 0x2871 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x27D0 JUMP JUMPDEST PUSH2 0x287E PUSH1 0xC0 DUP4 ADD DUP6 PUSH2 0x2626 JUMP JUMPDEST PUSH2 0x288B PUSH1 0xE0 DUP4 ADD DUP5 PUSH2 0x2690 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x28A7 DUP2 PUSH2 0x24F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x28C6 JUMPI PUSH2 0x28C5 PUSH2 0x236D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x28D4 DUP7 DUP3 DUP8 ADD PUSH2 0x2898 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x28E5 DUP7 DUP3 DUP8 ADD PUSH2 0x2898 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x28F6 DUP7 DUP3 DUP8 ADD PUSH2 0x2898 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x290B DUP3 PUSH2 0x247F JUMP JUMPDEST SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2925 JUMPI PUSH2 0x2924 PUSH2 0x26FA JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x293B DUP3 PUSH2 0x24EC JUMP JUMPDEST SWAP2 POP PUSH2 0x2946 DUP4 PUSH2 0x24EC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x295E JUMPI PUSH2 0x295D PUSH2 0x26FA JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x296D DUP2 PUSH2 0x2598 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2988 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2626 JUMP JUMPDEST PUSH2 0x2995 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2626 JUMP JUMPDEST PUSH2 0x29A2 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2964 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x29B9 DUP2 PUSH2 0x23A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x29D5 JUMPI PUSH2 0x29D4 PUSH2 0x236D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x29E3 DUP5 DUP3 DUP6 ADD PUSH2 0x29AA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29F7 DUP3 PUSH2 0x24EC JUMP JUMPDEST SWAP2 POP PUSH2 0x2A02 DUP4 PUSH2 0x24EC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2A10 DUP2 PUSH2 0x24EC JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2A27 JUMPI PUSH2 0x2A26 PUSH2 0x26FA JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2A68 DUP3 PUSH2 0x24EC JUMP JUMPDEST SWAP2 POP PUSH2 0x2A73 DUP4 PUSH2 0x24EC JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2A83 JUMPI PUSH2 0x2A82 PUSH2 0x2A2E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2AA3 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2626 JUMP JUMPDEST PUSH2 0x2AB0 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2626 JUMP JUMPDEST PUSH2 0x2ABD PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2690 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2ADA PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2626 JUMP JUMPDEST PUSH2 0x2AE7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2626 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B04 JUMPI PUSH2 0x2B03 PUSH2 0x236D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2B12 DUP5 DUP3 DUP6 ADD PUSH2 0x2898 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A20617070726F76652066726F6D206E6F6E2D7A65726F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20746F206E6F6E2D7A65726F20616C6C6F77616E636500000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B88 PUSH1 0x36 DUP4 PUSH2 0x2B1B JUMP JUMPDEST SWAP2 POP PUSH2 0x2B93 DUP3 PUSH2 0x2B2C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2BB7 DUP2 PUSH2 0x2B7B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2BD3 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2626 JUMP JUMPDEST PUSH2 0x2BE0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2690 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2BF0 DUP2 PUSH2 0x2562 JUMP JUMPDEST DUP2 EQ PUSH2 0x2BFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2C0D DUP2 PUSH2 0x2BE7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C29 JUMPI PUSH2 0x2C28 PUSH2 0x236D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2C37 DUP5 DUP3 DUP6 ADD PUSH2 0x2BFE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C9C PUSH1 0x2A DUP4 PUSH2 0x2B1B JUMP JUMPDEST SWAP2 POP PUSH2 0x2CA7 DUP3 PUSH2 0x2C40 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2CCB DUP2 PUSH2 0x2C8F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D2E PUSH1 0x26 DUP4 PUSH2 0x2B1B JUMP JUMPDEST SWAP2 POP PUSH2 0x2D39 DUP3 PUSH2 0x2CD2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D5D DUP2 PUSH2 0x2D21 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2D98 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2D7D JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DAF DUP3 PUSH2 0x2D64 JUMP JUMPDEST PUSH2 0x2DB9 DUP2 DUP6 PUSH2 0x2D6F JUMP JUMPDEST SWAP4 POP PUSH2 0x2DC9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2D7A JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DE1 DUP3 DUP5 PUSH2 0x2DA4 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E22 PUSH1 0x1D DUP4 PUSH2 0x2B1B JUMP JUMPDEST SWAP2 POP PUSH2 0x2E2D DUP3 PUSH2 0x2DEC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E51 DUP2 PUSH2 0x2E15 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E7F DUP3 PUSH2 0x2E58 JUMP JUMPDEST PUSH2 0x2E89 DUP2 DUP6 PUSH2 0x2B1B JUMP JUMPDEST SWAP4 POP PUSH2 0x2E99 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2D7A JUMP JUMPDEST PUSH2 0x2EA2 DUP2 PUSH2 0x2E63 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2EC7 DUP2 DUP5 PUSH2 0x2E74 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR SWAP14 CALL 0xB0 CALLDATALOAD 0xE4 STATICCALL 0xBD 0xD7 DIV 0xB7 0xC1 0xB9 MULMOD EXTCODESIZE PC SWAP11 PREVRANDAO NOT CALLCODE JUMP PUSH10 0xA21492BB2F973D19F018 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "536:9479:0:-:0;;;835:42;806:71;;;;;;;;;;;;;;;;;;;;927:42;884:85;;;;;;;;;;;;;;;;;;;;978:143;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1055:13;1042:12;;:26;;;;;;;;;;;;;;;;;;1099:13;1079:12;;:34;;;;;;;;;;;;;;;;;;978:143;;536:9479;;88:117:23;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:507::-;1284:6;1292;1341:2;1329:9;1320:7;1316:23;1312:32;1309:119;;;1347:79;;:::i;:::-;1309:119;1467:1;1492:64;1548:7;1539:6;1528:9;1524:22;1492:64;:::i;:::-;1482:74;;1438:128;1605:2;1631:64;1687:7;1678:6;1667:9;1663:22;1631:64;:::i;:::-;1621:74;;1576:129;1205:507;;;;;:::o;536:9479:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@Sale_307": {
									"entryPoint": 6212,
									"id": 307,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_callOptionalReturn_2809": {
									"entryPoint": 8408,
									"id": 2809,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_revert_2378": {
									"entryPoint": 8989,
									"id": 2378,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@buy_195": {
									"entryPoint": 696,
									"id": 195,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@buyerWithdrawAirdorp_456": {
									"entryPoint": 5529,
									"id": 456,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@buyerWithdrawRefund_738": {
									"entryPoint": 2554,
									"id": 738,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@fee_2906": {
									"entryPoint": 8107,
									"id": 2906,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@functionCallWithValue_2203": {
									"entryPoint": 8632,
									"id": 2203,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_2139": {
									"entryPoint": 8608,
									"id": 2139,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getBuyer_782": {
									"entryPoint": 8023,
									"id": 782,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getPenal_859": {
									"entryPoint": 5197,
									"id": 859,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getPoolAddress_769": {
									"entryPoint": 4041,
									"id": 769,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getSolder_795": {
									"entryPoint": 7939,
									"id": 795,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@injectFutureToken_373": {
									"entryPoint": 1917,
									"id": 373,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isContract_2067": {
									"entryPoint": 8954,
									"id": 2067,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@profileEarn_744": {
									"entryPoint": 6209,
									"id": 744,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@safeApprove_2586": {
									"entryPoint": 7604,
									"id": 2586,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_2542": {
									"entryPoint": 7467,
									"id": 2542,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_2515": {
									"entryPoint": 8274,
									"id": 2515,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@solderWithdrawStable_571": {
									"entryPoint": 4212,
									"id": 571,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@userIfWithdraw1_71": {
									"entryPoint": 3994,
									"id": 71,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@userIfWithdraw2_77": {
									"entryPoint": 7373,
									"id": 77,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@userIfWithdraw3_83": {
									"entryPoint": 5482,
									"id": 83,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@userIfWithdraw4_89": {
									"entryPoint": 7420,
									"id": 89,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_2334": {
									"entryPoint": 8837,
									"id": 2334,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 9147,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 10666,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 11262,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint128": {
									"entryPoint": 9219,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint24": {
									"entryPoint": 9662,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 9485,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 10392,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint64": {
									"entryPoint": 9386,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 10687,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint128t_uint128": {
									"entryPoint": 9240,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_addresst_uint24": {
									"entryPoint": 9683,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 9506,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 11283,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint128t_uint128": {
									"entryPoint": 9808,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 10990,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory": {
									"entryPoint": 10413,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint64": {
									"entryPoint": 9407,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint64t_address": {
									"entryPoint": 9914,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 9766,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 9582,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 11684,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack": {
									"entryPoint": 10192,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_1000_by_1_to_t_uint256_fromStack": {
									"entryPoint": 10251,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11892,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11553,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11797,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11407,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11131,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint24_to_t_uint24_fromStack": {
									"entryPoint": 10596,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 9872,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 11733,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 9781,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 10949,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint24__to_t_address_t_address_t_uint24__fromStack_reversed": {
									"entryPoint": 10611,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 10894,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_rational_0_by_1_t_rational_1000_by_1_t_rational_0_by_1_t_address_t_uint256__to_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 10266,
									"id": null,
									"parameterSlots": 9,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 11198,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 9597,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11949,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11588,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11832,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11442,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11166,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 9887,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 11620,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 11864,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 11631,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 11035,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 10086,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 10845,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint128": {
									"entryPoint": 10025,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 10732,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 10544,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 9106,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 9570,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_0_by_1": {
									"entryPoint": 10138,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_1000_by_1": {
									"entryPoint": 10207,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint128": {
									"entryPoint": 9168,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 9074,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint24": {
									"entryPoint": 9624,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 9452,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 9343,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_0_by_1_to_t_uint256": {
									"entryPoint": 10158,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_1000_by_1_to_t_uint256": {
									"entryPoint": 10217,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 11642,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 10148,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint64": {
									"entryPoint": 10496,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 9978,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 10798,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 9069,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 11875,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c": {
									"entryPoint": 11474,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad": {
									"entryPoint": 11756,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd": {
									"entryPoint": 11328,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25": {
									"entryPoint": 11052,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 9124,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 11239,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint128": {
									"entryPoint": 9196,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint24": {
									"entryPoint": 9639,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 9462,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint64": {
									"entryPoint": 9363,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:20773:23",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:23",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:23",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:23"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:23"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:23",
														"type": ""
													}
												],
												"src": "7:75:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:23",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:23"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:23",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:23"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:23",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:23",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:23"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:23"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:23",
														"type": ""
													}
												],
												"src": "334:126:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:23",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:23"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:23"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:23"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:23",
														"type": ""
													}
												],
												"src": "466:96:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:23",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:23",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:23",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:23"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:23"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:23"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:23"
															},
															"nodeType": "YulIf",
															"src": "621:63:23"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:23",
														"type": ""
													}
												],
												"src": "568:122:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:23",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:23"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:23"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:23"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:23"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:23",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:23",
														"type": ""
													}
												],
												"src": "696:139:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "886:73:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "896:57:23",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "911:5:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "918:34:23",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "907:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "907:46:23"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:23"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint128",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "868:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "878:7:23",
														"type": ""
													}
												],
												"src": "841:118:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1008:79:23",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1065:16:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1074:1:23",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1077:1:23",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1067:6:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1067:12:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1067:12:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1031:5:23"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1056:5:23"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint128",
																					"nodeType": "YulIdentifier",
																					"src": "1038:17:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1038:24:23"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1028:2:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1028:35:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1021:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "1021:43:23"
															},
															"nodeType": "YulIf",
															"src": "1018:63:23"
														}
													]
												},
												"name": "validator_revert_t_uint128",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1001:5:23",
														"type": ""
													}
												],
												"src": "965:122:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1145:87:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1155:29:23",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1177:6:23"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1164:12:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "1164:20:23"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1155:5:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1220:5:23"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint128",
																	"nodeType": "YulIdentifier",
																	"src": "1193:26:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "1193:33:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1193:33:23"
														}
													]
												},
												"name": "abi_decode_t_uint128",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1123:6:23",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1131:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1139:5:23",
														"type": ""
													}
												],
												"src": "1093:139:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1355:648:23",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1402:83:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1404:77:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1404:79:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1404:79:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1376:7:23"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1385:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1372:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1372:23:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1397:3:23",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1368:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "1368:33:23"
															},
															"nodeType": "YulIf",
															"src": "1365:120:23"
														},
														{
															"nodeType": "YulBlock",
															"src": "1495:117:23",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1510:15:23",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1524:1:23",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1514:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1539:63:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1574:9:23"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1585:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1570:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1570:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1594:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1549:20:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1549:53:23"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1539:6:23"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1622:118:23",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1637:16:23",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1651:2:23",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1641:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1667:63:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1702:9:23"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1713:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1698:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1698:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1722:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1677:20:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1677:53:23"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1667:6:23"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1750:118:23",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1765:16:23",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1779:2:23",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1769:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1795:63:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1830:9:23"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1841:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1826:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1826:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1850:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint128",
																			"nodeType": "YulIdentifier",
																			"src": "1805:20:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1805:53:23"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1795:6:23"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1878:118:23",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1893:16:23",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1907:2:23",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1897:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1923:63:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1958:9:23"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1969:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1954:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1954:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1978:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint128",
																			"nodeType": "YulIdentifier",
																			"src": "1933:20:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1933:53:23"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "1923:6:23"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint128t_uint128",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1301:9:23",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1312:7:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1324:6:23",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1332:6:23",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1340:6:23",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1348:6:23",
														"type": ""
													}
												],
												"src": "1238:765:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2053:57:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2063:41:23",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2078:5:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2085:18:23",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2074:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "2074:30:23"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2063:7:23"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2035:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2045:7:23",
														"type": ""
													}
												],
												"src": "2009:101:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2158:78:23",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2214:16:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2223:1:23",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2226:1:23",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2216:6:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2216:12:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2216:12:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2181:5:23"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2205:5:23"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint64",
																					"nodeType": "YulIdentifier",
																					"src": "2188:16:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2188:23:23"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2178:2:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2178:34:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2171:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "2171:42:23"
															},
															"nodeType": "YulIf",
															"src": "2168:62:23"
														}
													]
												},
												"name": "validator_revert_t_uint64",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2151:5:23",
														"type": ""
													}
												],
												"src": "2116:120:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2293:86:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2303:29:23",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2325:6:23"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2312:12:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "2312:20:23"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2303:5:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2367:5:23"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint64",
																	"nodeType": "YulIdentifier",
																	"src": "2341:25:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "2341:32:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2341:32:23"
														}
													]
												},
												"name": "abi_decode_t_uint64",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2271:6:23",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2279:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2287:5:23",
														"type": ""
													}
												],
												"src": "2242:137:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2450:262:23",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2496:83:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2498:77:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2498:79:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2498:79:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2471:7:23"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2480:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2467:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2467:23:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2492:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2463:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "2463:32:23"
															},
															"nodeType": "YulIf",
															"src": "2460:119:23"
														},
														{
															"nodeType": "YulBlock",
															"src": "2589:116:23",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2604:15:23",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2618:1:23",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2608:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2633:62:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2667:9:23"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2678:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2663:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2663:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2687:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint64",
																			"nodeType": "YulIdentifier",
																			"src": "2643:19:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2643:52:23"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2633:6:23"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint64",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2420:9:23",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2431:7:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2443:6:23",
														"type": ""
													}
												],
												"src": "2385:327:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2763:32:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2773:16:23",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2784:5:23"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2773:7:23"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2745:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2755:7:23",
														"type": ""
													}
												],
												"src": "2718:77:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2844:79:23",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2901:16:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2910:1:23",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2913:1:23",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2903:6:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2903:12:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2903:12:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2867:5:23"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2892:5:23"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2874:17:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2874:24:23"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2864:2:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2864:35:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2857:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "2857:43:23"
															},
															"nodeType": "YulIf",
															"src": "2854:63:23"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2837:5:23",
														"type": ""
													}
												],
												"src": "2801:122:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2981:87:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2991:29:23",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3013:6:23"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3000:12:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "3000:20:23"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2991:5:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3056:5:23"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3029:26:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "3029:33:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3029:33:23"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2959:6:23",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2967:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2975:5:23",
														"type": ""
													}
												],
												"src": "2929:139:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3157:391:23",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3203:83:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3205:77:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3205:79:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3205:79:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3178:7:23"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3187:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3174:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3174:23:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3199:2:23",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3170:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "3170:32:23"
															},
															"nodeType": "YulIf",
															"src": "3167:119:23"
														},
														{
															"nodeType": "YulBlock",
															"src": "3296:117:23",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3311:15:23",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3325:1:23",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3315:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3340:63:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3375:9:23"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3386:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3371:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3371:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3395:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3350:20:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3350:53:23"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3340:6:23"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3423:118:23",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3438:16:23",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3452:2:23",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3442:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3468:63:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3503:9:23"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3514:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3499:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3499:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3523:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3478:20:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3478:53:23"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3468:6:23"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3119:9:23",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3130:7:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3142:6:23",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3150:6:23",
														"type": ""
													}
												],
												"src": "3074:474:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3596:48:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3606:32:23",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3631:5:23"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3624:6:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3624:13:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3617:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "3617:21:23"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3606:7:23"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3578:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3588:7:23",
														"type": ""
													}
												],
												"src": "3554:90:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3709:50:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3726:3:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3746:5:23"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3731:14:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3731:21:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3719:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "3719:34:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3719:34:23"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3697:5:23",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3704:3:23",
														"type": ""
													}
												],
												"src": "3650:109:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3857:118:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3867:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3879:9:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3890:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3875:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "3875:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3867:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3941:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3954:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3965:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3950:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3950:17:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3903:37:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "3903:65:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3903:65:23"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3829:9:23",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3841:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3852:4:23",
														"type": ""
													}
												],
												"src": "3765:210:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4025:47:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4035:31:23",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4050:5:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4057:8:23",
																		"type": "",
																		"value": "0xffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4046:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "4046:20:23"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4035:7:23"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4007:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4017:7:23",
														"type": ""
													}
												],
												"src": "3981:91:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4120:78:23",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4176:16:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4185:1:23",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4188:1:23",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4178:6:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4178:12:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4178:12:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4143:5:23"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4167:5:23"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint24",
																					"nodeType": "YulIdentifier",
																					"src": "4150:16:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4150:23:23"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4140:2:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4140:34:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4133:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "4133:42:23"
															},
															"nodeType": "YulIf",
															"src": "4130:62:23"
														}
													]
												},
												"name": "validator_revert_t_uint24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4113:5:23",
														"type": ""
													}
												],
												"src": "4078:120:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4255:86:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4265:29:23",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4287:6:23"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4274:12:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "4274:20:23"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4265:5:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4329:5:23"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint24",
																	"nodeType": "YulIdentifier",
																	"src": "4303:25:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "4303:32:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4303:32:23"
														}
													]
												},
												"name": "abi_decode_t_uint24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4233:6:23",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4241:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4249:5:23",
														"type": ""
													}
												],
												"src": "4204:137:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4446:518:23",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4492:83:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4494:77:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4494:79:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4494:79:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4467:7:23"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4476:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4463:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4463:23:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4488:2:23",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4459:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "4459:32:23"
															},
															"nodeType": "YulIf",
															"src": "4456:119:23"
														},
														{
															"nodeType": "YulBlock",
															"src": "4585:117:23",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4600:15:23",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4614:1:23",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4604:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4629:63:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4664:9:23"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4675:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4660:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4660:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4684:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4639:20:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4639:53:23"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4629:6:23"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4712:118:23",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4727:16:23",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4741:2:23",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4731:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4757:63:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4792:9:23"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4803:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4788:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4788:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4812:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4767:20:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4767:53:23"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4757:6:23"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4840:117:23",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4855:16:23",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4869:2:23",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4859:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4885:62:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4919:9:23"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4930:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4915:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4915:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4939:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint24",
																			"nodeType": "YulIdentifier",
																			"src": "4895:19:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4895:52:23"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "4885:6:23"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4400:9:23",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4411:7:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4423:6:23",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4431:6:23",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4439:6:23",
														"type": ""
													}
												],
												"src": "4347:617:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5035:53:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5052:3:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5075:5:23"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5057:17:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5057:24:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5045:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "5045:37:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5045:37:23"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5023:5:23",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5030:3:23",
														"type": ""
													}
												],
												"src": "4970:118:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5192:124:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5202:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5214:9:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5225:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5210:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "5210:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5202:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5282:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5295:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5306:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5291:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5291:17:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5238:43:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "5238:71:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5238:71:23"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5164:9:23",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5176:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5187:4:23",
														"type": ""
													}
												],
												"src": "5094:222:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5405:391:23",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5451:83:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5453:77:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5453:79:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5453:79:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5426:7:23"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5435:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5422:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5422:23:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5447:2:23",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5418:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "5418:32:23"
															},
															"nodeType": "YulIf",
															"src": "5415:119:23"
														},
														{
															"nodeType": "YulBlock",
															"src": "5544:117:23",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5559:15:23",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5573:1:23",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5563:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5588:63:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5623:9:23"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5634:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5619:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5619:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5643:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint128",
																			"nodeType": "YulIdentifier",
																			"src": "5598:20:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5598:53:23"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5588:6:23"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5671:118:23",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5686:16:23",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5700:2:23",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5690:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5716:63:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5751:9:23"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5762:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5747:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5747:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5771:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint128",
																			"nodeType": "YulIdentifier",
																			"src": "5726:20:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5726:53:23"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5716:6:23"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint128t_uint128",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5367:9:23",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5378:7:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5390:6:23",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5398:6:23",
														"type": ""
													}
												],
												"src": "5322:474:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5867:53:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5884:3:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5907:5:23"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5889:17:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5889:24:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5877:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "5877:37:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5877:37:23"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5855:5:23",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5862:3:23",
														"type": ""
													}
												],
												"src": "5802:118:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6024:124:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6034:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6046:9:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6057:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6042:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "6042:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6034:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6114:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6127:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6138:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6123:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6123:17:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6070:43:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "6070:71:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6070:71:23"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5996:9:23",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6008:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6019:4:23",
														"type": ""
													}
												],
												"src": "5926:222:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6236:390:23",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6282:83:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6284:77:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6284:79:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6284:79:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6257:7:23"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6266:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6253:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6253:23:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6278:2:23",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6249:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "6249:32:23"
															},
															"nodeType": "YulIf",
															"src": "6246:119:23"
														},
														{
															"nodeType": "YulBlock",
															"src": "6375:116:23",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6390:15:23",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6404:1:23",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6394:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6419:62:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6453:9:23"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6464:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6449:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6449:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6473:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint64",
																			"nodeType": "YulIdentifier",
																			"src": "6429:19:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6429:52:23"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6419:6:23"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6501:118:23",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6516:16:23",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6530:2:23",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6520:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6546:63:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6581:9:23"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6592:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6577:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6577:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6601:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6556:20:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6556:53:23"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6546:6:23"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint64t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6198:9:23",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6209:7:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6221:6:23",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6229:6:23",
														"type": ""
													}
												],
												"src": "6154:472:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6660:152:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6677:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6680:77:23",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6670:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "6670:88:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6670:88:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6774:1:23",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6777:4:23",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6767:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "6767:15:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6767:15:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6798:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6801:4:23",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6791:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "6791:15:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6791:15:23"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "6632:180:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6866:231:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6876:25:23",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6899:1:23"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint128",
																	"nodeType": "YulIdentifier",
																	"src": "6881:17:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "6881:20:23"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6876:1:23"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6910:25:23",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6933:1:23"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint128",
																	"nodeType": "YulIdentifier",
																	"src": "6915:17:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "6915:20:23"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6910:1:23"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6944:28:23",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6967:1:23"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6970:1:23"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "6963:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "6963:9:23"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "6948:11:23",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6981:41:23",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "7010:11:23"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint128",
																	"nodeType": "YulIdentifier",
																	"src": "6992:17:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "6992:30:23"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "6981:7:23"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7068:22:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7070:16:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7070:18:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7070:18:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "product",
																				"nodeType": "YulIdentifier",
																				"src": "7045:7:23"
																			},
																			{
																				"name": "product_raw",
																				"nodeType": "YulIdentifier",
																				"src": "7054:11:23"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7042:2:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7042:24:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7035:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "7035:32:23"
															},
															"nodeType": "YulIf",
															"src": "7032:58:23"
														}
													]
												},
												"name": "checked_mul_t_uint128",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6849:1:23",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6852:1:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "6858:7:23",
														"type": ""
													}
												],
												"src": "6818:279:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7147:147:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7157:25:23",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7180:1:23"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7162:17:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "7162:20:23"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7157:1:23"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7191:25:23",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7214:1:23"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7196:17:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "7196:20:23"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7191:1:23"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7225:16:23",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7236:1:23"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7239:1:23"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7232:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "7232:9:23"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "7225:3:23"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7265:22:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7267:16:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7267:18:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7267:18:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7257:1:23"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "7260:3:23"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7254:2:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "7254:10:23"
															},
															"nodeType": "YulIf",
															"src": "7251:36:23"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7134:1:23",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7137:1:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "7143:3:23",
														"type": ""
													}
												],
												"src": "7103:191:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7353:32:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7363:16:23",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7374:5:23"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7363:7:23"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_0_by_1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7335:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7345:7:23",
														"type": ""
													}
												],
												"src": "7300:85:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7423:28:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7433:12:23",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7440:5:23"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "7433:3:23"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7409:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "7419:3:23",
														"type": ""
													}
												],
												"src": "7391:60:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7525:90:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7535:74:23",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7601:5:23"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_0_by_1",
																					"nodeType": "YulIdentifier",
																					"src": "7575:25:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7575:32:23"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "7566:8:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7566:42:23"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7548:17:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "7548:61:23"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "7535:9:23"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_0_by_1_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7505:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "7515:9:23",
														"type": ""
													}
												],
												"src": "7457:158:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7694:74:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7711:3:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7755:5:23"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_0_by_1_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "7716:38:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7716:45:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7704:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "7704:58:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7704:58:23"
														}
													]
												},
												"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7682:5:23",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7689:3:23",
														"type": ""
													}
												],
												"src": "7621:147:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7830:32:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7840:16:23",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7851:5:23"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7840:7:23"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_1000_by_1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7812:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7822:7:23",
														"type": ""
													}
												],
												"src": "7774:88:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7939:93:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7949:77:23",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8018:5:23"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_1000_by_1",
																					"nodeType": "YulIdentifier",
																					"src": "7989:28:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7989:35:23"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "7980:8:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7980:45:23"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7962:17:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "7962:64:23"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "7949:9:23"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1000_by_1_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7919:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "7929:9:23",
														"type": ""
													}
												],
												"src": "7868:164:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8114:77:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8131:3:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8178:5:23"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1000_by_1_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "8136:41:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8136:48:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8124:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "8124:61:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8124:61:23"
														}
													]
												},
												"name": "abi_encode_t_rational_1000_by_1_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8102:5:23",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8109:3:23",
														"type": ""
													}
												],
												"src": "8038:153:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8518:730:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8528:27:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8540:9:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8551:3:23",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8536:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "8536:19:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8528:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8609:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8622:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8633:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8618:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8618:17:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8565:43:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "8565:71:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8565:71:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8690:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8703:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8714:2:23",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8699:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8699:18:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8646:43:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "8646:72:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8646:72:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "8772:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8785:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8796:2:23",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8781:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8781:18:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8728:43:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "8728:72:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8728:72:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "8862:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8875:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8886:2:23",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8871:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8871:18:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8810:51:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "8810:80:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8810:80:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "8955:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8968:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8979:3:23",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8964:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8964:19:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1000_by_1_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8900:54:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "8900:84:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8900:84:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "9046:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9059:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9070:3:23",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9055:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9055:19:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8994:51:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "8994:81:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8994:81:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value6",
																		"nodeType": "YulIdentifier",
																		"src": "9129:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9142:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9153:3:23",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9138:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9138:19:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9085:43:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "9085:73:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9085:73:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value7",
																		"nodeType": "YulIdentifier",
																		"src": "9212:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9225:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9236:3:23",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9221:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9221:19:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9168:43:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "9168:73:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9168:73:23"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_rational_0_by_1_t_rational_1000_by_1_t_rational_0_by_1_t_address_t_uint256__to_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8434:9:23",
														"type": ""
													},
													{
														"name": "value7",
														"nodeType": "YulTypedName",
														"src": "8446:6:23",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "8454:6:23",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "8462:6:23",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "8470:6:23",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "8478:6:23",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8486:6:23",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8494:6:23",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8502:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8513:4:23",
														"type": ""
													}
												],
												"src": "8197:1051:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9317:80:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9327:22:23",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "9342:6:23"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9336:5:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "9336:13:23"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "9327:5:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9385:5:23"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9358:26:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "9358:33:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9358:33:23"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "9295:6:23",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9303:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9311:5:23",
														"type": ""
													}
												],
												"src": "9254:143:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9514:552:23",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9560:83:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9562:77:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9562:79:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9562:79:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9535:7:23"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9544:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9531:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9531:23:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9556:2:23",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9527:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "9527:32:23"
															},
															"nodeType": "YulIf",
															"src": "9524:119:23"
														},
														{
															"nodeType": "YulBlock",
															"src": "9653:128:23",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9668:15:23",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9682:1:23",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9672:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9697:74:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9743:9:23"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9754:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9739:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9739:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9763:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "9707:31:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9707:64:23"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9697:6:23"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9791:129:23",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9806:16:23",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9820:2:23",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9810:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9836:74:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9882:9:23"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9893:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9878:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9878:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9902:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "9846:31:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9846:64:23"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "9836:6:23"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9930:129:23",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9945:16:23",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9959:2:23",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9949:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9975:74:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10021:9:23"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10032:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10017:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10017:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10041:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "9985:31:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9985:64:23"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "9975:6:23"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9468:9:23",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9479:7:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9491:6:23",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9499:6:23",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9507:6:23",
														"type": ""
													}
												],
												"src": "9403:663:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10114:141:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10124:32:23",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10150:5:23"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint64",
																	"nodeType": "YulIdentifier",
																	"src": "10133:16:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "10133:23:23"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "10124:5:23"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10198:22:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10200:16:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10200:18:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10200:18:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10171:5:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10178:18:23",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10168:2:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "10168:29:23"
															},
															"nodeType": "YulIf",
															"src": "10165:55:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10229:20:23",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10240:5:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10247:1:23",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10236:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "10236:13:23"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "10229:3:23"
																}
															]
														}
													]
												},
												"name": "increment_t_uint64",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10100:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "10110:3:23",
														"type": ""
													}
												],
												"src": "10072:183:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10306:149:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10316:25:23",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10339:1:23"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10321:17:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "10321:20:23"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10316:1:23"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10350:25:23",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10373:1:23"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10355:17:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "10355:20:23"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10350:1:23"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10384:17:23",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10396:1:23"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10399:1:23"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "10392:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "10392:9:23"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "10384:4:23"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10426:22:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10428:16:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10428:18:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10428:18:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "10417:4:23"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10423:1:23"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10414:2:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "10414:11:23"
															},
															"nodeType": "YulIf",
															"src": "10411:37:23"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10292:1:23",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10295:1:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "10301:4:23",
														"type": ""
													}
												],
												"src": "10261:194:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10524:52:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10541:3:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10563:5:23"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint24",
																			"nodeType": "YulIdentifier",
																			"src": "10546:16:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10546:23:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10534:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "10534:36:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10534:36:23"
														}
													]
												},
												"name": "abi_encode_t_uint24_to_t_uint24_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10512:5:23",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10519:3:23",
														"type": ""
													}
												],
												"src": "10461:115:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10734:286:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10744:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10756:9:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10767:2:23",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10752:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "10752:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10744:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10824:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10837:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10848:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10833:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10833:17:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10780:43:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "10780:71:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10780:71:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10905:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10918:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10929:2:23",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10914:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10914:18:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10861:43:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "10861:72:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10861:72:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "10985:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10998:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11009:2:23",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10994:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10994:18:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint24_to_t_uint24_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10943:41:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "10943:70:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10943:70:23"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint24__to_t_address_t_address_t_uint24__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10690:9:23",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10702:6:23",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10710:6:23",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10718:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10729:4:23",
														"type": ""
													}
												],
												"src": "10582:438:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11089:80:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11099:22:23",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "11114:6:23"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11108:5:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "11108:13:23"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "11099:5:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11157:5:23"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "11130:26:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "11130:33:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11130:33:23"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "11067:6:23",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11075:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11083:5:23",
														"type": ""
													}
												],
												"src": "11026:143:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11252:274:23",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11298:83:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "11300:77:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11300:79:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11300:79:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11273:7:23"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11282:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11269:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11269:23:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11294:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "11265:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "11265:32:23"
															},
															"nodeType": "YulIf",
															"src": "11262:119:23"
														},
														{
															"nodeType": "YulBlock",
															"src": "11391:128:23",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11406:15:23",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11420:1:23",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11410:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11435:74:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11481:9:23"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11492:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11477:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11477:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11501:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "11445:31:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11445:64:23"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "11435:6:23"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11222:9:23",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "11233:7:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11245:6:23",
														"type": ""
													}
												],
												"src": "11175:351:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11580:362:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11590:25:23",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11613:1:23"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11595:17:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "11595:20:23"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11590:1:23"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11624:25:23",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11647:1:23"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11629:17:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "11629:20:23"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11624:1:23"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11658:28:23",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11681:1:23"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11684:1:23"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "11677:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "11677:9:23"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "11662:11:23",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11695:41:23",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "11724:11:23"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11706:17:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "11706:30:23"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "11695:7:23"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11913:22:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11915:16:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11915:18:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11915:18:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "11846:1:23"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "11839:6:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11839:9:23"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "11869:1:23"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "11876:7:23"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "11885:1:23"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "11872:3:23"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11872:15:23"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "11866:2:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11866:22:23"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "11819:2:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11819:83:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11799:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "11799:113:23"
															},
															"nodeType": "YulIf",
															"src": "11796:139:23"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11563:1:23",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11566:1:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "11572:7:23",
														"type": ""
													}
												],
												"src": "11532:410:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11976:152:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11993:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11996:77:23",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11986:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "11986:88:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11986:88:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12090:1:23",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12093:4:23",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12083:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "12083:15:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12083:15:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12114:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12117:4:23",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12107:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "12107:15:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12107:15:23"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "11948:180:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12176:143:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12186:25:23",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12209:1:23"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12191:17:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "12191:20:23"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12186:1:23"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12220:25:23",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12243:1:23"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12225:17:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "12225:20:23"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12220:1:23"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12267:22:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "12269:16:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12269:18:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12269:18:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12264:1:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12257:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "12257:9:23"
															},
															"nodeType": "YulIf",
															"src": "12254:35:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12299:14:23",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12308:1:23"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12311:1:23"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "12304:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "12304:9:23"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "12299:1:23"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12165:1:23",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12168:1:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "12174:1:23",
														"type": ""
													}
												],
												"src": "12134:185:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12479:288:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12489:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12501:9:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12512:2:23",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12497:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "12497:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12489:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12569:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12582:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12593:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12578:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12578:17:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12525:43:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "12525:71:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12525:71:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "12650:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12663:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12674:2:23",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12659:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12659:18:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12606:43:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "12606:72:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12606:72:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "12732:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12745:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12756:2:23",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12741:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12741:18:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12688:43:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "12688:72:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12688:72:23"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12435:9:23",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12447:6:23",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12455:6:23",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12463:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12474:4:23",
														"type": ""
													}
												],
												"src": "12325:442:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12899:206:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12909:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12921:9:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12932:2:23",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12917:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "12917:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12909:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12989:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13002:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13013:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12998:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12998:17:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12945:43:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "12945:71:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12945:71:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "13070:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13083:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13094:2:23",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13079:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13079:18:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13026:43:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "13026:72:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13026:72:23"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12863:9:23",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12875:6:23",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12883:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12894:4:23",
														"type": ""
													}
												],
												"src": "12773:332:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13188:274:23",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13234:83:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "13236:77:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13236:79:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13236:79:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13209:7:23"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13218:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13205:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13205:23:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13230:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "13201:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "13201:32:23"
															},
															"nodeType": "YulIf",
															"src": "13198:119:23"
														},
														{
															"nodeType": "YulBlock",
															"src": "13327:128:23",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "13342:15:23",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13356:1:23",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "13346:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "13371:74:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "13417:9:23"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "13428:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13413:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13413:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13437:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "13381:31:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13381:64:23"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "13371:6:23"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13158:9:23",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "13169:7:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13181:6:23",
														"type": ""
													}
												],
												"src": "13111:351:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13564:73:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13581:3:23"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13586:6:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13574:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "13574:19:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13574:19:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13602:29:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13621:3:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13626:4:23",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13617:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "13617:14:23"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "13602:11:23"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13536:3:23",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13541:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "13552:11:23",
														"type": ""
													}
												],
												"src": "13468:169:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13749:135:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13771:6:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13779:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13767:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13767:14:23"
																	},
																	{
																		"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13783:34:23",
																		"type": "",
																		"value": "SafeERC20: approve from non-zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13760:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "13760:58:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13760:58:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13839:6:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13847:2:23",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13835:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13835:15:23"
																	},
																	{
																		"hexValue": "20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13852:24:23",
																		"type": "",
																		"value": " to non-zero allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13828:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "13828:49:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13828:49:23"
														}
													]
												},
												"name": "store_literal_in_memory_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13741:6:23",
														"type": ""
													}
												],
												"src": "13643:241:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14036:220:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14046:74:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14112:3:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14117:2:23",
																		"type": "",
																		"value": "54"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14053:58:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "14053:67:23"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14046:3:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14218:3:23"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																	"nodeType": "YulIdentifier",
																	"src": "14129:88:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "14129:93:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14129:93:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14231:19:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14242:3:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14247:2:23",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14238:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "14238:12:23"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14231:3:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14024:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14032:3:23",
														"type": ""
													}
												],
												"src": "13890:366:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14433:248:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14443:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14455:9:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14466:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14451:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "14451:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14443:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14490:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14501:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14486:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14486:17:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14509:4:23"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14515:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14505:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14505:20:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14479:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "14479:47:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14479:47:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14535:139:23",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14669:4:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14543:124:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "14543:131:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14535:4:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14413:9:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14428:4:23",
														"type": ""
													}
												],
												"src": "14262:419:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14813:206:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14823:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14835:9:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14846:2:23",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14831:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "14831:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14823:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14903:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14916:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14927:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14912:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14912:17:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14859:43:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "14859:71:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14859:71:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "14984:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14997:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15008:2:23",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14993:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14993:18:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14940:43:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "14940:72:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14940:72:23"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14777:9:23",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14789:6:23",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14797:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14808:4:23",
														"type": ""
													}
												],
												"src": "14687:332:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15065:76:23",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15119:16:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15128:1:23",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15131:1:23",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "15121:6:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15121:12:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15121:12:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15088:5:23"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "15110:5:23"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "15095:14:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15095:21:23"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "15085:2:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15085:32:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15078:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "15078:40:23"
															},
															"nodeType": "YulIf",
															"src": "15075:60:23"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15058:5:23",
														"type": ""
													}
												],
												"src": "15025:116:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15207:77:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15217:22:23",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "15232:6:23"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15226:5:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "15226:13:23"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "15217:5:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15272:5:23"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "15248:23:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "15248:30:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15248:30:23"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "15185:6:23",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15193:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15201:5:23",
														"type": ""
													}
												],
												"src": "15147:137:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15364:271:23",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15410:83:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "15412:77:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15412:79:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15412:79:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15385:7:23"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15394:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15381:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15381:23:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15406:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "15377:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "15377:32:23"
															},
															"nodeType": "YulIf",
															"src": "15374:119:23"
														},
														{
															"nodeType": "YulBlock",
															"src": "15503:125:23",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "15518:15:23",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15532:1:23",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "15522:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "15547:71:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "15590:9:23"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "15601:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15586:3:23"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15586:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15610:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "15557:28:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15557:61:23"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "15547:6:23"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15334:9:23",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "15345:7:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15357:6:23",
														"type": ""
													}
												],
												"src": "15290:345:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15747:123:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15769:6:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15777:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15765:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15765:14:23"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15781:34:23",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15758:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "15758:58:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15758:58:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15837:6:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15845:2:23",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15833:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15833:15:23"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15850:12:23",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15826:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "15826:37:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15826:37:23"
														}
													]
												},
												"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15739:6:23",
														"type": ""
													}
												],
												"src": "15641:229:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16022:220:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16032:74:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16098:3:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16103:2:23",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16039:58:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "16039:67:23"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16032:3:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16204:3:23"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																	"nodeType": "YulIdentifier",
																	"src": "16115:88:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "16115:93:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16115:93:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16217:19:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16228:3:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16233:2:23",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16224:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "16224:12:23"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16217:3:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16010:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16018:3:23",
														"type": ""
													}
												],
												"src": "15876:366:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16419:248:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16429:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16441:9:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16452:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16437:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "16437:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16429:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16476:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16487:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16472:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16472:17:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16495:4:23"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16501:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16491:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16491:20:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16465:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "16465:47:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16465:47:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16521:139:23",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16655:4:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16529:124:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "16529:131:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16521:4:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16399:9:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16414:4:23",
														"type": ""
													}
												],
												"src": "16248:419:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16779:119:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16801:6:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16809:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16797:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16797:14:23"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16813:34:23",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16790:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "16790:58:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16790:58:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16869:6:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16877:2:23",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16865:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16865:15:23"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16882:8:23",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16858:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "16858:33:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16858:33:23"
														}
													]
												},
												"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16771:6:23",
														"type": ""
													}
												],
												"src": "16673:225:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17050:220:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17060:74:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17126:3:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17131:2:23",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17067:58:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "17067:67:23"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17060:3:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17232:3:23"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																	"nodeType": "YulIdentifier",
																	"src": "17143:88:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "17143:93:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17143:93:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17245:19:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17256:3:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17261:2:23",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17252:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "17252:12:23"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17245:3:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17038:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17046:3:23",
														"type": ""
													}
												],
												"src": "16904:366:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17447:248:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17457:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17469:9:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17480:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17465:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "17465:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17457:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17504:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17515:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17500:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17500:17:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17523:4:23"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17529:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17519:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17519:20:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17493:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "17493:47:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17493:47:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17549:139:23",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17683:4:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17557:124:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "17557:131:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17549:4:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17427:9:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17442:4:23",
														"type": ""
													}
												],
												"src": "17276:419:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17759:40:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17770:22:23",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17786:5:23"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "17780:5:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "17780:12:23"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "17770:6:23"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17742:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "17752:6:23",
														"type": ""
													}
												],
												"src": "17701:98:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17918:34:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17928:18:23",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "17943:3:23"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "17928:11:23"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17890:3:23",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "17895:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "17906:11:23",
														"type": ""
													}
												],
												"src": "17805:147:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18020:184:23",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18030:10:23",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "18039:1:23",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "18034:1:23",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18099:63:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "18124:3:23"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "18129:1:23"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "18120:3:23"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "18120:11:23"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "18143:3:23"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "18148:1:23"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "18139:3:23"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "18139:11:23"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "18133:5:23"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "18133:18:23"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "18113:6:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18113:39:23"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18113:39:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "18060:1:23"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "18063:6:23"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "18057:2:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "18057:13:23"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "18071:19:23",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "18073:15:23",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "18082:1:23"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18085:2:23",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "18078:3:23"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18078:10:23"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "18073:1:23"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "18053:3:23",
																"statements": []
															},
															"src": "18049:113:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "18182:3:23"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "18187:6:23"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18178:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18178:16:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18196:1:23",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18171:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "18171:27:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18171:27:23"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "18002:3:23",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "18007:3:23",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "18012:6:23",
														"type": ""
													}
												],
												"src": "17958:246:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18318:278:23",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18328:52:23",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18374:5:23"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "18342:31:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "18342:38:23"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "18332:6:23",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18389:95:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18472:3:23"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "18477:6:23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18396:75:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "18396:88:23"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18389:3:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "18532:5:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18539:4:23",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18528:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18528:16:23"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18546:3:23"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "18551:6:23"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "18493:34:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "18493:65:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18493:65:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18567:23:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18578:3:23"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "18583:6:23"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18574:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "18574:16:23"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18567:3:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18299:5:23",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18306:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18314:3:23",
														"type": ""
													}
												],
												"src": "18210:386:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18736:137:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18747:100:23",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "18834:6:23"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18843:3:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18754:79:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "18754:93:23"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18747:3:23"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18857:10:23",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "18864:3:23"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18857:3:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18715:3:23",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18721:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18732:3:23",
														"type": ""
													}
												],
												"src": "18602:271:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18985:73:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19007:6:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19015:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19003:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19003:14:23"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19019:31:23",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18996:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "18996:55:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18996:55:23"
														}
													]
												},
												"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18977:6:23",
														"type": ""
													}
												],
												"src": "18879:179:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19210:220:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19220:74:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19286:3:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19291:2:23",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19227:58:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "19227:67:23"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "19220:3:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19392:3:23"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																	"nodeType": "YulIdentifier",
																	"src": "19303:88:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "19303:93:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19303:93:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19405:19:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19416:3:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19421:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19412:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "19412:12:23"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "19405:3:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19198:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19206:3:23",
														"type": ""
													}
												],
												"src": "19064:366:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19607:248:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19617:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19629:9:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19640:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19625:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "19625:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19617:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19664:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19675:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19660:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19660:17:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19683:4:23"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19689:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19679:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19679:20:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19653:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "19653:47:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19653:47:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19709:139:23",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19843:4:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19717:124:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "19717:131:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19709:4:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19587:9:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19602:4:23",
														"type": ""
													}
												],
												"src": "19436:419:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19920:40:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19931:22:23",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19947:5:23"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "19941:5:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "19941:12:23"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "19931:6:23"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19903:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "19913:6:23",
														"type": ""
													}
												],
												"src": "19861:99:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20014:54:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20024:38:23",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "20042:5:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20049:2:23",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20038:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20038:14:23"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20058:2:23",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "20054:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20054:7:23"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "20034:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "20034:28:23"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "20024:6:23"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19997:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "20007:6:23",
														"type": ""
													}
												],
												"src": "19966:102:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20166:285:23",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20176:53:23",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20223:5:23"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "20190:32:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "20190:39:23"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "20180:6:23",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "20238:78:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20304:3:23"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "20309:6:23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20245:58:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "20245:71:23"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "20238:3:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "20364:5:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20371:4:23",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20360:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20360:16:23"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20378:3:23"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "20383:6:23"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "20325:34:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "20325:65:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20325:65:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20399:46:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20410:3:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "20437:6:23"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "20415:21:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20415:29:23"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20406:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "20406:39:23"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "20399:3:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20147:5:23",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "20154:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "20162:3:23",
														"type": ""
													}
												],
												"src": "20074:377:23"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20575:195:23",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20585:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20597:9:23"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20608:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20593:3:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "20593:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20585:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20632:9:23"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20643:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20628:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20628:17:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20651:4:23"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20657:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20647:3:23"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20647:20:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20621:6:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "20621:47:23"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20621:47:23"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20677:86:23",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "20749:6:23"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20758:4:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20685:63:23"
																},
																"nodeType": "YulFunctionCall",
																"src": "20685:78:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20677:4:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20547:9:23",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "20559:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20570:4:23",
														"type": ""
													}
												],
												"src": "20457:313:23"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint128(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint128(value) {\n        if iszero(eq(value, cleanup_t_uint128(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint128(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint128(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint128t_uint128(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint128(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint128(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint64(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function abi_decode_tuple_t_uint64(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint24(value) -> cleaned {\n        cleaned := and(value, 0xffffff)\n    }\n\n    function validator_revert_t_uint24(value) {\n        if iszero(eq(value, cleanup_t_uint24(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint24(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint24(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint24(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint24(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint128t_uint128(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint128(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint128(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint64t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint128(x, y) -> product {\n        x := cleanup_t_uint128(x)\n        y := cleanup_t_uint128(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint128(product_raw)\n\n        if iszero(eq(product, product_raw)) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_rational_0_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_0_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_0_by_1(value)))\n    }\n\n    function abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_0_by_1_to_t_uint256(value))\n    }\n\n    function cleanup_t_rational_1000_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_1000_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_1000_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1000_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1000_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_rational_0_by_1_t_rational_1000_by_1_t_rational_0_by_1_t_address_t_uint256__to_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed(headStart , value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 256)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_rational_1000_by_1_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_address_to_t_address_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value7,  add(headStart, 224))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function increment_t_uint64(value) -> ret {\n        value := cleanup_t_uint64(value)\n        if eq(value, 0xffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint24_to_t_uint24_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint24(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint24__to_t_address_t_address_t_uint24__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint24_to_t_uint24_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeERC20: approve from non-zero\")\n\n        mstore(add(memPtr, 32), \" to non-zero allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 54)\n        store_literal_in_memory_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeERC20: ERC20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r call\")\n\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n",
									"id": 23,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c806398c50fdd1161008c578063c3cf1aa611610066578063c3cf1aa614610220578063d91af4921461023c578063df0905c614610258578063fc993ea814610288576100cf565b806398c50fdd146101a4578063b8d7f980146101d4578063c0102de414610204576100cf565b80630d45431d146100d457806325ac3a73146100f05780632895cb7b1461010c57806359de2f6014610128578063696d62831461015857806377bcd8a614610188575b600080fd5b6100ee60048036038101906100e99190612418565b6102b8565b005b61010a600480360381019061010591906124bf565b61077d565b005b610126600480360381019061012191906124bf565b6109fa565b005b610142600480360381019061013d9190612522565b610f9a565b60405161014f919061257d565b60405180910390f35b610172600480360381019061016d91906125d3565b610fc9565b60405161017f9190612635565b60405180910390f35b6101a2600480360381019061019d91906124bf565b611074565b005b6101be60048036038101906101b99190612650565b61144d565b6040516101cb919061269f565b60405180910390f35b6101ee60048036038101906101e99190612522565b61156a565b6040516101fb919061257d565b60405180910390f35b61021e600480360381019061021991906124bf565b611599565b005b61023a600480360381019061023591906124bf565b611841565b005b610256600480360381019061025191906126ba565b611844565b005b610272600480360381019061026d9190612522565b611ccd565b60405161027f919061257d565b60405180910390f35b6102a2600480360381019061029d9190612522565b611cfc565b6040516102af919061257d565b60405180910390f35b600081836102c69190612729565b6fffffffffffffffffffffffffffffffff16905060006102e986866103e8610fc9565b905068056bc75e2d6310000082101561032e576040517fe008b5f900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000604051806101000160405280600160ff168152602001600060079054906101000a900467ffffffffffffffff1667ffffffffffffffff1681526020014266ffffffffffffff168152602001866fffffffffffffffffffffffffffffffff168152602001856fffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff1681526020013073ffffffffffffffffffffffffffffffffffffffff16815250905080600660008060079054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548160ff021916908360ff16021790555060208201518160000160016101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060408201518160000160096101000a81548166ffffffffffffff021916908366ffffffffffffff16021790555060608201518160000160106101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555060808201518160010160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555060a08201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c08201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060e08201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505061063c3330858a73ffffffffffffffffffffffffffffffffffffffff16611d2b909392919063ffffffff16565b61066782848973ffffffffffffffffffffffffffffffffffffffff16611db49092919063ffffffff16565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e8e3370088888660006103e8600030610e10426106be9190612766565b6040518963ffffffff1660e01b81526004016106e198979695949392919061281a565b6060604051808303816000875af1158015610700573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072491906128ad565b5050506000600781819054906101000a900467ffffffffffffffff168092919061074d90612900565b91906101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505050505050505050565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008367ffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905515610826576040517f4232716900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff1661084682611f03565b73ffffffffffffffffffffffffffffffffffffffff1614610893576040517fd7c498bf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600660008367ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16905061093f333083600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611d2b909392919063ffffffff16565b6001600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008467ffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506003600660008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff021916908360ff1602179055505050565b6000610a0582611f57565b90506000610a1283611f03565b90508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a4c57600080fd5b60001515600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008567ffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514610ac457600080fd5b60001515600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008567ffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514610b3c57600080fd5b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b7457600080fd5b6000600660008567ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000610c5b600660008767ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060010160009054906101000a90046fffffffffffffffffffffffffffffffff16600660008867ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160109054906101000a90046fffffffffffffffffffffffffffffffff1661144d565b90506000610c6882611fab565b9050610c9530828573ffffffffffffffffffffffffffffffffffffffff166120529092919063ffffffff16565b610ccb858284610ca59190612930565b8573ffffffffffffffffffffffffffffffffffffffff166120529092919063ffffffff16565b6001600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008867ffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600660008867ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1660ff1603610f4e5760001515600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008867ffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514610df857600080fd5b6000600660008867ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160109054906101000a90046fffffffffffffffffffffffffffffffff16600660008967ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060010160009054906101000a90046fffffffffffffffffffffffffffffffff16610e929190612729565b6fffffffffffffffffffffffffffffffff169050610ed9610eb288611f57565b828673ffffffffffffffffffffffffffffffffffffffff166120529092919063ffffffff16565b6001600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008967ffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505b6005600660008867ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff021916908360ff160217905550505050505050565b60086020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631698ee828585856040518463ffffffff1660e01b815260040161102a93929190612973565b602060405180830381865afa158015611047573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061106b91906129bf565b90509392505050565b600061107f82611f03565b90508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146110b957600080fd5b600760008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008367ffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661112a57600080fd5b60001515600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008467ffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515146111a257600080fd5b6000600660008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600660008567ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160109054906101000a90046fffffffffffffffffffffffffffffffff16600660008667ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060010160009054906101000a90046fffffffffffffffffffffffffffffffff1661128b9190612729565b6fffffffffffffffffffffffffffffffff1690506000611337600660008767ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060010160009054906101000a90046fffffffffffffffffffffffffffffffff16600660008867ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160109054906101000a90046fffffffffffffffffffffffffffffffff1661144d565b9050600061134483611fab565b905061137130828673ffffffffffffffffffffffffffffffffffffffff166120529092919063ffffffff16565b6113a78582856113819190612930565b8673ffffffffffffffffffffffffffffffffffffffff166120529092919063ffffffff16565b6113d285838673ffffffffffffffffffffffffffffffffffffffff166120529092919063ffffffff16565b6001600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008867ffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505050505050565b600080828461145c9190612729565b6fffffffffffffffffffffffffffffffff16905068056bc75e2d6310000081101580156114915750683635c9adc5dea0000081105b156114b75760646032826114a591906129ec565b6114af9190612a5d565b915050611564565b683635c9adc5dea0000081101580156114d9575069021e19e0c9bab240000081105b156114ff5760646028826114ed91906129ec565b6114f79190612a5d565b915050611564565b69021e19e0c9bab240000081111561153257606460198261152091906129ec565b61152a9190612a5d565b915050611564565b6040517fe008b5f900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b92915050565b600a6020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b60006115a482611f57565b90508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461160b576040517f472e017e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6003600660008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1660ff161461167f576040517fde4461cd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600660008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160109054906101000a90046fffffffffffffffffffffffffffffffff1690506000600660008567ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060010160009054906101000a90046fffffffffffffffffffffffffffffffff169050600061173d82846117269190612729565b6fffffffffffffffffffffffffffffffff16611fab565b905061178c3082600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166120529092919063ffffffff16565b6117f68482856fffffffffffffffffffffffffffffffff166117ae9190612930565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166120529092919063ffffffff16565b6004600660008767ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff021916908360ff1602179055505050505050565b50565b6000600660008467ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020604051806101000160405290816000820160009054906101000a900460ff1660ff1660ff1681526020016000820160019054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016000820160099054906101000a900466ffffffffffffff1666ffffffffffffff1666ffffffffffffff1681526020016000820160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090506001816000015160ff1614611aa357600080fd5b60008160a0015190506000611abb82856103e8610fc9565b90506000611ad18460800151856060015161144d565b9050611b003330838673ffffffffffffffffffffffffffffffffffffffff16611d2b909392919063ffffffff16565b611b2b82828573ffffffffffffffffffffffffffffffffffffffff16611db49092919063ffffffff16565b611b583083838673ffffffffffffffffffffffffffffffffffffffff16611d2b909392919063ffffffff16565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e8e3370084878460006103e8600030610e1042611baf9190612766565b6040518963ffffffff1660e01b8152600401611bd298979695949392919061281a565b6060604051808303816000875af1158015611bf1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c1591906128ad565b50505033600660008867ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002600660008867ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff021916908360ff160217905550505050505050565b60096020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b600b6020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b611dae846323b872dd60e01b858585604051602401611d4c93929190612a8e565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506120d8565b50505050565b6000811480611e3e575060008373ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30856040518363ffffffff1660e01b8152600401611dfb929190612ac5565b602060405180830381865afa158015611e18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e3c9190612aee565b145b611e7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e7490612b9e565b60405180910390fd5b611efe8363095ea7b360e01b8484604051602401611e9c929190612bbe565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506120d8565b505050565b6000600660008367ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000600660008367ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600068056bc75e2d631000008210158015611fce5750683635c9adc5dea0000082105b15611fe757606482611fe09190612a5d565b905061204d565b683635c9adc5dea000008210158015612009575069021e19e0c9bab240000082105b156120225760c88261201b9190612a5d565b905061204d565b69021e19e0c9bab2400000821061204857610190826120419190612a5d565b905061204d565b600090505b919050565b6120d38363a9059cbb60e01b8484604051602401612071929190612bbe565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506120d8565b505050565b600061213a826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166121a09092919063ffffffff16565b905060008151148061215c57508080602001905181019061215b9190612c13565b5b61219b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161219290612cb2565b60405180910390fd5b505050565b60606121af84846000856121b8565b90509392505050565b6060824710156121fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121f490612d44565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516122269190612dd5565b60006040518083038185875af1925050503d8060008114612263576040519150601f19603f3d011682016040523d82523d6000602084013e612268565b606091505b509150915061227987838387612285565b92505050949350505050565b606083156122e75760008351036122df5761229f856122fa565b6122de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122d590612e38565b60405180910390fd5b5b8290506122f2565b6122f1838361231d565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000825111156123305781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016123649190612ead565b60405180910390fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061239d82612372565b9050919050565b6123ad81612392565b81146123b857600080fd5b50565b6000813590506123ca816123a4565b92915050565b60006fffffffffffffffffffffffffffffffff82169050919050565b6123f5816123d0565b811461240057600080fd5b50565b600081359050612412816123ec565b92915050565b600080600080608085870312156124325761243161236d565b5b6000612440878288016123bb565b9450506020612451878288016123bb565b935050604061246287828801612403565b925050606061247387828801612403565b91505092959194509250565b600067ffffffffffffffff82169050919050565b61249c8161247f565b81146124a757600080fd5b50565b6000813590506124b981612493565b92915050565b6000602082840312156124d5576124d461236d565b5b60006124e3848285016124aa565b91505092915050565b6000819050919050565b6124ff816124ec565b811461250a57600080fd5b50565b60008135905061251c816124f6565b92915050565b600080604083850312156125395761253861236d565b5b6000612547858286016123bb565b92505060206125588582860161250d565b9150509250929050565b60008115159050919050565b61257781612562565b82525050565b6000602082019050612592600083018461256e565b92915050565b600062ffffff82169050919050565b6125b081612598565b81146125bb57600080fd5b50565b6000813590506125cd816125a7565b92915050565b6000806000606084860312156125ec576125eb61236d565b5b60006125fa868287016123bb565b935050602061260b868287016123bb565b925050604061261c868287016125be565b9150509250925092565b61262f81612392565b82525050565b600060208201905061264a6000830184612626565b92915050565b600080604083850312156126675761266661236d565b5b600061267585828601612403565b925050602061268685828601612403565b9150509250929050565b612699816124ec565b82525050565b60006020820190506126b46000830184612690565b92915050565b600080604083850312156126d1576126d061236d565b5b60006126df858286016124aa565b92505060206126f0858286016123bb565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612734826123d0565b915061273f836123d0565b925082820261274d816123d0565b915080821461275f5761275e6126fa565b5b5092915050565b6000612771826124ec565b915061277c836124ec565b9250828201905080821115612794576127936126fa565b5b92915050565b6000819050919050565b6000819050919050565b60006127c96127c46127bf8461279a565b6127a4565b6124ec565b9050919050565b6127d9816127ae565b82525050565b6000819050919050565b60006128046127ff6127fa846127df565b6127a4565b6124ec565b9050919050565b612814816127e9565b82525050565b600061010082019050612830600083018b612626565b61283d602083018a612626565b61284a6040830189612690565b61285760608301886127d0565b612864608083018761280b565b61287160a08301866127d0565b61287e60c0830185612626565b61288b60e0830184612690565b9998505050505050505050565b6000815190506128a7816124f6565b92915050565b6000806000606084860312156128c6576128c561236d565b5b60006128d486828701612898565b93505060206128e586828701612898565b92505060406128f686828701612898565b9150509250925092565b600061290b8261247f565b915067ffffffffffffffff8203612925576129246126fa565b5b600182019050919050565b600061293b826124ec565b9150612946836124ec565b925082820390508181111561295e5761295d6126fa565b5b92915050565b61296d81612598565b82525050565b60006060820190506129886000830186612626565b6129956020830185612626565b6129a26040830184612964565b949350505050565b6000815190506129b9816123a4565b92915050565b6000602082840312156129d5576129d461236d565b5b60006129e3848285016129aa565b91505092915050565b60006129f7826124ec565b9150612a02836124ec565b9250828202612a10816124ec565b91508282048414831517612a2757612a266126fa565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612a68826124ec565b9150612a73836124ec565b925082612a8357612a82612a2e565b5b828204905092915050565b6000606082019050612aa36000830186612626565b612ab06020830185612626565b612abd6040830184612690565b949350505050565b6000604082019050612ada6000830185612626565b612ae76020830184612626565b9392505050565b600060208284031215612b0457612b0361236d565b5b6000612b1284828501612898565b91505092915050565b600082825260208201905092915050565b7f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60008201527f20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000602082015250565b6000612b88603683612b1b565b9150612b9382612b2c565b604082019050919050565b60006020820190508181036000830152612bb781612b7b565b9050919050565b6000604082019050612bd36000830185612626565b612be06020830184612690565b9392505050565b612bf081612562565b8114612bfb57600080fd5b50565b600081519050612c0d81612be7565b92915050565b600060208284031215612c2957612c2861236d565b5b6000612c3784828501612bfe565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000612c9c602a83612b1b565b9150612ca782612c40565b604082019050919050565b60006020820190508181036000830152612ccb81612c8f565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000612d2e602683612b1b565b9150612d3982612cd2565b604082019050919050565b60006020820190508181036000830152612d5d81612d21565b9050919050565b600081519050919050565b600081905092915050565b60005b83811015612d98578082015181840152602081019050612d7d565b60008484015250505050565b6000612daf82612d64565b612db98185612d6f565b9350612dc9818560208601612d7a565b80840191505092915050565b6000612de18284612da4565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000612e22601d83612b1b565b9150612e2d82612dec565b602082019050919050565b60006020820190508181036000830152612e5181612e15565b9050919050565b600081519050919050565b6000601f19601f8301169050919050565b6000612e7f82612e58565b612e898185612b1b565b9350612e99818560208601612d7a565b612ea281612e63565b840191505092915050565b60006020820190508181036000830152612ec78184612e74565b90509291505056fea26469706673582212201c9df1b035e4fabdd704b7c1b9093b589a4419f25669a21492bb2f973d19f01864736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x98C50FDD GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xC3CF1AA6 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xC3CF1AA6 EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0xD91AF492 EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0xDF0905C6 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0xFC993EA8 EQ PUSH2 0x288 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x98C50FDD EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0xB8D7F980 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0xC0102DE4 EQ PUSH2 0x204 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0xD45431D EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x25AC3A73 EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0x2895CB7B EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x59DE2F60 EQ PUSH2 0x128 JUMPI DUP1 PUSH4 0x696D6283 EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x77BCD8A6 EQ PUSH2 0x188 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x2418 JUMP JUMPDEST PUSH2 0x2B8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x105 SWAP2 SWAP1 PUSH2 0x24BF JUMP JUMPDEST PUSH2 0x77D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x126 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x24BF JUMP JUMPDEST PUSH2 0x9FA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x142 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13D SWAP2 SWAP1 PUSH2 0x2522 JUMP JUMPDEST PUSH2 0xF9A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14F SWAP2 SWAP1 PUSH2 0x257D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x172 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16D SWAP2 SWAP1 PUSH2 0x25D3 JUMP JUMPDEST PUSH2 0xFC9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17F SWAP2 SWAP1 PUSH2 0x2635 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19D SWAP2 SWAP1 PUSH2 0x24BF JUMP JUMPDEST PUSH2 0x1074 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B9 SWAP2 SWAP1 PUSH2 0x2650 JUMP JUMPDEST PUSH2 0x144D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CB SWAP2 SWAP1 PUSH2 0x269F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x2522 JUMP JUMPDEST PUSH2 0x156A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0x257D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x219 SWAP2 SWAP1 PUSH2 0x24BF JUMP JUMPDEST PUSH2 0x1599 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x235 SWAP2 SWAP1 PUSH2 0x24BF JUMP JUMPDEST PUSH2 0x1841 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x256 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x251 SWAP2 SWAP1 PUSH2 0x26BA JUMP JUMPDEST PUSH2 0x1844 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x272 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26D SWAP2 SWAP1 PUSH2 0x2522 JUMP JUMPDEST PUSH2 0x1CCD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x257D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29D SWAP2 SWAP1 PUSH2 0x2522 JUMP JUMPDEST PUSH2 0x1CFC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AF SWAP2 SWAP1 PUSH2 0x257D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2C6 SWAP2 SWAP1 PUSH2 0x2729 JUMP JUMPDEST PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH2 0x2E9 DUP7 DUP7 PUSH2 0x3E8 PUSH2 0xFC9 JUMP JUMPDEST SWAP1 POP PUSH9 0x56BC75E2D63100000 DUP3 LT ISZERO PUSH2 0x32E JUMPI PUSH1 0x40 MLOAD PUSH32 0xE008B5F900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x7 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP PUSH7 0xFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP DUP1 PUSH1 0x6 PUSH1 0x0 DUP1 PUSH1 0x7 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x9 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH7 0xFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH7 0xFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH2 0x63C CALLER ADDRESS DUP6 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D2B SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x667 DUP3 DUP5 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1DB4 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE8E33700 DUP9 DUP9 DUP7 PUSH1 0x0 PUSH2 0x3E8 PUSH1 0x0 ADDRESS PUSH2 0xE10 TIMESTAMP PUSH2 0x6BE SWAP2 SWAP1 PUSH2 0x2766 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP10 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E1 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x281A JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x700 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x724 SWAP2 SWAP1 PUSH2 0x28AD JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH1 0x7 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x74D SWAP1 PUSH2 0x2900 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE ISZERO PUSH2 0x826 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4232716900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x846 DUP3 PUSH2 0x1F03 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x893 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7C498BF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH2 0x93F CALLER ADDRESS DUP4 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D2B SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA05 DUP3 PUSH2 0x1F57 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xA12 DUP4 PUSH2 0x1F03 JUMP JUMPDEST SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xAC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xB3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH2 0xC5B PUSH1 0x6 PUSH1 0x0 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x0 DUP9 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x144D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC68 DUP3 PUSH2 0x1FAB JUMP JUMPDEST SWAP1 POP PUSH2 0xC95 ADDRESS DUP3 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2052 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xCCB DUP6 DUP3 DUP5 PUSH2 0xCA5 SWAP2 SWAP1 PUSH2 0x2930 JUMP JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2052 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 DUP9 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND SUB PUSH2 0xF4E JUMPI PUSH1 0x0 ISZERO ISZERO PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xDF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP9 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x0 DUP10 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE92 SWAP2 SWAP1 PUSH2 0x2729 JUMP JUMPDEST PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH2 0xED9 PUSH2 0xEB2 DUP9 PUSH2 0x1F57 JUMP JUMPDEST DUP3 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2052 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x5 PUSH1 0x6 PUSH1 0x0 DUP9 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1698EE82 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x102A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2973 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1047 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x106B SWAP2 SWAP1 PUSH2 0x29BF JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x107F DUP3 PUSH2 0x1F03 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x112A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x11A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x0 DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x128B SWAP2 SWAP1 PUSH2 0x2729 JUMP JUMPDEST PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH2 0x1337 PUSH1 0x6 PUSH1 0x0 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x0 DUP9 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x144D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1344 DUP4 PUSH2 0x1FAB JUMP JUMPDEST SWAP1 POP PUSH2 0x1371 ADDRESS DUP3 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2052 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x13A7 DUP6 DUP3 DUP6 PUSH2 0x1381 SWAP2 SWAP1 PUSH2 0x2930 JUMP JUMPDEST DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2052 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x13D2 DUP6 DUP4 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2052 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 PUSH2 0x145C SWAP2 SWAP1 PUSH2 0x2729 JUMP JUMPDEST PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH9 0x56BC75E2D63100000 DUP2 LT ISZERO DUP1 ISZERO PUSH2 0x1491 JUMPI POP PUSH9 0x3635C9ADC5DEA00000 DUP2 LT JUMPDEST ISZERO PUSH2 0x14B7 JUMPI PUSH1 0x64 PUSH1 0x32 DUP3 PUSH2 0x14A5 SWAP2 SWAP1 PUSH2 0x29EC JUMP JUMPDEST PUSH2 0x14AF SWAP2 SWAP1 PUSH2 0x2A5D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1564 JUMP JUMPDEST PUSH9 0x3635C9ADC5DEA00000 DUP2 LT ISZERO DUP1 ISZERO PUSH2 0x14D9 JUMPI POP PUSH10 0x21E19E0C9BAB2400000 DUP2 LT JUMPDEST ISZERO PUSH2 0x14FF JUMPI PUSH1 0x64 PUSH1 0x28 DUP3 PUSH2 0x14ED SWAP2 SWAP1 PUSH2 0x29EC JUMP JUMPDEST PUSH2 0x14F7 SWAP2 SWAP1 PUSH2 0x2A5D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1564 JUMP JUMPDEST PUSH10 0x21E19E0C9BAB2400000 DUP2 GT ISZERO PUSH2 0x1532 JUMPI PUSH1 0x64 PUSH1 0x19 DUP3 PUSH2 0x1520 SWAP2 SWAP1 PUSH2 0x29EC JUMP JUMPDEST PUSH2 0x152A SWAP2 SWAP1 PUSH2 0x2A5D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1564 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xE008B5F900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15A4 DUP3 PUSH2 0x1F57 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x160B JUMPI PUSH1 0x40 MLOAD PUSH32 0x472E017E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ PUSH2 0x167F JUMPI PUSH1 0x40 MLOAD PUSH32 0xDE4461CD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH2 0x173D DUP3 DUP5 PUSH2 0x1726 SWAP2 SWAP1 PUSH2 0x2729 JUMP JUMPDEST PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1FAB JUMP JUMPDEST SWAP1 POP PUSH2 0x178C ADDRESS DUP3 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2052 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x17F6 DUP5 DUP3 DUP6 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17AE SWAP2 SWAP1 PUSH2 0x2930 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2052 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 PUSH1 0x6 PUSH1 0x0 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x9 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH7 0xFFFFFFFFFFFFFF AND PUSH7 0xFFFFFFFFFFFFFF AND PUSH7 0xFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x0 ADD MLOAD PUSH1 0xFF AND EQ PUSH2 0x1AA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xA0 ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x1ABB DUP3 DUP6 PUSH2 0x3E8 PUSH2 0xFC9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1AD1 DUP5 PUSH1 0x80 ADD MLOAD DUP6 PUSH1 0x60 ADD MLOAD PUSH2 0x144D JUMP JUMPDEST SWAP1 POP PUSH2 0x1B00 CALLER ADDRESS DUP4 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D2B SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1B2B DUP3 DUP3 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1DB4 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1B58 ADDRESS DUP4 DUP4 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D2B SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE8E33700 DUP5 DUP8 DUP5 PUSH1 0x0 PUSH2 0x3E8 PUSH1 0x0 ADDRESS PUSH2 0xE10 TIMESTAMP PUSH2 0x1BAF SWAP2 SWAP1 PUSH2 0x2766 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP10 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BD2 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x281A JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1BF1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C15 SWAP2 SWAP1 PUSH2 0x28AD JUMP JUMPDEST POP POP POP CALLER PUSH1 0x6 PUSH1 0x0 DUP9 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x6 PUSH1 0x0 DUP9 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x1DAE DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1D4C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A8E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x20D8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 EQ DUP1 PUSH2 0x1E3E JUMPI POP PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E ADDRESS DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DFB SWAP3 SWAP2 SWAP1 PUSH2 0x2AC5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E18 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E3C SWAP2 SWAP1 PUSH2 0x2AEE JUMP JUMPDEST EQ JUMPDEST PUSH2 0x1E7D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E74 SWAP1 PUSH2 0x2B9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1EFE DUP4 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1E9C SWAP3 SWAP2 SWAP1 PUSH2 0x2BBE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x20D8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH9 0x56BC75E2D63100000 DUP3 LT ISZERO DUP1 ISZERO PUSH2 0x1FCE JUMPI POP PUSH9 0x3635C9ADC5DEA00000 DUP3 LT JUMPDEST ISZERO PUSH2 0x1FE7 JUMPI PUSH1 0x64 DUP3 PUSH2 0x1FE0 SWAP2 SWAP1 PUSH2 0x2A5D JUMP JUMPDEST SWAP1 POP PUSH2 0x204D JUMP JUMPDEST PUSH9 0x3635C9ADC5DEA00000 DUP3 LT ISZERO DUP1 ISZERO PUSH2 0x2009 JUMPI POP PUSH10 0x21E19E0C9BAB2400000 DUP3 LT JUMPDEST ISZERO PUSH2 0x2022 JUMPI PUSH1 0xC8 DUP3 PUSH2 0x201B SWAP2 SWAP1 PUSH2 0x2A5D JUMP JUMPDEST SWAP1 POP PUSH2 0x204D JUMP JUMPDEST PUSH10 0x21E19E0C9BAB2400000 DUP3 LT PUSH2 0x2048 JUMPI PUSH2 0x190 DUP3 PUSH2 0x2041 SWAP2 SWAP1 PUSH2 0x2A5D JUMP JUMPDEST SWAP1 POP PUSH2 0x204D JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20D3 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2071 SWAP3 SWAP2 SWAP1 PUSH2 0x2BBE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x20D8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x213A DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x21A0 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ DUP1 PUSH2 0x215C JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x215B SWAP2 SWAP1 PUSH2 0x2C13 JUMP JUMPDEST JUMPDEST PUSH2 0x219B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2192 SWAP1 PUSH2 0x2CB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x21AF DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x21B8 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x21FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21F4 SWAP1 PUSH2 0x2D44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x2226 SWAP2 SWAP1 PUSH2 0x2DD5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2263 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2268 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2279 DUP8 DUP4 DUP4 DUP8 PUSH2 0x2285 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x22E7 JUMPI PUSH1 0x0 DUP4 MLOAD SUB PUSH2 0x22DF JUMPI PUSH2 0x229F DUP6 PUSH2 0x22FA JUMP JUMPDEST PUSH2 0x22DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22D5 SWAP1 PUSH2 0x2E38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x22F2 JUMP JUMPDEST PUSH2 0x22F1 DUP4 DUP4 PUSH2 0x231D JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x2330 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2364 SWAP2 SWAP1 PUSH2 0x2EAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x239D DUP3 PUSH2 0x2372 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23AD DUP2 PUSH2 0x2392 JUMP JUMPDEST DUP2 EQ PUSH2 0x23B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x23CA DUP2 PUSH2 0x23A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23F5 DUP2 PUSH2 0x23D0 JUMP JUMPDEST DUP2 EQ PUSH2 0x2400 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2412 DUP2 PUSH2 0x23EC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2432 JUMPI PUSH2 0x2431 PUSH2 0x236D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2440 DUP8 DUP3 DUP9 ADD PUSH2 0x23BB JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2451 DUP8 DUP3 DUP9 ADD PUSH2 0x23BB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2462 DUP8 DUP3 DUP9 ADD PUSH2 0x2403 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x2473 DUP8 DUP3 DUP9 ADD PUSH2 0x2403 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x249C DUP2 PUSH2 0x247F JUMP JUMPDEST DUP2 EQ PUSH2 0x24A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x24B9 DUP2 PUSH2 0x2493 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24D5 JUMPI PUSH2 0x24D4 PUSH2 0x236D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x24E3 DUP5 DUP3 DUP6 ADD PUSH2 0x24AA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24FF DUP2 PUSH2 0x24EC JUMP JUMPDEST DUP2 EQ PUSH2 0x250A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x251C DUP2 PUSH2 0x24F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2539 JUMPI PUSH2 0x2538 PUSH2 0x236D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2547 DUP6 DUP3 DUP7 ADD PUSH2 0x23BB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2558 DUP6 DUP3 DUP7 ADD PUSH2 0x250D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2577 DUP2 PUSH2 0x2562 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2592 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x256E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x25B0 DUP2 PUSH2 0x2598 JUMP JUMPDEST DUP2 EQ PUSH2 0x25BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x25CD DUP2 PUSH2 0x25A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x25EC JUMPI PUSH2 0x25EB PUSH2 0x236D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x25FA DUP7 DUP3 DUP8 ADD PUSH2 0x23BB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x260B DUP7 DUP3 DUP8 ADD PUSH2 0x23BB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x261C DUP7 DUP3 DUP8 ADD PUSH2 0x25BE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x262F DUP2 PUSH2 0x2392 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x264A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2626 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2667 JUMPI PUSH2 0x2666 PUSH2 0x236D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2675 DUP6 DUP3 DUP7 ADD PUSH2 0x2403 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2686 DUP6 DUP3 DUP7 ADD PUSH2 0x2403 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2699 DUP2 PUSH2 0x24EC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x26B4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2690 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x26D1 JUMPI PUSH2 0x26D0 PUSH2 0x236D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x26DF DUP6 DUP3 DUP7 ADD PUSH2 0x24AA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x26F0 DUP6 DUP3 DUP7 ADD PUSH2 0x23BB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2734 DUP3 PUSH2 0x23D0 JUMP JUMPDEST SWAP2 POP PUSH2 0x273F DUP4 PUSH2 0x23D0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x274D DUP2 PUSH2 0x23D0 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 EQ PUSH2 0x275F JUMPI PUSH2 0x275E PUSH2 0x26FA JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2771 DUP3 PUSH2 0x24EC JUMP JUMPDEST SWAP2 POP PUSH2 0x277C DUP4 PUSH2 0x24EC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2794 JUMPI PUSH2 0x2793 PUSH2 0x26FA JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27C9 PUSH2 0x27C4 PUSH2 0x27BF DUP5 PUSH2 0x279A JUMP JUMPDEST PUSH2 0x27A4 JUMP JUMPDEST PUSH2 0x24EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x27D9 DUP2 PUSH2 0x27AE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2804 PUSH2 0x27FF PUSH2 0x27FA DUP5 PUSH2 0x27DF JUMP JUMPDEST PUSH2 0x27A4 JUMP JUMPDEST PUSH2 0x24EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2814 DUP2 PUSH2 0x27E9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x2830 PUSH1 0x0 DUP4 ADD DUP12 PUSH2 0x2626 JUMP JUMPDEST PUSH2 0x283D PUSH1 0x20 DUP4 ADD DUP11 PUSH2 0x2626 JUMP JUMPDEST PUSH2 0x284A PUSH1 0x40 DUP4 ADD DUP10 PUSH2 0x2690 JUMP JUMPDEST PUSH2 0x2857 PUSH1 0x60 DUP4 ADD DUP9 PUSH2 0x27D0 JUMP JUMPDEST PUSH2 0x2864 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x280B JUMP JUMPDEST PUSH2 0x2871 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x27D0 JUMP JUMPDEST PUSH2 0x287E PUSH1 0xC0 DUP4 ADD DUP6 PUSH2 0x2626 JUMP JUMPDEST PUSH2 0x288B PUSH1 0xE0 DUP4 ADD DUP5 PUSH2 0x2690 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x28A7 DUP2 PUSH2 0x24F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x28C6 JUMPI PUSH2 0x28C5 PUSH2 0x236D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x28D4 DUP7 DUP3 DUP8 ADD PUSH2 0x2898 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x28E5 DUP7 DUP3 DUP8 ADD PUSH2 0x2898 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x28F6 DUP7 DUP3 DUP8 ADD PUSH2 0x2898 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x290B DUP3 PUSH2 0x247F JUMP JUMPDEST SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2925 JUMPI PUSH2 0x2924 PUSH2 0x26FA JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x293B DUP3 PUSH2 0x24EC JUMP JUMPDEST SWAP2 POP PUSH2 0x2946 DUP4 PUSH2 0x24EC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x295E JUMPI PUSH2 0x295D PUSH2 0x26FA JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x296D DUP2 PUSH2 0x2598 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2988 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2626 JUMP JUMPDEST PUSH2 0x2995 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2626 JUMP JUMPDEST PUSH2 0x29A2 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2964 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x29B9 DUP2 PUSH2 0x23A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x29D5 JUMPI PUSH2 0x29D4 PUSH2 0x236D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x29E3 DUP5 DUP3 DUP6 ADD PUSH2 0x29AA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29F7 DUP3 PUSH2 0x24EC JUMP JUMPDEST SWAP2 POP PUSH2 0x2A02 DUP4 PUSH2 0x24EC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2A10 DUP2 PUSH2 0x24EC JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2A27 JUMPI PUSH2 0x2A26 PUSH2 0x26FA JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2A68 DUP3 PUSH2 0x24EC JUMP JUMPDEST SWAP2 POP PUSH2 0x2A73 DUP4 PUSH2 0x24EC JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2A83 JUMPI PUSH2 0x2A82 PUSH2 0x2A2E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2AA3 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2626 JUMP JUMPDEST PUSH2 0x2AB0 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2626 JUMP JUMPDEST PUSH2 0x2ABD PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2690 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2ADA PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2626 JUMP JUMPDEST PUSH2 0x2AE7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2626 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B04 JUMPI PUSH2 0x2B03 PUSH2 0x236D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2B12 DUP5 DUP3 DUP6 ADD PUSH2 0x2898 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A20617070726F76652066726F6D206E6F6E2D7A65726F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20746F206E6F6E2D7A65726F20616C6C6F77616E636500000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B88 PUSH1 0x36 DUP4 PUSH2 0x2B1B JUMP JUMPDEST SWAP2 POP PUSH2 0x2B93 DUP3 PUSH2 0x2B2C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2BB7 DUP2 PUSH2 0x2B7B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2BD3 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2626 JUMP JUMPDEST PUSH2 0x2BE0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2690 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2BF0 DUP2 PUSH2 0x2562 JUMP JUMPDEST DUP2 EQ PUSH2 0x2BFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2C0D DUP2 PUSH2 0x2BE7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C29 JUMPI PUSH2 0x2C28 PUSH2 0x236D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2C37 DUP5 DUP3 DUP6 ADD PUSH2 0x2BFE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C9C PUSH1 0x2A DUP4 PUSH2 0x2B1B JUMP JUMPDEST SWAP2 POP PUSH2 0x2CA7 DUP3 PUSH2 0x2C40 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2CCB DUP2 PUSH2 0x2C8F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D2E PUSH1 0x26 DUP4 PUSH2 0x2B1B JUMP JUMPDEST SWAP2 POP PUSH2 0x2D39 DUP3 PUSH2 0x2CD2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D5D DUP2 PUSH2 0x2D21 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2D98 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2D7D JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DAF DUP3 PUSH2 0x2D64 JUMP JUMPDEST PUSH2 0x2DB9 DUP2 DUP6 PUSH2 0x2D6F JUMP JUMPDEST SWAP4 POP PUSH2 0x2DC9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2D7A JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DE1 DUP3 DUP5 PUSH2 0x2DA4 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E22 PUSH1 0x1D DUP4 PUSH2 0x2B1B JUMP JUMPDEST SWAP2 POP PUSH2 0x2E2D DUP3 PUSH2 0x2DEC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E51 DUP2 PUSH2 0x2E15 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E7F DUP3 PUSH2 0x2E58 JUMP JUMPDEST PUSH2 0x2E89 DUP2 DUP6 PUSH2 0x2B1B JUMP JUMPDEST SWAP4 POP PUSH2 0x2E99 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2D7A JUMP JUMPDEST PUSH2 0x2EA2 DUP2 PUSH2 0x2E63 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2EC7 DUP2 DUP5 PUSH2 0x2E74 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR SWAP14 CALL 0xB0 CALLDATALOAD 0xE4 STATICCALL 0xBD 0xD7 DIV 0xB7 0xC1 0xB9 MULMOD EXTCODESIZE PC SWAP11 PREVRANDAO NOT CALLCODE JUMP PUSH10 0xA21492BB2F973D19F018 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "536:9479:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1828:1268;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4534:607;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7186:1433;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1382:64;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8806:270;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5962:1137;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9467:543;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1630:64;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5149:760;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8682:49;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3125:1280;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1506:64;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1741;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1828:1268;1934:10;1956:9;1945:10;:20;;;;:::i;:::-;1934:31;;;;2052:16;2069:41;2084:13;2098:6;2105:4;2069:14;:41::i;:::-;2052:58;;2130:9;2124:5;:15;2121:70;;;2162:17;;;;;;;;;;;;;;2121:70;2201:27;2229:313;;;;;;;;2264:1;2229:313;;;;;;2288:2;;;;;;;;;;;2229:313;;;;;;2320:15;2229:313;;;;;;2366:10;2229:313;;;;;;2400:9;2229:313;;;;;;2437:13;2229:313;;;;;;2478:10;2229:313;;;;;;2525:4;2229:313;;;;;2201:341;;2567:11;2553:9;:13;2563:2;;;;;;;;;;;2553:13;;;;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2625:70;2664:10;2683:4;2689:5;2632:13;2625:38;;;;:70;;;;;;:::i;:::-;2770:49;2804:8;2813:5;2777:13;2770:33;;;;:49;;;;;:::i;:::-;2849:13;;;;;;;;;;;2830:46;;;2891:13;2919:6;2940:5;2960:1;2976:4;2995:1;3019:4;3055:7;3039:15;:23;;;;:::i;:::-;2830:243;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;3084:2;;:4;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;1923:1173;;;1828:1268;;;;:::o;4534:607::-;4674:5;4648:8;:20;4657:10;4648:20;;;;;;;;;;;;;;;:25;4669:3;4648:25;;;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;4645:65;;;4688:20;;;;;;;;;;;;;;4645:65;4818:10;4802:26;;:14;4812:3;4802:9;:14::i;:::-;:26;;;4799:51;;4837:11;;;;;;;;;;;;;;4799:51;4907:25;4933:9;:14;4943:3;4933:14;;;;;;;;;;;;;;;:29;;;;;;;;;;;;4907:55;;;;4973:81;5011:10;5030:4;5036:17;4980:12;;;;;;;;;;;4973:37;;;;:81;;;;;;:::i;:::-;5091:4;5065:8;:20;5074:10;5065:20;;;;;;;;;;;;;;;:25;5086:3;5065:25;;;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;5132:1;5106:9;:14;5116:3;5106:14;;;;;;;;;;;;;;;:25;;;:27;;;;;;;;;;;;;;;;;;4580:561;4534:607;:::o;7186:1433::-;7245:13;7259;7268:3;7259:8;:13::i;:::-;7245:27;;7283:14;7298;7308:3;7298:9;:14::i;:::-;7283:29;;7376:5;7364:17;;:10;:17;;;7356:26;;;;;;7487:5;7464:28;;:8;:16;7473:6;7464:16;;;;;;;;;;;;;;;:21;7481:3;7464:21;;;;;;;;;;;;;;;;;;;;;;;:28;;;7456:37;;;;;;7546:5;7512:39;;:15;:27;7528:10;7512:27;;;;;;;;;;;;;;;:32;7540:3;7512:32;;;;;;;;;;;;;;;;;;;;;;;:39;;;7504:48;;;;;;7616:5;7604:17;;:10;:17;;;7596:26;;;;;;7635;7662:9;:14;7672:3;7662:14;;;;;;;;;;;;;;;:27;;;;;;;;;;;;7635:54;;7700:22;7723:63;7732:9;:14;7742:3;7732:14;;;;;;;;;;;;;;;:23;;;;;;;;;;;;7756:9;:14;7766:3;7756:14;;;;;;;;;;;;;;;:29;;;;;;;;;;;;7723:8;:63::i;:::-;7700:86;;7797:11;7809:27;7821:14;7809:11;:27::i;:::-;7797:39;;7865:96;7927:4;7947:3;7872:18;7865:39;;;;:96;;;;;:::i;:::-;8017:103;8071:5;8106:3;8091:14;:18;;;;:::i;:::-;8024;8017:39;;;;:103;;;;;:::i;:::-;8164:4;8131:15;:27;8147:10;8131:27;;;;;;;;;;;;;;;:32;8159:3;8131:32;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;8211:1;8184:9;:14;8194:3;8184:14;;;;;;;;;;;;;;;:25;;;;;;;;;;;;:28;;;8181:393;;8270:5;8236:39;;:15;:27;8252:10;8236:27;;;;;;;;;;;;;;;:32;8264:3;8236:32;;;;;;;;;;;;;;;;;;;;;;;:39;;;8228:48;;;;;;8291:13;8329:9;:14;8339:3;8329:14;;;;;;;;;;;;;;;:29;;;;;;;;;;;;8305:9;:14;8315:3;8305:14;;;;;;;;;;;;;;;:23;;;;;;;;;;;;:53;;;;:::i;:::-;8291:67;;;;8400:110;8458:13;8467:3;8458:8;:13::i;:::-;8490:5;8407:18;8400:39;;;;:110;;;;;:::i;:::-;8558:4;8525:15;:27;8541:10;8525:27;;;;;;;;;;;;;;;:32;8553:3;8525:32;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;8213:361;8181:393;8610:1;8584:9;:14;8594:3;8584:14;;;;;;;;;;;;;;;:25;;;:27;;;;;;;;;;;;;;;;;;7234:1385;;;;;7186:1433;:::o;1382:64::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8806:270::-;8892:16;8949:12;;;;;;;;;;;8931:39;;;8985:6;9006;9027:4;8931:111;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8920:122;;8806:270;;;;;:::o;5962:1137::-;6022:14;6037;6047:3;6037:9;:14::i;:::-;6022:29;;6115:6;6103:18;;:10;:18;;;6095:27;;;;;;6204:8;:16;6213:6;6204:16;;;;;;;;;;;;;;;:21;6221:3;6204:21;;;;;;;;;;;;;;;;;;;;;;;6196:30;;;;;;6312:5;6278:39;;:15;:27;6294:10;6278:27;;;;;;;;;;;;;;;:32;6306:3;6278:32;;;;;;;;;;;;;;;;;;;;;;;:39;;;6270:48;;;;;;6329:26;6356:9;:14;6366:3;6356:14;;;;;;;;;;;;;;;:27;;;;;;;;;;;;6329:54;;6394:13;6432:9;:14;6442:3;6432:14;;;;;;;;;;;;;;;:29;;;;;;;;;;;;6408:9;:14;6418:3;6408:14;;;;;;;;;;;;;;;:23;;;;;;;;;;;;:53;;;;:::i;:::-;6394:67;;;;6472:22;6495:63;6504:9;:14;6514:3;6504:14;;;;;;;;;;;;;;;:23;;;;;;;;;;;;6528:9;:14;6538:3;6528:14;;;;;;;;;;;;;;;:29;;;;;;;;;;;;6495:8;:63::i;:::-;6472:86;;6569:11;6581:18;6593:5;6581:11;:18::i;:::-;6569:30;;6652:58;6700:4;6706:3;6659:18;6652:39;;;;:58;;;;;:::i;:::-;6751:95;6805:6;6832:3;6826:5;:9;;;;:::i;:::-;6758:18;6751:39;;;;:95;;;;;:::i;:::-;6905:100;6959:6;6980:14;6912:18;6905:39;;;;:100;;;;;:::i;:::-;7086:4;7053:15;:27;7069:10;7053:27;;;;;;;;;;;;;;;:32;7081:3;7053:32;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6011:1088;;;;;5962:1137;:::o;9467:543::-;9546:7;9565:18;9597:11;9586:10;:22;;;;:::i;:::-;9565:43;;;;9637:9;9623:10;:23;;:50;;;;;9663:10;9650;:23;9623:50;9619:384;;;9717:3;9711:2;9698:10;:15;;;;:::i;:::-;9697:23;;;;:::i;:::-;9690:30;;;;;9619:384;9756:10;9742;:24;;:52;;;;;9783:11;9770:10;:24;9742:52;9738:265;;;9838:3;9832:2;9819:10;:15;;;;:::i;:::-;9818:23;;;;:::i;:::-;9811:30;;;;;9738:265;9876:11;9863:10;:24;9859:144;;;9931:3;9925:2;9912:10;:15;;;;:::i;:::-;9911:23;;;;:::i;:::-;9904:30;;;;;9859:144;9974:17;;;;;;;;;;;;;;9467:543;;;;;:::o;1630:64::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5149:760::-;5209:13;5223;5232:3;5223:8;:13::i;:::-;5209:27;;5295:5;5283:17;;:10;:17;;;5280:41;;5309:10;;;;;;;;;;;;;;5280:41;5424:1;5397:9;:14;5407:3;5397:14;;;;;;;;;;;;;;;:25;;;;;;;;;;;;:28;;;5394:58;;5434:16;;;;;;;;;;;;;;5394:58;5463:17;5481:9;:14;5491:3;5481:14;;;;;;;;;;;;;;;:29;;;;;;;;;;;;5463:47;;5521:18;5540:9;:14;5550:3;5540:14;;;;;;;;;;;;;;;:23;;;;;;;;;;;;5521:42;;5618:11;5630:33;5652:10;5642:9;:20;;;;:::i;:::-;5630:33;;:11;:33::i;:::-;5618:45;;5716:52;5758:4;5764:3;5723:12;;;;;;;;;;;5716:33;;;;:52;;;;;:::i;:::-;5809:54;5843:5;5859:3;5849:9;:13;;;;;;:::i;:::-;5816:12;;;;;;;;;;;5809:33;;;;:54;;;;;:::i;:::-;5900:1;5874:9;:14;5884:3;5874:14;;;;;;;;;;;;;;;:25;;;:27;;;;;;;;;;;;;;;;;;5198:711;;;;5149:760;:::o;8682:49::-;;:::o;3125:1280::-;3186:27;3214:9;:14;3224:3;3214:14;;;;;;;;;;;;;;;3186:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3271:1;3247:11;:22;;;:25;;;3239:34;;;;;;3312:26;3339:11;:24;;;3312:51;;3456:16;3473:46;3488:18;3507:6;3514:4;3473:14;:46::i;:::-;3456:63;;3530:16;3547:58;3556:11;:20;;;3578:11;:26;;;3547:8;:58::i;:::-;3530:75;;3643:133;3701:10;3734:4;3754:11;3650:18;3643:43;;;;:133;;;;;;:::i;:::-;3851:60;3890:8;3899:11;3858:18;3851:38;;;;:60;;;;;:::i;:::-;3922:79;3974:4;3980:8;3989:11;3929:18;3922:43;;;;:79;;;;;;:::i;:::-;4031:13;;;;;;;;;;;4012:46;;;4073:18;4106:6;4127:11;4153:1;4169:4;4188:1;4212:4;4248:7;4232:15;:23;;;;:::i;:::-;4012:254;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;4306:10;4277:9;:14;4287:3;4277:14;;;;;;;;;;;;;;;:28;;;:39;;;;;;;;;;;;;;;;;;4396:1;4370:9;:14;4380:3;4370:14;;;;;;;;;;;;;;;:25;;;:27;;;;;;;;;;;;;;;;;;3175:1230;;;;3125:1280;;:::o;1506:64::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1741:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1447:205:21:-;1548:96;1568:5;1598:27;;;1627:4;1633:2;1637:5;1575:68;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1548:19;:96::i;:::-;1447:205;;;;:::o;1921:582::-;2260:1;2251:5;:10;2250:62;;;;2310:1;2267:5;:15;;;2291:4;2298:7;2267:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;2250:62;2228:166;;;;;;;;;;;;:::i;:::-;;;;;;;;;2405:90;2425:5;2455:22;;;2479:7;2488:5;2432:62;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2405:19;:90::i;:::-;1921:582;;;:::o;9287:114:0:-;9339:7;9365:9;:14;9375:3;9365:14;;;;;;;;;;;;;;;:28;;;;;;;;;;;;9358:35;;9287:114;;;:::o;9127:112::-;9178:7;9204:9;:14;9214:3;9204:14;;;;;;;;;;;;;;;:27;;;;;;;;;;;;9197:34;;9127:112;;;:::o;250:430:22:-;306:17;352:9;338:12;:23;;:50;;;;;378:10;365:12;:23;338:50;335:338;;;424:3;411:12;:16;;;;:::i;:::-;404:23;;;;335:338;461:10;447:12;:24;;:52;;;;;488:11;475:12;:24;447:52;444:229;;;535:3;522:12;:16;;;;:::i;:::-;515:23;;;;444:229;572:11;558:12;:25;555:118;;619:3;606:12;:16;;;;:::i;:::-;599:23;;;;555:118;660:1;653:8;;250:430;;;;:::o;1025:177:21:-;1108:86;1128:5;1158:23;;;1183:2;1187:5;1135:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1108:19;:86::i;:::-;1025:177;;;:::o;5371:649::-;5795:23;5821:69;5849:4;5821:69;;;;;;;;;;;;;;;;;5829:5;5821:27;;;;:69;;;;;:::i;:::-;5795:95;;5930:1;5909:10;:17;:22;:56;;;;5946:10;5935:30;;;;;;;;;;;;:::i;:::-;5909:56;5901:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;5441:579;5371:649;;:::o;4207:229:19:-;4344:12;4376:52;4398:6;4406:4;4412:1;4415:12;4376:21;:52::i;:::-;4369:59;;4207:229;;;;;:::o;5293:455::-;5463:12;5521:5;5496:21;:30;;5488:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;5581:12;5595:23;5622:6;:11;;5641:5;5648:4;5622:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5580:73;;;;5671:69;5698:6;5706:7;5715:10;5727:12;5671:26;:69::i;:::-;5664:76;;;;5293:455;;;;;;:::o;7866:644::-;8051:12;8080:7;8076:427;;;8129:1;8108:10;:17;:22;8104:290;;8326:18;8337:6;8326:10;:18::i;:::-;8318:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;8104:290;8415:10;8408:17;;;;8076:427;8458:33;8466:10;8478:12;8458:7;:33::i;:::-;7866:644;;;;;;;:::o;1452:326::-;1512:4;1769:1;1747:7;:19;;;:23;1740:30;;1452:326;;;:::o;9052:552::-;9233:1;9213:10;:17;:21;9209:388;;;9445:10;9439:17;9502:15;9489:10;9485:2;9481:19;9474:44;9209:388;9572:12;9565:20;;;;;;;;;;;:::i;:::-;;;;;;;;88:117:23;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:118::-;878:7;918:34;911:5;907:46;896:57;;841:118;;;:::o;965:122::-;1038:24;1056:5;1038:24;:::i;:::-;1031:5;1028:35;1018:63;;1077:1;1074;1067:12;1018:63;965:122;:::o;1093:139::-;1139:5;1177:6;1164:20;1155:29;;1193:33;1220:5;1193:33;:::i;:::-;1093:139;;;;:::o;1238:765::-;1324:6;1332;1340;1348;1397:3;1385:9;1376:7;1372:23;1368:33;1365:120;;;1404:79;;:::i;:::-;1365:120;1524:1;1549:53;1594:7;1585:6;1574:9;1570:22;1549:53;:::i;:::-;1539:63;;1495:117;1651:2;1677:53;1722:7;1713:6;1702:9;1698:22;1677:53;:::i;:::-;1667:63;;1622:118;1779:2;1805:53;1850:7;1841:6;1830:9;1826:22;1805:53;:::i;:::-;1795:63;;1750:118;1907:2;1933:53;1978:7;1969:6;1958:9;1954:22;1933:53;:::i;:::-;1923:63;;1878:118;1238:765;;;;;;;:::o;2009:101::-;2045:7;2085:18;2078:5;2074:30;2063:41;;2009:101;;;:::o;2116:120::-;2188:23;2205:5;2188:23;:::i;:::-;2181:5;2178:34;2168:62;;2226:1;2223;2216:12;2168:62;2116:120;:::o;2242:137::-;2287:5;2325:6;2312:20;2303:29;;2341:32;2367:5;2341:32;:::i;:::-;2242:137;;;;:::o;2385:327::-;2443:6;2492:2;2480:9;2471:7;2467:23;2463:32;2460:119;;;2498:79;;:::i;:::-;2460:119;2618:1;2643:52;2687:7;2678:6;2667:9;2663:22;2643:52;:::i;:::-;2633:62;;2589:116;2385:327;;;;:::o;2718:77::-;2755:7;2784:5;2773:16;;2718:77;;;:::o;2801:122::-;2874:24;2892:5;2874:24;:::i;:::-;2867:5;2864:35;2854:63;;2913:1;2910;2903:12;2854:63;2801:122;:::o;2929:139::-;2975:5;3013:6;3000:20;2991:29;;3029:33;3056:5;3029:33;:::i;:::-;2929:139;;;;:::o;3074:474::-;3142:6;3150;3199:2;3187:9;3178:7;3174:23;3170:32;3167:119;;;3205:79;;:::i;:::-;3167:119;3325:1;3350:53;3395:7;3386:6;3375:9;3371:22;3350:53;:::i;:::-;3340:63;;3296:117;3452:2;3478:53;3523:7;3514:6;3503:9;3499:22;3478:53;:::i;:::-;3468:63;;3423:118;3074:474;;;;;:::o;3554:90::-;3588:7;3631:5;3624:13;3617:21;3606:32;;3554:90;;;:::o;3650:109::-;3731:21;3746:5;3731:21;:::i;:::-;3726:3;3719:34;3650:109;;:::o;3765:210::-;3852:4;3890:2;3879:9;3875:18;3867:26;;3903:65;3965:1;3954:9;3950:17;3941:6;3903:65;:::i;:::-;3765:210;;;;:::o;3981:91::-;4017:7;4057:8;4050:5;4046:20;4035:31;;3981:91;;;:::o;4078:120::-;4150:23;4167:5;4150:23;:::i;:::-;4143:5;4140:34;4130:62;;4188:1;4185;4178:12;4130:62;4078:120;:::o;4204:137::-;4249:5;4287:6;4274:20;4265:29;;4303:32;4329:5;4303:32;:::i;:::-;4204:137;;;;:::o;4347:617::-;4423:6;4431;4439;4488:2;4476:9;4467:7;4463:23;4459:32;4456:119;;;4494:79;;:::i;:::-;4456:119;4614:1;4639:53;4684:7;4675:6;4664:9;4660:22;4639:53;:::i;:::-;4629:63;;4585:117;4741:2;4767:53;4812:7;4803:6;4792:9;4788:22;4767:53;:::i;:::-;4757:63;;4712:118;4869:2;4895:52;4939:7;4930:6;4919:9;4915:22;4895:52;:::i;:::-;4885:62;;4840:117;4347:617;;;;;:::o;4970:118::-;5057:24;5075:5;5057:24;:::i;:::-;5052:3;5045:37;4970:118;;:::o;5094:222::-;5187:4;5225:2;5214:9;5210:18;5202:26;;5238:71;5306:1;5295:9;5291:17;5282:6;5238:71;:::i;:::-;5094:222;;;;:::o;5322:474::-;5390:6;5398;5447:2;5435:9;5426:7;5422:23;5418:32;5415:119;;;5453:79;;:::i;:::-;5415:119;5573:1;5598:53;5643:7;5634:6;5623:9;5619:22;5598:53;:::i;:::-;5588:63;;5544:117;5700:2;5726:53;5771:7;5762:6;5751:9;5747:22;5726:53;:::i;:::-;5716:63;;5671:118;5322:474;;;;;:::o;5802:118::-;5889:24;5907:5;5889:24;:::i;:::-;5884:3;5877:37;5802:118;;:::o;5926:222::-;6019:4;6057:2;6046:9;6042:18;6034:26;;6070:71;6138:1;6127:9;6123:17;6114:6;6070:71;:::i;:::-;5926:222;;;;:::o;6154:472::-;6221:6;6229;6278:2;6266:9;6257:7;6253:23;6249:32;6246:119;;;6284:79;;:::i;:::-;6246:119;6404:1;6429:52;6473:7;6464:6;6453:9;6449:22;6429:52;:::i;:::-;6419:62;;6375:116;6530:2;6556:53;6601:7;6592:6;6581:9;6577:22;6556:53;:::i;:::-;6546:63;;6501:118;6154:472;;;;;:::o;6632:180::-;6680:77;6677:1;6670:88;6777:4;6774:1;6767:15;6801:4;6798:1;6791:15;6818:279;6858:7;6881:20;6899:1;6881:20;:::i;:::-;6876:25;;6915:20;6933:1;6915:20;:::i;:::-;6910:25;;6970:1;6967;6963:9;6992:30;7010:11;6992:30;:::i;:::-;6981:41;;7054:11;7045:7;7042:24;7032:58;;7070:18;;:::i;:::-;7032:58;6866:231;6818:279;;;;:::o;7103:191::-;7143:3;7162:20;7180:1;7162:20;:::i;:::-;7157:25;;7196:20;7214:1;7196:20;:::i;:::-;7191:25;;7239:1;7236;7232:9;7225:16;;7260:3;7257:1;7254:10;7251:36;;;7267:18;;:::i;:::-;7251:36;7103:191;;;;:::o;7300:85::-;7345:7;7374:5;7363:16;;7300:85;;;:::o;7391:60::-;7419:3;7440:5;7433:12;;7391:60;;;:::o;7457:158::-;7515:9;7548:61;7566:42;7575:32;7601:5;7575:32;:::i;:::-;7566:42;:::i;:::-;7548:61;:::i;:::-;7535:74;;7457:158;;;:::o;7621:147::-;7716:45;7755:5;7716:45;:::i;:::-;7711:3;7704:58;7621:147;;:::o;7774:88::-;7822:7;7851:5;7840:16;;7774:88;;;:::o;7868:164::-;7929:9;7962:64;7980:45;7989:35;8018:5;7989:35;:::i;:::-;7980:45;:::i;:::-;7962:64;:::i;:::-;7949:77;;7868:164;;;:::o;8038:153::-;8136:48;8178:5;8136:48;:::i;:::-;8131:3;8124:61;8038:153;;:::o;8197:1051::-;8513:4;8551:3;8540:9;8536:19;8528:27;;8565:71;8633:1;8622:9;8618:17;8609:6;8565:71;:::i;:::-;8646:72;8714:2;8703:9;8699:18;8690:6;8646:72;:::i;:::-;8728;8796:2;8785:9;8781:18;8772:6;8728:72;:::i;:::-;8810:80;8886:2;8875:9;8871:18;8862:6;8810:80;:::i;:::-;8900:84;8979:3;8968:9;8964:19;8955:6;8900:84;:::i;:::-;8994:81;9070:3;9059:9;9055:19;9046:6;8994:81;:::i;:::-;9085:73;9153:3;9142:9;9138:19;9129:6;9085:73;:::i;:::-;9168;9236:3;9225:9;9221:19;9212:6;9168:73;:::i;:::-;8197:1051;;;;;;;;;;;:::o;9254:143::-;9311:5;9342:6;9336:13;9327:22;;9358:33;9385:5;9358:33;:::i;:::-;9254:143;;;;:::o;9403:663::-;9491:6;9499;9507;9556:2;9544:9;9535:7;9531:23;9527:32;9524:119;;;9562:79;;:::i;:::-;9524:119;9682:1;9707:64;9763:7;9754:6;9743:9;9739:22;9707:64;:::i;:::-;9697:74;;9653:128;9820:2;9846:64;9902:7;9893:6;9882:9;9878:22;9846:64;:::i;:::-;9836:74;;9791:129;9959:2;9985:64;10041:7;10032:6;10021:9;10017:22;9985:64;:::i;:::-;9975:74;;9930:129;9403:663;;;;;:::o;10072:183::-;10110:3;10133:23;10150:5;10133:23;:::i;:::-;10124:32;;10178:18;10171:5;10168:29;10165:55;;10200:18;;:::i;:::-;10165:55;10247:1;10240:5;10236:13;10229:20;;10072:183;;;:::o;10261:194::-;10301:4;10321:20;10339:1;10321:20;:::i;:::-;10316:25;;10355:20;10373:1;10355:20;:::i;:::-;10350:25;;10399:1;10396;10392:9;10384:17;;10423:1;10417:4;10414:11;10411:37;;;10428:18;;:::i;:::-;10411:37;10261:194;;;;:::o;10461:115::-;10546:23;10563:5;10546:23;:::i;:::-;10541:3;10534:36;10461:115;;:::o;10582:438::-;10729:4;10767:2;10756:9;10752:18;10744:26;;10780:71;10848:1;10837:9;10833:17;10824:6;10780:71;:::i;:::-;10861:72;10929:2;10918:9;10914:18;10905:6;10861:72;:::i;:::-;10943:70;11009:2;10998:9;10994:18;10985:6;10943:70;:::i;:::-;10582:438;;;;;;:::o;11026:143::-;11083:5;11114:6;11108:13;11099:22;;11130:33;11157:5;11130:33;:::i;:::-;11026:143;;;;:::o;11175:351::-;11245:6;11294:2;11282:9;11273:7;11269:23;11265:32;11262:119;;;11300:79;;:::i;:::-;11262:119;11420:1;11445:64;11501:7;11492:6;11481:9;11477:22;11445:64;:::i;:::-;11435:74;;11391:128;11175:351;;;;:::o;11532:410::-;11572:7;11595:20;11613:1;11595:20;:::i;:::-;11590:25;;11629:20;11647:1;11629:20;:::i;:::-;11624:25;;11684:1;11681;11677:9;11706:30;11724:11;11706:30;:::i;:::-;11695:41;;11885:1;11876:7;11872:15;11869:1;11866:22;11846:1;11839:9;11819:83;11796:139;;11915:18;;:::i;:::-;11796:139;11580:362;11532:410;;;;:::o;11948:180::-;11996:77;11993:1;11986:88;12093:4;12090:1;12083:15;12117:4;12114:1;12107:15;12134:185;12174:1;12191:20;12209:1;12191:20;:::i;:::-;12186:25;;12225:20;12243:1;12225:20;:::i;:::-;12220:25;;12264:1;12254:35;;12269:18;;:::i;:::-;12254:35;12311:1;12308;12304:9;12299:14;;12134:185;;;;:::o;12325:442::-;12474:4;12512:2;12501:9;12497:18;12489:26;;12525:71;12593:1;12582:9;12578:17;12569:6;12525:71;:::i;:::-;12606:72;12674:2;12663:9;12659:18;12650:6;12606:72;:::i;:::-;12688;12756:2;12745:9;12741:18;12732:6;12688:72;:::i;:::-;12325:442;;;;;;:::o;12773:332::-;12894:4;12932:2;12921:9;12917:18;12909:26;;12945:71;13013:1;13002:9;12998:17;12989:6;12945:71;:::i;:::-;13026:72;13094:2;13083:9;13079:18;13070:6;13026:72;:::i;:::-;12773:332;;;;;:::o;13111:351::-;13181:6;13230:2;13218:9;13209:7;13205:23;13201:32;13198:119;;;13236:79;;:::i;:::-;13198:119;13356:1;13381:64;13437:7;13428:6;13417:9;13413:22;13381:64;:::i;:::-;13371:74;;13327:128;13111:351;;;;:::o;13468:169::-;13552:11;13586:6;13581:3;13574:19;13626:4;13621:3;13617:14;13602:29;;13468:169;;;;:::o;13643:241::-;13783:34;13779:1;13771:6;13767:14;13760:58;13852:24;13847:2;13839:6;13835:15;13828:49;13643:241;:::o;13890:366::-;14032:3;14053:67;14117:2;14112:3;14053:67;:::i;:::-;14046:74;;14129:93;14218:3;14129:93;:::i;:::-;14247:2;14242:3;14238:12;14231:19;;13890:366;;;:::o;14262:419::-;14428:4;14466:2;14455:9;14451:18;14443:26;;14515:9;14509:4;14505:20;14501:1;14490:9;14486:17;14479:47;14543:131;14669:4;14543:131;:::i;:::-;14535:139;;14262:419;;;:::o;14687:332::-;14808:4;14846:2;14835:9;14831:18;14823:26;;14859:71;14927:1;14916:9;14912:17;14903:6;14859:71;:::i;:::-;14940:72;15008:2;14997:9;14993:18;14984:6;14940:72;:::i;:::-;14687:332;;;;;:::o;15025:116::-;15095:21;15110:5;15095:21;:::i;:::-;15088:5;15085:32;15075:60;;15131:1;15128;15121:12;15075:60;15025:116;:::o;15147:137::-;15201:5;15232:6;15226:13;15217:22;;15248:30;15272:5;15248:30;:::i;:::-;15147:137;;;;:::o;15290:345::-;15357:6;15406:2;15394:9;15385:7;15381:23;15377:32;15374:119;;;15412:79;;:::i;:::-;15374:119;15532:1;15557:61;15610:7;15601:6;15590:9;15586:22;15557:61;:::i;:::-;15547:71;;15503:125;15290:345;;;;:::o;15641:229::-;15781:34;15777:1;15769:6;15765:14;15758:58;15850:12;15845:2;15837:6;15833:15;15826:37;15641:229;:::o;15876:366::-;16018:3;16039:67;16103:2;16098:3;16039:67;:::i;:::-;16032:74;;16115:93;16204:3;16115:93;:::i;:::-;16233:2;16228:3;16224:12;16217:19;;15876:366;;;:::o;16248:419::-;16414:4;16452:2;16441:9;16437:18;16429:26;;16501:9;16495:4;16491:20;16487:1;16476:9;16472:17;16465:47;16529:131;16655:4;16529:131;:::i;:::-;16521:139;;16248:419;;;:::o;16673:225::-;16813:34;16809:1;16801:6;16797:14;16790:58;16882:8;16877:2;16869:6;16865:15;16858:33;16673:225;:::o;16904:366::-;17046:3;17067:67;17131:2;17126:3;17067:67;:::i;:::-;17060:74;;17143:93;17232:3;17143:93;:::i;:::-;17261:2;17256:3;17252:12;17245:19;;16904:366;;;:::o;17276:419::-;17442:4;17480:2;17469:9;17465:18;17457:26;;17529:9;17523:4;17519:20;17515:1;17504:9;17500:17;17493:47;17557:131;17683:4;17557:131;:::i;:::-;17549:139;;17276:419;;;:::o;17701:98::-;17752:6;17786:5;17780:12;17770:22;;17701:98;;;:::o;17805:147::-;17906:11;17943:3;17928:18;;17805:147;;;;:::o;17958:246::-;18039:1;18049:113;18063:6;18060:1;18057:13;18049:113;;;18148:1;18143:3;18139:11;18133:18;18129:1;18124:3;18120:11;18113:39;18085:2;18082:1;18078:10;18073:15;;18049:113;;;18196:1;18187:6;18182:3;18178:16;18171:27;18020:184;17958:246;;;:::o;18210:386::-;18314:3;18342:38;18374:5;18342:38;:::i;:::-;18396:88;18477:6;18472:3;18396:88;:::i;:::-;18389:95;;18493:65;18551:6;18546:3;18539:4;18532:5;18528:16;18493:65;:::i;:::-;18583:6;18578:3;18574:16;18567:23;;18318:278;18210:386;;;;:::o;18602:271::-;18732:3;18754:93;18843:3;18834:6;18754:93;:::i;:::-;18747:100;;18864:3;18857:10;;18602:271;;;;:::o;18879:179::-;19019:31;19015:1;19007:6;19003:14;18996:55;18879:179;:::o;19064:366::-;19206:3;19227:67;19291:2;19286:3;19227:67;:::i;:::-;19220:74;;19303:93;19392:3;19303:93;:::i;:::-;19421:2;19416:3;19412:12;19405:19;;19064:366;;;:::o;19436:419::-;19602:4;19640:2;19629:9;19625:18;19617:26;;19689:9;19683:4;19679:20;19675:1;19664:9;19660:17;19653:47;19717:131;19843:4;19717:131;:::i;:::-;19709:139;;19436:419;;;:::o;19861:99::-;19913:6;19947:5;19941:12;19931:22;;19861:99;;;:::o;19966:102::-;20007:6;20058:2;20054:7;20049:2;20042:5;20038:14;20034:28;20024:38;;19966:102;;;:::o;20074:377::-;20162:3;20190:39;20223:5;20190:39;:::i;:::-;20245:71;20309:6;20304:3;20245:71;:::i;:::-;20238:78;;20325:65;20383:6;20378:3;20371:4;20364:5;20360:16;20325:65;:::i;:::-;20415:29;20437:6;20415:29;:::i;:::-;20410:3;20406:39;20399:46;;20166:285;20074:377;;;;:::o;20457:313::-;20570:4;20608:2;20597:9;20593:18;20585:26;;20657:9;20651:4;20647:20;20643:1;20632:9;20628:17;20621:47;20685:78;20758:4;20749:6;20685:78;:::i;:::-;20677:86;;20457:313;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2407400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"Sale(uint64,address)": "infinite",
								"buy(address,address,uint128,uint128)": "infinite",
								"buyerWithdrawAirdorp(uint64)": "infinite",
								"buyerWithdrawRefund(uint64)": "infinite",
								"getPenal(uint128,uint128)": "infinite",
								"getPoolAddress(address,address,uint24)": "infinite",
								"injectFutureToken(uint64)": "infinite",
								"profileEarn(uint64)": "434",
								"solderWithdrawStable(uint64)": "infinite",
								"userIfWithdraw1(address,uint256)": "3154",
								"userIfWithdraw2(address,uint256)": "3153",
								"userIfWithdraw3(address,uint256)": "3132",
								"userIfWithdraw4(address,uint256)": "3175"
							},
							"internal": {
								"getBuyer(uint64)": "2266",
								"getSolder(uint64)": "2266"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 536,
									"end": 10015,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 536,
									"end": 10015,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 536,
									"end": 10015,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 835,
									"end": 877,
									"name": "PUSH",
									"source": 0,
									"value": "1F98431C8AD98523631AE4A59F267346EA31F984"
								},
								{
									"begin": 806,
									"end": 877,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 806,
									"end": 877,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 806,
									"end": 877,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 806,
									"end": 877,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 806,
									"end": 877,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 806,
									"end": 877,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 806,
									"end": 877,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 806,
									"end": 877,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 806,
									"end": 877,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 806,
									"end": 877,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 806,
									"end": 877,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 806,
									"end": 877,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 806,
									"end": 877,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 806,
									"end": 877,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 806,
									"end": 877,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 806,
									"end": 877,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 806,
									"end": 877,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 806,
									"end": 877,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 806,
									"end": 877,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 806,
									"end": 877,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 927,
									"end": 969,
									"name": "PUSH",
									"source": 0,
									"value": "C36442B4A4522E871399CD717ABDD847AB11FE88"
								},
								{
									"begin": 884,
									"end": 969,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 884,
									"end": 969,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 884,
									"end": 969,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 884,
									"end": 969,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 884,
									"end": 969,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 884,
									"end": 969,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 884,
									"end": 969,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 884,
									"end": 969,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 884,
									"end": 969,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 884,
									"end": 969,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 884,
									"end": 969,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 884,
									"end": 969,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 884,
									"end": 969,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 884,
									"end": 969,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 884,
									"end": 969,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 884,
									"end": 969,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 884,
									"end": 969,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 884,
									"end": 969,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 884,
									"end": 969,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 884,
									"end": 969,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 978,
									"end": 1121,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 978,
									"end": 1121,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 978,
									"end": 1121,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 978,
									"end": 1121,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 978,
									"end": 1121,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 978,
									"end": 1121,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 978,
									"end": 1121,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 978,
									"end": 1121,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 978,
									"end": 1121,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 978,
									"end": 1121,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 978,
									"end": 1121,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 978,
									"end": 1121,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 978,
									"end": 1121,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 978,
									"end": 1121,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 978,
									"end": 1121,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 978,
									"end": 1121,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 978,
									"end": 1121,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 978,
									"end": 1121,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 978,
									"end": 1121,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 978,
									"end": 1121,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 978,
									"end": 1121,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 978,
									"end": 1121,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 978,
									"end": 1121,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 978,
									"end": 1121,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 978,
									"end": 1121,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 978,
									"end": 1121,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 978,
									"end": 1121,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 978,
									"end": 1121,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 978,
									"end": 1121,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 978,
									"end": 1121,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 978,
									"end": 1121,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 978,
									"end": 1121,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 978,
									"end": 1121,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 978,
									"end": 1121,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 978,
									"end": 1121,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1055,
									"end": 1068,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1042,
									"end": 1054,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1042,
									"end": 1054,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1042,
									"end": 1068,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1042,
									"end": 1068,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1042,
									"end": 1068,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1042,
									"end": 1068,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1042,
									"end": 1068,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1042,
									"end": 1068,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1042,
									"end": 1068,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1042,
									"end": 1068,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1042,
									"end": 1068,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1042,
									"end": 1068,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1042,
									"end": 1068,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1042,
									"end": 1068,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1042,
									"end": 1068,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1042,
									"end": 1068,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1042,
									"end": 1068,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1042,
									"end": 1068,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1042,
									"end": 1068,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1042,
									"end": 1068,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1099,
									"end": 1112,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1079,
									"end": 1091,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1079,
									"end": 1091,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1079,
									"end": 1113,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1079,
									"end": 1113,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1079,
									"end": 1113,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1079,
									"end": 1113,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1079,
									"end": 1113,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1079,
									"end": 1113,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFF"
								},
								{
									"begin": 1079,
									"end": 1113,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1079,
									"end": 1113,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1079,
									"end": 1113,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1079,
									"end": 1113,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1079,
									"end": 1113,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1079,
									"end": 1113,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFF"
								},
								{
									"begin": 1079,
									"end": 1113,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1079,
									"end": 1113,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1079,
									"end": 1113,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1079,
									"end": 1113,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1079,
									"end": 1113,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1079,
									"end": 1113,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 978,
									"end": 1121,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 978,
									"end": 1121,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 536,
									"end": 10015,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 536,
									"end": 10015,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 23,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 23
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 23
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 23,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 23,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 23
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 23,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "23"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 23,
									"value": "23"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 23,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "25"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 23,
									"value": "25"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 23
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "26"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 23
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 23
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 23,
									"value": "26"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 23,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 23
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "28"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 23,
									"value": "28"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 23
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 845,
									"end": 922,
									"name": "tag",
									"source": 23,
									"value": "14"
								},
								{
									"begin": 845,
									"end": 922,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 882,
									"end": 889,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 911,
									"end": 916,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 900,
									"end": 916,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 900,
									"end": 916,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 845,
									"end": 922,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 845,
									"end": 922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 23,
									"value": "15"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "31"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "14"
								},
								{
									"begin": 1001,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 23,
									"value": "31"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 23
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "32"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "DUP1",
									"source": 23
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 23
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 23,
									"value": "32"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 928,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 23,
									"value": "16"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 23
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "34"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "15"
								},
								{
									"begin": 1160,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 23,
									"value": "34"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 23
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 1056,
									"end": 1199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "tag",
									"source": 23,
									"value": "3"
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 1284,
									"end": 1290,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 1292,
									"end": 1298,
									"name": "DUP1",
									"source": 23
								},
								{
									"begin": 1341,
									"end": 1343,
									"name": "PUSH",
									"source": 23,
									"value": "40"
								},
								{
									"begin": 1329,
									"end": 1338,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 1320,
									"end": 1327,
									"name": "DUP6",
									"source": 23
								},
								{
									"begin": 1316,
									"end": 1339,
									"name": "SUB",
									"source": 23
								},
								{
									"begin": 1312,
									"end": 1344,
									"name": "SLT",
									"source": 23
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "ISZERO",
									"source": 23
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "36"
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "37"
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "8"
								},
								{
									"begin": 1347,
									"end": 1426,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "tag",
									"source": 23,
									"value": "37"
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "tag",
									"source": 23,
									"value": "36"
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 1467,
									"end": 1468,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "38"
								},
								{
									"begin": 1548,
									"end": 1555,
									"name": "DUP6",
									"source": 23
								},
								{
									"begin": 1539,
									"end": 1545,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 1528,
									"end": 1537,
									"name": "DUP7",
									"source": 23
								},
								{
									"begin": 1524,
									"end": 1546,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "13"
								},
								{
									"begin": 1492,
									"end": 1556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "tag",
									"source": 23,
									"value": "38"
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 1482,
									"end": 1556,
									"name": "SWAP3",
									"source": 23
								},
								{
									"begin": 1482,
									"end": 1556,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 1438,
									"end": 1566,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 1605,
									"end": 1607,
									"name": "PUSH",
									"source": 23,
									"value": "20"
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "39"
								},
								{
									"begin": 1687,
									"end": 1694,
									"name": "DUP6",
									"source": 23
								},
								{
									"begin": 1678,
									"end": 1684,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 1667,
									"end": 1676,
									"name": "DUP7",
									"source": 23
								},
								{
									"begin": 1663,
									"end": 1685,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "16"
								},
								{
									"begin": 1631,
									"end": 1695,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "tag",
									"source": 23,
									"value": "39"
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 1621,
									"end": 1695,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 1621,
									"end": 1695,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 1576,
									"end": 1705,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "SWAP3",
									"source": 23
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "SWAP3",
									"source": 23
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 1205,
									"end": 1712,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 536,
									"end": 10015,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 536,
									"end": 10015,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 536,
									"end": 10015,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 536,
									"end": 10015,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 536,
									"end": 10015,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 536,
									"end": 10015,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 536,
									"end": 10015,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 536,
									"end": 10015,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 536,
									"end": 10015,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201c9df1b035e4fabdd704b7c1b9093b589a4419f25669a21492bb2f973d19f01864736f6c63430008130033",
									".code": [
										{
											"begin": 536,
											"end": 10015,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "PUSH",
											"source": 0,
											"value": "98C50FDD"
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "PUSH",
											"source": 0,
											"value": "C3CF1AA6"
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "PUSH",
											"source": 0,
											"value": "C3CF1AA6"
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "PUSH",
											"source": 0,
											"value": "D91AF492"
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "PUSH",
											"source": 0,
											"value": "DF0905C6"
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "PUSH",
											"source": 0,
											"value": "FC993EA8"
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "PUSH",
											"source": 0,
											"value": "98C50FDD"
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "PUSH",
											"source": 0,
											"value": "B8D7F980"
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "PUSH",
											"source": 0,
											"value": "C0102DE4"
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "PUSH",
											"source": 0,
											"value": "D45431D"
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "PUSH",
											"source": 0,
											"value": "25AC3A73"
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "PUSH",
											"source": 0,
											"value": "2895CB7B"
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "PUSH",
											"source": 0,
											"value": "59DE2F60"
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "PUSH",
											"source": 0,
											"value": "696D6283"
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "PUSH",
											"source": 0,
											"value": "77BCD8A6"
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 536,
											"end": 10015,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1828,
											"end": 3096,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1828,
											"end": 3096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1828,
											"end": 3096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1828,
											"end": 3096,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1828,
											"end": 3096,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1828,
											"end": 3096,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1828,
											"end": 3096,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1828,
											"end": 3096,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1828,
											"end": 3096,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1828,
											"end": 3096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1828,
											"end": 3096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1828,
											"end": 3096,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1828,
											"end": 3096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1828,
											"end": 3096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1828,
											"end": 3096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1828,
											"end": 3096,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1828,
											"end": 3096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1828,
											"end": 3096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1828,
											"end": 3096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1828,
											"end": 3096,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1828,
											"end": 3096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1828,
											"end": 3096,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4534,
											"end": 5141,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4534,
											"end": 5141,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4534,
											"end": 5141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4534,
											"end": 5141,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4534,
											"end": 5141,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4534,
											"end": 5141,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4534,
											"end": 5141,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4534,
											"end": 5141,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4534,
											"end": 5141,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4534,
											"end": 5141,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4534,
											"end": 5141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 4534,
											"end": 5141,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4534,
											"end": 5141,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4534,
											"end": 5141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 4534,
											"end": 5141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4534,
											"end": 5141,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 4534,
											"end": 5141,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4534,
											"end": 5141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 4534,
											"end": 5141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4534,
											"end": 5141,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4534,
											"end": 5141,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4534,
											"end": 5141,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 7186,
											"end": 8619,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 7186,
											"end": 8619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7186,
											"end": 8619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 7186,
											"end": 8619,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7186,
											"end": 8619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7186,
											"end": 8619,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7186,
											"end": 8619,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7186,
											"end": 8619,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7186,
											"end": 8619,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7186,
											"end": 8619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7186,
											"end": 8619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 7186,
											"end": 8619,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7186,
											"end": 8619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7186,
											"end": 8619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 7186,
											"end": 8619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7186,
											"end": 8619,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 7186,
											"end": 8619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7186,
											"end": 8619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 7186,
											"end": 8619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7186,
											"end": 8619,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 7186,
											"end": 8619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7186,
											"end": 8619,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1382,
											"end": 1446,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1382,
											"end": 1446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1382,
											"end": 1446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1382,
											"end": 1446,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1382,
											"end": 1446,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1382,
											"end": 1446,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1382,
											"end": 1446,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1382,
											"end": 1446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1382,
											"end": 1446,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1382,
											"end": 1446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1382,
											"end": 1446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1382,
											"end": 1446,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1382,
											"end": 1446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1382,
											"end": 1446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1382,
											"end": 1446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1382,
											"end": 1446,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1382,
											"end": 1446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1382,
											"end": 1446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1382,
											"end": 1446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1382,
											"end": 1446,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1382,
											"end": 1446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1382,
											"end": 1446,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1382,
											"end": 1446,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1382,
											"end": 1446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1382,
											"end": 1446,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1382,
											"end": 1446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1382,
											"end": 1446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1382,
											"end": 1446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1382,
											"end": 1446,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1382,
											"end": 1446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1382,
											"end": 1446,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1382,
											"end": 1446,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1382,
											"end": 1446,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1382,
											"end": 1446,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1382,
											"end": 1446,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1382,
											"end": 1446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1382,
											"end": 1446,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 9076,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 8806,
											"end": 9076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 9076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 8806,
											"end": 9076,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8806,
											"end": 9076,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 9076,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 9076,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 9076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 9076,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 9076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 9076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 8806,
											"end": 9076,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 9076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 9076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 8806,
											"end": 9076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 9076,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 8806,
											"end": 9076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 9076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 8806,
											"end": 9076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 9076,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 8806,
											"end": 9076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 9076,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8806,
											"end": 9076,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 9076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 8806,
											"end": 9076,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 9076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 9076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8806,
											"end": 9076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 9076,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 8806,
											"end": 9076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 9076,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8806,
											"end": 9076,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 9076,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 9076,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 9076,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 9076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 9076,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5962,
											"end": 7099,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5962,
											"end": 7099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5962,
											"end": 7099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 5962,
											"end": 7099,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5962,
											"end": 7099,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5962,
											"end": 7099,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5962,
											"end": 7099,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5962,
											"end": 7099,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5962,
											"end": 7099,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5962,
											"end": 7099,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5962,
											"end": 7099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 5962,
											"end": 7099,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5962,
											"end": 7099,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5962,
											"end": 7099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 5962,
											"end": 7099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5962,
											"end": 7099,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 5962,
											"end": 7099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5962,
											"end": 7099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 5962,
											"end": 7099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5962,
											"end": 7099,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 5962,
											"end": 7099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5962,
											"end": 7099,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 9467,
											"end": 10010,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 9467,
											"end": 10010,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9467,
											"end": 10010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 9467,
											"end": 10010,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9467,
											"end": 10010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9467,
											"end": 10010,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9467,
											"end": 10010,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9467,
											"end": 10010,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9467,
											"end": 10010,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9467,
											"end": 10010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9467,
											"end": 10010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 9467,
											"end": 10010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9467,
											"end": 10010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9467,
											"end": 10010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 9467,
											"end": 10010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9467,
											"end": 10010,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 9467,
											"end": 10010,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9467,
											"end": 10010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 9467,
											"end": 10010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9467,
											"end": 10010,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 9467,
											"end": 10010,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9467,
											"end": 10010,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9467,
											"end": 10010,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9467,
											"end": 10010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 9467,
											"end": 10010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9467,
											"end": 10010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9467,
											"end": 10010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 9467,
											"end": 10010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9467,
											"end": 10010,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 9467,
											"end": 10010,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9467,
											"end": 10010,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9467,
											"end": 10010,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9467,
											"end": 10010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9467,
											"end": 10010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9467,
											"end": 10010,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9467,
											"end": 10010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9467,
											"end": 10010,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 1694,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1630,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1630,
											"end": 1694,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1630,
											"end": 1694,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 1694,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 1694,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 1694,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 1694,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 1694,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1630,
											"end": 1694,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 1694,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1630,
											"end": 1694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 1694,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1630,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1630,
											"end": 1694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 1694,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1630,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 1694,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1630,
											"end": 1694,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1630,
											"end": 1694,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 1694,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1630,
											"end": 1694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 1694,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1630,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 1694,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1630,
											"end": 1694,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 1694,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 1694,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 1694,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 1694,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 1694,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5909,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 5149,
											"end": 5909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 5149,
											"end": 5909,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5149,
											"end": 5909,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5909,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5909,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5909,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 5149,
											"end": 5909,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 5149,
											"end": 5909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5909,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 5149,
											"end": 5909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 5149,
											"end": 5909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5909,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 5149,
											"end": 5909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5909,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 8682,
											"end": 8731,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 8682,
											"end": 8731,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8682,
											"end": 8731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 8682,
											"end": 8731,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8682,
											"end": 8731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8682,
											"end": 8731,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8682,
											"end": 8731,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8682,
											"end": 8731,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8682,
											"end": 8731,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8682,
											"end": 8731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8682,
											"end": 8731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 8682,
											"end": 8731,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8682,
											"end": 8731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8682,
											"end": 8731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 8682,
											"end": 8731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8682,
											"end": 8731,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 8682,
											"end": 8731,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8682,
											"end": 8731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 8682,
											"end": 8731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8682,
											"end": 8731,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 8682,
											"end": 8731,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8682,
											"end": 8731,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3125,
											"end": 4405,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 3125,
											"end": 4405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3125,
											"end": 4405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3125,
											"end": 4405,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3125,
											"end": 4405,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3125,
											"end": 4405,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3125,
											"end": 4405,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3125,
											"end": 4405,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3125,
											"end": 4405,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3125,
											"end": 4405,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3125,
											"end": 4405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3125,
											"end": 4405,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3125,
											"end": 4405,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3125,
											"end": 4405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 3125,
											"end": 4405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3125,
											"end": 4405,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3125,
											"end": 4405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3125,
											"end": 4405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 3125,
											"end": 4405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3125,
											"end": 4405,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3125,
											"end": 4405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3125,
											"end": 4405,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1570,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1506,
											"end": 1570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1506,
											"end": 1570,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1570,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1570,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1570,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1570,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1570,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1506,
											"end": 1570,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1506,
											"end": 1570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1570,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1506,
											"end": 1570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1506,
											"end": 1570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1570,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1506,
											"end": 1570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1570,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1570,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1506,
											"end": 1570,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1506,
											"end": 1570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1570,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1506,
											"end": 1570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1570,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1570,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1570,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1570,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1570,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1570,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1805,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1741,
											"end": 1805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1741,
											"end": 1805,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1741,
											"end": 1805,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1805,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1805,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1805,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1805,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1741,
											"end": 1805,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1741,
											"end": 1805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1805,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1741,
											"end": 1805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1741,
											"end": 1805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1805,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1741,
											"end": 1805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1805,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1741,
											"end": 1805,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1741,
											"end": 1805,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1741,
											"end": 1805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1805,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1741,
											"end": 1805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1805,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1741,
											"end": 1805,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1805,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1805,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1805,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1805,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1828,
											"end": 3096,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1828,
											"end": 3096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 1944,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1956,
											"end": 1965,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1945,
											"end": 1955,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1945,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1945,
											"end": 1965,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1945,
											"end": 1965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1945,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1945,
											"end": 1965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1945,
											"end": 1965,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1945,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 1965,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1934,
											"end": 1965,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 1965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 1965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2068,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2069,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2084,
											"end": 2097,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2098,
											"end": 2104,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2105,
											"end": 2109,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 2069,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2069,
											"end": 2110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2069,
											"end": 2110,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2069,
											"end": 2110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2110,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2130,
											"end": 2139,
											"name": "PUSH",
											"source": 0,
											"value": "56BC75E2D63100000"
										},
										{
											"begin": 2124,
											"end": 2129,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2124,
											"end": 2139,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2121,
											"end": 2191,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2121,
											"end": 2191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2121,
											"end": 2191,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2179,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2162,
											"end": 2179,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2179,
											"name": "PUSH",
											"source": 0,
											"value": "E008B5F900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2162,
											"end": 2179,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2179,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2179,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2162,
											"end": 2179,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2179,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2162,
											"end": 2179,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2179,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2179,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2179,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2179,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2179,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2121,
											"end": 2191,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2121,
											"end": 2191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2201,
											"end": 2228,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2229,
											"end": 2542,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2229,
											"end": 2542,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2542,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2542,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2229,
											"end": 2542,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2542,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2229,
											"end": 2542,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2542,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2265,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2229,
											"end": 2542,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2229,
											"end": 2542,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2542,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2542,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2542,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2229,
											"end": 2542,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2288,
											"end": 2290,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2288,
											"end": 2290,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2288,
											"end": 2290,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2288,
											"end": 2290,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2288,
											"end": 2290,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2288,
											"end": 2290,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2288,
											"end": 2290,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2288,
											"end": 2290,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2288,
											"end": 2290,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2288,
											"end": 2290,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2288,
											"end": 2290,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2542,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2229,
											"end": 2542,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2542,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2542,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2542,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2229,
											"end": 2542,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2320,
											"end": 2335,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2542,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFF"
										},
										{
											"begin": 2229,
											"end": 2542,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2542,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2542,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2542,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2229,
											"end": 2542,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2366,
											"end": 2376,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2542,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2229,
											"end": 2542,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2542,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2542,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2542,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2229,
											"end": 2542,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2400,
											"end": 2409,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2542,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2229,
											"end": 2542,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2542,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2542,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2542,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2229,
											"end": 2542,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2437,
											"end": 2450,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2542,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2229,
											"end": 2542,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2542,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2542,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2542,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2229,
											"end": 2542,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2478,
											"end": 2488,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2542,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2229,
											"end": 2542,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2542,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2542,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2542,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2229,
											"end": 2542,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2529,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2542,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2229,
											"end": 2542,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2542,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2542,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2542,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2201,
											"end": 2542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2201,
											"end": 2542,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2567,
											"end": 2578,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2562,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2553,
											"end": 2566,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2563,
											"end": 2565,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2565,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2563,
											"end": 2565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2565,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2565,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2563,
											"end": 2565,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2565,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2565,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2563,
											"end": 2565,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2566,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2553,
											"end": 2566,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2566,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2553,
											"end": 2566,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2566,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2566,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2566,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2553,
											"end": 2566,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2566,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2566,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2566,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2566,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2553,
											"end": 2566,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2566,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2553,
											"end": 2566,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFF"
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFF"
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2625,
											"end": 2695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2664,
											"end": 2674,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2683,
											"end": 2687,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 2689,
											"end": 2694,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2632,
											"end": 2645,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 2625,
											"end": 2663,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2625,
											"end": 2663,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2625,
											"end": 2663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2625,
											"end": 2663,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2625,
											"end": 2695,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2625,
											"end": 2695,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2625,
											"end": 2695,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2625,
											"end": 2695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2625,
											"end": 2695,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2625,
											"end": 2695,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2625,
											"end": 2695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2625,
											"end": 2695,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2625,
											"end": 2695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2770,
											"end": 2819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2804,
											"end": 2812,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2813,
											"end": 2818,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2790,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 2770,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2770,
											"end": 2803,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2770,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2770,
											"end": 2803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2770,
											"end": 2819,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2770,
											"end": 2819,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2770,
											"end": 2819,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2770,
											"end": 2819,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2770,
											"end": 2819,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2770,
											"end": 2819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2770,
											"end": 2819,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2770,
											"end": 2819,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 2862,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2849,
											"end": 2862,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2849,
											"end": 2862,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 2862,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 2862,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 2862,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2849,
											"end": 2862,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 2862,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 2862,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 2862,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2849,
											"end": 2862,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2876,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2830,
											"end": 2876,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2876,
											"name": "PUSH",
											"source": 0,
											"value": "E8E33700"
										},
										{
											"begin": 2891,
											"end": 2904,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 2919,
											"end": 2925,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 2940,
											"end": 2945,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2960,
											"end": 2961,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2976,
											"end": 2980,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 2995,
											"end": 2996,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3019,
											"end": 3023,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 3055,
											"end": 3062,
											"name": "PUSH",
											"source": 0,
											"value": "E10"
										},
										{
											"begin": 3039,
											"end": 3054,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 3039,
											"end": 3062,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 3039,
											"end": 3062,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3039,
											"end": 3062,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3039,
											"end": 3062,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 3039,
											"end": 3062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3039,
											"end": 3062,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 3039,
											"end": 3062,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2830,
											"end": 3073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2830,
											"end": 3073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 3073,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3084,
											"end": 3086,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3084,
											"end": 3086,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3084,
											"end": 3088,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3084,
											"end": 3088,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3084,
											"end": 3088,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3084,
											"end": 3088,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3084,
											"end": 3088,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3084,
											"end": 3088,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3084,
											"end": 3088,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3084,
											"end": 3088,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3084,
											"end": 3088,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3084,
											"end": 3088,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3084,
											"end": 3088,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3084,
											"end": 3088,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3084,
											"end": 3088,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3084,
											"end": 3088,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3084,
											"end": 3088,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3084,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 3084,
											"end": 3088,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3084,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 3084,
											"end": 3088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3084,
											"end": 3088,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 3084,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3084,
											"end": 3088,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3084,
											"end": 3088,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3084,
											"end": 3088,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3084,
											"end": 3088,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3084,
											"end": 3088,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3084,
											"end": 3088,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3084,
											"end": 3088,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3084,
											"end": 3088,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3084,
											"end": 3088,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3084,
											"end": 3088,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3084,
											"end": 3088,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3084,
											"end": 3088,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3084,
											"end": 3088,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3084,
											"end": 3088,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3084,
											"end": 3088,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3084,
											"end": 3088,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3084,
											"end": 3088,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3084,
											"end": 3088,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3084,
											"end": 3088,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3084,
											"end": 3088,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3084,
											"end": 3088,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1923,
											"end": 3096,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1923,
											"end": 3096,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1923,
											"end": 3096,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1828,
											"end": 3096,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1828,
											"end": 3096,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1828,
											"end": 3096,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1828,
											"end": 3096,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1828,
											"end": 3096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4534,
											"end": 5141,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 4534,
											"end": 5141,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4674,
											"end": 4679,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4648,
											"end": 4656,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4648,
											"end": 4668,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4657,
											"end": 4667,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4648,
											"end": 4668,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4648,
											"end": 4668,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4648,
											"end": 4668,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4648,
											"end": 4668,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4648,
											"end": 4668,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4648,
											"end": 4668,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4648,
											"end": 4668,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4648,
											"end": 4668,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4648,
											"end": 4668,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4648,
											"end": 4668,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4648,
											"end": 4668,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4648,
											"end": 4668,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4648,
											"end": 4668,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4648,
											"end": 4668,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4648,
											"end": 4668,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4648,
											"end": 4673,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4669,
											"end": 4672,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4648,
											"end": 4673,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4648,
											"end": 4673,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4648,
											"end": 4673,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4648,
											"end": 4673,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4648,
											"end": 4673,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4648,
											"end": 4673,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4648,
											"end": 4673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4648,
											"end": 4673,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4648,
											"end": 4673,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4648,
											"end": 4673,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4648,
											"end": 4673,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4648,
											"end": 4673,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4648,
											"end": 4673,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4648,
											"end": 4673,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4648,
											"end": 4679,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4648,
											"end": 4679,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4648,
											"end": 4679,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4648,
											"end": 4679,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4648,
											"end": 4679,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4648,
											"end": 4679,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 4648,
											"end": 4679,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4648,
											"end": 4679,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4648,
											"end": 4679,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4648,
											"end": 4679,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4648,
											"end": 4679,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4648,
											"end": 4679,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4648,
											"end": 4679,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4648,
											"end": 4679,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4648,
											"end": 4679,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 4648,
											"end": 4679,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4648,
											"end": 4679,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4645,
											"end": 4710,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4645,
											"end": 4710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 4645,
											"end": 4710,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 4708,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4688,
											"end": 4708,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 4708,
											"name": "PUSH",
											"source": 0,
											"value": "4232716900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4688,
											"end": 4708,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 4708,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 4708,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4688,
											"end": 4708,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 4708,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4688,
											"end": 4708,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 4708,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 4708,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 4708,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 4708,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 4708,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4645,
											"end": 4710,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 4645,
											"end": 4710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4818,
											"end": 4828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4802,
											"end": 4828,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4802,
											"end": 4828,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4802,
											"end": 4816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 4812,
											"end": 4815,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4802,
											"end": 4811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 4802,
											"end": 4816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4802,
											"end": 4816,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 4802,
											"end": 4816,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4802,
											"end": 4828,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4802,
											"end": 4828,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4802,
											"end": 4828,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4799,
											"end": 4850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 4799,
											"end": 4850,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4837,
											"end": 4848,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4837,
											"end": 4848,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4837,
											"end": 4848,
											"name": "PUSH",
											"source": 0,
											"value": "D7C498BF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4837,
											"end": 4848,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4837,
											"end": 4848,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4837,
											"end": 4848,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4837,
											"end": 4848,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4837,
											"end": 4848,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4837,
											"end": 4848,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4837,
											"end": 4848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4837,
											"end": 4848,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4837,
											"end": 4848,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4837,
											"end": 4848,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4837,
											"end": 4848,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4799,
											"end": 4850,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 4799,
											"end": 4850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4907,
											"end": 4932,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4933,
											"end": 4942,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4933,
											"end": 4947,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4943,
											"end": 4946,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4933,
											"end": 4947,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4933,
											"end": 4947,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4933,
											"end": 4947,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4933,
											"end": 4947,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4933,
											"end": 4947,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4933,
											"end": 4947,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4933,
											"end": 4947,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4933,
											"end": 4947,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4933,
											"end": 4947,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4933,
											"end": 4947,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4933,
											"end": 4947,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4933,
											"end": 4947,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4933,
											"end": 4947,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4933,
											"end": 4947,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4933,
											"end": 4947,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4933,
											"end": 4962,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4933,
											"end": 4962,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4933,
											"end": 4962,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 4933,
											"end": 4962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4933,
											"end": 4962,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4933,
											"end": 4962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4933,
											"end": 4962,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4933,
											"end": 4962,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4933,
											"end": 4962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4933,
											"end": 4962,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4933,
											"end": 4962,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4933,
											"end": 4962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4907,
											"end": 4962,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4907,
											"end": 4962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4907,
											"end": 4962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4907,
											"end": 4962,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4973,
											"end": 5054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 5011,
											"end": 5021,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5030,
											"end": 5034,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 5036,
											"end": 5053,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4980,
											"end": 4992,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4980,
											"end": 4992,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4980,
											"end": 4992,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4980,
											"end": 4992,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4980,
											"end": 4992,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4980,
											"end": 4992,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4980,
											"end": 4992,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4980,
											"end": 4992,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4980,
											"end": 4992,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4980,
											"end": 4992,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4980,
											"end": 4992,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4973,
											"end": 5010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4973,
											"end": 5010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4973,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4973,
											"end": 5010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4973,
											"end": 5054,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4973,
											"end": 5054,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4973,
											"end": 5054,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4973,
											"end": 5054,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4973,
											"end": 5054,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4973,
											"end": 5054,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4973,
											"end": 5054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4973,
											"end": 5054,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 4973,
											"end": 5054,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5091,
											"end": 5095,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5065,
											"end": 5073,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5065,
											"end": 5085,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5074,
											"end": 5084,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5065,
											"end": 5085,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5065,
											"end": 5085,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5065,
											"end": 5085,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5065,
											"end": 5085,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5065,
											"end": 5085,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5065,
											"end": 5085,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5065,
											"end": 5085,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5065,
											"end": 5085,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5065,
											"end": 5085,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5065,
											"end": 5085,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5065,
											"end": 5085,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5065,
											"end": 5085,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5065,
											"end": 5085,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5065,
											"end": 5085,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5065,
											"end": 5085,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5065,
											"end": 5090,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5086,
											"end": 5089,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5065,
											"end": 5090,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5065,
											"end": 5090,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5065,
											"end": 5090,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5065,
											"end": 5090,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5065,
											"end": 5090,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5065,
											"end": 5090,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5065,
											"end": 5090,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5065,
											"end": 5090,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5065,
											"end": 5090,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5065,
											"end": 5090,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5065,
											"end": 5090,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5065,
											"end": 5090,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5065,
											"end": 5090,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5065,
											"end": 5090,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5065,
											"end": 5095,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5065,
											"end": 5095,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5065,
											"end": 5095,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5065,
											"end": 5095,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5065,
											"end": 5095,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5065,
											"end": 5095,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 5065,
											"end": 5095,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5065,
											"end": 5095,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5065,
											"end": 5095,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5065,
											"end": 5095,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5065,
											"end": 5095,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5065,
											"end": 5095,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5065,
											"end": 5095,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5065,
											"end": 5095,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5065,
											"end": 5095,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 5065,
											"end": 5095,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5065,
											"end": 5095,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5065,
											"end": 5095,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5132,
											"end": 5133,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5106,
											"end": 5115,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5106,
											"end": 5120,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5116,
											"end": 5119,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5120,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5106,
											"end": 5120,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5120,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5106,
											"end": 5120,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5120,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5120,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5120,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5106,
											"end": 5120,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5120,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5120,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5120,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5106,
											"end": 5120,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5120,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5106,
											"end": 5120,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5131,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5106,
											"end": 5131,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5131,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5106,
											"end": 5133,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5106,
											"end": 5133,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5133,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5133,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5133,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5133,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 5106,
											"end": 5133,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5133,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5133,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5133,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5133,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 5106,
											"end": 5133,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5133,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5133,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5133,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5133,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4580,
											"end": 5141,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4534,
											"end": 5141,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4534,
											"end": 5141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7186,
											"end": 8619,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 7186,
											"end": 8619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7245,
											"end": 7258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7259,
											"end": 7272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 7268,
											"end": 7271,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7259,
											"end": 7267,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 7259,
											"end": 7272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7259,
											"end": 7272,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 7259,
											"end": 7272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7245,
											"end": 7272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7245,
											"end": 7272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7283,
											"end": 7297,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7298,
											"end": 7312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7308,
											"end": 7311,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7298,
											"end": 7307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 7298,
											"end": 7312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7298,
											"end": 7312,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7298,
											"end": 7312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7283,
											"end": 7312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7283,
											"end": 7312,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7376,
											"end": 7381,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7364,
											"end": 7381,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7364,
											"end": 7381,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7364,
											"end": 7374,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7364,
											"end": 7381,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7364,
											"end": 7381,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7364,
											"end": 7381,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7356,
											"end": 7382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 7356,
											"end": 7382,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7356,
											"end": 7382,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7356,
											"end": 7382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7356,
											"end": 7382,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7356,
											"end": 7382,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 7356,
											"end": 7382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7487,
											"end": 7492,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7464,
											"end": 7492,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7464,
											"end": 7492,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7464,
											"end": 7472,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 7464,
											"end": 7480,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7473,
											"end": 7479,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7464,
											"end": 7480,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7464,
											"end": 7480,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7464,
											"end": 7480,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7464,
											"end": 7480,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7464,
											"end": 7480,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7464,
											"end": 7480,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7464,
											"end": 7480,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7464,
											"end": 7480,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7464,
											"end": 7480,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7464,
											"end": 7480,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7464,
											"end": 7480,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7464,
											"end": 7480,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7464,
											"end": 7480,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7464,
											"end": 7480,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7464,
											"end": 7480,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7464,
											"end": 7485,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7481,
											"end": 7484,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7464,
											"end": 7485,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7464,
											"end": 7485,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7464,
											"end": 7485,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7464,
											"end": 7485,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7464,
											"end": 7485,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7464,
											"end": 7485,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7464,
											"end": 7485,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7464,
											"end": 7485,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7464,
											"end": 7485,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7464,
											"end": 7485,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7464,
											"end": 7485,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7464,
											"end": 7485,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7464,
											"end": 7485,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7464,
											"end": 7485,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7464,
											"end": 7485,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7464,
											"end": 7485,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7464,
											"end": 7485,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7464,
											"end": 7485,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7464,
											"end": 7485,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7464,
											"end": 7485,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7464,
											"end": 7485,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7464,
											"end": 7485,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 7464,
											"end": 7485,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7464,
											"end": 7492,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7464,
											"end": 7492,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7464,
											"end": 7492,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7456,
											"end": 7493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 7456,
											"end": 7493,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7456,
											"end": 7493,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7456,
											"end": 7493,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7456,
											"end": 7493,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7456,
											"end": 7493,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 7456,
											"end": 7493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7546,
											"end": 7551,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7512,
											"end": 7551,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7512,
											"end": 7551,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7512,
											"end": 7527,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 7512,
											"end": 7539,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7528,
											"end": 7538,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7512,
											"end": 7539,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7512,
											"end": 7539,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7512,
											"end": 7539,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7512,
											"end": 7539,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7512,
											"end": 7539,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7512,
											"end": 7539,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7512,
											"end": 7539,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7512,
											"end": 7539,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7512,
											"end": 7539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7512,
											"end": 7539,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7512,
											"end": 7539,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7512,
											"end": 7539,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7512,
											"end": 7539,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7512,
											"end": 7539,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7512,
											"end": 7539,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7512,
											"end": 7544,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7540,
											"end": 7543,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7512,
											"end": 7544,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7512,
											"end": 7544,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7512,
											"end": 7544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7512,
											"end": 7544,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7512,
											"end": 7544,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7512,
											"end": 7544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7512,
											"end": 7544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7512,
											"end": 7544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7512,
											"end": 7544,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7512,
											"end": 7544,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7512,
											"end": 7544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7512,
											"end": 7544,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7512,
											"end": 7544,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7512,
											"end": 7544,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7512,
											"end": 7544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7512,
											"end": 7544,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7512,
											"end": 7544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7512,
											"end": 7544,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7512,
											"end": 7544,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7512,
											"end": 7544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7512,
											"end": 7544,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7512,
											"end": 7544,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 7512,
											"end": 7544,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7512,
											"end": 7551,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7512,
											"end": 7551,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7512,
											"end": 7551,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7504,
											"end": 7552,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 7504,
											"end": 7552,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7504,
											"end": 7552,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7504,
											"end": 7552,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7504,
											"end": 7552,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7504,
											"end": 7552,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 7504,
											"end": 7552,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7616,
											"end": 7621,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7604,
											"end": 7621,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7604,
											"end": 7621,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7604,
											"end": 7614,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7604,
											"end": 7621,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7604,
											"end": 7621,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7604,
											"end": 7621,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7596,
											"end": 7622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 7596,
											"end": 7622,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7596,
											"end": 7622,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7596,
											"end": 7622,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7596,
											"end": 7622,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7596,
											"end": 7622,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 7596,
											"end": 7622,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7635,
											"end": 7661,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7662,
											"end": 7671,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 7662,
											"end": 7676,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7672,
											"end": 7675,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7662,
											"end": 7676,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7662,
											"end": 7676,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7662,
											"end": 7676,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7662,
											"end": 7676,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7662,
											"end": 7676,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7662,
											"end": 7676,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7662,
											"end": 7676,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7662,
											"end": 7676,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7662,
											"end": 7676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7662,
											"end": 7676,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7662,
											"end": 7676,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7662,
											"end": 7676,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7662,
											"end": 7676,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7662,
											"end": 7676,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7662,
											"end": 7676,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7662,
											"end": 7689,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7662,
											"end": 7689,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7662,
											"end": 7689,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7662,
											"end": 7689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7662,
											"end": 7689,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7662,
											"end": 7689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7662,
											"end": 7689,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7662,
											"end": 7689,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7662,
											"end": 7689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7662,
											"end": 7689,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7662,
											"end": 7689,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7662,
											"end": 7689,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7635,
											"end": 7689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7635,
											"end": 7689,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7700,
											"end": 7722,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7723,
											"end": 7786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 7732,
											"end": 7741,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 7732,
											"end": 7746,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7742,
											"end": 7745,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7732,
											"end": 7746,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7732,
											"end": 7746,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7732,
											"end": 7746,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7732,
											"end": 7746,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7732,
											"end": 7746,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7732,
											"end": 7746,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7732,
											"end": 7746,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7732,
											"end": 7746,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7732,
											"end": 7746,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7732,
											"end": 7746,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7732,
											"end": 7746,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7732,
											"end": 7746,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7732,
											"end": 7746,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7732,
											"end": 7746,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7732,
											"end": 7746,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7732,
											"end": 7755,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7732,
											"end": 7755,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7732,
											"end": 7755,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7732,
											"end": 7755,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7732,
											"end": 7755,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7732,
											"end": 7755,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7732,
											"end": 7755,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7732,
											"end": 7755,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7732,
											"end": 7755,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7732,
											"end": 7755,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7732,
											"end": 7755,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7732,
											"end": 7755,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7756,
											"end": 7765,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 7756,
											"end": 7770,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7766,
											"end": 7769,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 7756,
											"end": 7770,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7756,
											"end": 7770,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7756,
											"end": 7770,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7756,
											"end": 7770,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7756,
											"end": 7770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7756,
											"end": 7770,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7756,
											"end": 7770,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7756,
											"end": 7770,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7756,
											"end": 7770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7756,
											"end": 7770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7756,
											"end": 7770,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7756,
											"end": 7770,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7756,
											"end": 7770,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7756,
											"end": 7770,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7756,
											"end": 7770,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7756,
											"end": 7785,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7756,
											"end": 7785,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7756,
											"end": 7785,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 7756,
											"end": 7785,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7756,
											"end": 7785,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7756,
											"end": 7785,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7756,
											"end": 7785,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7756,
											"end": 7785,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7756,
											"end": 7785,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7756,
											"end": 7785,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7756,
											"end": 7785,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7756,
											"end": 7785,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 7723,
											"end": 7786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7786,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 7723,
											"end": 7786,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7700,
											"end": 7786,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7700,
											"end": 7786,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7797,
											"end": 7808,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7809,
											"end": 7836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 7821,
											"end": 7835,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7809,
											"end": 7820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 7809,
											"end": 7836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7809,
											"end": 7836,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 7809,
											"end": 7836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7797,
											"end": 7836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7797,
											"end": 7836,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7865,
											"end": 7961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 7927,
											"end": 7931,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 7947,
											"end": 7950,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7872,
											"end": 7890,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7865,
											"end": 7904,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7865,
											"end": 7904,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7865,
											"end": 7904,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 7865,
											"end": 7904,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7865,
											"end": 7961,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7865,
											"end": 7961,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7865,
											"end": 7961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7865,
											"end": 7961,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7865,
											"end": 7961,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7865,
											"end": 7961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7865,
											"end": 7961,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 7865,
											"end": 7961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8017,
											"end": 8120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 8071,
											"end": 8076,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8106,
											"end": 8109,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8091,
											"end": 8105,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8091,
											"end": 8109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 8091,
											"end": 8109,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8091,
											"end": 8109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8091,
											"end": 8109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 8091,
											"end": 8109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8091,
											"end": 8109,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 8091,
											"end": 8109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8024,
											"end": 8042,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8017,
											"end": 8056,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8017,
											"end": 8056,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8017,
											"end": 8056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 8017,
											"end": 8056,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8017,
											"end": 8120,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8017,
											"end": 8120,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8017,
											"end": 8120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8017,
											"end": 8120,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8017,
											"end": 8120,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8017,
											"end": 8120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8017,
											"end": 8120,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 8017,
											"end": 8120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8164,
											"end": 8168,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8131,
											"end": 8146,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8147,
											"end": 8157,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8131,
											"end": 8163,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8159,
											"end": 8162,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 8131,
											"end": 8163,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8131,
											"end": 8163,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8131,
											"end": 8163,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8131,
											"end": 8163,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8131,
											"end": 8163,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8131,
											"end": 8163,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8131,
											"end": 8163,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8131,
											"end": 8163,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8131,
											"end": 8163,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8131,
											"end": 8163,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8131,
											"end": 8163,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8131,
											"end": 8163,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8131,
											"end": 8163,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8131,
											"end": 8163,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8131,
											"end": 8168,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8131,
											"end": 8168,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8131,
											"end": 8168,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8131,
											"end": 8168,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8131,
											"end": 8168,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8131,
											"end": 8168,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8131,
											"end": 8168,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8131,
											"end": 8168,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 8131,
											"end": 8168,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8131,
											"end": 8168,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8131,
											"end": 8168,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8131,
											"end": 8168,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8131,
											"end": 8168,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8131,
											"end": 8168,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8131,
											"end": 8168,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 8131,
											"end": 8168,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8131,
											"end": 8168,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8131,
											"end": 8168,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8211,
											"end": 8212,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8184,
											"end": 8193,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 8184,
											"end": 8198,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8194,
											"end": 8197,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8198,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8184,
											"end": 8198,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8198,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8184,
											"end": 8198,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8198,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8198,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8198,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8184,
											"end": 8198,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8198,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8198,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8198,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8198,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8184,
											"end": 8198,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8198,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8184,
											"end": 8198,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8209,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8184,
											"end": 8209,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8209,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8184,
											"end": 8209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8209,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8209,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8184,
											"end": 8209,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8209,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8209,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8184,
											"end": 8209,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8212,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8184,
											"end": 8212,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8212,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 8574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 8181,
											"end": 8574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8270,
											"end": 8275,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8236,
											"end": 8275,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8236,
											"end": 8275,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8236,
											"end": 8251,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 8236,
											"end": 8263,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8252,
											"end": 8262,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8236,
											"end": 8263,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8236,
											"end": 8263,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8236,
											"end": 8263,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8236,
											"end": 8263,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8236,
											"end": 8263,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8236,
											"end": 8263,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8236,
											"end": 8263,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8236,
											"end": 8263,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8236,
											"end": 8263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8236,
											"end": 8263,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8236,
											"end": 8263,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8236,
											"end": 8263,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8236,
											"end": 8263,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8236,
											"end": 8263,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8236,
											"end": 8263,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8236,
											"end": 8268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8264,
											"end": 8267,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 8236,
											"end": 8268,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8236,
											"end": 8268,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8236,
											"end": 8268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8236,
											"end": 8268,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8236,
											"end": 8268,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8236,
											"end": 8268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8236,
											"end": 8268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8236,
											"end": 8268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8236,
											"end": 8268,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8236,
											"end": 8268,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8236,
											"end": 8268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8236,
											"end": 8268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8236,
											"end": 8268,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8236,
											"end": 8268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8236,
											"end": 8268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8236,
											"end": 8268,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8236,
											"end": 8268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8236,
											"end": 8268,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8236,
											"end": 8268,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8236,
											"end": 8268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8236,
											"end": 8268,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8236,
											"end": 8268,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8236,
											"end": 8268,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8236,
											"end": 8275,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8236,
											"end": 8275,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8236,
											"end": 8275,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8228,
											"end": 8276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 8228,
											"end": 8276,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8228,
											"end": 8276,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8228,
											"end": 8276,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8228,
											"end": 8276,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8228,
											"end": 8276,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 8228,
											"end": 8276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8291,
											"end": 8304,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8329,
											"end": 8338,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 8329,
											"end": 8343,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8339,
											"end": 8342,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 8329,
											"end": 8343,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8329,
											"end": 8343,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8329,
											"end": 8343,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8329,
											"end": 8343,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8329,
											"end": 8343,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8329,
											"end": 8343,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8329,
											"end": 8343,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8329,
											"end": 8343,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8329,
											"end": 8343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8329,
											"end": 8343,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8329,
											"end": 8343,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8329,
											"end": 8343,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8329,
											"end": 8343,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8329,
											"end": 8343,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8329,
											"end": 8343,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8329,
											"end": 8358,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8329,
											"end": 8358,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8329,
											"end": 8358,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 8329,
											"end": 8358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8329,
											"end": 8358,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8329,
											"end": 8358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8329,
											"end": 8358,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8329,
											"end": 8358,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8329,
											"end": 8358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8329,
											"end": 8358,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8329,
											"end": 8358,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8329,
											"end": 8358,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8305,
											"end": 8314,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 8305,
											"end": 8319,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8315,
											"end": 8318,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 8305,
											"end": 8319,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8305,
											"end": 8319,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8305,
											"end": 8319,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8305,
											"end": 8319,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8305,
											"end": 8319,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8305,
											"end": 8319,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8305,
											"end": 8319,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8305,
											"end": 8319,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8305,
											"end": 8319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8305,
											"end": 8319,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8305,
											"end": 8319,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8305,
											"end": 8319,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8305,
											"end": 8319,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8305,
											"end": 8319,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8305,
											"end": 8319,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8305,
											"end": 8328,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8305,
											"end": 8328,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8305,
											"end": 8328,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8305,
											"end": 8328,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8305,
											"end": 8328,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8305,
											"end": 8328,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8305,
											"end": 8328,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8305,
											"end": 8328,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8305,
											"end": 8328,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8305,
											"end": 8328,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8305,
											"end": 8328,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8305,
											"end": 8328,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8305,
											"end": 8358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 8305,
											"end": 8358,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8305,
											"end": 8358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8305,
											"end": 8358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 8305,
											"end": 8358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8305,
											"end": 8358,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 8305,
											"end": 8358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8291,
											"end": 8358,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8291,
											"end": 8358,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8291,
											"end": 8358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8291,
											"end": 8358,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8400,
											"end": 8510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 8458,
											"end": 8471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 8467,
											"end": 8470,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 8458,
											"end": 8466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 8458,
											"end": 8471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8458,
											"end": 8471,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 8458,
											"end": 8471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8490,
											"end": 8495,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8407,
											"end": 8425,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8400,
											"end": 8439,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8400,
											"end": 8439,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8400,
											"end": 8439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 8400,
											"end": 8439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8400,
											"end": 8510,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8400,
											"end": 8510,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8400,
											"end": 8510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8400,
											"end": 8510,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8400,
											"end": 8510,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8400,
											"end": 8510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8400,
											"end": 8510,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 8400,
											"end": 8510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8558,
											"end": 8562,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8525,
											"end": 8540,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 8525,
											"end": 8552,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8541,
											"end": 8551,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8525,
											"end": 8552,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8525,
											"end": 8552,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8525,
											"end": 8552,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8525,
											"end": 8552,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8525,
											"end": 8552,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8525,
											"end": 8552,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8525,
											"end": 8552,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8525,
											"end": 8552,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8525,
											"end": 8552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8525,
											"end": 8552,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8525,
											"end": 8552,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8525,
											"end": 8552,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8525,
											"end": 8552,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8525,
											"end": 8552,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8525,
											"end": 8552,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8525,
											"end": 8557,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8553,
											"end": 8556,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 8525,
											"end": 8557,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8525,
											"end": 8557,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8525,
											"end": 8557,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8525,
											"end": 8557,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8525,
											"end": 8557,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8525,
											"end": 8557,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8525,
											"end": 8557,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8525,
											"end": 8557,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8525,
											"end": 8557,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8525,
											"end": 8557,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8525,
											"end": 8557,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8525,
											"end": 8557,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8525,
											"end": 8557,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8525,
											"end": 8557,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8525,
											"end": 8562,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8525,
											"end": 8562,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8525,
											"end": 8562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8525,
											"end": 8562,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8525,
											"end": 8562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8525,
											"end": 8562,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8525,
											"end": 8562,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8525,
											"end": 8562,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 8525,
											"end": 8562,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8525,
											"end": 8562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8525,
											"end": 8562,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8525,
											"end": 8562,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8525,
											"end": 8562,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8525,
											"end": 8562,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8525,
											"end": 8562,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 8525,
											"end": 8562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8525,
											"end": 8562,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8525,
											"end": 8562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8213,
											"end": 8574,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 8574,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 8181,
											"end": 8574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8610,
											"end": 8611,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 8584,
											"end": 8593,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 8584,
											"end": 8598,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8594,
											"end": 8597,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 8584,
											"end": 8598,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8584,
											"end": 8598,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8584,
											"end": 8598,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8584,
											"end": 8598,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8584,
											"end": 8598,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8584,
											"end": 8598,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8584,
											"end": 8598,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8584,
											"end": 8598,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8584,
											"end": 8598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8584,
											"end": 8598,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8584,
											"end": 8598,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8584,
											"end": 8598,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8584,
											"end": 8598,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8584,
											"end": 8598,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8584,
											"end": 8598,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8584,
											"end": 8609,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8584,
											"end": 8609,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8584,
											"end": 8609,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8584,
											"end": 8611,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8584,
											"end": 8611,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8584,
											"end": 8611,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8584,
											"end": 8611,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8584,
											"end": 8611,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8584,
											"end": 8611,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8584,
											"end": 8611,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8584,
											"end": 8611,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 8584,
											"end": 8611,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8584,
											"end": 8611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8584,
											"end": 8611,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8584,
											"end": 8611,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8584,
											"end": 8611,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8584,
											"end": 8611,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8584,
											"end": 8611,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 8584,
											"end": 8611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8584,
											"end": 8611,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8584,
											"end": 8611,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7234,
											"end": 8619,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7234,
											"end": 8619,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7234,
											"end": 8619,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7234,
											"end": 8619,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7234,
											"end": 8619,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7186,
											"end": 8619,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7186,
											"end": 8619,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1382,
											"end": 1446,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1382,
											"end": 1446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1382,
											"end": 1446,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1382,
											"end": 1446,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1382,
											"end": 1446,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1382,
											"end": 1446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1382,
											"end": 1446,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1382,
											"end": 1446,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1382,
											"end": 1446,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1382,
											"end": 1446,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1382,
											"end": 1446,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1382,
											"end": 1446,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1382,
											"end": 1446,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1382,
											"end": 1446,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1382,
											"end": 1446,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1382,
											"end": 1446,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1382,
											"end": 1446,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1382,
											"end": 1446,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1382,
											"end": 1446,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1382,
											"end": 1446,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1382,
											"end": 1446,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1382,
											"end": 1446,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1382,
											"end": 1446,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1382,
											"end": 1446,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1382,
											"end": 1446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1382,
											"end": 1446,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1382,
											"end": 1446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1382,
											"end": 1446,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1382,
											"end": 1446,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1382,
											"end": 1446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1382,
											"end": 1446,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1382,
											"end": 1446,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1382,
											"end": 1446,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1382,
											"end": 1446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1382,
											"end": 1446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 9076,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 8806,
											"end": 9076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8892,
											"end": 8908,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8949,
											"end": 8961,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8949,
											"end": 8961,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8949,
											"end": 8961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8949,
											"end": 8961,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8949,
											"end": 8961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8949,
											"end": 8961,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8949,
											"end": 8961,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8949,
											"end": 8961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8949,
											"end": 8961,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8949,
											"end": 8961,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8949,
											"end": 8961,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 8970,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8931,
											"end": 8970,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 8970,
											"name": "PUSH",
											"source": 0,
											"value": "1698EE82"
										},
										{
											"begin": 8985,
											"end": 8991,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9006,
											"end": 9012,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9027,
											"end": 9031,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 9042,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8931,
											"end": 9042,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 9042,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 9042,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8931,
											"end": 9042,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 9042,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 8931,
											"end": 9042,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 9042,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 9042,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 9042,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8931,
											"end": 9042,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 9042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 8931,
											"end": 9042,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 9042,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 9042,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 9042,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 9042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 8931,
											"end": 9042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 9042,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 8931,
											"end": 9042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 9042,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8931,
											"end": 9042,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8931,
											"end": 9042,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 9042,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 9042,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 9042,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 9042,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 9042,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 9042,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 9042,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 9042,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 9042,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 9042,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 9042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 8931,
											"end": 9042,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 9042,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 9042,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8931,
											"end": 9042,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 9042,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 9042,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 9042,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8931,
											"end": 9042,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 9042,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 8931,
											"end": 9042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 9042,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 9042,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 9042,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 9042,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 9042,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8931,
											"end": 9042,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 9042,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 9042,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8931,
											"end": 9042,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 9042,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8931,
											"end": 9042,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 9042,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 9042,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 9042,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 9042,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 9042,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 9042,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8931,
											"end": 9042,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 9042,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 9042,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 9042,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 9042,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 9042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 8931,
											"end": 9042,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 9042,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 9042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 8931,
											"end": 9042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 9042,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 8931,
											"end": 9042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8920,
											"end": 9042,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8920,
											"end": 9042,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 9076,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 9076,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 9076,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 9076,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 9076,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 9076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5962,
											"end": 7099,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 5962,
											"end": 7099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6022,
											"end": 6036,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6037,
											"end": 6051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 6047,
											"end": 6050,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6037,
											"end": 6046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 6037,
											"end": 6051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6037,
											"end": 6051,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 6037,
											"end": 6051,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6022,
											"end": 6051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6022,
											"end": 6051,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6115,
											"end": 6121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6103,
											"end": 6121,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6103,
											"end": 6121,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6103,
											"end": 6113,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 6103,
											"end": 6121,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6103,
											"end": 6121,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6103,
											"end": 6121,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6095,
											"end": 6122,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 6095,
											"end": 6122,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6095,
											"end": 6122,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6095,
											"end": 6122,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6095,
											"end": 6122,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6095,
											"end": 6122,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 6095,
											"end": 6122,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6204,
											"end": 6212,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 6204,
											"end": 6220,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6213,
											"end": 6219,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6204,
											"end": 6220,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6204,
											"end": 6220,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6204,
											"end": 6220,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6204,
											"end": 6220,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6204,
											"end": 6220,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6204,
											"end": 6220,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6204,
											"end": 6220,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6204,
											"end": 6220,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6204,
											"end": 6220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6204,
											"end": 6220,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6204,
											"end": 6220,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6204,
											"end": 6220,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6204,
											"end": 6220,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6204,
											"end": 6220,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6204,
											"end": 6220,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6204,
											"end": 6225,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6221,
											"end": 6224,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6204,
											"end": 6225,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6204,
											"end": 6225,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6204,
											"end": 6225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6204,
											"end": 6225,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6204,
											"end": 6225,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6204,
											"end": 6225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6204,
											"end": 6225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6204,
											"end": 6225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6204,
											"end": 6225,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6204,
											"end": 6225,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6204,
											"end": 6225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6204,
											"end": 6225,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6204,
											"end": 6225,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6204,
											"end": 6225,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6204,
											"end": 6225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6204,
											"end": 6225,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6204,
											"end": 6225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6204,
											"end": 6225,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6204,
											"end": 6225,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6204,
											"end": 6225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6204,
											"end": 6225,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6204,
											"end": 6225,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6204,
											"end": 6225,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6196,
											"end": 6226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 6196,
											"end": 6226,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6196,
											"end": 6226,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6196,
											"end": 6226,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6196,
											"end": 6226,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6196,
											"end": 6226,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 6196,
											"end": 6226,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6312,
											"end": 6317,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6278,
											"end": 6317,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6278,
											"end": 6317,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6278,
											"end": 6293,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 6278,
											"end": 6305,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6294,
											"end": 6304,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 6278,
											"end": 6305,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6278,
											"end": 6305,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6278,
											"end": 6305,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6278,
											"end": 6305,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6278,
											"end": 6305,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6278,
											"end": 6305,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6278,
											"end": 6305,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6278,
											"end": 6305,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6278,
											"end": 6305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6278,
											"end": 6305,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6278,
											"end": 6305,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6278,
											"end": 6305,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6278,
											"end": 6305,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6278,
											"end": 6305,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6278,
											"end": 6305,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6278,
											"end": 6310,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6306,
											"end": 6309,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6278,
											"end": 6310,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6278,
											"end": 6310,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6278,
											"end": 6310,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6278,
											"end": 6310,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6278,
											"end": 6310,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6278,
											"end": 6310,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6278,
											"end": 6310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6278,
											"end": 6310,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6278,
											"end": 6310,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6278,
											"end": 6310,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6278,
											"end": 6310,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6278,
											"end": 6310,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6278,
											"end": 6310,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6278,
											"end": 6310,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6278,
											"end": 6310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6278,
											"end": 6310,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6278,
											"end": 6310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6278,
											"end": 6310,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6278,
											"end": 6310,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6278,
											"end": 6310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6278,
											"end": 6310,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6278,
											"end": 6310,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6278,
											"end": 6310,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6278,
											"end": 6317,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6278,
											"end": 6317,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6278,
											"end": 6317,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6270,
											"end": 6318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 6270,
											"end": 6318,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6270,
											"end": 6318,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6270,
											"end": 6318,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6270,
											"end": 6318,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6270,
											"end": 6318,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 6270,
											"end": 6318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6329,
											"end": 6355,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6356,
											"end": 6365,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6356,
											"end": 6370,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6366,
											"end": 6369,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6356,
											"end": 6370,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6356,
											"end": 6370,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6356,
											"end": 6370,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6356,
											"end": 6370,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6356,
											"end": 6370,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6356,
											"end": 6370,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6356,
											"end": 6370,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6356,
											"end": 6370,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6356,
											"end": 6370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6356,
											"end": 6370,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6356,
											"end": 6370,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6356,
											"end": 6370,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6356,
											"end": 6370,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6356,
											"end": 6370,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6356,
											"end": 6370,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6356,
											"end": 6383,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6356,
											"end": 6383,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6356,
											"end": 6383,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6356,
											"end": 6383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6356,
											"end": 6383,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6356,
											"end": 6383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6356,
											"end": 6383,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6356,
											"end": 6383,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6356,
											"end": 6383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6356,
											"end": 6383,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6356,
											"end": 6383,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6356,
											"end": 6383,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6329,
											"end": 6383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6329,
											"end": 6383,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6394,
											"end": 6407,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6432,
											"end": 6441,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6432,
											"end": 6446,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6442,
											"end": 6445,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6432,
											"end": 6446,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6432,
											"end": 6446,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6432,
											"end": 6446,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6432,
											"end": 6446,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6432,
											"end": 6446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6432,
											"end": 6446,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6432,
											"end": 6446,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6446,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6432,
											"end": 6446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6432,
											"end": 6446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6432,
											"end": 6446,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6432,
											"end": 6446,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6446,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6432,
											"end": 6446,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6432,
											"end": 6446,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6432,
											"end": 6461,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6432,
											"end": 6461,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6432,
											"end": 6461,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 6432,
											"end": 6461,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6432,
											"end": 6461,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6432,
											"end": 6461,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6432,
											"end": 6461,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6432,
											"end": 6461,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6432,
											"end": 6461,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6432,
											"end": 6461,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6432,
											"end": 6461,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6432,
											"end": 6461,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6408,
											"end": 6417,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6408,
											"end": 6422,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6418,
											"end": 6421,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6408,
											"end": 6422,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6408,
											"end": 6422,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6408,
											"end": 6422,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6408,
											"end": 6422,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6408,
											"end": 6422,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6408,
											"end": 6422,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6408,
											"end": 6422,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6408,
											"end": 6422,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6408,
											"end": 6422,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6408,
											"end": 6422,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6408,
											"end": 6422,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6408,
											"end": 6422,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6408,
											"end": 6422,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6408,
											"end": 6422,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6408,
											"end": 6422,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6408,
											"end": 6431,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6408,
											"end": 6431,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6408,
											"end": 6431,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6408,
											"end": 6431,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6408,
											"end": 6431,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6408,
											"end": 6431,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6408,
											"end": 6431,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6408,
											"end": 6431,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6408,
											"end": 6431,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6408,
											"end": 6431,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6408,
											"end": 6431,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6408,
											"end": 6431,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6408,
											"end": 6461,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 6408,
											"end": 6461,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6408,
											"end": 6461,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6408,
											"end": 6461,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 6408,
											"end": 6461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6408,
											"end": 6461,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 6408,
											"end": 6461,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6394,
											"end": 6461,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6394,
											"end": 6461,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6394,
											"end": 6461,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6394,
											"end": 6461,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6472,
											"end": 6494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6495,
											"end": 6558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 6504,
											"end": 6513,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6504,
											"end": 6518,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6514,
											"end": 6517,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6504,
											"end": 6518,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6504,
											"end": 6518,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6504,
											"end": 6518,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6504,
											"end": 6518,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6504,
											"end": 6518,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6504,
											"end": 6518,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6504,
											"end": 6518,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6504,
											"end": 6518,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6504,
											"end": 6518,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6504,
											"end": 6518,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6504,
											"end": 6518,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6504,
											"end": 6518,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6504,
											"end": 6518,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6504,
											"end": 6518,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6504,
											"end": 6518,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6504,
											"end": 6527,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6504,
											"end": 6527,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6504,
											"end": 6527,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6504,
											"end": 6527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6504,
											"end": 6527,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6504,
											"end": 6527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6504,
											"end": 6527,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6504,
											"end": 6527,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6504,
											"end": 6527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6504,
											"end": 6527,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6504,
											"end": 6527,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6504,
											"end": 6527,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6528,
											"end": 6537,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6528,
											"end": 6542,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6538,
											"end": 6541,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 6528,
											"end": 6542,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6528,
											"end": 6542,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6528,
											"end": 6542,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6528,
											"end": 6542,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6528,
											"end": 6542,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6528,
											"end": 6542,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6528,
											"end": 6542,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6528,
											"end": 6542,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6528,
											"end": 6542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6528,
											"end": 6542,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6528,
											"end": 6542,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6528,
											"end": 6542,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6528,
											"end": 6542,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6528,
											"end": 6542,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6528,
											"end": 6542,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6528,
											"end": 6557,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6528,
											"end": 6557,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6528,
											"end": 6557,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 6528,
											"end": 6557,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6528,
											"end": 6557,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6528,
											"end": 6557,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6528,
											"end": 6557,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6528,
											"end": 6557,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6528,
											"end": 6557,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6528,
											"end": 6557,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6528,
											"end": 6557,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6528,
											"end": 6557,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6495,
											"end": 6503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 6495,
											"end": 6558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6495,
											"end": 6558,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 6495,
											"end": 6558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6472,
											"end": 6558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6472,
											"end": 6558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6569,
											"end": 6580,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6581,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 6593,
											"end": 6598,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6581,
											"end": 6592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 6581,
											"end": 6599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6581,
											"end": 6599,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 6581,
											"end": 6599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6569,
											"end": 6599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6569,
											"end": 6599,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 6700,
											"end": 6704,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 6706,
											"end": 6709,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6659,
											"end": 6677,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6691,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6652,
											"end": 6691,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6691,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 6652,
											"end": 6691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6710,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6710,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6710,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6652,
											"end": 6710,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6710,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 6652,
											"end": 6710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6751,
											"end": 6846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 6805,
											"end": 6811,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6832,
											"end": 6835,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 6831,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 6826,
											"end": 6835,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 6835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 6826,
											"end": 6835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 6835,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 6826,
											"end": 6835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6758,
											"end": 6776,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6751,
											"end": 6790,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6751,
											"end": 6790,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6751,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 6751,
											"end": 6790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6751,
											"end": 6846,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6751,
											"end": 6846,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6751,
											"end": 6846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6751,
											"end": 6846,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6751,
											"end": 6846,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6751,
											"end": 6846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6751,
											"end": 6846,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 6751,
											"end": 6846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6905,
											"end": 7005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 6959,
											"end": 6965,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6980,
											"end": 6994,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6912,
											"end": 6930,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6905,
											"end": 6944,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6905,
											"end": 6944,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6905,
											"end": 6944,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 6905,
											"end": 6944,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6905,
											"end": 7005,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6905,
											"end": 7005,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6905,
											"end": 7005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6905,
											"end": 7005,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6905,
											"end": 7005,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6905,
											"end": 7005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6905,
											"end": 7005,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 6905,
											"end": 7005,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7086,
											"end": 7090,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7053,
											"end": 7068,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 7053,
											"end": 7080,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7069,
											"end": 7079,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7053,
											"end": 7080,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7053,
											"end": 7080,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7053,
											"end": 7080,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7053,
											"end": 7080,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7053,
											"end": 7080,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7053,
											"end": 7080,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7053,
											"end": 7080,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7053,
											"end": 7080,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7053,
											"end": 7080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7053,
											"end": 7080,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7053,
											"end": 7080,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7053,
											"end": 7080,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7053,
											"end": 7080,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7053,
											"end": 7080,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7053,
											"end": 7080,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7053,
											"end": 7085,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7081,
											"end": 7084,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 7053,
											"end": 7085,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7053,
											"end": 7085,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7053,
											"end": 7085,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7053,
											"end": 7085,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7053,
											"end": 7085,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7053,
											"end": 7085,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7053,
											"end": 7085,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7053,
											"end": 7085,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7053,
											"end": 7085,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7053,
											"end": 7085,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7053,
											"end": 7085,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7053,
											"end": 7085,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7053,
											"end": 7085,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7053,
											"end": 7085,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7053,
											"end": 7090,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7053,
											"end": 7090,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7053,
											"end": 7090,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7053,
											"end": 7090,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7053,
											"end": 7090,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7053,
											"end": 7090,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 7053,
											"end": 7090,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7053,
											"end": 7090,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 7053,
											"end": 7090,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7053,
											"end": 7090,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7053,
											"end": 7090,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7053,
											"end": 7090,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7053,
											"end": 7090,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7053,
											"end": 7090,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7053,
											"end": 7090,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 7053,
											"end": 7090,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7053,
											"end": 7090,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7053,
											"end": 7090,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6011,
											"end": 7099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6011,
											"end": 7099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6011,
											"end": 7099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6011,
											"end": 7099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6011,
											"end": 7099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5962,
											"end": 7099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5962,
											"end": 7099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9467,
											"end": 10010,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 9467,
											"end": 10010,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9546,
											"end": 9553,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9565,
											"end": 9583,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9597,
											"end": 9608,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9586,
											"end": 9596,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9586,
											"end": 9608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 9586,
											"end": 9608,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9586,
											"end": 9608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9586,
											"end": 9608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 9586,
											"end": 9608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9586,
											"end": 9608,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 9586,
											"end": 9608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9565,
											"end": 9608,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9565,
											"end": 9608,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9565,
											"end": 9608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9565,
											"end": 9608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9637,
											"end": 9646,
											"name": "PUSH",
											"source": 0,
											"value": "56BC75E2D63100000"
										},
										{
											"begin": 9623,
											"end": 9633,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9623,
											"end": 9646,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9623,
											"end": 9646,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9623,
											"end": 9673,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9623,
											"end": 9673,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9623,
											"end": 9673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 9623,
											"end": 9673,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9623,
											"end": 9673,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9663,
											"end": 9673,
											"name": "PUSH",
											"source": 0,
											"value": "3635C9ADC5DEA00000"
										},
										{
											"begin": 9650,
											"end": 9660,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9650,
											"end": 9673,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9623,
											"end": 9673,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 9623,
											"end": 9673,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9619,
											"end": 10003,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9619,
											"end": 10003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 9619,
											"end": 10003,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9717,
											"end": 9720,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 9711,
											"end": 9713,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 9698,
											"end": 9708,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9698,
											"end": 9713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 9698,
											"end": 9713,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9698,
											"end": 9713,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9698,
											"end": 9713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 9698,
											"end": 9713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9698,
											"end": 9713,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 9698,
											"end": 9713,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9697,
											"end": 9720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 9697,
											"end": 9720,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9697,
											"end": 9720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9697,
											"end": 9720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 9697,
											"end": 9720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9697,
											"end": 9720,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 9697,
											"end": 9720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9690,
											"end": 9720,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9690,
											"end": 9720,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9690,
											"end": 9720,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9690,
											"end": 9720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 9690,
											"end": 9720,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9619,
											"end": 10003,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 9619,
											"end": 10003,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9756,
											"end": 9766,
											"name": "PUSH",
											"source": 0,
											"value": "3635C9ADC5DEA00000"
										},
										{
											"begin": 9742,
											"end": 9752,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9742,
											"end": 9766,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9742,
											"end": 9766,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9742,
											"end": 9794,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9742,
											"end": 9794,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9742,
											"end": 9794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 9742,
											"end": 9794,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9742,
											"end": 9794,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9783,
											"end": 9794,
											"name": "PUSH",
											"source": 0,
											"value": "21E19E0C9BAB2400000"
										},
										{
											"begin": 9770,
											"end": 9780,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9770,
											"end": 9794,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9742,
											"end": 9794,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 9742,
											"end": 9794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9738,
											"end": 10003,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9738,
											"end": 10003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 9738,
											"end": 10003,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9838,
											"end": 9841,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 9832,
											"end": 9834,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 9819,
											"end": 9829,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 9819,
											"end": 9834,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9834,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 9819,
											"end": 9834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9834,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 9819,
											"end": 9834,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9818,
											"end": 9841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 9818,
											"end": 9841,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9818,
											"end": 9841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9818,
											"end": 9841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 9818,
											"end": 9841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9818,
											"end": 9841,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 9818,
											"end": 9841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9811,
											"end": 9841,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9811,
											"end": 9841,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9811,
											"end": 9841,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9811,
											"end": 9841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 9811,
											"end": 9841,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9738,
											"end": 10003,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 9738,
											"end": 10003,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9876,
											"end": 9887,
											"name": "PUSH",
											"source": 0,
											"value": "21E19E0C9BAB2400000"
										},
										{
											"begin": 9863,
											"end": 9873,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9863,
											"end": 9887,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 9859,
											"end": 10003,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9859,
											"end": 10003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 9859,
											"end": 10003,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9931,
											"end": 9934,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 9925,
											"end": 9927,
											"name": "PUSH",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 9912,
											"end": 9922,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9912,
											"end": 9927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 9912,
											"end": 9927,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9912,
											"end": 9927,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9912,
											"end": 9927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 9912,
											"end": 9927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9912,
											"end": 9927,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 9912,
											"end": 9927,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9911,
											"end": 9934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 9911,
											"end": 9934,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9911,
											"end": 9934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9911,
											"end": 9934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 9911,
											"end": 9934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9911,
											"end": 9934,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 9911,
											"end": 9934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9904,
											"end": 9934,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9904,
											"end": 9934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9904,
											"end": 9934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9904,
											"end": 9934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 9904,
											"end": 9934,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9859,
											"end": 10003,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 9859,
											"end": 10003,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9974,
											"end": 9991,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9974,
											"end": 9991,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9974,
											"end": 9991,
											"name": "PUSH",
											"source": 0,
											"value": "E008B5F900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9974,
											"end": 9991,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9974,
											"end": 9991,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9974,
											"end": 9991,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9974,
											"end": 9991,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9974,
											"end": 9991,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9974,
											"end": 9991,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9974,
											"end": 9991,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9974,
											"end": 9991,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9974,
											"end": 9991,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9974,
											"end": 9991,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9974,
											"end": 9991,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9467,
											"end": 10010,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 9467,
											"end": 10010,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9467,
											"end": 10010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9467,
											"end": 10010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9467,
											"end": 10010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9467,
											"end": 10010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9467,
											"end": 10010,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 1694,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1630,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 1694,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 1630,
											"end": 1694,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1630,
											"end": 1694,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 1694,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 1694,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1630,
											"end": 1694,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 1694,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1630,
											"end": 1694,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1630,
											"end": 1694,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 1694,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1630,
											"end": 1694,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 1694,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 1694,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1630,
											"end": 1694,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 1694,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1630,
											"end": 1694,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1630,
											"end": 1694,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 1694,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1630,
											"end": 1694,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 1694,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 1694,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 1694,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 1694,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 1694,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 1694,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 1694,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1630,
											"end": 1694,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 1694,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 1694,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 1694,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1630,
											"end": 1694,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 1694,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 1694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5909,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 5149,
											"end": 5909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5209,
											"end": 5222,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5223,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 5232,
											"end": 5235,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5223,
											"end": 5231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 5223,
											"end": 5236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5223,
											"end": 5236,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 5223,
											"end": 5236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5209,
											"end": 5236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5209,
											"end": 5236,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5295,
											"end": 5300,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5283,
											"end": 5300,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5283,
											"end": 5300,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5283,
											"end": 5293,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5283,
											"end": 5300,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5283,
											"end": 5300,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5283,
											"end": 5300,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 5280,
											"end": 5321,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5309,
											"end": 5319,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5309,
											"end": 5319,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5309,
											"end": 5319,
											"name": "PUSH",
											"source": 0,
											"value": "472E017E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5309,
											"end": 5319,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5309,
											"end": 5319,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5309,
											"end": 5319,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5309,
											"end": 5319,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5309,
											"end": 5319,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5309,
											"end": 5319,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5309,
											"end": 5319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5309,
											"end": 5319,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5309,
											"end": 5319,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5309,
											"end": 5319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5309,
											"end": 5319,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5321,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 5280,
											"end": 5321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5424,
											"end": 5425,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5397,
											"end": 5406,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5397,
											"end": 5411,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5407,
											"end": 5410,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5411,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5397,
											"end": 5411,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5411,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5397,
											"end": 5411,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5397,
											"end": 5411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5397,
											"end": 5411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5411,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5397,
											"end": 5411,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5422,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5397,
											"end": 5422,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5422,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5397,
											"end": 5422,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5422,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5422,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5422,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5397,
											"end": 5422,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5422,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5422,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5422,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 5397,
											"end": 5422,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5425,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 5397,
											"end": 5425,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5425,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5394,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 5394,
											"end": 5452,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5434,
											"end": 5450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5434,
											"end": 5450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5434,
											"end": 5450,
											"name": "PUSH",
											"source": 0,
											"value": "DE4461CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5434,
											"end": 5450,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5434,
											"end": 5450,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5434,
											"end": 5450,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5434,
											"end": 5450,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5434,
											"end": 5450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5434,
											"end": 5450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5434,
											"end": 5450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5434,
											"end": 5450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5434,
											"end": 5450,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5434,
											"end": 5450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5434,
											"end": 5450,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5394,
											"end": 5452,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 5394,
											"end": 5452,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5463,
											"end": 5480,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5481,
											"end": 5490,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5481,
											"end": 5495,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5491,
											"end": 5494,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5481,
											"end": 5495,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5481,
											"end": 5495,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5481,
											"end": 5495,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5481,
											"end": 5495,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5481,
											"end": 5495,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5481,
											"end": 5495,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5481,
											"end": 5495,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5481,
											"end": 5495,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5481,
											"end": 5495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5481,
											"end": 5495,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5481,
											"end": 5495,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5481,
											"end": 5495,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5481,
											"end": 5495,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5481,
											"end": 5495,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5481,
											"end": 5495,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5481,
											"end": 5510,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5481,
											"end": 5510,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5481,
											"end": 5510,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 5481,
											"end": 5510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5481,
											"end": 5510,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5481,
											"end": 5510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5481,
											"end": 5510,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5481,
											"end": 5510,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5481,
											"end": 5510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5481,
											"end": 5510,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5481,
											"end": 5510,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5481,
											"end": 5510,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5463,
											"end": 5510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5463,
											"end": 5510,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5521,
											"end": 5539,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5540,
											"end": 5549,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5540,
											"end": 5554,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5550,
											"end": 5553,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5540,
											"end": 5554,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5540,
											"end": 5554,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5540,
											"end": 5554,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5540,
											"end": 5554,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5540,
											"end": 5554,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5540,
											"end": 5554,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5540,
											"end": 5554,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5540,
											"end": 5554,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5540,
											"end": 5554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5540,
											"end": 5554,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5540,
											"end": 5554,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5540,
											"end": 5554,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5540,
											"end": 5554,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5540,
											"end": 5554,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5540,
											"end": 5554,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5540,
											"end": 5563,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5540,
											"end": 5563,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5540,
											"end": 5563,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5540,
											"end": 5563,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5540,
											"end": 5563,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5540,
											"end": 5563,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5540,
											"end": 5563,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5540,
											"end": 5563,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5540,
											"end": 5563,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5540,
											"end": 5563,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5540,
											"end": 5563,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5540,
											"end": 5563,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5521,
											"end": 5563,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5521,
											"end": 5563,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5618,
											"end": 5629,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5630,
											"end": 5663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 5652,
											"end": 5662,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5651,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 5642,
											"end": 5662,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 5642,
											"end": 5662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5662,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 5642,
											"end": 5662,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5630,
											"end": 5663,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5630,
											"end": 5663,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5630,
											"end": 5641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 5630,
											"end": 5663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5630,
											"end": 5663,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 5630,
											"end": 5663,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5618,
											"end": 5663,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5618,
											"end": 5663,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5716,
											"end": 5768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 5758,
											"end": 5762,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 5764,
											"end": 5767,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5723,
											"end": 5735,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5723,
											"end": 5735,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5723,
											"end": 5735,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5723,
											"end": 5735,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5723,
											"end": 5735,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5723,
											"end": 5735,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5723,
											"end": 5735,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5723,
											"end": 5735,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5723,
											"end": 5735,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5723,
											"end": 5735,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5723,
											"end": 5735,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5716,
											"end": 5749,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5716,
											"end": 5749,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5716,
											"end": 5749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 5716,
											"end": 5749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5716,
											"end": 5768,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5716,
											"end": 5768,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5716,
											"end": 5768,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5716,
											"end": 5768,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5716,
											"end": 5768,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5716,
											"end": 5768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5716,
											"end": 5768,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 5716,
											"end": 5768,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5809,
											"end": 5863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 5843,
											"end": 5848,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5859,
											"end": 5862,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5849,
											"end": 5858,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5849,
											"end": 5862,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5849,
											"end": 5862,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5849,
											"end": 5862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 5849,
											"end": 5862,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5849,
											"end": 5862,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5849,
											"end": 5862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 5849,
											"end": 5862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5849,
											"end": 5862,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 5849,
											"end": 5862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5816,
											"end": 5828,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5816,
											"end": 5828,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5816,
											"end": 5828,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5816,
											"end": 5828,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5816,
											"end": 5828,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5816,
											"end": 5828,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5816,
											"end": 5828,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5816,
											"end": 5828,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5816,
											"end": 5828,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5816,
											"end": 5828,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5816,
											"end": 5828,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5809,
											"end": 5842,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5809,
											"end": 5842,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5809,
											"end": 5842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 5809,
											"end": 5842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5809,
											"end": 5863,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5809,
											"end": 5863,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5809,
											"end": 5863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5809,
											"end": 5863,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5809,
											"end": 5863,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5809,
											"end": 5863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5809,
											"end": 5863,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 5809,
											"end": 5863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5900,
											"end": 5901,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5874,
											"end": 5883,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5874,
											"end": 5888,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5884,
											"end": 5887,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5888,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5874,
											"end": 5888,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5888,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5874,
											"end": 5888,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5888,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5888,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5888,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5874,
											"end": 5888,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5888,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5888,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5888,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5874,
											"end": 5888,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5888,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5874,
											"end": 5888,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5899,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5874,
											"end": 5899,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5899,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5874,
											"end": 5901,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5874,
											"end": 5901,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5901,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5901,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5901,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5901,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 5874,
											"end": 5901,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5901,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5901,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5901,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5901,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 5874,
											"end": 5901,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5901,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5901,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5901,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5901,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5198,
											"end": 5909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5198,
											"end": 5909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5198,
											"end": 5909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5198,
											"end": 5909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8682,
											"end": 8731,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 8682,
											"end": 8731,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8682,
											"end": 8731,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8682,
											"end": 8731,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3125,
											"end": 4405,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 3125,
											"end": 4405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3213,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3214,
											"end": 3223,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3214,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3224,
											"end": 3227,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3214,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3214,
											"end": 3228,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3214,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3214,
											"end": 3228,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3214,
											"end": 3228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3214,
											"end": 3228,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3214,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3214,
											"end": 3228,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3214,
											"end": 3228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3214,
											"end": 3228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3214,
											"end": 3228,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3214,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3214,
											"end": 3228,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3214,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3214,
											"end": 3228,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFF"
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFF"
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFF"
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3228,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3271,
											"end": 3272,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3247,
											"end": 3258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3247,
											"end": 3269,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3247,
											"end": 3269,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3247,
											"end": 3269,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3247,
											"end": 3272,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3247,
											"end": 3272,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3247,
											"end": 3272,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3239,
											"end": 3273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 3239,
											"end": 3273,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3239,
											"end": 3273,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3239,
											"end": 3273,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3239,
											"end": 3273,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3239,
											"end": 3273,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 3239,
											"end": 3273,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3312,
											"end": 3338,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3339,
											"end": 3350,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3363,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 3339,
											"end": 3363,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3363,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3312,
											"end": 3363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3312,
											"end": 3363,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3456,
											"end": 3472,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3473,
											"end": 3519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 3488,
											"end": 3506,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3507,
											"end": 3513,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3514,
											"end": 3518,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 3473,
											"end": 3487,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 3473,
											"end": 3519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3519,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 3473,
											"end": 3519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3456,
											"end": 3519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3456,
											"end": 3519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3530,
											"end": 3546,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3547,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 3556,
											"end": 3567,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3556,
											"end": 3576,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3556,
											"end": 3576,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3556,
											"end": 3576,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3578,
											"end": 3589,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3578,
											"end": 3604,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3578,
											"end": 3604,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3578,
											"end": 3604,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3547,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3547,
											"end": 3605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3547,
											"end": 3605,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 3547,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3530,
											"end": 3605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3530,
											"end": 3605,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 3701,
											"end": 3711,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3734,
											"end": 3738,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 3754,
											"end": 3765,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3650,
											"end": 3668,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3686,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3643,
											"end": 3686,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 3643,
											"end": 3686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3776,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3776,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3776,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3776,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3643,
											"end": 3776,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3776,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 3643,
											"end": 3776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 3890,
											"end": 3898,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3899,
											"end": 3910,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3858,
											"end": 3876,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3851,
											"end": 3889,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3851,
											"end": 3889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3911,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3911,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3911,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3911,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3851,
											"end": 3911,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3911,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 3851,
											"end": 3911,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3922,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 3974,
											"end": 3978,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 3980,
											"end": 3988,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3989,
											"end": 4000,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3929,
											"end": 3947,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3922,
											"end": 3965,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3922,
											"end": 3965,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3922,
											"end": 3965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 3922,
											"end": 3965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3922,
											"end": 4001,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3922,
											"end": 4001,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3922,
											"end": 4001,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3922,
											"end": 4001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3922,
											"end": 4001,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3922,
											"end": 4001,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3922,
											"end": 4001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3922,
											"end": 4001,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 3922,
											"end": 4001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4031,
											"end": 4044,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 4031,
											"end": 4044,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4031,
											"end": 4044,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4031,
											"end": 4044,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4031,
											"end": 4044,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4031,
											"end": 4044,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4031,
											"end": 4044,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4031,
											"end": 4044,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4031,
											"end": 4044,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4031,
											"end": 4044,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4031,
											"end": 4044,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4012,
											"end": 4058,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4012,
											"end": 4058,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4012,
											"end": 4058,
											"name": "PUSH",
											"source": 0,
											"value": "E8E33700"
										},
										{
											"begin": 4073,
											"end": 4091,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4106,
											"end": 4112,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4127,
											"end": 4138,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4153,
											"end": 4154,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4169,
											"end": 4173,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 4188,
											"end": 4189,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4212,
											"end": 4216,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 4248,
											"end": 4255,
											"name": "PUSH",
											"source": 0,
											"value": "E10"
										},
										{
											"begin": 4232,
											"end": 4247,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 4232,
											"end": 4255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 4232,
											"end": 4255,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4232,
											"end": 4255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4232,
											"end": 4255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 4232,
											"end": 4255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4232,
											"end": 4255,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 4232,
											"end": 4255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 4012,
											"end": 4266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 4012,
											"end": 4266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4012,
											"end": 4266,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4316,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4277,
											"end": 4286,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4277,
											"end": 4291,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4287,
											"end": 4290,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 4277,
											"end": 4291,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4277,
											"end": 4291,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4277,
											"end": 4291,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4277,
											"end": 4291,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4277,
											"end": 4291,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4277,
											"end": 4291,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4277,
											"end": 4291,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4277,
											"end": 4291,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4277,
											"end": 4291,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4277,
											"end": 4291,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4277,
											"end": 4291,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4277,
											"end": 4291,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4277,
											"end": 4291,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4277,
											"end": 4291,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4277,
											"end": 4291,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4277,
											"end": 4305,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4277,
											"end": 4305,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4277,
											"end": 4305,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4277,
											"end": 4316,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4277,
											"end": 4316,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4277,
											"end": 4316,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4277,
											"end": 4316,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4277,
											"end": 4316,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4277,
											"end": 4316,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4277,
											"end": 4316,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4277,
											"end": 4316,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4277,
											"end": 4316,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4277,
											"end": 4316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4277,
											"end": 4316,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4277,
											"end": 4316,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4277,
											"end": 4316,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4277,
											"end": 4316,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4277,
											"end": 4316,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 4277,
											"end": 4316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4277,
											"end": 4316,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4277,
											"end": 4316,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4396,
											"end": 4397,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4370,
											"end": 4379,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4370,
											"end": 4384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4380,
											"end": 4383,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 4370,
											"end": 4384,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4370,
											"end": 4384,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4370,
											"end": 4384,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4370,
											"end": 4384,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4370,
											"end": 4384,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4370,
											"end": 4384,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4370,
											"end": 4384,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4370,
											"end": 4384,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4370,
											"end": 4384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4370,
											"end": 4384,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4370,
											"end": 4384,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4370,
											"end": 4384,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4370,
											"end": 4384,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4370,
											"end": 4384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4370,
											"end": 4384,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4370,
											"end": 4395,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4370,
											"end": 4395,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4370,
											"end": 4395,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4370,
											"end": 4397,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4370,
											"end": 4397,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4370,
											"end": 4397,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4370,
											"end": 4397,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4370,
											"end": 4397,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4370,
											"end": 4397,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 4370,
											"end": 4397,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4370,
											"end": 4397,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4370,
											"end": 4397,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4370,
											"end": 4397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4370,
											"end": 4397,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4370,
											"end": 4397,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 4370,
											"end": 4397,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4370,
											"end": 4397,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4370,
											"end": 4397,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 4370,
											"end": 4397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4370,
											"end": 4397,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4370,
											"end": 4397,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 4405,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 4405,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 4405,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 4405,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3125,
											"end": 4405,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3125,
											"end": 4405,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3125,
											"end": 4405,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1570,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1506,
											"end": 1570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1570,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1506,
											"end": 1570,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1506,
											"end": 1570,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1570,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1570,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1506,
											"end": 1570,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1570,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1570,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1506,
											"end": 1570,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1570,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1506,
											"end": 1570,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1570,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1570,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1506,
											"end": 1570,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1570,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1570,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1506,
											"end": 1570,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1570,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1506,
											"end": 1570,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1570,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1570,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1570,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1570,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1570,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1506,
											"end": 1570,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1570,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1570,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1506,
											"end": 1570,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1570,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1805,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1741,
											"end": 1805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1805,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 1741,
											"end": 1805,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1741,
											"end": 1805,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1805,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1805,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1805,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1805,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1741,
											"end": 1805,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1805,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1805,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1741,
											"end": 1805,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1805,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1805,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1805,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1805,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1741,
											"end": 1805,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1805,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1805,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1805,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1805,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1805,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1805,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1805,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1805,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1741,
											"end": 1805,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1805,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1805,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1741,
											"end": 1805,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1805,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1447,
											"end": 1652,
											"name": "tag",
											"source": 21,
											"value": "78"
										},
										{
											"begin": 1447,
											"end": 1652,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1548,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "178"
										},
										{
											"begin": 1568,
											"end": 1573,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 1598,
											"end": 1625,
											"name": "PUSH",
											"source": 21,
											"value": "23B872DD"
										},
										{
											"begin": 1598,
											"end": 1625,
											"name": "PUSH",
											"source": 21,
											"value": "E0"
										},
										{
											"begin": 1598,
											"end": 1625,
											"name": "SHL",
											"source": 21
										},
										{
											"begin": 1627,
											"end": 1631,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 1633,
											"end": 1635,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 1637,
											"end": 1642,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "179"
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "180"
										},
										{
											"begin": 1575,
											"end": 1643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "tag",
											"source": 21,
											"value": "179"
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "NOT",
											"source": 21
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "OR",
											"source": 21
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1575,
											"end": 1643,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1548,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "181"
										},
										{
											"begin": 1548,
											"end": 1644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1548,
											"end": 1644,
											"name": "tag",
											"source": 21,
											"value": "178"
										},
										{
											"begin": 1548,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1447,
											"end": 1652,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1447,
											"end": 1652,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1447,
											"end": 1652,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1447,
											"end": 1652,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1447,
											"end": 1652,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1921,
											"end": 2503,
											"name": "tag",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 1921,
											"end": 2503,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2260,
											"end": 2261,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2251,
											"end": 2256,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 2251,
											"end": 2261,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 2250,
											"end": 2312,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 2250,
											"end": 2312,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "183"
										},
										{
											"begin": 2250,
											"end": 2312,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 2250,
											"end": 2312,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2310,
											"end": 2311,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2267,
											"end": 2272,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 2267,
											"end": 2282,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2267,
											"end": 2282,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 2267,
											"end": 2282,
											"name": "PUSH",
											"source": 21,
											"value": "DD62ED3E"
										},
										{
											"begin": 2291,
											"end": 2295,
											"name": "ADDRESS",
											"source": 21
										},
										{
											"begin": 2298,
											"end": 2305,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "PUSH",
											"source": 21,
											"value": "E0"
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "SHL",
											"source": 21
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "PUSH",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "184"
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "185"
										},
										{
											"begin": 2267,
											"end": 2306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "tag",
											"source": 21,
											"value": "184"
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "GAS",
											"source": 21
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "STATICCALL",
											"source": 21
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "187"
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "RETURNDATASIZE",
											"source": 21
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "RETURNDATACOPY",
											"source": 21
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "RETURNDATASIZE",
											"source": 21
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "tag",
											"source": 21,
											"value": "187"
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "RETURNDATASIZE",
											"source": 21
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "NOT",
											"source": 21
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "188"
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "189"
										},
										{
											"begin": 2267,
											"end": 2306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "tag",
											"source": 21,
											"value": "188"
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2267,
											"end": 2311,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 2250,
											"end": 2312,
											"name": "tag",
											"source": 21,
											"value": "183"
										},
										{
											"begin": 2250,
											"end": 2312,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2228,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "190"
										},
										{
											"begin": 2228,
											"end": 2394,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 2228,
											"end": 2394,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 2228,
											"end": 2394,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 2228,
											"end": 2394,
											"name": "PUSH",
											"source": 21,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2228,
											"end": 2394,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 2228,
											"end": 2394,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 2228,
											"end": 2394,
											"name": "PUSH",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 2228,
											"end": 2394,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2228,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "191"
										},
										{
											"begin": 2228,
											"end": 2394,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 2228,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "192"
										},
										{
											"begin": 2228,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2228,
											"end": 2394,
											"name": "tag",
											"source": 21,
											"value": "191"
										},
										{
											"begin": 2228,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2228,
											"end": 2394,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 2228,
											"end": 2394,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 2228,
											"end": 2394,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 2228,
											"end": 2394,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 2228,
											"end": 2394,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 2228,
											"end": 2394,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 2228,
											"end": 2394,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 2228,
											"end": 2394,
											"name": "tag",
											"source": 21,
											"value": "190"
										},
										{
											"begin": 2228,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2405,
											"end": 2495,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "193"
										},
										{
											"begin": 2425,
											"end": 2430,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 2455,
											"end": 2477,
											"name": "PUSH",
											"source": 21,
											"value": "95EA7B3"
										},
										{
											"begin": 2455,
											"end": 2477,
											"name": "PUSH",
											"source": 21,
											"value": "E0"
										},
										{
											"begin": 2455,
											"end": 2477,
											"name": "SHL",
											"source": 21
										},
										{
											"begin": 2479,
											"end": 2486,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 2488,
											"end": 2493,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 2432,
											"end": 2494,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 2432,
											"end": 2494,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 2432,
											"end": 2494,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 2432,
											"end": 2494,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2432,
											"end": 2494,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "194"
										},
										{
											"begin": 2432,
											"end": 2494,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 2432,
											"end": 2494,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 2432,
											"end": 2494,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 2432,
											"end": 2494,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "195"
										},
										{
											"begin": 2432,
											"end": 2494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2432,
											"end": 2494,
											"name": "tag",
											"source": 21,
											"value": "194"
										},
										{
											"begin": 2432,
											"end": 2494,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2432,
											"end": 2494,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 2432,
											"end": 2494,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 2432,
											"end": 2494,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 2432,
											"end": 2494,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 2432,
											"end": 2494,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 2432,
											"end": 2494,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 2432,
											"end": 2494,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 2432,
											"end": 2494,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 2432,
											"end": 2494,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 2432,
											"end": 2494,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 2432,
											"end": 2494,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 2432,
											"end": 2494,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 2432,
											"end": 2494,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 2432,
											"end": 2494,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2432,
											"end": 2494,
											"name": "NOT",
											"source": 21
										},
										{
											"begin": 2432,
											"end": 2494,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 2432,
											"end": 2494,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 2432,
											"end": 2494,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 2432,
											"end": 2494,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2432,
											"end": 2494,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 2432,
											"end": 2494,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 2432,
											"end": 2494,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2432,
											"end": 2494,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 2432,
											"end": 2494,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 2432,
											"end": 2494,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 2432,
											"end": 2494,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 2432,
											"end": 2494,
											"name": "OR",
											"source": 21
										},
										{
											"begin": 2432,
											"end": 2494,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 2432,
											"end": 2494,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 2432,
											"end": 2494,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2432,
											"end": 2494,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2432,
											"end": 2494,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2432,
											"end": 2494,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2405,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "181"
										},
										{
											"begin": 2405,
											"end": 2495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2405,
											"end": 2495,
											"name": "tag",
											"source": 21,
											"value": "193"
										},
										{
											"begin": 2405,
											"end": 2495,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1921,
											"end": 2503,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1921,
											"end": 2503,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1921,
											"end": 2503,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1921,
											"end": 2503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 9287,
											"end": 9401,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 9287,
											"end": 9401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9339,
											"end": 9346,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9365,
											"end": 9374,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 9365,
											"end": 9379,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9375,
											"end": 9378,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9365,
											"end": 9379,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9365,
											"end": 9379,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9365,
											"end": 9379,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9365,
											"end": 9379,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9365,
											"end": 9379,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9365,
											"end": 9379,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9365,
											"end": 9379,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9365,
											"end": 9379,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9365,
											"end": 9379,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9365,
											"end": 9379,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9365,
											"end": 9379,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9365,
											"end": 9379,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9365,
											"end": 9379,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9365,
											"end": 9379,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9365,
											"end": 9379,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9365,
											"end": 9393,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9365,
											"end": 9393,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9365,
											"end": 9393,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9365,
											"end": 9393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9365,
											"end": 9393,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9365,
											"end": 9393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9365,
											"end": 9393,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9365,
											"end": 9393,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 9365,
											"end": 9393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9365,
											"end": 9393,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 9365,
											"end": 9393,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9365,
											"end": 9393,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9358,
											"end": 9393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9358,
											"end": 9393,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9287,
											"end": 9401,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9287,
											"end": 9401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9287,
											"end": 9401,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9287,
											"end": 9401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9127,
											"end": 9239,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 9127,
											"end": 9239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9178,
											"end": 9185,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9204,
											"end": 9213,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 9204,
											"end": 9218,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9214,
											"end": 9217,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9204,
											"end": 9218,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9204,
											"end": 9218,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9204,
											"end": 9218,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9204,
											"end": 9218,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9204,
											"end": 9218,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9204,
											"end": 9218,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9204,
											"end": 9218,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9204,
											"end": 9218,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9204,
											"end": 9218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9204,
											"end": 9218,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9204,
											"end": 9218,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9204,
											"end": 9218,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9204,
											"end": 9218,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9204,
											"end": 9218,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9204,
											"end": 9218,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9204,
											"end": 9231,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9204,
											"end": 9231,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9204,
											"end": 9231,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9204,
											"end": 9231,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9204,
											"end": 9231,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9204,
											"end": 9231,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9204,
											"end": 9231,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9204,
											"end": 9231,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 9204,
											"end": 9231,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9204,
											"end": 9231,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 9204,
											"end": 9231,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9204,
											"end": 9231,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9197,
											"end": 9231,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9197,
											"end": 9231,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9127,
											"end": 9239,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9127,
											"end": 9239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9127,
											"end": 9239,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9127,
											"end": 9239,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 250,
											"end": 680,
											"name": "tag",
											"source": 22,
											"value": "107"
										},
										{
											"begin": 250,
											"end": 680,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 306,
											"end": 323,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 352,
											"end": 361,
											"name": "PUSH",
											"source": 22,
											"value": "56BC75E2D63100000"
										},
										{
											"begin": 338,
											"end": 350,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 338,
											"end": 361,
											"name": "LT",
											"source": 22
										},
										{
											"begin": 338,
											"end": 361,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 338,
											"end": 388,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 338,
											"end": 388,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 338,
											"end": 388,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "199"
										},
										{
											"begin": 338,
											"end": 388,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 338,
											"end": 388,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 378,
											"end": 388,
											"name": "PUSH",
											"source": 22,
											"value": "3635C9ADC5DEA00000"
										},
										{
											"begin": 365,
											"end": 377,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 365,
											"end": 388,
											"name": "LT",
											"source": 22
										},
										{
											"begin": 338,
											"end": 388,
											"name": "tag",
											"source": 22,
											"value": "199"
										},
										{
											"begin": 338,
											"end": 388,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 335,
											"end": 673,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 335,
											"end": 673,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "200"
										},
										{
											"begin": 335,
											"end": 673,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 424,
											"end": 427,
											"name": "PUSH",
											"source": 22,
											"value": "64"
										},
										{
											"begin": 411,
											"end": 423,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 411,
											"end": 427,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "201"
										},
										{
											"begin": 411,
											"end": 427,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 411,
											"end": 427,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 411,
											"end": 427,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "144"
										},
										{
											"begin": 411,
											"end": 427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 411,
											"end": 427,
											"name": "tag",
											"source": 22,
											"value": "201"
										},
										{
											"begin": 411,
											"end": 427,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 404,
											"end": 427,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 404,
											"end": 427,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 404,
											"end": 427,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "198"
										},
										{
											"begin": 404,
											"end": 427,
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 335,
											"end": 673,
											"name": "tag",
											"source": 22,
											"value": "200"
										},
										{
											"begin": 335,
											"end": 673,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 461,
											"end": 471,
											"name": "PUSH",
											"source": 22,
											"value": "3635C9ADC5DEA00000"
										},
										{
											"begin": 447,
											"end": 459,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 447,
											"end": 471,
											"name": "LT",
											"source": 22
										},
										{
											"begin": 447,
											"end": 471,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 447,
											"end": 499,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 447,
											"end": 499,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 447,
											"end": 499,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "203"
										},
										{
											"begin": 447,
											"end": 499,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 447,
											"end": 499,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 488,
											"end": 499,
											"name": "PUSH",
											"source": 22,
											"value": "21E19E0C9BAB2400000"
										},
										{
											"begin": 475,
											"end": 487,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 475,
											"end": 499,
											"name": "LT",
											"source": 22
										},
										{
											"begin": 447,
											"end": 499,
											"name": "tag",
											"source": 22,
											"value": "203"
										},
										{
											"begin": 447,
											"end": 499,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 444,
											"end": 673,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 444,
											"end": 673,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "204"
										},
										{
											"begin": 444,
											"end": 673,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 535,
											"end": 538,
											"name": "PUSH",
											"source": 22,
											"value": "C8"
										},
										{
											"begin": 522,
											"end": 534,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 522,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "205"
										},
										{
											"begin": 522,
											"end": 538,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 522,
											"end": 538,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 522,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "144"
										},
										{
											"begin": 522,
											"end": 538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 522,
											"end": 538,
											"name": "tag",
											"source": 22,
											"value": "205"
										},
										{
											"begin": 522,
											"end": 538,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 515,
											"end": 538,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 515,
											"end": 538,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 515,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "198"
										},
										{
											"begin": 515,
											"end": 538,
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 444,
											"end": 673,
											"name": "tag",
											"source": 22,
											"value": "204"
										},
										{
											"begin": 444,
											"end": 673,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 572,
											"end": 583,
											"name": "PUSH",
											"source": 22,
											"value": "21E19E0C9BAB2400000"
										},
										{
											"begin": 558,
											"end": 570,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 558,
											"end": 583,
											"name": "LT",
											"source": 22
										},
										{
											"begin": 555,
											"end": 673,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "207"
										},
										{
											"begin": 555,
											"end": 673,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 619,
											"end": 622,
											"name": "PUSH",
											"source": 22,
											"value": "190"
										},
										{
											"begin": 606,
											"end": 618,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 606,
											"end": 622,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "208"
										},
										{
											"begin": 606,
											"end": 622,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 606,
											"end": 622,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 606,
											"end": 622,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "144"
										},
										{
											"begin": 606,
											"end": 622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 606,
											"end": 622,
											"name": "tag",
											"source": 22,
											"value": "208"
										},
										{
											"begin": 606,
											"end": 622,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 599,
											"end": 622,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 599,
											"end": 622,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 599,
											"end": 622,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "198"
										},
										{
											"begin": 599,
											"end": 622,
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 555,
											"end": 673,
											"name": "tag",
											"source": 22,
											"value": "207"
										},
										{
											"begin": 555,
											"end": 673,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 660,
											"end": 661,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 653,
											"end": 661,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 653,
											"end": 661,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 250,
											"end": 680,
											"name": "tag",
											"source": 22,
											"value": "198"
										},
										{
											"begin": 250,
											"end": 680,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 250,
											"end": 680,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 250,
											"end": 680,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 250,
											"end": 680,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 250,
											"end": 680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 1025,
											"end": 1202,
											"name": "tag",
											"source": 21,
											"value": "109"
										},
										{
											"begin": 1025,
											"end": 1202,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1108,
											"end": 1194,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "211"
										},
										{
											"begin": 1128,
											"end": 1133,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 1158,
											"end": 1181,
											"name": "PUSH",
											"source": 21,
											"value": "A9059CBB"
										},
										{
											"begin": 1158,
											"end": 1181,
											"name": "PUSH",
											"source": 21,
											"value": "E0"
										},
										{
											"begin": 1158,
											"end": 1181,
											"name": "SHL",
											"source": 21
										},
										{
											"begin": 1183,
											"end": 1185,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 1187,
											"end": 1192,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 1135,
											"end": 1193,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 1135,
											"end": 1193,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 1135,
											"end": 1193,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 1135,
											"end": 1193,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1135,
											"end": 1193,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "212"
										},
										{
											"begin": 1135,
											"end": 1193,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 1135,
											"end": 1193,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 1135,
											"end": 1193,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1135,
											"end": 1193,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "195"
										},
										{
											"begin": 1135,
											"end": 1193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1135,
											"end": 1193,
											"name": "tag",
											"source": 21,
											"value": "212"
										},
										{
											"begin": 1135,
											"end": 1193,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1135,
											"end": 1193,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 1135,
											"end": 1193,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 1135,
											"end": 1193,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 1135,
											"end": 1193,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1135,
											"end": 1193,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 1135,
											"end": 1193,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 1135,
											"end": 1193,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 1135,
											"end": 1193,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1135,
											"end": 1193,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 1135,
											"end": 1193,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1135,
											"end": 1193,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 1135,
											"end": 1193,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 1135,
											"end": 1193,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1135,
											"end": 1193,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1135,
											"end": 1193,
											"name": "NOT",
											"source": 21
										},
										{
											"begin": 1135,
											"end": 1193,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 1135,
											"end": 1193,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 1135,
											"end": 1193,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 1135,
											"end": 1193,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1135,
											"end": 1193,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1135,
											"end": 1193,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 1135,
											"end": 1193,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1135,
											"end": 1193,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 1135,
											"end": 1193,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1135,
											"end": 1193,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 1135,
											"end": 1193,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 1135,
											"end": 1193,
											"name": "OR",
											"source": 21
										},
										{
											"begin": 1135,
											"end": 1193,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 1135,
											"end": 1193,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 1135,
											"end": 1193,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1135,
											"end": 1193,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1135,
											"end": 1193,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1135,
											"end": 1193,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1108,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "181"
										},
										{
											"begin": 1108,
											"end": 1194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1108,
											"end": 1194,
											"name": "tag",
											"source": 21,
											"value": "211"
										},
										{
											"begin": 1108,
											"end": 1194,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1025,
											"end": 1202,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1025,
											"end": 1202,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1025,
											"end": 1202,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1025,
											"end": 1202,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5371,
											"end": 6020,
											"name": "tag",
											"source": 21,
											"value": "181"
										},
										{
											"begin": 5371,
											"end": 6020,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5795,
											"end": 5818,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5821,
											"end": 5890,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "214"
										},
										{
											"begin": 5849,
											"end": 5853,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5821,
											"end": 5890,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 5821,
											"end": 5890,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 5821,
											"end": 5890,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 5821,
											"end": 5890,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 5821,
											"end": 5890,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5821,
											"end": 5890,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 5821,
											"end": 5890,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 5821,
											"end": 5890,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 5821,
											"end": 5890,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 5821,
											"end": 5890,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5821,
											"end": 5890,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 5821,
											"end": 5890,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 5821,
											"end": 5890,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5821,
											"end": 5890,
											"name": "PUSH",
											"source": 21,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 5821,
											"end": 5890,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5821,
											"end": 5890,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 5821,
											"end": 5890,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5829,
											"end": 5834,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 5821,
											"end": 5848,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5821,
											"end": 5848,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 5821,
											"end": 5848,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "215"
										},
										{
											"begin": 5821,
											"end": 5848,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 5821,
											"end": 5890,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 5821,
											"end": 5890,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 5821,
											"end": 5890,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 5821,
											"end": 5890,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5821,
											"end": 5890,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 5821,
											"end": 5890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5821,
											"end": 5890,
											"name": "tag",
											"source": 21,
											"value": "214"
										},
										{
											"begin": 5821,
											"end": 5890,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5795,
											"end": 5890,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 5795,
											"end": 5890,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5930,
											"end": 5931,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5909,
											"end": 5919,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5909,
											"end": 5926,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 5909,
											"end": 5931,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 5909,
											"end": 5965,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 5909,
											"end": 5965,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "216"
										},
										{
											"begin": 5909,
											"end": 5965,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 5909,
											"end": 5965,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5946,
											"end": 5956,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 5935,
											"end": 5965,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 5935,
											"end": 5965,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 5935,
											"end": 5965,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5935,
											"end": 5965,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 5935,
											"end": 5965,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 5935,
											"end": 5965,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5935,
											"end": 5965,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5935,
											"end": 5965,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 5935,
											"end": 5965,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "217"
										},
										{
											"begin": 5935,
											"end": 5965,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 5935,
											"end": 5965,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 5935,
											"end": 5965,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "218"
										},
										{
											"begin": 5935,
											"end": 5965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5935,
											"end": 5965,
											"name": "tag",
											"source": 21,
											"value": "217"
										},
										{
											"begin": 5935,
											"end": 5965,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5909,
											"end": 5965,
											"name": "tag",
											"source": 21,
											"value": "216"
										},
										{
											"begin": 5909,
											"end": 5965,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5901,
											"end": 6012,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "219"
										},
										{
											"begin": 5901,
											"end": 6012,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 5901,
											"end": 6012,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 5901,
											"end": 6012,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 5901,
											"end": 6012,
											"name": "PUSH",
											"source": 21,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5901,
											"end": 6012,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5901,
											"end": 6012,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 5901,
											"end": 6012,
											"name": "PUSH",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 5901,
											"end": 6012,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5901,
											"end": 6012,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "220"
										},
										{
											"begin": 5901,
											"end": 6012,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 5901,
											"end": 6012,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "221"
										},
										{
											"begin": 5901,
											"end": 6012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5901,
											"end": 6012,
											"name": "tag",
											"source": 21,
											"value": "220"
										},
										{
											"begin": 5901,
											"end": 6012,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5901,
											"end": 6012,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 5901,
											"end": 6012,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 5901,
											"end": 6012,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 5901,
											"end": 6012,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 5901,
											"end": 6012,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 5901,
											"end": 6012,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 5901,
											"end": 6012,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 5901,
											"end": 6012,
											"name": "tag",
											"source": 21,
											"value": "219"
										},
										{
											"begin": 5901,
											"end": 6012,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5441,
											"end": 6020,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5371,
											"end": 6020,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5371,
											"end": 6020,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5371,
											"end": 6020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4207,
											"end": 4436,
											"name": "tag",
											"source": 19,
											"value": "215"
										},
										{
											"begin": 4207,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4344,
											"end": 4356,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 4376,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "223"
										},
										{
											"begin": 4398,
											"end": 4404,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 4406,
											"end": 4410,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 4412,
											"end": 4413,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4415,
											"end": 4427,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 4376,
											"end": 4397,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "224"
										},
										{
											"begin": 4376,
											"end": 4428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4376,
											"end": 4428,
											"name": "tag",
											"source": 19,
											"value": "223"
										},
										{
											"begin": 4376,
											"end": 4428,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4369,
											"end": 4428,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4369,
											"end": 4428,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4207,
											"end": 4436,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 4207,
											"end": 4436,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4207,
											"end": 4436,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4207,
											"end": 4436,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4207,
											"end": 4436,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4207,
											"end": 4436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5293,
											"end": 5748,
											"name": "tag",
											"source": 19,
											"value": "224"
										},
										{
											"begin": 5293,
											"end": 5748,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5463,
											"end": 5475,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 5521,
											"end": 5526,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5496,
											"end": 5517,
											"name": "SELFBALANCE",
											"source": 19
										},
										{
											"begin": 5496,
											"end": 5526,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 5496,
											"end": 5526,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "226"
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "PUSH",
											"source": 19,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "227"
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "228"
										},
										{
											"begin": 5488,
											"end": 5569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "tag",
											"source": 19,
											"value": "227"
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "tag",
											"source": 19,
											"value": "226"
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5581,
											"end": 5593,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5595,
											"end": 5618,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 5622,
											"end": 5628,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 5622,
											"end": 5633,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5622,
											"end": 5633,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 5641,
											"end": 5646,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 5648,
											"end": 5652,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "229"
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "230"
										},
										{
											"begin": 5622,
											"end": 5653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "tag",
											"source": 19,
											"value": "229"
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "GAS",
											"source": 19
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "CALL",
											"source": 19
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "233"
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "PUSH",
											"source": 19,
											"value": "3F"
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "RETURNDATACOPY",
											"source": 19
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "232"
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "tag",
											"source": 19,
											"value": "233"
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "tag",
											"source": 19,
											"value": "232"
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5580,
											"end": 5653,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 5580,
											"end": 5653,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5580,
											"end": 5653,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 5580,
											"end": 5653,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5671,
											"end": 5740,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "234"
										},
										{
											"begin": 5698,
											"end": 5704,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 5706,
											"end": 5713,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 5715,
											"end": 5725,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 5727,
											"end": 5739,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 5671,
											"end": 5697,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "235"
										},
										{
											"begin": 5671,
											"end": 5740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5671,
											"end": 5740,
											"name": "tag",
											"source": 19,
											"value": "234"
										},
										{
											"begin": 5671,
											"end": 5740,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5664,
											"end": 5740,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 5664,
											"end": 5740,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5664,
											"end": 5740,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5664,
											"end": 5740,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5293,
											"end": 5748,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 5293,
											"end": 5748,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 5293,
											"end": 5748,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5293,
											"end": 5748,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5293,
											"end": 5748,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5293,
											"end": 5748,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5293,
											"end": 5748,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7866,
											"end": 8510,
											"name": "tag",
											"source": 19,
											"value": "235"
										},
										{
											"begin": 7866,
											"end": 8510,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8051,
											"end": 8063,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 8080,
											"end": 8087,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 8076,
											"end": 8503,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 8076,
											"end": 8503,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "237"
										},
										{
											"begin": 8076,
											"end": 8503,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 8129,
											"end": 8130,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8108,
											"end": 8118,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 8108,
											"end": 8125,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 8108,
											"end": 8130,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 8104,
											"end": 8394,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "238"
										},
										{
											"begin": 8104,
											"end": 8394,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 8326,
											"end": 8344,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "239"
										},
										{
											"begin": 8337,
											"end": 8343,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 8326,
											"end": 8336,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "240"
										},
										{
											"begin": 8326,
											"end": 8344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8326,
											"end": 8344,
											"name": "tag",
											"source": 19,
											"value": "239"
										},
										{
											"begin": 8326,
											"end": 8344,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8318,
											"end": 8378,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "241"
										},
										{
											"begin": 8318,
											"end": 8378,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 8318,
											"end": 8378,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 8318,
											"end": 8378,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 8318,
											"end": 8378,
											"name": "PUSH",
											"source": 19,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8318,
											"end": 8378,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 8318,
											"end": 8378,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 8318,
											"end": 8378,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 8318,
											"end": 8378,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8318,
											"end": 8378,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "242"
										},
										{
											"begin": 8318,
											"end": 8378,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 8318,
											"end": 8378,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "243"
										},
										{
											"begin": 8318,
											"end": 8378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8318,
											"end": 8378,
											"name": "tag",
											"source": 19,
											"value": "242"
										},
										{
											"begin": 8318,
											"end": 8378,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8318,
											"end": 8378,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 8318,
											"end": 8378,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 8318,
											"end": 8378,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 8318,
											"end": 8378,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 8318,
											"end": 8378,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 8318,
											"end": 8378,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 8318,
											"end": 8378,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 8318,
											"end": 8378,
											"name": "tag",
											"source": 19,
											"value": "241"
										},
										{
											"begin": 8318,
											"end": 8378,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8104,
											"end": 8394,
											"name": "tag",
											"source": 19,
											"value": "238"
										},
										{
											"begin": 8104,
											"end": 8394,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8415,
											"end": 8425,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8408,
											"end": 8425,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 8408,
											"end": 8425,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8408,
											"end": 8425,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "236"
										},
										{
											"begin": 8408,
											"end": 8425,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8076,
											"end": 8503,
											"name": "tag",
											"source": 19,
											"value": "237"
										},
										{
											"begin": 8076,
											"end": 8503,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8458,
											"end": 8491,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "245"
										},
										{
											"begin": 8466,
											"end": 8476,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 8478,
											"end": 8490,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 8458,
											"end": 8465,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "246"
										},
										{
											"begin": 8458,
											"end": 8491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8458,
											"end": 8491,
											"name": "tag",
											"source": 19,
											"value": "245"
										},
										{
											"begin": 8458,
											"end": 8491,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7866,
											"end": 8510,
											"name": "tag",
											"source": 19,
											"value": "236"
										},
										{
											"begin": 7866,
											"end": 8510,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7866,
											"end": 8510,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 7866,
											"end": 8510,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 7866,
											"end": 8510,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7866,
											"end": 8510,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7866,
											"end": 8510,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7866,
											"end": 8510,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7866,
											"end": 8510,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1452,
											"end": 1778,
											"name": "tag",
											"source": 19,
											"value": "240"
										},
										{
											"begin": 1452,
											"end": 1778,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1512,
											"end": 1516,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1769,
											"end": 1770,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1747,
											"end": 1754,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1747,
											"end": 1766,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1747,
											"end": 1766,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1747,
											"end": 1766,
											"name": "EXTCODESIZE",
											"source": 19
										},
										{
											"begin": 1747,
											"end": 1770,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 1740,
											"end": 1770,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1740,
											"end": 1770,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1452,
											"end": 1778,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1452,
											"end": 1778,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1452,
											"end": 1778,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1452,
											"end": 1778,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9052,
											"end": 9604,
											"name": "tag",
											"source": 19,
											"value": "246"
										},
										{
											"begin": 9052,
											"end": 9604,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9233,
											"end": 9234,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9213,
											"end": 9223,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9213,
											"end": 9230,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 9213,
											"end": 9234,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 9209,
											"end": 9597,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 9209,
											"end": 9597,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "249"
										},
										{
											"begin": 9209,
											"end": 9597,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 9445,
											"end": 9455,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9439,
											"end": 9456,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 9502,
											"end": 9517,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 9489,
											"end": 9499,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 9485,
											"end": 9487,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 9481,
											"end": 9500,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9474,
											"end": 9518,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 9209,
											"end": 9597,
											"name": "tag",
											"source": 19,
											"value": "249"
										},
										{
											"begin": 9209,
											"end": 9597,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9572,
											"end": 9584,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 9565,
											"end": 9585,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 9565,
											"end": 9585,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 9565,
											"end": 9585,
											"name": "PUSH",
											"source": 19,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9565,
											"end": 9585,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9565,
											"end": 9585,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 9565,
											"end": 9585,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 9565,
											"end": 9585,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9565,
											"end": 9585,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "251"
										},
										{
											"begin": 9565,
											"end": 9585,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 9565,
											"end": 9585,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 9565,
											"end": 9585,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "252"
										},
										{
											"begin": 9565,
											"end": 9585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9565,
											"end": 9585,
											"name": "tag",
											"source": 19,
											"value": "251"
										},
										{
											"begin": 9565,
											"end": 9585,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9565,
											"end": 9585,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 9565,
											"end": 9585,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 9565,
											"end": 9585,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 9565,
											"end": 9585,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 9565,
											"end": 9585,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 9565,
											"end": 9585,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 9565,
											"end": 9585,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 23,
											"value": "254"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 23,
											"value": "256"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 23,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 23
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 23,
											"value": "257"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "312"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "256"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 23,
											"value": "312"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 23,
											"value": "258"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "314"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "257"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 23,
											"value": "314"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 23
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "315"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 23,
											"value": "315"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 23,
											"value": "259"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 23
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "317"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "258"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 23,
											"value": "317"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 841,
											"end": 959,
											"name": "tag",
											"source": 23,
											"value": "260"
										},
										{
											"begin": 841,
											"end": 959,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 918,
											"end": 952,
											"name": "PUSH",
											"source": 23,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 911,
											"end": 916,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 907,
											"end": 953,
											"name": "AND",
											"source": 23
										},
										{
											"begin": 896,
											"end": 953,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 896,
											"end": 953,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 841,
											"end": 959,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 841,
											"end": 959,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 841,
											"end": 959,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 841,
											"end": 959,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 965,
											"end": 1087,
											"name": "tag",
											"source": 23,
											"value": "261"
										},
										{
											"begin": 965,
											"end": 1087,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1038,
											"end": 1062,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "320"
										},
										{
											"begin": 1056,
											"end": 1061,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 1038,
											"end": 1062,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "260"
										},
										{
											"begin": 1038,
											"end": 1062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1038,
											"end": 1062,
											"name": "tag",
											"source": 23,
											"value": "320"
										},
										{
											"begin": 1038,
											"end": 1062,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1031,
											"end": 1036,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 1028,
											"end": 1063,
											"name": "EQ",
											"source": 23
										},
										{
											"begin": 1018,
											"end": 1081,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "321"
										},
										{
											"begin": 1018,
											"end": 1081,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 1077,
											"end": 1078,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1075,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 1067,
											"end": 1079,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 1018,
											"end": 1081,
											"name": "tag",
											"source": 23,
											"value": "321"
										},
										{
											"begin": 1018,
											"end": 1081,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 965,
											"end": 1087,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 965,
											"end": 1087,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1093,
											"end": 1232,
											"name": "tag",
											"source": 23,
											"value": "262"
										},
										{
											"begin": 1093,
											"end": 1232,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1139,
											"end": 1144,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 1177,
											"end": 1183,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 1164,
											"end": 1184,
											"name": "CALLDATALOAD",
											"source": 23
										},
										{
											"begin": 1155,
											"end": 1184,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 1155,
											"end": 1184,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1193,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "323"
										},
										{
											"begin": 1220,
											"end": 1225,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 1193,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "261"
										},
										{
											"begin": 1193,
											"end": 1226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1193,
											"end": 1226,
											"name": "tag",
											"source": 23,
											"value": "323"
										},
										{
											"begin": 1193,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1093,
											"end": 1232,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 1093,
											"end": 1232,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 1093,
											"end": 1232,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1093,
											"end": 1232,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1093,
											"end": 1232,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1238,
											"end": 2003,
											"name": "tag",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 1238,
											"end": 2003,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1324,
											"end": 1330,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 1332,
											"end": 1338,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 1340,
											"end": 1346,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 1397,
											"end": 1400,
											"name": "PUSH",
											"source": 23,
											"value": "80"
										},
										{
											"begin": 1385,
											"end": 1394,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 1376,
											"end": 1383,
											"name": "DUP8",
											"source": 23
										},
										{
											"begin": 1372,
											"end": 1395,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 1368,
											"end": 1401,
											"name": "SLT",
											"source": 23
										},
										{
											"begin": 1365,
											"end": 1485,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 1365,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "325"
										},
										{
											"begin": 1365,
											"end": 1485,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 1404,
											"end": 1483,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "326"
										},
										{
											"begin": 1404,
											"end": 1483,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "254"
										},
										{
											"begin": 1404,
											"end": 1483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1404,
											"end": 1483,
											"name": "tag",
											"source": 23,
											"value": "326"
										},
										{
											"begin": 1404,
											"end": 1483,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1365,
											"end": 1485,
											"name": "tag",
											"source": 23,
											"value": "325"
										},
										{
											"begin": 1365,
											"end": 1485,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1524,
											"end": 1525,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 1549,
											"end": 1602,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "327"
										},
										{
											"begin": 1594,
											"end": 1601,
											"name": "DUP8",
											"source": 23
										},
										{
											"begin": 1585,
											"end": 1591,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 1574,
											"end": 1583,
											"name": "DUP9",
											"source": 23
										},
										{
											"begin": 1570,
											"end": 1592,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 1549,
											"end": 1602,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "259"
										},
										{
											"begin": 1549,
											"end": 1602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1549,
											"end": 1602,
											"name": "tag",
											"source": 23,
											"value": "327"
										},
										{
											"begin": 1549,
											"end": 1602,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1539,
											"end": 1602,
											"name": "SWAP5",
											"source": 23
										},
										{
											"begin": 1539,
											"end": 1602,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1495,
											"end": 1612,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1651,
											"end": 1653,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 1677,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "328"
										},
										{
											"begin": 1722,
											"end": 1729,
											"name": "DUP8",
											"source": 23
										},
										{
											"begin": 1713,
											"end": 1719,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 1702,
											"end": 1711,
											"name": "DUP9",
											"source": 23
										},
										{
											"begin": 1698,
											"end": 1720,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 1677,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "259"
										},
										{
											"begin": 1677,
											"end": 1730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1677,
											"end": 1730,
											"name": "tag",
											"source": 23,
											"value": "328"
										},
										{
											"begin": 1677,
											"end": 1730,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1667,
											"end": 1730,
											"name": "SWAP4",
											"source": 23
										},
										{
											"begin": 1667,
											"end": 1730,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1622,
											"end": 1740,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1779,
											"end": 1781,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 1805,
											"end": 1858,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "329"
										},
										{
											"begin": 1850,
											"end": 1857,
											"name": "DUP8",
											"source": 23
										},
										{
											"begin": 1841,
											"end": 1847,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 1830,
											"end": 1839,
											"name": "DUP9",
											"source": 23
										},
										{
											"begin": 1826,
											"end": 1848,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 1805,
											"end": 1858,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "262"
										},
										{
											"begin": 1805,
											"end": 1858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1805,
											"end": 1858,
											"name": "tag",
											"source": 23,
											"value": "329"
										},
										{
											"begin": 1805,
											"end": 1858,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1795,
											"end": 1858,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 1795,
											"end": 1858,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1750,
											"end": 1868,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1907,
											"end": 1909,
											"name": "PUSH",
											"source": 23,
											"value": "60"
										},
										{
											"begin": 1933,
											"end": 1986,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "330"
										},
										{
											"begin": 1978,
											"end": 1985,
											"name": "DUP8",
											"source": 23
										},
										{
											"begin": 1969,
											"end": 1975,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 1958,
											"end": 1967,
											"name": "DUP9",
											"source": 23
										},
										{
											"begin": 1954,
											"end": 1976,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 1933,
											"end": 1986,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "262"
										},
										{
											"begin": 1933,
											"end": 1986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1933,
											"end": 1986,
											"name": "tag",
											"source": 23,
											"value": "330"
										},
										{
											"begin": 1933,
											"end": 1986,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1923,
											"end": 1986,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 1923,
											"end": 1986,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1878,
											"end": 1996,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1238,
											"end": 2003,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 1238,
											"end": 2003,
											"name": "SWAP6",
											"source": 23
										},
										{
											"begin": 1238,
											"end": 2003,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 1238,
											"end": 2003,
											"name": "SWAP5",
											"source": 23
										},
										{
											"begin": 1238,
											"end": 2003,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1238,
											"end": 2003,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 1238,
											"end": 2003,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1238,
											"end": 2003,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 2009,
											"end": 2110,
											"name": "tag",
											"source": 23,
											"value": "263"
										},
										{
											"begin": 2009,
											"end": 2110,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2045,
											"end": 2052,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 2085,
											"end": 2103,
											"name": "PUSH",
											"source": 23,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2078,
											"end": 2083,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 2074,
											"end": 2104,
											"name": "AND",
											"source": 23
										},
										{
											"begin": 2063,
											"end": 2104,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 2063,
											"end": 2104,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2009,
											"end": 2110,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 2009,
											"end": 2110,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 2009,
											"end": 2110,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2009,
											"end": 2110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 2116,
											"end": 2236,
											"name": "tag",
											"source": 23,
											"value": "264"
										},
										{
											"begin": 2116,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2188,
											"end": 2211,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "333"
										},
										{
											"begin": 2205,
											"end": 2210,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 2188,
											"end": 2211,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "263"
										},
										{
											"begin": 2188,
											"end": 2211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 2188,
											"end": 2211,
											"name": "tag",
											"source": 23,
											"value": "333"
										},
										{
											"begin": 2188,
											"end": 2211,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2181,
											"end": 2186,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 2178,
											"end": 2212,
											"name": "EQ",
											"source": 23
										},
										{
											"begin": 2168,
											"end": 2230,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "334"
										},
										{
											"begin": 2168,
											"end": 2230,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 2226,
											"end": 2227,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 2223,
											"end": 2224,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 2168,
											"end": 2230,
											"name": "tag",
											"source": 23,
											"value": "334"
										},
										{
											"begin": 2168,
											"end": 2230,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2116,
											"end": 2236,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2116,
											"end": 2236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 2242,
											"end": 2379,
											"name": "tag",
											"source": 23,
											"value": "265"
										},
										{
											"begin": 2242,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2287,
											"end": 2292,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2331,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 2312,
											"end": 2332,
											"name": "CALLDATALOAD",
											"source": 23
										},
										{
											"begin": 2303,
											"end": 2332,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 2303,
											"end": 2332,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2341,
											"end": 2373,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "336"
										},
										{
											"begin": 2367,
											"end": 2372,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 2341,
											"end": 2373,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "264"
										},
										{
											"begin": 2341,
											"end": 2373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 2341,
											"end": 2373,
											"name": "tag",
											"source": 23,
											"value": "336"
										},
										{
											"begin": 2341,
											"end": 2373,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2242,
											"end": 2379,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 2242,
											"end": 2379,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 2242,
											"end": 2379,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2242,
											"end": 2379,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2242,
											"end": 2379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 2385,
											"end": 2712,
											"name": "tag",
											"source": 23,
											"value": "24"
										},
										{
											"begin": 2385,
											"end": 2712,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2443,
											"end": 2449,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 2492,
											"end": 2494,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 2480,
											"end": 2489,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 2471,
											"end": 2478,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 2467,
											"end": 2490,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 2463,
											"end": 2495,
											"name": "SLT",
											"source": 23
										},
										{
											"begin": 2460,
											"end": 2579,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 2460,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "338"
										},
										{
											"begin": 2460,
											"end": 2579,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 2498,
											"end": 2577,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "339"
										},
										{
											"begin": 2498,
											"end": 2577,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "254"
										},
										{
											"begin": 2498,
											"end": 2577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 2498,
											"end": 2577,
											"name": "tag",
											"source": 23,
											"value": "339"
										},
										{
											"begin": 2498,
											"end": 2577,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2460,
											"end": 2579,
											"name": "tag",
											"source": 23,
											"value": "338"
										},
										{
											"begin": 2460,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2618,
											"end": 2619,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 2643,
											"end": 2695,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "340"
										},
										{
											"begin": 2687,
											"end": 2694,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 2678,
											"end": 2684,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 2667,
											"end": 2676,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 2663,
											"end": 2685,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 2643,
											"end": 2695,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "265"
										},
										{
											"begin": 2643,
											"end": 2695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 2643,
											"end": 2695,
											"name": "tag",
											"source": 23,
											"value": "340"
										},
										{
											"begin": 2643,
											"end": 2695,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2633,
											"end": 2695,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 2633,
											"end": 2695,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2589,
											"end": 2705,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2385,
											"end": 2712,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 2385,
											"end": 2712,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 2385,
											"end": 2712,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2385,
											"end": 2712,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2385,
											"end": 2712,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 2718,
											"end": 2795,
											"name": "tag",
											"source": 23,
											"value": "266"
										},
										{
											"begin": 2718,
											"end": 2795,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2755,
											"end": 2762,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 2784,
											"end": 2789,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 2773,
											"end": 2789,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 2773,
											"end": 2789,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2718,
											"end": 2795,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 2718,
											"end": 2795,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 2718,
											"end": 2795,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2718,
											"end": 2795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 2801,
											"end": 2923,
											"name": "tag",
											"source": 23,
											"value": "267"
										},
										{
											"begin": 2801,
											"end": 2923,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2874,
											"end": 2898,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "343"
										},
										{
											"begin": 2892,
											"end": 2897,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 2874,
											"end": 2898,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "266"
										},
										{
											"begin": 2874,
											"end": 2898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 2874,
											"end": 2898,
											"name": "tag",
											"source": 23,
											"value": "343"
										},
										{
											"begin": 2874,
											"end": 2898,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2867,
											"end": 2872,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 2864,
											"end": 2899,
											"name": "EQ",
											"source": 23
										},
										{
											"begin": 2854,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "344"
										},
										{
											"begin": 2854,
											"end": 2917,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 2913,
											"end": 2914,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 2910,
											"end": 2911,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 2903,
											"end": 2915,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 2854,
											"end": 2917,
											"name": "tag",
											"source": 23,
											"value": "344"
										},
										{
											"begin": 2854,
											"end": 2917,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2801,
											"end": 2923,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2801,
											"end": 2923,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 2929,
											"end": 3068,
											"name": "tag",
											"source": 23,
											"value": "268"
										},
										{
											"begin": 2929,
											"end": 3068,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2975,
											"end": 2980,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 3013,
											"end": 3019,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 3000,
											"end": 3020,
											"name": "CALLDATALOAD",
											"source": 23
										},
										{
											"begin": 2991,
											"end": 3020,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 2991,
											"end": 3020,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3029,
											"end": 3062,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "346"
										},
										{
											"begin": 3056,
											"end": 3061,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 3029,
											"end": 3062,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "267"
										},
										{
											"begin": 3029,
											"end": 3062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 3029,
											"end": 3062,
											"name": "tag",
											"source": 23,
											"value": "346"
										},
										{
											"begin": 3029,
											"end": 3062,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2929,
											"end": 3068,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 2929,
											"end": 3068,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 2929,
											"end": 3068,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2929,
											"end": 3068,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2929,
											"end": 3068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 3074,
											"end": 3548,
											"name": "tag",
											"source": 23,
											"value": "31"
										},
										{
											"begin": 3074,
											"end": 3548,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3142,
											"end": 3148,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 3150,
											"end": 3156,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 3199,
											"end": 3201,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 3187,
											"end": 3196,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 3178,
											"end": 3185,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 3174,
											"end": 3197,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 3170,
											"end": 3202,
											"name": "SLT",
											"source": 23
										},
										{
											"begin": 3167,
											"end": 3286,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 3167,
											"end": 3286,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "348"
										},
										{
											"begin": 3167,
											"end": 3286,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 3205,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "349"
										},
										{
											"begin": 3205,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "254"
										},
										{
											"begin": 3205,
											"end": 3284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 3205,
											"end": 3284,
											"name": "tag",
											"source": 23,
											"value": "349"
										},
										{
											"begin": 3205,
											"end": 3284,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3167,
											"end": 3286,
											"name": "tag",
											"source": 23,
											"value": "348"
										},
										{
											"begin": 3167,
											"end": 3286,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3325,
											"end": 3326,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 3350,
											"end": 3403,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "350"
										},
										{
											"begin": 3395,
											"end": 3402,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 3386,
											"end": 3392,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 3375,
											"end": 3384,
											"name": "DUP7",
											"source": 23
										},
										{
											"begin": 3371,
											"end": 3393,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 3350,
											"end": 3403,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "259"
										},
										{
											"begin": 3350,
											"end": 3403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 3350,
											"end": 3403,
											"name": "tag",
											"source": 23,
											"value": "350"
										},
										{
											"begin": 3350,
											"end": 3403,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3340,
											"end": 3403,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 3340,
											"end": 3403,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3296,
											"end": 3413,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3452,
											"end": 3454,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 3478,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "351"
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 3514,
											"end": 3520,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 3503,
											"end": 3512,
											"name": "DUP7",
											"source": 23
										},
										{
											"begin": 3499,
											"end": 3521,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 3478,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "268"
										},
										{
											"begin": 3478,
											"end": 3531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 3478,
											"end": 3531,
											"name": "tag",
											"source": 23,
											"value": "351"
										},
										{
											"begin": 3478,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3468,
											"end": 3531,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 3468,
											"end": 3531,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3423,
											"end": 3541,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3074,
											"end": 3548,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 3074,
											"end": 3548,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3074,
											"end": 3548,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 3074,
											"end": 3548,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 3074,
											"end": 3548,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3074,
											"end": 3548,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 3554,
											"end": 3644,
											"name": "tag",
											"source": 23,
											"value": "269"
										},
										{
											"begin": 3554,
											"end": 3644,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3588,
											"end": 3595,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 3631,
											"end": 3636,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 3624,
											"end": 3637,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 3617,
											"end": 3638,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 3606,
											"end": 3638,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 3606,
											"end": 3638,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3554,
											"end": 3644,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 3554,
											"end": 3644,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 3554,
											"end": 3644,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3554,
											"end": 3644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 3650,
											"end": 3759,
											"name": "tag",
											"source": 23,
											"value": "270"
										},
										{
											"begin": 3650,
											"end": 3759,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3731,
											"end": 3752,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "354"
										},
										{
											"begin": 3746,
											"end": 3751,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 3731,
											"end": 3752,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "269"
										},
										{
											"begin": 3731,
											"end": 3752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 3731,
											"end": 3752,
											"name": "tag",
											"source": 23,
											"value": "354"
										},
										{
											"begin": 3731,
											"end": 3752,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3726,
											"end": 3729,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 3719,
											"end": 3753,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 3650,
											"end": 3759,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3650,
											"end": 3759,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3650,
											"end": 3759,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 3765,
											"end": 3975,
											"name": "tag",
											"source": 23,
											"value": "34"
										},
										{
											"begin": 3765,
											"end": 3975,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3852,
											"end": 3856,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 3890,
											"end": 3892,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 3879,
											"end": 3888,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 3875,
											"end": 3893,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 3867,
											"end": 3893,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 3867,
											"end": 3893,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3903,
											"end": 3968,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "356"
										},
										{
											"begin": 3965,
											"end": 3966,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 3954,
											"end": 3963,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 3950,
											"end": 3967,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 3941,
											"end": 3947,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 3903,
											"end": 3968,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "270"
										},
										{
											"begin": 3903,
											"end": 3968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 3903,
											"end": 3968,
											"name": "tag",
											"source": 23,
											"value": "356"
										},
										{
											"begin": 3903,
											"end": 3968,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3765,
											"end": 3975,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 3765,
											"end": 3975,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 3765,
											"end": 3975,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3765,
											"end": 3975,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3765,
											"end": 3975,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 3981,
											"end": 4072,
											"name": "tag",
											"source": 23,
											"value": "271"
										},
										{
											"begin": 3981,
											"end": 4072,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4017,
											"end": 4024,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 4057,
											"end": 4065,
											"name": "PUSH",
											"source": 23,
											"value": "FFFFFF"
										},
										{
											"begin": 4050,
											"end": 4055,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 4046,
											"end": 4066,
											"name": "AND",
											"source": 23
										},
										{
											"begin": 4035,
											"end": 4066,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 4035,
											"end": 4066,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3981,
											"end": 4072,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 3981,
											"end": 4072,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 3981,
											"end": 4072,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3981,
											"end": 4072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 4078,
											"end": 4198,
											"name": "tag",
											"source": 23,
											"value": "272"
										},
										{
											"begin": 4078,
											"end": 4198,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4150,
											"end": 4173,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "359"
										},
										{
											"begin": 4167,
											"end": 4172,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 4150,
											"end": 4173,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "271"
										},
										{
											"begin": 4150,
											"end": 4173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 4150,
											"end": 4173,
											"name": "tag",
											"source": 23,
											"value": "359"
										},
										{
											"begin": 4150,
											"end": 4173,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4143,
											"end": 4148,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 4140,
											"end": 4174,
											"name": "EQ",
											"source": 23
										},
										{
											"begin": 4130,
											"end": 4192,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "360"
										},
										{
											"begin": 4130,
											"end": 4192,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 4188,
											"end": 4189,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 4185,
											"end": 4186,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 4178,
											"end": 4190,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 4130,
											"end": 4192,
											"name": "tag",
											"source": 23,
											"value": "360"
										},
										{
											"begin": 4130,
											"end": 4192,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4078,
											"end": 4198,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4078,
											"end": 4198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 4204,
											"end": 4341,
											"name": "tag",
											"source": 23,
											"value": "273"
										},
										{
											"begin": 4204,
											"end": 4341,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4249,
											"end": 4254,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 4287,
											"end": 4293,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 4274,
											"end": 4294,
											"name": "CALLDATALOAD",
											"source": 23
										},
										{
											"begin": 4265,
											"end": 4294,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 4265,
											"end": 4294,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4303,
											"end": 4335,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "362"
										},
										{
											"begin": 4329,
											"end": 4334,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 4303,
											"end": 4335,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "272"
										},
										{
											"begin": 4303,
											"end": 4335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 4303,
											"end": 4335,
											"name": "tag",
											"source": 23,
											"value": "362"
										},
										{
											"begin": 4303,
											"end": 4335,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4204,
											"end": 4341,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 4204,
											"end": 4341,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 4204,
											"end": 4341,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4204,
											"end": 4341,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4204,
											"end": 4341,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 4347,
											"end": 4964,
											"name": "tag",
											"source": 23,
											"value": "37"
										},
										{
											"begin": 4347,
											"end": 4964,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4423,
											"end": 4429,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 4431,
											"end": 4437,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 4439,
											"end": 4445,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 4488,
											"end": 4490,
											"name": "PUSH",
											"source": 23,
											"value": "60"
										},
										{
											"begin": 4476,
											"end": 4485,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 4467,
											"end": 4474,
											"name": "DUP7",
											"source": 23
										},
										{
											"begin": 4463,
											"end": 4486,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 4459,
											"end": 4491,
											"name": "SLT",
											"source": 23
										},
										{
											"begin": 4456,
											"end": 4575,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 4456,
											"end": 4575,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "364"
										},
										{
											"begin": 4456,
											"end": 4575,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 4494,
											"end": 4573,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "365"
										},
										{
											"begin": 4494,
											"end": 4573,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "254"
										},
										{
											"begin": 4494,
											"end": 4573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 4494,
											"end": 4573,
											"name": "tag",
											"source": 23,
											"value": "365"
										},
										{
											"begin": 4494,
											"end": 4573,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4456,
											"end": 4575,
											"name": "tag",
											"source": 23,
											"value": "364"
										},
										{
											"begin": 4456,
											"end": 4575,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4614,
											"end": 4615,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 4639,
											"end": 4692,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "366"
										},
										{
											"begin": 4684,
											"end": 4691,
											"name": "DUP7",
											"source": 23
										},
										{
											"begin": 4675,
											"end": 4681,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 4664,
											"end": 4673,
											"name": "DUP8",
											"source": 23
										},
										{
											"begin": 4660,
											"end": 4682,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 4639,
											"end": 4692,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "259"
										},
										{
											"begin": 4639,
											"end": 4692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 4639,
											"end": 4692,
											"name": "tag",
											"source": 23,
											"value": "366"
										},
										{
											"begin": 4639,
											"end": 4692,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4629,
											"end": 4692,
											"name": "SWAP4",
											"source": 23
										},
										{
											"begin": 4629,
											"end": 4692,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4585,
											"end": 4702,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4741,
											"end": 4743,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 4767,
											"end": 4820,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "367"
										},
										{
											"begin": 4812,
											"end": 4819,
											"name": "DUP7",
											"source": 23
										},
										{
											"begin": 4803,
											"end": 4809,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 4792,
											"end": 4801,
											"name": "DUP8",
											"source": 23
										},
										{
											"begin": 4788,
											"end": 4810,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 4767,
											"end": 4820,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "259"
										},
										{
											"begin": 4767,
											"end": 4820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 4767,
											"end": 4820,
											"name": "tag",
											"source": 23,
											"value": "367"
										},
										{
											"begin": 4767,
											"end": 4820,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4757,
											"end": 4820,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 4757,
											"end": 4820,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4712,
											"end": 4830,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4869,
											"end": 4871,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 4895,
											"end": 4947,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "368"
										},
										{
											"begin": 4939,
											"end": 4946,
											"name": "DUP7",
											"source": 23
										},
										{
											"begin": 4930,
											"end": 4936,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 4919,
											"end": 4928,
											"name": "DUP8",
											"source": 23
										},
										{
											"begin": 4915,
											"end": 4937,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 4895,
											"end": 4947,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "273"
										},
										{
											"begin": 4895,
											"end": 4947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 4895,
											"end": 4947,
											"name": "tag",
											"source": 23,
											"value": "368"
										},
										{
											"begin": 4895,
											"end": 4947,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4885,
											"end": 4947,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 4885,
											"end": 4947,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4840,
											"end": 4957,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4347,
											"end": 4964,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 4347,
											"end": 4964,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4347,
											"end": 4964,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 4347,
											"end": 4964,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4347,
											"end": 4964,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 4347,
											"end": 4964,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 4970,
											"end": 5088,
											"name": "tag",
											"source": 23,
											"value": "274"
										},
										{
											"begin": 4970,
											"end": 5088,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 5057,
											"end": 5081,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "370"
										},
										{
											"begin": 5075,
											"end": 5080,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 5057,
											"end": 5081,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "257"
										},
										{
											"begin": 5057,
											"end": 5081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 5057,
											"end": 5081,
											"name": "tag",
											"source": 23,
											"value": "370"
										},
										{
											"begin": 5057,
											"end": 5081,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 5052,
											"end": 5055,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 5045,
											"end": 5082,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 4970,
											"end": 5088,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4970,
											"end": 5088,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4970,
											"end": 5088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 5094,
											"end": 5316,
											"name": "tag",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 5094,
											"end": 5316,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 5187,
											"end": 5191,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 5225,
											"end": 5227,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 5214,
											"end": 5223,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 5210,
											"end": 5228,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 5202,
											"end": 5228,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 5202,
											"end": 5228,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5238,
											"end": 5309,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "372"
										},
										{
											"begin": 5306,
											"end": 5307,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 5295,
											"end": 5304,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 5291,
											"end": 5308,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 5282,
											"end": 5288,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 5238,
											"end": 5309,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "274"
										},
										{
											"begin": 5238,
											"end": 5309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 5238,
											"end": 5309,
											"name": "tag",
											"source": 23,
											"value": "372"
										},
										{
											"begin": 5238,
											"end": 5309,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 5094,
											"end": 5316,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 5094,
											"end": 5316,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 5094,
											"end": 5316,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5094,
											"end": 5316,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5094,
											"end": 5316,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 5322,
											"end": 5796,
											"name": "tag",
											"source": 23,
											"value": "46"
										},
										{
											"begin": 5322,
											"end": 5796,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 5390,
											"end": 5396,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 5398,
											"end": 5404,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 5447,
											"end": 5449,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 5435,
											"end": 5444,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 5426,
											"end": 5433,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 5422,
											"end": 5445,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 5418,
											"end": 5450,
											"name": "SLT",
											"source": 23
										},
										{
											"begin": 5415,
											"end": 5534,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 5415,
											"end": 5534,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "374"
										},
										{
											"begin": 5415,
											"end": 5534,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 5453,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "375"
										},
										{
											"begin": 5453,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "254"
										},
										{
											"begin": 5453,
											"end": 5532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 5453,
											"end": 5532,
											"name": "tag",
											"source": 23,
											"value": "375"
										},
										{
											"begin": 5453,
											"end": 5532,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 5415,
											"end": 5534,
											"name": "tag",
											"source": 23,
											"value": "374"
										},
										{
											"begin": 5415,
											"end": 5534,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 5573,
											"end": 5574,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 5598,
											"end": 5651,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "376"
										},
										{
											"begin": 5643,
											"end": 5650,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 5634,
											"end": 5640,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 5623,
											"end": 5632,
											"name": "DUP7",
											"source": 23
										},
										{
											"begin": 5619,
											"end": 5641,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 5598,
											"end": 5651,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "262"
										},
										{
											"begin": 5598,
											"end": 5651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 5598,
											"end": 5651,
											"name": "tag",
											"source": 23,
											"value": "376"
										},
										{
											"begin": 5598,
											"end": 5651,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 5588,
											"end": 5651,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 5588,
											"end": 5651,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5544,
											"end": 5661,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5700,
											"end": 5702,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 5726,
											"end": 5779,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "377"
										},
										{
											"begin": 5771,
											"end": 5778,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 5762,
											"end": 5768,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 5751,
											"end": 5760,
											"name": "DUP7",
											"source": 23
										},
										{
											"begin": 5747,
											"end": 5769,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 5726,
											"end": 5779,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "262"
										},
										{
											"begin": 5726,
											"end": 5779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 5726,
											"end": 5779,
											"name": "tag",
											"source": 23,
											"value": "377"
										},
										{
											"begin": 5726,
											"end": 5779,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 5716,
											"end": 5779,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 5716,
											"end": 5779,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5671,
											"end": 5789,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5322,
											"end": 5796,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 5322,
											"end": 5796,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5322,
											"end": 5796,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 5322,
											"end": 5796,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 5322,
											"end": 5796,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5322,
											"end": 5796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 5802,
											"end": 5920,
											"name": "tag",
											"source": 23,
											"value": "275"
										},
										{
											"begin": 5802,
											"end": 5920,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 5889,
											"end": 5913,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "379"
										},
										{
											"begin": 5907,
											"end": 5912,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 5889,
											"end": 5913,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "266"
										},
										{
											"begin": 5889,
											"end": 5913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 5889,
											"end": 5913,
											"name": "tag",
											"source": 23,
											"value": "379"
										},
										{
											"begin": 5889,
											"end": 5913,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 5884,
											"end": 5887,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 5877,
											"end": 5914,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 5802,
											"end": 5920,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5802,
											"end": 5920,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5802,
											"end": 5920,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 5926,
											"end": 6148,
											"name": "tag",
											"source": 23,
											"value": "49"
										},
										{
											"begin": 5926,
											"end": 6148,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 6019,
											"end": 6023,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 6057,
											"end": 6059,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 6046,
											"end": 6055,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 6042,
											"end": 6060,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 6034,
											"end": 6060,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 6034,
											"end": 6060,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6070,
											"end": 6141,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "381"
										},
										{
											"begin": 6138,
											"end": 6139,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 6127,
											"end": 6136,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 6123,
											"end": 6140,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 6114,
											"end": 6120,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 6070,
											"end": 6141,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "275"
										},
										{
											"begin": 6070,
											"end": 6141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 6070,
											"end": 6141,
											"name": "tag",
											"source": 23,
											"value": "381"
										},
										{
											"begin": 6070,
											"end": 6141,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 5926,
											"end": 6148,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 5926,
											"end": 6148,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 5926,
											"end": 6148,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5926,
											"end": 6148,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5926,
											"end": 6148,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 6154,
											"end": 6626,
											"name": "tag",
											"source": 23,
											"value": "62"
										},
										{
											"begin": 6154,
											"end": 6626,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 6221,
											"end": 6227,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 6229,
											"end": 6235,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 6278,
											"end": 6280,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 6266,
											"end": 6275,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 6257,
											"end": 6264,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 6253,
											"end": 6276,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "SLT",
											"source": 23
										},
										{
											"begin": 6246,
											"end": 6365,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 6246,
											"end": 6365,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "383"
										},
										{
											"begin": 6246,
											"end": 6365,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 6284,
											"end": 6363,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "384"
										},
										{
											"begin": 6284,
											"end": 6363,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "254"
										},
										{
											"begin": 6284,
											"end": 6363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 6284,
											"end": 6363,
											"name": "tag",
											"source": 23,
											"value": "384"
										},
										{
											"begin": 6284,
											"end": 6363,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 6246,
											"end": 6365,
											"name": "tag",
											"source": 23,
											"value": "383"
										},
										{
											"begin": 6246,
											"end": 6365,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 6404,
											"end": 6405,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 6429,
											"end": 6481,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "385"
										},
										{
											"begin": 6473,
											"end": 6480,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 6464,
											"end": 6470,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 6453,
											"end": 6462,
											"name": "DUP7",
											"source": 23
										},
										{
											"begin": 6449,
											"end": 6471,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 6429,
											"end": 6481,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "265"
										},
										{
											"begin": 6429,
											"end": 6481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 6429,
											"end": 6481,
											"name": "tag",
											"source": 23,
											"value": "385"
										},
										{
											"begin": 6429,
											"end": 6481,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 6419,
											"end": 6481,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 6419,
											"end": 6481,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6375,
											"end": 6491,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6530,
											"end": 6532,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 6556,
											"end": 6609,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "386"
										},
										{
											"begin": 6601,
											"end": 6608,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 6592,
											"end": 6598,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 6581,
											"end": 6590,
											"name": "DUP7",
											"source": 23
										},
										{
											"begin": 6577,
											"end": 6599,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 6556,
											"end": 6609,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "259"
										},
										{
											"begin": 6556,
											"end": 6609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 6556,
											"end": 6609,
											"name": "tag",
											"source": 23,
											"value": "386"
										},
										{
											"begin": 6556,
											"end": 6609,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 6546,
											"end": 6609,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 6546,
											"end": 6609,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6501,
											"end": 6619,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6154,
											"end": 6626,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 6154,
											"end": 6626,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6154,
											"end": 6626,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 6154,
											"end": 6626,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 6154,
											"end": 6626,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6154,
											"end": 6626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 6632,
											"end": 6812,
											"name": "tag",
											"source": 23,
											"value": "276"
										},
										{
											"begin": 6632,
											"end": 6812,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 6680,
											"end": 6757,
											"name": "PUSH",
											"source": 23,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6677,
											"end": 6678,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 6670,
											"end": 6758,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 6777,
											"end": 6781,
											"name": "PUSH",
											"source": 23,
											"value": "11"
										},
										{
											"begin": 6774,
											"end": 6775,
											"name": "PUSH",
											"source": 23,
											"value": "4"
										},
										{
											"begin": 6767,
											"end": 6782,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 6801,
											"end": 6805,
											"name": "PUSH",
											"source": 23,
											"value": "24"
										},
										{
											"begin": 6798,
											"end": 6799,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 6791,
											"end": 6806,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 6818,
											"end": 7097,
											"name": "tag",
											"source": 23,
											"value": "74"
										},
										{
											"begin": 6818,
											"end": 7097,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 6858,
											"end": 6865,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 6881,
											"end": 6901,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "389"
										},
										{
											"begin": 6899,
											"end": 6900,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 6881,
											"end": 6901,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "260"
										},
										{
											"begin": 6881,
											"end": 6901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 6881,
											"end": 6901,
											"name": "tag",
											"source": 23,
											"value": "389"
										},
										{
											"begin": 6881,
											"end": 6901,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 6876,
											"end": 6901,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 6876,
											"end": 6901,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6915,
											"end": 6935,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "390"
										},
										{
											"begin": 6933,
											"end": 6934,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 6915,
											"end": 6935,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "260"
										},
										{
											"begin": 6915,
											"end": 6935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 6915,
											"end": 6935,
											"name": "tag",
											"source": 23,
											"value": "390"
										},
										{
											"begin": 6915,
											"end": 6935,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 6910,
											"end": 6935,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 6910,
											"end": 6935,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6970,
											"end": 6971,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 6967,
											"end": 6968,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 6963,
											"end": 6972,
											"name": "MUL",
											"source": 23
										},
										{
											"begin": 6992,
											"end": 7022,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "391"
										},
										{
											"begin": 7010,
											"end": 7021,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 6992,
											"end": 7022,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "260"
										},
										{
											"begin": 6992,
											"end": 7022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 6992,
											"end": 7022,
											"name": "tag",
											"source": 23,
											"value": "391"
										},
										{
											"begin": 6992,
											"end": 7022,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 6981,
											"end": 7022,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 6981,
											"end": 7022,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7054,
											"end": 7065,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 7045,
											"end": 7052,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 7042,
											"end": 7066,
											"name": "EQ",
											"source": 23
										},
										{
											"begin": 7032,
											"end": 7090,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "392"
										},
										{
											"begin": 7032,
											"end": 7090,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 7070,
											"end": 7088,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "393"
										},
										{
											"begin": 7070,
											"end": 7088,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "276"
										},
										{
											"begin": 7070,
											"end": 7088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 7070,
											"end": 7088,
											"name": "tag",
											"source": 23,
											"value": "393"
										},
										{
											"begin": 7070,
											"end": 7088,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 7032,
											"end": 7090,
											"name": "tag",
											"source": 23,
											"value": "392"
										},
										{
											"begin": 7032,
											"end": 7090,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 6866,
											"end": 7097,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6818,
											"end": 7097,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 6818,
											"end": 7097,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 6818,
											"end": 7097,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6818,
											"end": 7097,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6818,
											"end": 7097,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 7103,
											"end": 7294,
											"name": "tag",
											"source": 23,
											"value": "82"
										},
										{
											"begin": 7103,
											"end": 7294,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 7143,
											"end": 7146,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 7162,
											"end": 7182,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "395"
										},
										{
											"begin": 7180,
											"end": 7181,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 7162,
											"end": 7182,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "266"
										},
										{
											"begin": 7162,
											"end": 7182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 7162,
											"end": 7182,
											"name": "tag",
											"source": 23,
											"value": "395"
										},
										{
											"begin": 7162,
											"end": 7182,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 7157,
											"end": 7182,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 7157,
											"end": 7182,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7196,
											"end": 7216,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "396"
										},
										{
											"begin": 7214,
											"end": 7215,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 7196,
											"end": 7216,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "266"
										},
										{
											"begin": 7196,
											"end": 7216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 7196,
											"end": 7216,
											"name": "tag",
											"source": 23,
											"value": "396"
										},
										{
											"begin": 7196,
											"end": 7216,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 7191,
											"end": 7216,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 7191,
											"end": 7216,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7239,
											"end": 7240,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 7236,
											"end": 7237,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 7232,
											"end": 7241,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 7225,
											"end": 7241,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 7225,
											"end": 7241,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7260,
											"end": 7263,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 7257,
											"end": 7258,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 7254,
											"end": 7264,
											"name": "GT",
											"source": 23
										},
										{
											"begin": 7251,
											"end": 7287,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 7251,
											"end": 7287,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "397"
										},
										{
											"begin": 7251,
											"end": 7287,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 7267,
											"end": 7285,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "398"
										},
										{
											"begin": 7267,
											"end": 7285,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "276"
										},
										{
											"begin": 7267,
											"end": 7285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 7267,
											"end": 7285,
											"name": "tag",
											"source": 23,
											"value": "398"
										},
										{
											"begin": 7267,
											"end": 7285,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 7251,
											"end": 7287,
											"name": "tag",
											"source": 23,
											"value": "397"
										},
										{
											"begin": 7251,
											"end": 7287,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 7103,
											"end": 7294,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 7103,
											"end": 7294,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 7103,
											"end": 7294,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7103,
											"end": 7294,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7103,
											"end": 7294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 7300,
											"end": 7385,
											"name": "tag",
											"source": 23,
											"value": "277"
										},
										{
											"begin": 7300,
											"end": 7385,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 7345,
											"end": 7352,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 7374,
											"end": 7379,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 7363,
											"end": 7379,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 7363,
											"end": 7379,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7300,
											"end": 7385,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 7300,
											"end": 7385,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 7300,
											"end": 7385,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7300,
											"end": 7385,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 7391,
											"end": 7451,
											"name": "tag",
											"source": 23,
											"value": "278"
										},
										{
											"begin": 7391,
											"end": 7451,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 7419,
											"end": 7422,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 7440,
											"end": 7445,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 7433,
											"end": 7445,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 7433,
											"end": 7445,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7391,
											"end": 7451,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 7391,
											"end": 7451,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 7391,
											"end": 7451,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7391,
											"end": 7451,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 7457,
											"end": 7615,
											"name": "tag",
											"source": 23,
											"value": "279"
										},
										{
											"begin": 7457,
											"end": 7615,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 7515,
											"end": 7524,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 7548,
											"end": 7609,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "402"
										},
										{
											"begin": 7566,
											"end": 7608,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "403"
										},
										{
											"begin": 7575,
											"end": 7607,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "404"
										},
										{
											"begin": 7601,
											"end": 7606,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 7575,
											"end": 7607,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "277"
										},
										{
											"begin": 7575,
											"end": 7607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 7575,
											"end": 7607,
											"name": "tag",
											"source": 23,
											"value": "404"
										},
										{
											"begin": 7575,
											"end": 7607,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 7566,
											"end": 7608,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "278"
										},
										{
											"begin": 7566,
											"end": 7608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 7566,
											"end": 7608,
											"name": "tag",
											"source": 23,
											"value": "403"
										},
										{
											"begin": 7566,
											"end": 7608,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 7548,
											"end": 7609,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "266"
										},
										{
											"begin": 7548,
											"end": 7609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 7548,
											"end": 7609,
											"name": "tag",
											"source": 23,
											"value": "402"
										},
										{
											"begin": 7548,
											"end": 7609,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 7535,
											"end": 7609,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 7535,
											"end": 7609,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7457,
											"end": 7615,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 7457,
											"end": 7615,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 7457,
											"end": 7615,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7457,
											"end": 7615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 7621,
											"end": 7768,
											"name": "tag",
											"source": 23,
											"value": "280"
										},
										{
											"begin": 7621,
											"end": 7768,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 7716,
											"end": 7761,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "406"
										},
										{
											"begin": 7755,
											"end": 7760,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 7716,
											"end": 7761,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "279"
										},
										{
											"begin": 7716,
											"end": 7761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 7716,
											"end": 7761,
											"name": "tag",
											"source": 23,
											"value": "406"
										},
										{
											"begin": 7716,
											"end": 7761,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 7711,
											"end": 7714,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 7704,
											"end": 7762,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 7621,
											"end": 7768,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7621,
											"end": 7768,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7621,
											"end": 7768,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 7774,
											"end": 7862,
											"name": "tag",
											"source": 23,
											"value": "281"
										},
										{
											"begin": 7774,
											"end": 7862,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 7822,
											"end": 7829,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 7851,
											"end": 7856,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 7840,
											"end": 7856,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 7840,
											"end": 7856,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7774,
											"end": 7862,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 7774,
											"end": 7862,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 7774,
											"end": 7862,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7774,
											"end": 7862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 7868,
											"end": 8032,
											"name": "tag",
											"source": 23,
											"value": "282"
										},
										{
											"begin": 7868,
											"end": 8032,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 7929,
											"end": 7938,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 7962,
											"end": 8026,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "409"
										},
										{
											"begin": 7980,
											"end": 8025,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "410"
										},
										{
											"begin": 7989,
											"end": 8024,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "411"
										},
										{
											"begin": 8018,
											"end": 8023,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 7989,
											"end": 8024,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "281"
										},
										{
											"begin": 7989,
											"end": 8024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 7989,
											"end": 8024,
											"name": "tag",
											"source": 23,
											"value": "411"
										},
										{
											"begin": 7989,
											"end": 8024,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 7980,
											"end": 8025,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "278"
										},
										{
											"begin": 7980,
											"end": 8025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 7980,
											"end": 8025,
											"name": "tag",
											"source": 23,
											"value": "410"
										},
										{
											"begin": 7980,
											"end": 8025,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 7962,
											"end": 8026,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "266"
										},
										{
											"begin": 7962,
											"end": 8026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 7962,
											"end": 8026,
											"name": "tag",
											"source": 23,
											"value": "409"
										},
										{
											"begin": 7962,
											"end": 8026,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 7949,
											"end": 8026,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 7949,
											"end": 8026,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7868,
											"end": 8032,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 7868,
											"end": 8032,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 7868,
											"end": 8032,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7868,
											"end": 8032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 8038,
											"end": 8191,
											"name": "tag",
											"source": 23,
											"value": "283"
										},
										{
											"begin": 8038,
											"end": 8191,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 8136,
											"end": 8184,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "413"
										},
										{
											"begin": 8178,
											"end": 8183,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 8136,
											"end": 8184,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "282"
										},
										{
											"begin": 8136,
											"end": 8184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 8136,
											"end": 8184,
											"name": "tag",
											"source": 23,
											"value": "413"
										},
										{
											"begin": 8136,
											"end": 8184,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 8131,
											"end": 8134,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 8124,
											"end": 8185,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 8038,
											"end": 8191,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 8038,
											"end": 8191,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 8038,
											"end": 8191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 8197,
											"end": 9248,
											"name": "tag",
											"source": 23,
											"value": "84"
										},
										{
											"begin": 8197,
											"end": 9248,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 8513,
											"end": 8517,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 8551,
											"end": 8554,
											"name": "PUSH",
											"source": 23,
											"value": "100"
										},
										{
											"begin": 8540,
											"end": 8549,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 8536,
											"end": 8555,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 8528,
											"end": 8555,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 8528,
											"end": 8555,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 8565,
											"end": 8636,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "415"
										},
										{
											"begin": 8633,
											"end": 8634,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 8622,
											"end": 8631,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 8618,
											"end": 8635,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 8609,
											"end": 8615,
											"name": "DUP12",
											"source": 23
										},
										{
											"begin": 8565,
											"end": 8636,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "274"
										},
										{
											"begin": 8565,
											"end": 8636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 8565,
											"end": 8636,
											"name": "tag",
											"source": 23,
											"value": "415"
										},
										{
											"begin": 8565,
											"end": 8636,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 8646,
											"end": 8718,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "416"
										},
										{
											"begin": 8714,
											"end": 8716,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 8703,
											"end": 8712,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 8699,
											"end": 8717,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 8690,
											"end": 8696,
											"name": "DUP11",
											"source": 23
										},
										{
											"begin": 8646,
											"end": 8718,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "274"
										},
										{
											"begin": 8646,
											"end": 8718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 8646,
											"end": 8718,
											"name": "tag",
											"source": 23,
											"value": "416"
										},
										{
											"begin": 8646,
											"end": 8718,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 8728,
											"end": 8800,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "417"
										},
										{
											"begin": 8796,
											"end": 8798,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 8785,
											"end": 8794,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 8781,
											"end": 8799,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 8772,
											"end": 8778,
											"name": "DUP10",
											"source": 23
										},
										{
											"begin": 8728,
											"end": 8800,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "275"
										},
										{
											"begin": 8728,
											"end": 8800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 8728,
											"end": 8800,
											"name": "tag",
											"source": 23,
											"value": "417"
										},
										{
											"begin": 8728,
											"end": 8800,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 8810,
											"end": 8890,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "418"
										},
										{
											"begin": 8886,
											"end": 8888,
											"name": "PUSH",
											"source": 23,
											"value": "60"
										},
										{
											"begin": 8875,
											"end": 8884,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 8871,
											"end": 8889,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 8862,
											"end": 8868,
											"name": "DUP9",
											"source": 23
										},
										{
											"begin": 8810,
											"end": 8890,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "280"
										},
										{
											"begin": 8810,
											"end": 8890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 8810,
											"end": 8890,
											"name": "tag",
											"source": 23,
											"value": "418"
										},
										{
											"begin": 8810,
											"end": 8890,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 8900,
											"end": 8984,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "419"
										},
										{
											"begin": 8979,
											"end": 8982,
											"name": "PUSH",
											"source": 23,
											"value": "80"
										},
										{
											"begin": 8968,
											"end": 8977,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 8964,
											"end": 8983,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 8955,
											"end": 8961,
											"name": "DUP8",
											"source": 23
										},
										{
											"begin": 8900,
											"end": 8984,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "283"
										},
										{
											"begin": 8900,
											"end": 8984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 8900,
											"end": 8984,
											"name": "tag",
											"source": 23,
											"value": "419"
										},
										{
											"begin": 8900,
											"end": 8984,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 8994,
											"end": 9075,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "420"
										},
										{
											"begin": 9070,
											"end": 9073,
											"name": "PUSH",
											"source": 23,
											"value": "A0"
										},
										{
											"begin": 9059,
											"end": 9068,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 9055,
											"end": 9074,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 9046,
											"end": 9052,
											"name": "DUP7",
											"source": 23
										},
										{
											"begin": 8994,
											"end": 9075,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "280"
										},
										{
											"begin": 8994,
											"end": 9075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 8994,
											"end": 9075,
											"name": "tag",
											"source": 23,
											"value": "420"
										},
										{
											"begin": 8994,
											"end": 9075,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 9085,
											"end": 9158,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "421"
										},
										{
											"begin": 9153,
											"end": 9156,
											"name": "PUSH",
											"source": 23,
											"value": "C0"
										},
										{
											"begin": 9142,
											"end": 9151,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 9138,
											"end": 9157,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 9129,
											"end": 9135,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 9085,
											"end": 9158,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "274"
										},
										{
											"begin": 9085,
											"end": 9158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 9085,
											"end": 9158,
											"name": "tag",
											"source": 23,
											"value": "421"
										},
										{
											"begin": 9085,
											"end": 9158,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 9168,
											"end": 9241,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "422"
										},
										{
											"begin": 9236,
											"end": 9239,
											"name": "PUSH",
											"source": 23,
											"value": "E0"
										},
										{
											"begin": 9225,
											"end": 9234,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 9221,
											"end": 9240,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 9212,
											"end": 9218,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 9168,
											"end": 9241,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "275"
										},
										{
											"begin": 9168,
											"end": 9241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 9168,
											"end": 9241,
											"name": "tag",
											"source": 23,
											"value": "422"
										},
										{
											"begin": 9168,
											"end": 9241,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 8197,
											"end": 9248,
											"name": "SWAP10",
											"source": 23
										},
										{
											"begin": 8197,
											"end": 9248,
											"name": "SWAP9",
											"source": 23
										},
										{
											"begin": 8197,
											"end": 9248,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 8197,
											"end": 9248,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 8197,
											"end": 9248,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 8197,
											"end": 9248,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 8197,
											"end": 9248,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 8197,
											"end": 9248,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 8197,
											"end": 9248,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 8197,
											"end": 9248,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 8197,
											"end": 9248,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 8197,
											"end": 9248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 9254,
											"end": 9397,
											"name": "tag",
											"source": 23,
											"value": "284"
										},
										{
											"begin": 9254,
											"end": 9397,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 9311,
											"end": 9316,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 9342,
											"end": 9348,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 9336,
											"end": 9349,
											"name": "MLOAD",
											"source": 23
										},
										{
											"begin": 9327,
											"end": 9349,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 9327,
											"end": 9349,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 9358,
											"end": 9391,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "424"
										},
										{
											"begin": 9385,
											"end": 9390,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 9358,
											"end": 9391,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "267"
										},
										{
											"begin": 9358,
											"end": 9391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 9358,
											"end": 9391,
											"name": "tag",
											"source": 23,
											"value": "424"
										},
										{
											"begin": 9358,
											"end": 9391,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 9254,
											"end": 9397,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 9254,
											"end": 9397,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 9254,
											"end": 9397,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 9254,
											"end": 9397,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 9254,
											"end": 9397,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 9403,
											"end": 10066,
											"name": "tag",
											"source": 23,
											"value": "88"
										},
										{
											"begin": 9403,
											"end": 10066,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 9491,
											"end": 9497,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 9499,
											"end": 9505,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 9507,
											"end": 9513,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 9556,
											"end": 9558,
											"name": "PUSH",
											"source": 23,
											"value": "60"
										},
										{
											"begin": 9544,
											"end": 9553,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 9535,
											"end": 9542,
											"name": "DUP7",
											"source": 23
										},
										{
											"begin": 9531,
											"end": 9554,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 9527,
											"end": 9559,
											"name": "SLT",
											"source": 23
										},
										{
											"begin": 9524,
											"end": 9643,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 9524,
											"end": 9643,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "426"
										},
										{
											"begin": 9524,
											"end": 9643,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 9562,
											"end": 9641,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "427"
										},
										{
											"begin": 9562,
											"end": 9641,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "254"
										},
										{
											"begin": 9562,
											"end": 9641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 9562,
											"end": 9641,
											"name": "tag",
											"source": 23,
											"value": "427"
										},
										{
											"begin": 9562,
											"end": 9641,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 9524,
											"end": 9643,
											"name": "tag",
											"source": 23,
											"value": "426"
										},
										{
											"begin": 9524,
											"end": 9643,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 9682,
											"end": 9683,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 9707,
											"end": 9771,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "428"
										},
										{
											"begin": 9763,
											"end": 9770,
											"name": "DUP7",
											"source": 23
										},
										{
											"begin": 9754,
											"end": 9760,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 9743,
											"end": 9752,
											"name": "DUP8",
											"source": 23
										},
										{
											"begin": 9739,
											"end": 9761,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 9707,
											"end": 9771,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "284"
										},
										{
											"begin": 9707,
											"end": 9771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 9707,
											"end": 9771,
											"name": "tag",
											"source": 23,
											"value": "428"
										},
										{
											"begin": 9707,
											"end": 9771,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 9697,
											"end": 9771,
											"name": "SWAP4",
											"source": 23
										},
										{
											"begin": 9697,
											"end": 9771,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 9653,
											"end": 9781,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 9820,
											"end": 9822,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 9846,
											"end": 9910,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "429"
										},
										{
											"begin": 9902,
											"end": 9909,
											"name": "DUP7",
											"source": 23
										},
										{
											"begin": 9893,
											"end": 9899,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 9882,
											"end": 9891,
											"name": "DUP8",
											"source": 23
										},
										{
											"begin": 9878,
											"end": 9900,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 9846,
											"end": 9910,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "284"
										},
										{
											"begin": 9846,
											"end": 9910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 9846,
											"end": 9910,
											"name": "tag",
											"source": 23,
											"value": "429"
										},
										{
											"begin": 9846,
											"end": 9910,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 9836,
											"end": 9910,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 9836,
											"end": 9910,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 9791,
											"end": 9920,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 9959,
											"end": 9961,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 9985,
											"end": 10049,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "430"
										},
										{
											"begin": 10041,
											"end": 10048,
											"name": "DUP7",
											"source": 23
										},
										{
											"begin": 10032,
											"end": 10038,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 10021,
											"end": 10030,
											"name": "DUP8",
											"source": 23
										},
										{
											"begin": 10017,
											"end": 10039,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 9985,
											"end": 10049,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "284"
										},
										{
											"begin": 9985,
											"end": 10049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 9985,
											"end": 10049,
											"name": "tag",
											"source": 23,
											"value": "430"
										},
										{
											"begin": 9985,
											"end": 10049,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 9975,
											"end": 10049,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 9975,
											"end": 10049,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 9930,
											"end": 10059,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 9403,
											"end": 10066,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 9403,
											"end": 10066,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 9403,
											"end": 10066,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 9403,
											"end": 10066,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 9403,
											"end": 10066,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 9403,
											"end": 10066,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 10072,
											"end": 10255,
											"name": "tag",
											"source": 23,
											"value": "90"
										},
										{
											"begin": 10072,
											"end": 10255,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 10110,
											"end": 10113,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 10133,
											"end": 10156,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "432"
										},
										{
											"begin": 10150,
											"end": 10155,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 10133,
											"end": 10156,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "263"
										},
										{
											"begin": 10133,
											"end": 10156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 10133,
											"end": 10156,
											"name": "tag",
											"source": 23,
											"value": "432"
										},
										{
											"begin": 10133,
											"end": 10156,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 10124,
											"end": 10156,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 10124,
											"end": 10156,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 10178,
											"end": 10196,
											"name": "PUSH",
											"source": 23,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10171,
											"end": 10176,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 10168,
											"end": 10197,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 10165,
											"end": 10220,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "433"
										},
										{
											"begin": 10165,
											"end": 10220,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 10200,
											"end": 10218,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "434"
										},
										{
											"begin": 10200,
											"end": 10218,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "276"
										},
										{
											"begin": 10200,
											"end": 10218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 10200,
											"end": 10218,
											"name": "tag",
											"source": 23,
											"value": "434"
										},
										{
											"begin": 10200,
											"end": 10218,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 10165,
											"end": 10220,
											"name": "tag",
											"source": 23,
											"value": "433"
										},
										{
											"begin": 10165,
											"end": 10220,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 10247,
											"end": 10248,
											"name": "PUSH",
											"source": 23,
											"value": "1"
										},
										{
											"begin": 10240,
											"end": 10245,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 10236,
											"end": 10249,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 10229,
											"end": 10249,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 10229,
											"end": 10249,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 10072,
											"end": 10255,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 10072,
											"end": 10255,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 10072,
											"end": 10255,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 10072,
											"end": 10255,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 10261,
											"end": 10455,
											"name": "tag",
											"source": 23,
											"value": "112"
										},
										{
											"begin": 10261,
											"end": 10455,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 10301,
											"end": 10305,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 10321,
											"end": 10341,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "436"
										},
										{
											"begin": 10339,
											"end": 10340,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 10321,
											"end": 10341,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "266"
										},
										{
											"begin": 10321,
											"end": 10341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 10321,
											"end": 10341,
											"name": "tag",
											"source": 23,
											"value": "436"
										},
										{
											"begin": 10321,
											"end": 10341,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 10316,
											"end": 10341,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 10316,
											"end": 10341,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 10355,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "437"
										},
										{
											"begin": 10373,
											"end": 10374,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 10355,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "266"
										},
										{
											"begin": 10355,
											"end": 10375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 10355,
											"end": 10375,
											"name": "tag",
											"source": 23,
											"value": "437"
										},
										{
											"begin": 10355,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 10350,
											"end": 10375,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 10350,
											"end": 10375,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 10399,
											"end": 10400,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 10396,
											"end": 10397,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 10392,
											"end": 10401,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 10384,
											"end": 10401,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 10384,
											"end": 10401,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 10423,
											"end": 10424,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 10417,
											"end": 10421,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 10414,
											"end": 10425,
											"name": "GT",
											"source": 23
										},
										{
											"begin": 10411,
											"end": 10448,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 10411,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "438"
										},
										{
											"begin": 10411,
											"end": 10448,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 10428,
											"end": 10446,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "439"
										},
										{
											"begin": 10428,
											"end": 10446,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "276"
										},
										{
											"begin": 10428,
											"end": 10446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 10428,
											"end": 10446,
											"name": "tag",
											"source": 23,
											"value": "439"
										},
										{
											"begin": 10428,
											"end": 10446,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 10411,
											"end": 10448,
											"name": "tag",
											"source": 23,
											"value": "438"
										},
										{
											"begin": 10411,
											"end": 10448,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 10261,
											"end": 10455,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 10261,
											"end": 10455,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 10261,
											"end": 10455,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 10261,
											"end": 10455,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 10261,
											"end": 10455,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 10461,
											"end": 10576,
											"name": "tag",
											"source": 23,
											"value": "285"
										},
										{
											"begin": 10461,
											"end": 10576,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 10546,
											"end": 10569,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "441"
										},
										{
											"begin": 10563,
											"end": 10568,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 10546,
											"end": 10569,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "271"
										},
										{
											"begin": 10546,
											"end": 10569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 10546,
											"end": 10569,
											"name": "tag",
											"source": 23,
											"value": "441"
										},
										{
											"begin": 10546,
											"end": 10569,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 10541,
											"end": 10544,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 10534,
											"end": 10570,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 10461,
											"end": 10576,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 10461,
											"end": 10576,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 10461,
											"end": 10576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 10582,
											"end": 11020,
											"name": "tag",
											"source": 23,
											"value": "120"
										},
										{
											"begin": 10582,
											"end": 11020,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 10729,
											"end": 10733,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 10767,
											"end": 10769,
											"name": "PUSH",
											"source": 23,
											"value": "60"
										},
										{
											"begin": 10756,
											"end": 10765,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 10752,
											"end": 10770,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 10744,
											"end": 10770,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 10744,
											"end": 10770,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 10780,
											"end": 10851,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "443"
										},
										{
											"begin": 10848,
											"end": 10849,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 10837,
											"end": 10846,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 10833,
											"end": 10850,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 10824,
											"end": 10830,
											"name": "DUP7",
											"source": 23
										},
										{
											"begin": 10780,
											"end": 10851,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "274"
										},
										{
											"begin": 10780,
											"end": 10851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 10780,
											"end": 10851,
											"name": "tag",
											"source": 23,
											"value": "443"
										},
										{
											"begin": 10780,
											"end": 10851,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 10861,
											"end": 10933,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "444"
										},
										{
											"begin": 10929,
											"end": 10931,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 10918,
											"end": 10927,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 10914,
											"end": 10932,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 10905,
											"end": 10911,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 10861,
											"end": 10933,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "274"
										},
										{
											"begin": 10861,
											"end": 10933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 10861,
											"end": 10933,
											"name": "tag",
											"source": 23,
											"value": "444"
										},
										{
											"begin": 10861,
											"end": 10933,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 10943,
											"end": 11013,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "445"
										},
										{
											"begin": 11009,
											"end": 11011,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 10998,
											"end": 11007,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 10994,
											"end": 11012,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 10985,
											"end": 10991,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 10943,
											"end": 11013,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "285"
										},
										{
											"begin": 10943,
											"end": 11013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 10943,
											"end": 11013,
											"name": "tag",
											"source": 23,
											"value": "445"
										},
										{
											"begin": 10943,
											"end": 11013,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 10582,
											"end": 11020,
											"name": "SWAP5",
											"source": 23
										},
										{
											"begin": 10582,
											"end": 11020,
											"name": "SWAP4",
											"source": 23
										},
										{
											"begin": 10582,
											"end": 11020,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 10582,
											"end": 11020,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 10582,
											"end": 11020,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 10582,
											"end": 11020,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 10582,
											"end": 11020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 11026,
											"end": 11169,
											"name": "tag",
											"source": 23,
											"value": "286"
										},
										{
											"begin": 11026,
											"end": 11169,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 11083,
											"end": 11088,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 11114,
											"end": 11120,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 11108,
											"end": 11121,
											"name": "MLOAD",
											"source": 23
										},
										{
											"begin": 11099,
											"end": 11121,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 11099,
											"end": 11121,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 11130,
											"end": 11163,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "447"
										},
										{
											"begin": 11157,
											"end": 11162,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 11130,
											"end": 11163,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "258"
										},
										{
											"begin": 11130,
											"end": 11163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 11130,
											"end": 11163,
											"name": "tag",
											"source": 23,
											"value": "447"
										},
										{
											"begin": 11130,
											"end": 11163,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 11026,
											"end": 11169,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 11026,
											"end": 11169,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 11026,
											"end": 11169,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 11026,
											"end": 11169,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 11026,
											"end": 11169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 11175,
											"end": 11526,
											"name": "tag",
											"source": 23,
											"value": "124"
										},
										{
											"begin": 11175,
											"end": 11526,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 11245,
											"end": 11251,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 11294,
											"end": 11296,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 11282,
											"end": 11291,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 11273,
											"end": 11280,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 11269,
											"end": 11292,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 11265,
											"end": 11297,
											"name": "SLT",
											"source": 23
										},
										{
											"begin": 11262,
											"end": 11381,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 11262,
											"end": 11381,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "449"
										},
										{
											"begin": 11262,
											"end": 11381,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 11300,
											"end": 11379,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "450"
										},
										{
											"begin": 11300,
											"end": 11379,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "254"
										},
										{
											"begin": 11300,
											"end": 11379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 11300,
											"end": 11379,
											"name": "tag",
											"source": 23,
											"value": "450"
										},
										{
											"begin": 11300,
											"end": 11379,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 11262,
											"end": 11381,
											"name": "tag",
											"source": 23,
											"value": "449"
										},
										{
											"begin": 11262,
											"end": 11381,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 11420,
											"end": 11421,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 11445,
											"end": 11509,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "451"
										},
										{
											"begin": 11501,
											"end": 11508,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 11492,
											"end": 11498,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 11481,
											"end": 11490,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 11477,
											"end": 11499,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 11445,
											"end": 11509,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "286"
										},
										{
											"begin": 11445,
											"end": 11509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 11445,
											"end": 11509,
											"name": "tag",
											"source": 23,
											"value": "451"
										},
										{
											"begin": 11445,
											"end": 11509,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 11435,
											"end": 11509,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 11435,
											"end": 11509,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 11391,
											"end": 11519,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 11175,
											"end": 11526,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 11175,
											"end": 11526,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 11175,
											"end": 11526,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 11175,
											"end": 11526,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 11175,
											"end": 11526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 11532,
											"end": 11942,
											"name": "tag",
											"source": 23,
											"value": "142"
										},
										{
											"begin": 11532,
											"end": 11942,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 11572,
											"end": 11579,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 11595,
											"end": 11615,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "453"
										},
										{
											"begin": 11613,
											"end": 11614,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 11595,
											"end": 11615,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "266"
										},
										{
											"begin": 11595,
											"end": 11615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 11595,
											"end": 11615,
											"name": "tag",
											"source": 23,
											"value": "453"
										},
										{
											"begin": 11595,
											"end": 11615,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 11590,
											"end": 11615,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 11590,
											"end": 11615,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 11629,
											"end": 11649,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "454"
										},
										{
											"begin": 11647,
											"end": 11648,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 11629,
											"end": 11649,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "266"
										},
										{
											"begin": 11629,
											"end": 11649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 11629,
											"end": 11649,
											"name": "tag",
											"source": 23,
											"value": "454"
										},
										{
											"begin": 11629,
											"end": 11649,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 11624,
											"end": 11649,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 11624,
											"end": 11649,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 11684,
											"end": 11685,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 11681,
											"end": 11682,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 11677,
											"end": 11686,
											"name": "MUL",
											"source": 23
										},
										{
											"begin": 11706,
											"end": 11736,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "455"
										},
										{
											"begin": 11724,
											"end": 11735,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 11706,
											"end": 11736,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "266"
										},
										{
											"begin": 11706,
											"end": 11736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 11706,
											"end": 11736,
											"name": "tag",
											"source": 23,
											"value": "455"
										},
										{
											"begin": 11706,
											"end": 11736,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 11695,
											"end": 11736,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 11695,
											"end": 11736,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 11885,
											"end": 11886,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 11876,
											"end": 11883,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 11872,
											"end": 11887,
											"name": "DIV",
											"source": 23
										},
										{
											"begin": 11869,
											"end": 11870,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 11866,
											"end": 11888,
											"name": "EQ",
											"source": 23
										},
										{
											"begin": 11846,
											"end": 11847,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 11839,
											"end": 11848,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 11819,
											"end": 11902,
											"name": "OR",
											"source": 23
										},
										{
											"begin": 11796,
											"end": 11935,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "456"
										},
										{
											"begin": 11796,
											"end": 11935,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 11915,
											"end": 11933,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "457"
										},
										{
											"begin": 11915,
											"end": 11933,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "276"
										},
										{
											"begin": 11915,
											"end": 11933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 11915,
											"end": 11933,
											"name": "tag",
											"source": 23,
											"value": "457"
										},
										{
											"begin": 11915,
											"end": 11933,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 11796,
											"end": 11935,
											"name": "tag",
											"source": 23,
											"value": "456"
										},
										{
											"begin": 11796,
											"end": 11935,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 11580,
											"end": 11942,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 11532,
											"end": 11942,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 11532,
											"end": 11942,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 11532,
											"end": 11942,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 11532,
											"end": 11942,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 11532,
											"end": 11942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 11948,
											"end": 12128,
											"name": "tag",
											"source": 23,
											"value": "287"
										},
										{
											"begin": 11948,
											"end": 12128,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "PUSH",
											"source": 23,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11993,
											"end": 11994,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 11986,
											"end": 12074,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 12093,
											"end": 12097,
											"name": "PUSH",
											"source": 23,
											"value": "12"
										},
										{
											"begin": 12090,
											"end": 12091,
											"name": "PUSH",
											"source": 23,
											"value": "4"
										},
										{
											"begin": 12083,
											"end": 12098,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 12117,
											"end": 12121,
											"name": "PUSH",
											"source": 23,
											"value": "24"
										},
										{
											"begin": 12114,
											"end": 12115,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 12107,
											"end": 12122,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 12134,
											"end": 12319,
											"name": "tag",
											"source": 23,
											"value": "144"
										},
										{
											"begin": 12134,
											"end": 12319,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 12174,
											"end": 12175,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 12191,
											"end": 12211,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "460"
										},
										{
											"begin": 12209,
											"end": 12210,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 12191,
											"end": 12211,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "266"
										},
										{
											"begin": 12191,
											"end": 12211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 12191,
											"end": 12211,
											"name": "tag",
											"source": 23,
											"value": "460"
										},
										{
											"begin": 12191,
											"end": 12211,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 12186,
											"end": 12211,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 12186,
											"end": 12211,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 12225,
											"end": 12245,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "461"
										},
										{
											"begin": 12243,
											"end": 12244,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 12225,
											"end": 12245,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "266"
										},
										{
											"begin": 12225,
											"end": 12245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 12225,
											"end": 12245,
											"name": "tag",
											"source": 23,
											"value": "461"
										},
										{
											"begin": 12225,
											"end": 12245,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 12220,
											"end": 12245,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 12220,
											"end": 12245,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 12264,
											"end": 12265,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 12254,
											"end": 12289,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "462"
										},
										{
											"begin": 12254,
											"end": 12289,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 12269,
											"end": 12287,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "463"
										},
										{
											"begin": 12269,
											"end": 12287,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "287"
										},
										{
											"begin": 12269,
											"end": 12287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 12269,
											"end": 12287,
											"name": "tag",
											"source": 23,
											"value": "463"
										},
										{
											"begin": 12269,
											"end": 12287,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 12254,
											"end": 12289,
											"name": "tag",
											"source": 23,
											"value": "462"
										},
										{
											"begin": 12254,
											"end": 12289,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 12311,
											"end": 12312,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 12308,
											"end": 12309,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 12304,
											"end": 12313,
											"name": "DIV",
											"source": 23
										},
										{
											"begin": 12299,
											"end": 12313,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 12299,
											"end": 12313,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 12134,
											"end": 12319,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 12134,
											"end": 12319,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 12134,
											"end": 12319,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 12134,
											"end": 12319,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 12134,
											"end": 12319,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 12325,
											"end": 12767,
											"name": "tag",
											"source": 23,
											"value": "180"
										},
										{
											"begin": 12325,
											"end": 12767,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 12474,
											"end": 12478,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 12512,
											"end": 12514,
											"name": "PUSH",
											"source": 23,
											"value": "60"
										},
										{
											"begin": 12501,
											"end": 12510,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 12497,
											"end": 12515,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 12489,
											"end": 12515,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 12489,
											"end": 12515,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 12525,
											"end": 12596,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "465"
										},
										{
											"begin": 12593,
											"end": 12594,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 12582,
											"end": 12591,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 12578,
											"end": 12595,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 12569,
											"end": 12575,
											"name": "DUP7",
											"source": 23
										},
										{
											"begin": 12525,
											"end": 12596,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "274"
										},
										{
											"begin": 12525,
											"end": 12596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 12525,
											"end": 12596,
											"name": "tag",
											"source": 23,
											"value": "465"
										},
										{
											"begin": 12525,
											"end": 12596,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 12606,
											"end": 12678,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "466"
										},
										{
											"begin": 12674,
											"end": 12676,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 12663,
											"end": 12672,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 12659,
											"end": 12677,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 12650,
											"end": 12656,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 12606,
											"end": 12678,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "274"
										},
										{
											"begin": 12606,
											"end": 12678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 12606,
											"end": 12678,
											"name": "tag",
											"source": 23,
											"value": "466"
										},
										{
											"begin": 12606,
											"end": 12678,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 12688,
											"end": 12760,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "467"
										},
										{
											"begin": 12756,
											"end": 12758,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 12745,
											"end": 12754,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 12741,
											"end": 12759,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 12732,
											"end": 12738,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 12688,
											"end": 12760,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "275"
										},
										{
											"begin": 12688,
											"end": 12760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 12688,
											"end": 12760,
											"name": "tag",
											"source": 23,
											"value": "467"
										},
										{
											"begin": 12688,
											"end": 12760,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 12325,
											"end": 12767,
											"name": "SWAP5",
											"source": 23
										},
										{
											"begin": 12325,
											"end": 12767,
											"name": "SWAP4",
											"source": 23
										},
										{
											"begin": 12325,
											"end": 12767,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 12325,
											"end": 12767,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 12325,
											"end": 12767,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 12325,
											"end": 12767,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 12325,
											"end": 12767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 12773,
											"end": 13105,
											"name": "tag",
											"source": 23,
											"value": "185"
										},
										{
											"begin": 12773,
											"end": 13105,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 12894,
											"end": 12898,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 12932,
											"end": 12934,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 12921,
											"end": 12930,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 12917,
											"end": 12935,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 12909,
											"end": 12935,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 12909,
											"end": 12935,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 12945,
											"end": 13016,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "469"
										},
										{
											"begin": 13013,
											"end": 13014,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 13002,
											"end": 13011,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 12998,
											"end": 13015,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 12989,
											"end": 12995,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 12945,
											"end": 13016,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "274"
										},
										{
											"begin": 12945,
											"end": 13016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 12945,
											"end": 13016,
											"name": "tag",
											"source": 23,
											"value": "469"
										},
										{
											"begin": 12945,
											"end": 13016,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 13026,
											"end": 13098,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "470"
										},
										{
											"begin": 13094,
											"end": 13096,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 13083,
											"end": 13092,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 13079,
											"end": 13097,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 13070,
											"end": 13076,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 13026,
											"end": 13098,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "274"
										},
										{
											"begin": 13026,
											"end": 13098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 13026,
											"end": 13098,
											"name": "tag",
											"source": 23,
											"value": "470"
										},
										{
											"begin": 13026,
											"end": 13098,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 12773,
											"end": 13105,
											"name": "SWAP4",
											"source": 23
										},
										{
											"begin": 12773,
											"end": 13105,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 12773,
											"end": 13105,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 12773,
											"end": 13105,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 12773,
											"end": 13105,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 12773,
											"end": 13105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 13111,
											"end": 13462,
											"name": "tag",
											"source": 23,
											"value": "189"
										},
										{
											"begin": 13111,
											"end": 13462,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 13181,
											"end": 13187,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 13230,
											"end": 13232,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 13218,
											"end": 13227,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 13209,
											"end": 13216,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 13205,
											"end": 13228,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 13201,
											"end": 13233,
											"name": "SLT",
											"source": 23
										},
										{
											"begin": 13198,
											"end": 13317,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 13198,
											"end": 13317,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "472"
										},
										{
											"begin": 13198,
											"end": 13317,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 13236,
											"end": 13315,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "473"
										},
										{
											"begin": 13236,
											"end": 13315,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "254"
										},
										{
											"begin": 13236,
											"end": 13315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 13236,
											"end": 13315,
											"name": "tag",
											"source": 23,
											"value": "473"
										},
										{
											"begin": 13236,
											"end": 13315,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 13198,
											"end": 13317,
											"name": "tag",
											"source": 23,
											"value": "472"
										},
										{
											"begin": 13198,
											"end": 13317,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 13356,
											"end": 13357,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 13381,
											"end": 13445,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "474"
										},
										{
											"begin": 13437,
											"end": 13444,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 13428,
											"end": 13434,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 13417,
											"end": 13426,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 13413,
											"end": 13435,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 13381,
											"end": 13445,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "284"
										},
										{
											"begin": 13381,
											"end": 13445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 13381,
											"end": 13445,
											"name": "tag",
											"source": 23,
											"value": "474"
										},
										{
											"begin": 13381,
											"end": 13445,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 13371,
											"end": 13445,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 13371,
											"end": 13445,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 13327,
											"end": 13455,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 13111,
											"end": 13462,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 13111,
											"end": 13462,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 13111,
											"end": 13462,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 13111,
											"end": 13462,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 13111,
											"end": 13462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 13468,
											"end": 13637,
											"name": "tag",
											"source": 23,
											"value": "288"
										},
										{
											"begin": 13468,
											"end": 13637,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 13552,
											"end": 13563,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 13586,
											"end": 13592,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 13581,
											"end": 13584,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 13574,
											"end": 13593,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 13626,
											"end": 13630,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 13621,
											"end": 13624,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 13617,
											"end": 13631,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 13602,
											"end": 13631,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 13602,
											"end": 13631,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 13468,
											"end": 13637,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 13468,
											"end": 13637,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 13468,
											"end": 13637,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 13468,
											"end": 13637,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 13468,
											"end": 13637,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 13643,
											"end": 13884,
											"name": "tag",
											"source": 23,
											"value": "289"
										},
										{
											"begin": 13643,
											"end": 13884,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 13783,
											"end": 13817,
											"name": "PUSH",
											"source": 23,
											"value": "5361666545524332303A20617070726F76652066726F6D206E6F6E2D7A65726F"
										},
										{
											"begin": 13779,
											"end": 13780,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 13771,
											"end": 13777,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 13767,
											"end": 13781,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 13760,
											"end": 13818,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 13852,
											"end": 13876,
											"name": "PUSH",
											"source": 23,
											"value": "20746F206E6F6E2D7A65726F20616C6C6F77616E636500000000000000000000"
										},
										{
											"begin": 13847,
											"end": 13849,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 13839,
											"end": 13845,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 13835,
											"end": 13850,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 13828,
											"end": 13877,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 13643,
											"end": 13884,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 13643,
											"end": 13884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 13890,
											"end": 14256,
											"name": "tag",
											"source": 23,
											"value": "290"
										},
										{
											"begin": 13890,
											"end": 14256,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 14032,
											"end": 14035,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 14053,
											"end": 14120,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "478"
										},
										{
											"begin": 14117,
											"end": 14119,
											"name": "PUSH",
											"source": 23,
											"value": "36"
										},
										{
											"begin": 14112,
											"end": 14115,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 14053,
											"end": 14120,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "288"
										},
										{
											"begin": 14053,
											"end": 14120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 14053,
											"end": 14120,
											"name": "tag",
											"source": 23,
											"value": "478"
										},
										{
											"begin": 14053,
											"end": 14120,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 14046,
											"end": 14120,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 14046,
											"end": 14120,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 14129,
											"end": 14222,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "479"
										},
										{
											"begin": 14218,
											"end": 14221,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 14129,
											"end": 14222,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "289"
										},
										{
											"begin": 14129,
											"end": 14222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 14129,
											"end": 14222,
											"name": "tag",
											"source": 23,
											"value": "479"
										},
										{
											"begin": 14129,
											"end": 14222,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 14247,
											"end": 14249,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 14242,
											"end": 14245,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 14238,
											"end": 14250,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 14231,
											"end": 14250,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 14231,
											"end": 14250,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 13890,
											"end": 14256,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 13890,
											"end": 14256,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 13890,
											"end": 14256,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 13890,
											"end": 14256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 14262,
											"end": 14681,
											"name": "tag",
											"source": 23,
											"value": "192"
										},
										{
											"begin": 14262,
											"end": 14681,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 14428,
											"end": 14432,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 14466,
											"end": 14468,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 14455,
											"end": 14464,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 14451,
											"end": 14469,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 14443,
											"end": 14469,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 14443,
											"end": 14469,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 14515,
											"end": 14524,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 14509,
											"end": 14513,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 14505,
											"end": 14525,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 14501,
											"end": 14502,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 14490,
											"end": 14499,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 14486,
											"end": 14503,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 14479,
											"end": 14526,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 14543,
											"end": 14674,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "481"
										},
										{
											"begin": 14669,
											"end": 14673,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 14543,
											"end": 14674,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "290"
										},
										{
											"begin": 14543,
											"end": 14674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 14543,
											"end": 14674,
											"name": "tag",
											"source": 23,
											"value": "481"
										},
										{
											"begin": 14543,
											"end": 14674,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 14535,
											"end": 14674,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 14535,
											"end": 14674,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 14262,
											"end": 14681,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 14262,
											"end": 14681,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 14262,
											"end": 14681,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 14262,
											"end": 14681,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 14687,
											"end": 15019,
											"name": "tag",
											"source": 23,
											"value": "195"
										},
										{
											"begin": 14687,
											"end": 15019,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 14808,
											"end": 14812,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 14846,
											"end": 14848,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 14835,
											"end": 14844,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 14831,
											"end": 14849,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 14823,
											"end": 14849,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 14823,
											"end": 14849,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 14859,
											"end": 14930,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "483"
										},
										{
											"begin": 14927,
											"end": 14928,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 14916,
											"end": 14925,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 14912,
											"end": 14929,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 14903,
											"end": 14909,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 14859,
											"end": 14930,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "274"
										},
										{
											"begin": 14859,
											"end": 14930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 14859,
											"end": 14930,
											"name": "tag",
											"source": 23,
											"value": "483"
										},
										{
											"begin": 14859,
											"end": 14930,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 14940,
											"end": 15012,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "484"
										},
										{
											"begin": 15008,
											"end": 15010,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 14997,
											"end": 15006,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 14993,
											"end": 15011,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 14984,
											"end": 14990,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 14940,
											"end": 15012,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "275"
										},
										{
											"begin": 14940,
											"end": 15012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 14940,
											"end": 15012,
											"name": "tag",
											"source": 23,
											"value": "484"
										},
										{
											"begin": 14940,
											"end": 15012,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 14687,
											"end": 15019,
											"name": "SWAP4",
											"source": 23
										},
										{
											"begin": 14687,
											"end": 15019,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 14687,
											"end": 15019,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 14687,
											"end": 15019,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 14687,
											"end": 15019,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 14687,
											"end": 15019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 15025,
											"end": 15141,
											"name": "tag",
											"source": 23,
											"value": "291"
										},
										{
											"begin": 15025,
											"end": 15141,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 15095,
											"end": 15116,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "486"
										},
										{
											"begin": 15110,
											"end": 15115,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 15095,
											"end": 15116,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "269"
										},
										{
											"begin": 15095,
											"end": 15116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 15095,
											"end": 15116,
											"name": "tag",
											"source": 23,
											"value": "486"
										},
										{
											"begin": 15095,
											"end": 15116,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 15088,
											"end": 15093,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 15085,
											"end": 15117,
											"name": "EQ",
											"source": 23
										},
										{
											"begin": 15075,
											"end": 15135,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "487"
										},
										{
											"begin": 15075,
											"end": 15135,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 15131,
											"end": 15132,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 15128,
											"end": 15129,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 15121,
											"end": 15133,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 15075,
											"end": 15135,
											"name": "tag",
											"source": 23,
											"value": "487"
										},
										{
											"begin": 15075,
											"end": 15135,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 15025,
											"end": 15141,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 15025,
											"end": 15141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 15147,
											"end": 15284,
											"name": "tag",
											"source": 23,
											"value": "292"
										},
										{
											"begin": 15147,
											"end": 15284,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 15201,
											"end": 15206,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 15232,
											"end": 15238,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 15226,
											"end": 15239,
											"name": "MLOAD",
											"source": 23
										},
										{
											"begin": 15217,
											"end": 15239,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 15217,
											"end": 15239,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 15248,
											"end": 15278,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "489"
										},
										{
											"begin": 15272,
											"end": 15277,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 15248,
											"end": 15278,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "291"
										},
										{
											"begin": 15248,
											"end": 15278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 15248,
											"end": 15278,
											"name": "tag",
											"source": 23,
											"value": "489"
										},
										{
											"begin": 15248,
											"end": 15278,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 15147,
											"end": 15284,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 15147,
											"end": 15284,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 15147,
											"end": 15284,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 15147,
											"end": 15284,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 15147,
											"end": 15284,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 15290,
											"end": 15635,
											"name": "tag",
											"source": 23,
											"value": "218"
										},
										{
											"begin": 15290,
											"end": 15635,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 15357,
											"end": 15363,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 15406,
											"end": 15408,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 15394,
											"end": 15403,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 15385,
											"end": 15392,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 15381,
											"end": 15404,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 15377,
											"end": 15409,
											"name": "SLT",
											"source": 23
										},
										{
											"begin": 15374,
											"end": 15493,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 15374,
											"end": 15493,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "491"
										},
										{
											"begin": 15374,
											"end": 15493,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 15412,
											"end": 15491,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "492"
										},
										{
											"begin": 15412,
											"end": 15491,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "254"
										},
										{
											"begin": 15412,
											"end": 15491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 15412,
											"end": 15491,
											"name": "tag",
											"source": 23,
											"value": "492"
										},
										{
											"begin": 15412,
											"end": 15491,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 15374,
											"end": 15493,
											"name": "tag",
											"source": 23,
											"value": "491"
										},
										{
											"begin": 15374,
											"end": 15493,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 15532,
											"end": 15533,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 15557,
											"end": 15618,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "493"
										},
										{
											"begin": 15610,
											"end": 15617,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 15601,
											"end": 15607,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 15590,
											"end": 15599,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 15586,
											"end": 15608,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 15557,
											"end": 15618,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "292"
										},
										{
											"begin": 15557,
											"end": 15618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 15557,
											"end": 15618,
											"name": "tag",
											"source": 23,
											"value": "493"
										},
										{
											"begin": 15557,
											"end": 15618,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 15547,
											"end": 15618,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 15547,
											"end": 15618,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 15503,
											"end": 15628,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 15290,
											"end": 15635,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 15290,
											"end": 15635,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 15290,
											"end": 15635,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 15290,
											"end": 15635,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 15290,
											"end": 15635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 15641,
											"end": 15870,
											"name": "tag",
											"source": 23,
											"value": "293"
										},
										{
											"begin": 15641,
											"end": 15870,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 15781,
											"end": 15815,
											"name": "PUSH",
											"source": 23,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 15777,
											"end": 15778,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 15769,
											"end": 15775,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 15765,
											"end": 15779,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 15758,
											"end": 15816,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 15850,
											"end": 15862,
											"name": "PUSH",
											"source": 23,
											"value": "6F74207375636365656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 15845,
											"end": 15847,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 15837,
											"end": 15843,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 15833,
											"end": 15848,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 15826,
											"end": 15863,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 15641,
											"end": 15870,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 15641,
											"end": 15870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 15876,
											"end": 16242,
											"name": "tag",
											"source": 23,
											"value": "294"
										},
										{
											"begin": 15876,
											"end": 16242,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 16018,
											"end": 16021,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 16039,
											"end": 16106,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "496"
										},
										{
											"begin": 16103,
											"end": 16105,
											"name": "PUSH",
											"source": 23,
											"value": "2A"
										},
										{
											"begin": 16098,
											"end": 16101,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 16039,
											"end": 16106,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "288"
										},
										{
											"begin": 16039,
											"end": 16106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 16039,
											"end": 16106,
											"name": "tag",
											"source": 23,
											"value": "496"
										},
										{
											"begin": 16039,
											"end": 16106,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 16032,
											"end": 16106,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 16032,
											"end": 16106,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 16115,
											"end": 16208,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "497"
										},
										{
											"begin": 16204,
											"end": 16207,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 16115,
											"end": 16208,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "293"
										},
										{
											"begin": 16115,
											"end": 16208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 16115,
											"end": 16208,
											"name": "tag",
											"source": 23,
											"value": "497"
										},
										{
											"begin": 16115,
											"end": 16208,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 16233,
											"end": 16235,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 16228,
											"end": 16231,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 16224,
											"end": 16236,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 16217,
											"end": 16236,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 16217,
											"end": 16236,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 15876,
											"end": 16242,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 15876,
											"end": 16242,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 15876,
											"end": 16242,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 15876,
											"end": 16242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 16248,
											"end": 16667,
											"name": "tag",
											"source": 23,
											"value": "221"
										},
										{
											"begin": 16248,
											"end": 16667,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 16414,
											"end": 16418,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 16452,
											"end": 16454,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 16441,
											"end": 16450,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 16437,
											"end": 16455,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 16429,
											"end": 16455,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 16429,
											"end": 16455,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 16501,
											"end": 16510,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 16495,
											"end": 16499,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 16491,
											"end": 16511,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 16487,
											"end": 16488,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 16476,
											"end": 16485,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 16472,
											"end": 16489,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 16465,
											"end": 16512,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 16529,
											"end": 16660,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "499"
										},
										{
											"begin": 16655,
											"end": 16659,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 16529,
											"end": 16660,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "294"
										},
										{
											"begin": 16529,
											"end": 16660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 16529,
											"end": 16660,
											"name": "tag",
											"source": 23,
											"value": "499"
										},
										{
											"begin": 16529,
											"end": 16660,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 16521,
											"end": 16660,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 16521,
											"end": 16660,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 16248,
											"end": 16667,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 16248,
											"end": 16667,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 16248,
											"end": 16667,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 16248,
											"end": 16667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 16673,
											"end": 16898,
											"name": "tag",
											"source": 23,
											"value": "295"
										},
										{
											"begin": 16673,
											"end": 16898,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 16813,
											"end": 16847,
											"name": "PUSH",
											"source": 23,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 16809,
											"end": 16810,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 16801,
											"end": 16807,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 16797,
											"end": 16811,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 16790,
											"end": 16848,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 16882,
											"end": 16890,
											"name": "PUSH",
											"source": 23,
											"value": "722063616C6C0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16877,
											"end": 16879,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 16869,
											"end": 16875,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 16865,
											"end": 16880,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 16858,
											"end": 16891,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 16673,
											"end": 16898,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 16673,
											"end": 16898,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 16904,
											"end": 17270,
											"name": "tag",
											"source": 23,
											"value": "296"
										},
										{
											"begin": 16904,
											"end": 17270,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 17046,
											"end": 17049,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 17067,
											"end": 17134,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "502"
										},
										{
											"begin": 17131,
											"end": 17133,
											"name": "PUSH",
											"source": 23,
											"value": "26"
										},
										{
											"begin": 17126,
											"end": 17129,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 17067,
											"end": 17134,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "288"
										},
										{
											"begin": 17067,
											"end": 17134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 17067,
											"end": 17134,
											"name": "tag",
											"source": 23,
											"value": "502"
										},
										{
											"begin": 17067,
											"end": 17134,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 17060,
											"end": 17134,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 17060,
											"end": 17134,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 17143,
											"end": 17236,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "503"
										},
										{
											"begin": 17232,
											"end": 17235,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 17143,
											"end": 17236,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "295"
										},
										{
											"begin": 17143,
											"end": 17236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 17143,
											"end": 17236,
											"name": "tag",
											"source": 23,
											"value": "503"
										},
										{
											"begin": 17143,
											"end": 17236,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 17261,
											"end": 17263,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 17256,
											"end": 17259,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 17252,
											"end": 17264,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 17245,
											"end": 17264,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 17245,
											"end": 17264,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 16904,
											"end": 17270,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 16904,
											"end": 17270,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 16904,
											"end": 17270,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 16904,
											"end": 17270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 17276,
											"end": 17695,
											"name": "tag",
											"source": 23,
											"value": "228"
										},
										{
											"begin": 17276,
											"end": 17695,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 17442,
											"end": 17446,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 17480,
											"end": 17482,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 17469,
											"end": 17478,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 17465,
											"end": 17483,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 17457,
											"end": 17483,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 17457,
											"end": 17483,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 17529,
											"end": 17538,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 17523,
											"end": 17527,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 17519,
											"end": 17539,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 17515,
											"end": 17516,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 17504,
											"end": 17513,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 17500,
											"end": 17517,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 17493,
											"end": 17540,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 17557,
											"end": 17688,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "505"
										},
										{
											"begin": 17683,
											"end": 17687,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 17557,
											"end": 17688,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "296"
										},
										{
											"begin": 17557,
											"end": 17688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 17557,
											"end": 17688,
											"name": "tag",
											"source": 23,
											"value": "505"
										},
										{
											"begin": 17557,
											"end": 17688,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 17549,
											"end": 17688,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 17549,
											"end": 17688,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 17276,
											"end": 17695,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 17276,
											"end": 17695,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 17276,
											"end": 17695,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 17276,
											"end": 17695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 17701,
											"end": 17799,
											"name": "tag",
											"source": 23,
											"value": "297"
										},
										{
											"begin": 17701,
											"end": 17799,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 17752,
											"end": 17758,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 17786,
											"end": 17791,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 17780,
											"end": 17792,
											"name": "MLOAD",
											"source": 23
										},
										{
											"begin": 17770,
											"end": 17792,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 17770,
											"end": 17792,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 17701,
											"end": 17799,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 17701,
											"end": 17799,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 17701,
											"end": 17799,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 17701,
											"end": 17799,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 17805,
											"end": 17952,
											"name": "tag",
											"source": 23,
											"value": "298"
										},
										{
											"begin": 17805,
											"end": 17952,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 17906,
											"end": 17917,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 17943,
											"end": 17946,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 17928,
											"end": 17946,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 17928,
											"end": 17946,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 17805,
											"end": 17952,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 17805,
											"end": 17952,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 17805,
											"end": 17952,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 17805,
											"end": 17952,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 17805,
											"end": 17952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 17958,
											"end": 18204,
											"name": "tag",
											"source": 23,
											"value": "299"
										},
										{
											"begin": 17958,
											"end": 18204,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 18039,
											"end": 18040,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 18049,
											"end": 18162,
											"name": "tag",
											"source": 23,
											"value": "509"
										},
										{
											"begin": 18049,
											"end": 18162,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 18063,
											"end": 18069,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 18060,
											"end": 18061,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 18057,
											"end": 18070,
											"name": "LT",
											"source": 23
										},
										{
											"begin": 18049,
											"end": 18162,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 18049,
											"end": 18162,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "511"
										},
										{
											"begin": 18049,
											"end": 18162,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 18148,
											"end": 18149,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 18143,
											"end": 18146,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 18139,
											"end": 18150,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 18133,
											"end": 18151,
											"name": "MLOAD",
											"source": 23
										},
										{
											"begin": 18129,
											"end": 18130,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 18124,
											"end": 18127,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 18120,
											"end": 18131,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 18113,
											"end": 18152,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 18085,
											"end": 18087,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 18082,
											"end": 18083,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 18078,
											"end": 18088,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 18073,
											"end": 18088,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 18073,
											"end": 18088,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 18049,
											"end": 18162,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "509"
										},
										{
											"begin": 18049,
											"end": 18162,
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 18049,
											"end": 18162,
											"name": "tag",
											"source": 23,
											"value": "511"
										},
										{
											"begin": 18049,
											"end": 18162,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 18196,
											"end": 18197,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 18187,
											"end": 18193,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 18182,
											"end": 18185,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 18178,
											"end": 18194,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 18171,
											"end": 18198,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 18020,
											"end": 18204,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 17958,
											"end": 18204,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 17958,
											"end": 18204,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 17958,
											"end": 18204,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 17958,
											"end": 18204,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 18210,
											"end": 18596,
											"name": "tag",
											"source": 23,
											"value": "300"
										},
										{
											"begin": 18210,
											"end": 18596,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 18314,
											"end": 18317,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 18342,
											"end": 18380,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "513"
										},
										{
											"begin": 18374,
											"end": 18379,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 18342,
											"end": 18380,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "297"
										},
										{
											"begin": 18342,
											"end": 18380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 18342,
											"end": 18380,
											"name": "tag",
											"source": 23,
											"value": "513"
										},
										{
											"begin": 18342,
											"end": 18380,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 18396,
											"end": 18484,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "514"
										},
										{
											"begin": 18477,
											"end": 18483,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 18472,
											"end": 18475,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 18396,
											"end": 18484,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "298"
										},
										{
											"begin": 18396,
											"end": 18484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 18396,
											"end": 18484,
											"name": "tag",
											"source": 23,
											"value": "514"
										},
										{
											"begin": 18396,
											"end": 18484,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 18389,
											"end": 18484,
											"name": "SWAP4",
											"source": 23
										},
										{
											"begin": 18389,
											"end": 18484,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 18493,
											"end": 18558,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "515"
										},
										{
											"begin": 18551,
											"end": 18557,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 18546,
											"end": 18549,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 18539,
											"end": 18543,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 18532,
											"end": 18537,
											"name": "DUP7",
											"source": 23
										},
										{
											"begin": 18528,
											"end": 18544,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 18493,
											"end": 18558,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "299"
										},
										{
											"begin": 18493,
											"end": 18558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 18493,
											"end": 18558,
											"name": "tag",
											"source": 23,
											"value": "515"
										},
										{
											"begin": 18493,
											"end": 18558,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 18583,
											"end": 18589,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 18578,
											"end": 18581,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 18574,
											"end": 18590,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 18567,
											"end": 18590,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 18567,
											"end": 18590,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 18318,
											"end": 18596,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 18210,
											"end": 18596,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 18210,
											"end": 18596,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 18210,
											"end": 18596,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 18210,
											"end": 18596,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 18210,
											"end": 18596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 18602,
											"end": 18873,
											"name": "tag",
											"source": 23,
											"value": "230"
										},
										{
											"begin": 18602,
											"end": 18873,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 18732,
											"end": 18735,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 18754,
											"end": 18847,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "517"
										},
										{
											"begin": 18843,
											"end": 18846,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 18834,
											"end": 18840,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 18754,
											"end": 18847,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "300"
										},
										{
											"begin": 18754,
											"end": 18847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 18754,
											"end": 18847,
											"name": "tag",
											"source": 23,
											"value": "517"
										},
										{
											"begin": 18754,
											"end": 18847,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 18747,
											"end": 18847,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 18747,
											"end": 18847,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 18864,
											"end": 18867,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 18857,
											"end": 18867,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 18857,
											"end": 18867,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 18602,
											"end": 18873,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 18602,
											"end": 18873,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 18602,
											"end": 18873,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 18602,
											"end": 18873,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 18602,
											"end": 18873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 18879,
											"end": 19058,
											"name": "tag",
											"source": 23,
											"value": "301"
										},
										{
											"begin": 18879,
											"end": 19058,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 19019,
											"end": 19050,
											"name": "PUSH",
											"source": 23,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 19015,
											"end": 19016,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 19007,
											"end": 19013,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 19003,
											"end": 19017,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 18996,
											"end": 19051,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 18879,
											"end": 19058,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 18879,
											"end": 19058,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 19064,
											"end": 19430,
											"name": "tag",
											"source": 23,
											"value": "302"
										},
										{
											"begin": 19064,
											"end": 19430,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 19206,
											"end": 19209,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 19227,
											"end": 19294,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "520"
										},
										{
											"begin": 19291,
											"end": 19293,
											"name": "PUSH",
											"source": 23,
											"value": "1D"
										},
										{
											"begin": 19286,
											"end": 19289,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 19227,
											"end": 19294,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "288"
										},
										{
											"begin": 19227,
											"end": 19294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 19227,
											"end": 19294,
											"name": "tag",
											"source": 23,
											"value": "520"
										},
										{
											"begin": 19227,
											"end": 19294,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 19220,
											"end": 19294,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 19220,
											"end": 19294,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 19303,
											"end": 19396,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "521"
										},
										{
											"begin": 19392,
											"end": 19395,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 19303,
											"end": 19396,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "301"
										},
										{
											"begin": 19303,
											"end": 19396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 19303,
											"end": 19396,
											"name": "tag",
											"source": 23,
											"value": "521"
										},
										{
											"begin": 19303,
											"end": 19396,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 19421,
											"end": 19423,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 19416,
											"end": 19419,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 19412,
											"end": 19424,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 19405,
											"end": 19424,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 19405,
											"end": 19424,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 19064,
											"end": 19430,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 19064,
											"end": 19430,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 19064,
											"end": 19430,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 19064,
											"end": 19430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 19436,
											"end": 19855,
											"name": "tag",
											"source": 23,
											"value": "243"
										},
										{
											"begin": 19436,
											"end": 19855,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 19602,
											"end": 19606,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 19640,
											"end": 19642,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 19629,
											"end": 19638,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 19625,
											"end": 19643,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 19617,
											"end": 19643,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 19617,
											"end": 19643,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 19689,
											"end": 19698,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 19683,
											"end": 19687,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 19679,
											"end": 19699,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 19675,
											"end": 19676,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 19664,
											"end": 19673,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 19660,
											"end": 19677,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 19653,
											"end": 19700,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 19717,
											"end": 19848,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "523"
										},
										{
											"begin": 19843,
											"end": 19847,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 19717,
											"end": 19848,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "302"
										},
										{
											"begin": 19717,
											"end": 19848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 19717,
											"end": 19848,
											"name": "tag",
											"source": 23,
											"value": "523"
										},
										{
											"begin": 19717,
											"end": 19848,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 19709,
											"end": 19848,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 19709,
											"end": 19848,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 19436,
											"end": 19855,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 19436,
											"end": 19855,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 19436,
											"end": 19855,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 19436,
											"end": 19855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 19861,
											"end": 19960,
											"name": "tag",
											"source": 23,
											"value": "303"
										},
										{
											"begin": 19861,
											"end": 19960,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 19913,
											"end": 19919,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 19947,
											"end": 19952,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 19941,
											"end": 19953,
											"name": "MLOAD",
											"source": 23
										},
										{
											"begin": 19931,
											"end": 19953,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 19931,
											"end": 19953,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 19861,
											"end": 19960,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 19861,
											"end": 19960,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 19861,
											"end": 19960,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 19861,
											"end": 19960,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 19966,
											"end": 20068,
											"name": "tag",
											"source": 23,
											"value": "304"
										},
										{
											"begin": 19966,
											"end": 20068,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 20007,
											"end": 20013,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 20058,
											"end": 20060,
											"name": "PUSH",
											"source": 23,
											"value": "1F"
										},
										{
											"begin": 20054,
											"end": 20061,
											"name": "NOT",
											"source": 23
										},
										{
											"begin": 20049,
											"end": 20051,
											"name": "PUSH",
											"source": 23,
											"value": "1F"
										},
										{
											"begin": 20042,
											"end": 20047,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 20038,
											"end": 20052,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 20034,
											"end": 20062,
											"name": "AND",
											"source": 23
										},
										{
											"begin": 20024,
											"end": 20062,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 20024,
											"end": 20062,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 19966,
											"end": 20068,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 19966,
											"end": 20068,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 19966,
											"end": 20068,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 19966,
											"end": 20068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 20074,
											"end": 20451,
											"name": "tag",
											"source": 23,
											"value": "305"
										},
										{
											"begin": 20074,
											"end": 20451,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 20162,
											"end": 20165,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 20190,
											"end": 20229,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "527"
										},
										{
											"begin": 20223,
											"end": 20228,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 20190,
											"end": 20229,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "303"
										},
										{
											"begin": 20190,
											"end": 20229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 20190,
											"end": 20229,
											"name": "tag",
											"source": 23,
											"value": "527"
										},
										{
											"begin": 20190,
											"end": 20229,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 20245,
											"end": 20316,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "528"
										},
										{
											"begin": 20309,
											"end": 20315,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 20304,
											"end": 20307,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 20245,
											"end": 20316,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "288"
										},
										{
											"begin": 20245,
											"end": 20316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 20245,
											"end": 20316,
											"name": "tag",
											"source": 23,
											"value": "528"
										},
										{
											"begin": 20245,
											"end": 20316,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 20238,
											"end": 20316,
											"name": "SWAP4",
											"source": 23
										},
										{
											"begin": 20238,
											"end": 20316,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 20325,
											"end": 20390,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "529"
										},
										{
											"begin": 20383,
											"end": 20389,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 20378,
											"end": 20381,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 20371,
											"end": 20375,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 20364,
											"end": 20369,
											"name": "DUP7",
											"source": 23
										},
										{
											"begin": 20360,
											"end": 20376,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 20325,
											"end": 20390,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "299"
										},
										{
											"begin": 20325,
											"end": 20390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 20325,
											"end": 20390,
											"name": "tag",
											"source": 23,
											"value": "529"
										},
										{
											"begin": 20325,
											"end": 20390,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 20415,
											"end": 20444,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "530"
										},
										{
											"begin": 20437,
											"end": 20443,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 20415,
											"end": 20444,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "304"
										},
										{
											"begin": 20415,
											"end": 20444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 20415,
											"end": 20444,
											"name": "tag",
											"source": 23,
											"value": "530"
										},
										{
											"begin": 20415,
											"end": 20444,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 20410,
											"end": 20413,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 20406,
											"end": 20445,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 20399,
											"end": 20445,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 20399,
											"end": 20445,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 20166,
											"end": 20451,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 20074,
											"end": 20451,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 20074,
											"end": 20451,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 20074,
											"end": 20451,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 20074,
											"end": 20451,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 20074,
											"end": 20451,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 20457,
											"end": 20770,
											"name": "tag",
											"source": 23,
											"value": "252"
										},
										{
											"begin": 20457,
											"end": 20770,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 20570,
											"end": 20574,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 20608,
											"end": 20610,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 20597,
											"end": 20606,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 20593,
											"end": 20611,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 20585,
											"end": 20611,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 20585,
											"end": 20611,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 20657,
											"end": 20666,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 20651,
											"end": 20655,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 20647,
											"end": 20667,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 20643,
											"end": 20644,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 20632,
											"end": 20641,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 20628,
											"end": 20645,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 20621,
											"end": 20668,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 20685,
											"end": 20763,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "532"
										},
										{
											"begin": 20758,
											"end": 20762,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 20749,
											"end": 20755,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 20685,
											"end": 20763,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "305"
										},
										{
											"begin": 20685,
											"end": 20763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 20685,
											"end": 20763,
											"name": "tag",
											"source": 23,
											"value": "532"
										},
										{
											"begin": 20685,
											"end": 20763,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 20677,
											"end": 20763,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 20677,
											"end": 20763,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 20457,
											"end": 20770,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 20457,
											"end": 20770,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 20457,
											"end": 20770,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 20457,
											"end": 20770,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 20457,
											"end": 20770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										}
									]
								}
							},
							"sourceList": [
								"contracts/TimeMarket.sol",
								"interfaces/IERC165.sol",
								"interfaces/IERC20.sol",
								"interfaces/IERC20Permit.sol",
								"interfaces/IERC721.sol",
								"interfaces/IERC721Enumerable.sol",
								"interfaces/IERC721Metadata.sol",
								"interfaces/IERC721Receiver.sol",
								"interfaces/IError.sol",
								"interfaces/ITimeStruct.sol",
								"interfaces/IUniswapV3Factory.sol",
								"interfaces/UniswapV2/IUniswapV2Factory.sol",
								"interfaces/UniswapV2/IUniswapV2Router01.sol",
								"interfaces/UniswapV2/IUniswapV2Router02.sol",
								"interfaces/UniswapV3/IERC721Permit.sol",
								"interfaces/UniswapV3/INonfungiblePositionManager.sol",
								"interfaces/UniswapV3/IPeripheryImmutableState.sol",
								"interfaces/UniswapV3/IPeripheryPayments.sol",
								"interfaces/UniswapV3/IPoolInitializer.sol",
								"libraries/Address.sol",
								"libraries/PoolAddress.sol",
								"libraries/SafeERC20.sol",
								"libraries/TimeFee.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"Sale(uint64,address)": "d91af492",
							"buy(address,address,uint128,uint128)": "0d45431d",
							"buyerWithdrawAirdorp(uint64)": "c0102de4",
							"buyerWithdrawRefund(uint64)": "2895cb7b",
							"getPenal(uint128,uint128)": "98c50fdd",
							"getPoolAddress(address,address,uint24)": "696d6283",
							"injectFutureToken(uint64)": "25ac3a73",
							"profileEarn(uint64)": "c3cf1aa6",
							"solderWithdrawStable(uint64)": "77bcd8a6",
							"userIfWithdraw1(address,uint256)": "59de2f60",
							"userIfWithdraw2(address,uint256)": "df0905c6",
							"userIfWithdraw3(address,uint256)": "b8d7f980",
							"userIfWithdraw4(address,uint256)": "fc993ea8"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_airdropToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_clearingTime\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AlreadyInjectToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NorSolder\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotBuyer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotEnoughAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInjectToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_id\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"}],\"name\":\"Sale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"_buyAmount\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"_buyPrice\",\"type\":\"uint128\"}],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_id\",\"type\":\"uint64\"}],\"name\":\"buyerWithdrawAirdorp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_id\",\"type\":\"uint64\"}],\"name\":\"buyerWithdrawRefund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"_soldPrice\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"_soldAmount\",\"type\":\"uint128\"}],\"name\":\"getPenal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"_fee\",\"type\":\"uint24\"}],\"name\":\"getPoolAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"thisPool\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_id\",\"type\":\"uint64\"}],\"name\":\"injectFutureToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_id\",\"type\":\"uint64\"}],\"name\":\"profileEarn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_id\",\"type\":\"uint64\"}],\"name\":\"solderWithdrawStable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userIfWithdraw1\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userIfWithdraw2\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userIfWithdraw3\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userIfWithdraw4\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TimeMarket.sol\":\"TimeMarket\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/TimeMarket.sol\":{\"keccak256\":\"0x65b0e06d6369de6c65fe72cc95efe7ecfa4b552c255010fa53ed20447afccb85\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b61dd07f7fde35836af322e3b1634ee16cf19296418abbef59bf8ce478da582d\",\"dweb:/ipfs/QmdVJPahF3CE7hxgDVamD6UuPHHumjBm5dYu954fpbXgtd\"]},\"interfaces/IERC165.sol\":{\"keccak256\":\"0x7d622aae953af8cc0c42b642ea6bfefc4851d9da99ebf0c11c8a99e1b97dc7ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef936c54bf126d59024eaf04e4a15aa3527c52a27e160d5f93185cf2e47db5e8\",\"dweb:/ipfs/QmQS5yZTHRPGXyJbj1RX9JajLueqN3MTQ6SSvAG9iJQ4cV\"]},\"interfaces/IERC20.sol\":{\"keccak256\":\"0xa426add89e9b4785ddeeb07b4d9352b57de8b4cb314c8cb8f0d5898938bd8de9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09852a830ad29d33cfdf74e7035853c68e43e1a8c242b25db9d656a074a54e6d\",\"dweb:/ipfs/QmeRSfQwWr3vyP2uJxnjybtPYLMiD17E51d4eMhXQh93R1\"]},\"interfaces/IERC20Permit.sol\":{\"keccak256\":\"0xc51a927b9d9ff62cf4c237f7f197827b90c460786c855c527007c02a94f23154\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d1107bf21355e8518d9fdcf1aa7052de7e5fc6d867d86d87b61b43667813cc1d\",\"dweb:/ipfs/QmZG3AQa61MLFWmovNyuzv3iCBPnFHGV7E7CimxLwpAwKt\"]},\"interfaces/IERC721.sol\":{\"keccak256\":\"0x49d5ef5ec866b921e61b9fd74a17160dc7f7396e2a58c3812fa4936ae7655899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5675c27037dbd9a9d90cf650930c5ed95ee6c62bb8dfcacdc3872eab62ecf50d\",\"dweb:/ipfs/QmYmdBCaUZNiQjc4qnx4avKAWx7QXYiid1nwo76Zq7PdHn\"]},\"interfaces/IERC721Enumerable.sol\":{\"keccak256\":\"0x2928336d6b9bbc64be3a0969fadfc1e4d4b319497651d54851dcb919c1c50590\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf5a9f178df915738ce28563818060b15c62249653fa417d9cfde1b04516c31b\",\"dweb:/ipfs/QmfLqHXScsK1t8D2NCAVZa4j7niAqXHjxEHuG77HDUrSdt\"]},\"interfaces/IERC721Metadata.sol\":{\"keccak256\":\"0xd32870e2a6e19ded14c88a471733a51504aaec5e51b61be8f57469cc67440f2b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe79f6298aa790c064e9aec4ded31cdb32d5de372b3fcda66035a9c6b3780331\",\"dweb:/ipfs/QmWvVNwdFao6264NR63yHgKH4LcYqYjJDq9SZ7GqKVRJFx\"]},\"interfaces/IERC721Receiver.sol\":{\"keccak256\":\"0xd669818e4d77be24bc391f00146315479826edff54e6791b92508bf7f4147791\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ab4b52e2db524224473b3e62999634b2adf7d6e6fe00c34a6f57d562619a251\",\"dweb:/ipfs/QmaHFCwJtUDXoyLfV1KyDoFAAti1UgSqS8pQWZMFYZv2wu\"]},\"interfaces/IError.sol\":{\"keccak256\":\"0xeba0280837886bc9f46fea9c1a96b9a687e3f3e2d4646c5416a925d48d07b54c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de9649f76e3bbf2896049207657ad98a181962e0ee8ca6dcaeb9317a002d5420\",\"dweb:/ipfs/QmdAadR7iwRtUgATLc3a3bgsqefxDWdadm9zQD7eP7GiiQ\"]},\"interfaces/ITimeStruct.sol\":{\"keccak256\":\"0x0afe849cb20e95bbad7d16aa2ea4d9b3b9cec028c3efeefa5fe8b34cc24f7e4b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf85a5b15f40309babd9526c684bf3c160716e1ed3a465da6c18dd57de883a07\",\"dweb:/ipfs/QmNYMhZPWaALPTvJbo21uyngnc2sP3JnfVRqLNCNXwGUAK\"]},\"interfaces/IUniswapV3Factory.sol\":{\"keccak256\":\"0x84f35bef9c458c47c57378010c38d79459a5310971ffe8b21fa8083310ed610c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://66cfe71f9676baa349f4e8908eaab79b407b4976a4c3cdf766bf8d42217ef58b\",\"dweb:/ipfs/QmXaScgxoHZ7WorzMwRSV84dpC63ykUY2GB7Z2miZ2Tk5L\"]},\"interfaces/UniswapV2/IUniswapV2Factory.sol\":{\"keccak256\":\"0x61f1cc54a91282797f67c735ff560661382c2a8e86688cae96e5db0e340b2b4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d66f7e874512ae213ccb90b480469edcd7bdc28fc4eaa020bfbe6bccf02919d7\",\"dweb:/ipfs/QmSxtbqbai56fzzMncVCiMTiGhmB1N7Dtz9YDRoncmWffe\"]},\"interfaces/UniswapV2/IUniswapV2Router01.sol\":{\"keccak256\":\"0x33c98829a06d45fecef665ca70540717cb4224dc4ec8725283058d823a4d8daf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c32ec8c56dd4b468eaf93c73174fbf65e10e1acdc647cf357931e97c0c6fea55\",\"dweb:/ipfs/QmWAMX1BUgYUWKtkv1nKtkcpQHWwiQHi5ksErHghFdQcUt\"]},\"interfaces/UniswapV2/IUniswapV2Router02.sol\":{\"keccak256\":\"0x8acf0c416c19299ac189484e354a27e77493633b55cecbece1fe2aa13a68a3e2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f33f7d0915ced95d7bc0a645b6434857f1a75169f8d9fd36aa037d886caf259\",\"dweb:/ipfs/QmSQ7WjyV9CfGw4cgxv1gCFk3zgtARHh1BpE2d169NW8HA\"]},\"interfaces/UniswapV3/IERC721Permit.sol\":{\"keccak256\":\"0xf64ceb2b37307fe3b391256ee5745ca4877adc339b56fe71ae9531d7f19be9aa\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f2ab4e22a3cc4a36cf359f0eb37543a66849d864fa27eabc602f32aeae34667a\",\"dweb:/ipfs/QmU9xKeEre66suCJYxchbivZkGbGygw3jKP9daHKUaYMuN\"]},\"interfaces/UniswapV3/INonfungiblePositionManager.sol\":{\"keccak256\":\"0xf223d560260129efd7a8a794c2193ac1e645a49621ebbe3358a31b551aef8dea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9aa85f6c28aca3fc982b4b93a753865913f435e8aa9d1d04bd51a8a9e052c1d2\",\"dweb:/ipfs/QmWmyTdJUsHH6VxwL9gooFQAeEMkE396cNgmDG3s6HJYdB\"]},\"interfaces/UniswapV3/IPeripheryImmutableState.sol\":{\"keccak256\":\"0x9d4a239b1324e9cb7ffa202088a2784a3d7c56ea7b47d3a12febec032305e245\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://726ee46aabe0655e684d9b344dcf0844bef491879bdc35499c9ba4c1d9fb75b1\",\"dweb:/ipfs/QmV96KM5eoC73ZdsQkLjw2WjNHk3cqnLtNRSWxAsebKusX\"]},\"interfaces/UniswapV3/IPeripheryPayments.sol\":{\"keccak256\":\"0xedc15d14a5be9ed30744f3f8c0a3e53c3d5478464091330ba9c8acc1ddf9fcb4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b20d91bc3db69de801f8c8e6dd5b05aa42ebc73690fd9f13316e7bf71405641\",\"dweb:/ipfs/QmQX65rHNiJptDzxXX8bctavSHpYCYuPLoSriJaL2GYyDp\"]},\"interfaces/UniswapV3/IPoolInitializer.sol\":{\"keccak256\":\"0xa54fe96a33c55207b9cf3e4c4d727dc7e0212e645b2c767281b9a9026c2edaf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d082f8a8e48919d6c920d91351fddc3fd509d0446b1f45f541fdcfa0942a9196\",\"dweb:/ipfs/QmRVaquMHr4mbGBADKii6F9K9mLTtDx7omn7pPaEXJTLMw\"]},\"libraries/Address.sol\":{\"keccak256\":\"0x0f4169fea1817f1228f6a2db5e764e2a86f357a9f42f83de1f157449bca0f1ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://244a3f17ec48680bfaadacf724e5b12030636dc8b3e59f01de1cf206f0802ad7\",\"dweb:/ipfs/QmZXNxyUx2vm7LjcwtNhwYyKgqVxmbMAM3cG5bricBmL1K\"]},\"libraries/PoolAddress.sol\":{\"keccak256\":\"0xda7193f15e5262d61ba1995c1523dda0c00fa89b6b930dee4178849fa7ff8506\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://02924be40064529f8cd7ea8e7f40ffeb8fb1e074d82be0603cf9ec2896f9310e\",\"dweb:/ipfs/QmTj3DLXF3ePVr4DcqhnqYj9vAJ9Ng98Pf3EFkG9LzTFuK\"]},\"libraries/SafeERC20.sol\":{\"keccak256\":\"0xe74183ce288c892718941897cf193167013ef062470ea7fc7f0e74c23521cdd1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75be313f96388535ff46fc29a55ed358e24e887c5706ea595ef2ed95c1d58e03\",\"dweb:/ipfs/QmReMXbvdgk5wZtn3mrjsDGLKFzfbBxG6HJBELLsaAKXkS\"]},\"libraries/TimeFee.sol\":{\"keccak256\":\"0x263efba43eaec339f5385a6c25158219d00edce75157d7cd759f3032725fcc79\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bcb2fee6d1fa020c5a58f9de9dace4b0c09339c784b1b7888ef78ffd52faa7c0\",\"dweb:/ipfs/QmVjYwXXg8QyvTh1dyTWp41qjyrajaqyXuATtMJqN4SRF7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 21,
								"contract": "contracts/TimeMarket.sol:TimeMarket",
								"label": "clearingTime",
								"offset": 0,
								"slot": "0",
								"type": "t_uint56"
							},
							{
								"astId": 23,
								"contract": "contracts/TimeMarket.sol:TimeMarket",
								"label": "id",
								"offset": 7,
								"slot": "0",
								"type": "t_uint64"
							},
							{
								"astId": 25,
								"contract": "contracts/TimeMarket.sol:TimeMarket",
								"label": "airdropToken",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 27,
								"contract": "contracts/TimeMarket.sol:TimeMarket",
								"label": "uniV2Factory",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 29,
								"contract": "contracts/TimeMarket.sol:TimeMarket",
								"label": "uniV2Router02",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 32,
								"contract": "contracts/TimeMarket.sol:TimeMarket",
								"label": "uniV3Factory",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 35,
								"contract": "contracts/TimeMarket.sol:TimeMarket",
								"label": "NonfungiblePositionManager",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 59,
								"contract": "contracts/TimeMarket.sol:TimeMarket",
								"label": "_tradeMes",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint64,t_struct(tradeMes)1211_storage)"
							},
							{
								"astId": 65,
								"contract": "contracts/TimeMarket.sol:TimeMarket",
								"label": "ifInject",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))"
							},
							{
								"astId": 71,
								"contract": "contracts/TimeMarket.sol:TimeMarket",
								"label": "userIfWithdraw1",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))"
							},
							{
								"astId": 77,
								"contract": "contracts/TimeMarket.sol:TimeMarket",
								"label": "userIfWithdraw2",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))"
							},
							{
								"astId": 83,
								"contract": "contracts/TimeMarket.sol:TimeMarket",
								"label": "userIfWithdraw3",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))"
							},
							{
								"astId": 89,
								"contract": "contracts/TimeMarket.sol:TimeMarket",
								"label": "userIfWithdraw4",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_bool)"
							},
							"t_mapping(t_uint256,t_bool)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint64,t_struct(tradeMes)1211_storage)": {
								"encoding": "mapping",
								"key": "t_uint64",
								"label": "mapping(uint64 => struct ITimeStruct.tradeMes)",
								"numberOfBytes": "32",
								"value": "t_struct(tradeMes)1211_storage"
							},
							"t_struct(tradeMes)1211_storage": {
								"encoding": "inplace",
								"label": "struct ITimeStruct.tradeMes",
								"members": [
									{
										"astId": 1196,
										"contract": "contracts/TimeMarket.sol:TimeMarket",
										"label": "tradeState",
										"offset": 0,
										"slot": "0",
										"type": "t_uint8"
									},
									{
										"astId": 1198,
										"contract": "contracts/TimeMarket.sol:TimeMarket",
										"label": "tradeId",
										"offset": 1,
										"slot": "0",
										"type": "t_uint64"
									},
									{
										"astId": 1200,
										"contract": "contracts/TimeMarket.sol:TimeMarket",
										"label": "buyTime",
										"offset": 9,
										"slot": "0",
										"type": "t_uint56"
									},
									{
										"astId": 1202,
										"contract": "contracts/TimeMarket.sol:TimeMarket",
										"label": "buyTotalAmount",
										"offset": 16,
										"slot": "0",
										"type": "t_uint128"
									},
									{
										"astId": 1204,
										"contract": "contracts/TimeMarket.sol:TimeMarket",
										"label": "buyPrice",
										"offset": 0,
										"slot": "1",
										"type": "t_uint128"
									},
									{
										"astId": 1206,
										"contract": "contracts/TimeMarket.sol:TimeMarket",
										"label": "tokenAddress",
										"offset": 0,
										"slot": "2",
										"type": "t_address"
									},
									{
										"astId": 1208,
										"contract": "contracts/TimeMarket.sol:TimeMarket",
										"label": "buyerAddress",
										"offset": 0,
										"slot": "3",
										"type": "t_address"
									},
									{
										"astId": 1210,
										"contract": "contracts/TimeMarket.sol:TimeMarket",
										"label": "solderAddress",
										"offset": 0,
										"slot": "4",
										"type": "t_address"
									}
								],
								"numberOfBytes": "160"
							},
							"t_uint128": {
								"encoding": "inplace",
								"label": "uint128",
								"numberOfBytes": "16"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint56": {
								"encoding": "inplace",
								"label": "uint56",
								"numberOfBytes": "7"
							},
							"t_uint64": {
								"encoding": "inplace",
								"label": "uint64",
								"numberOfBytes": "8"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interfaces/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/IERC165.sol\":{\"keccak256\":\"0x7d622aae953af8cc0c42b642ea6bfefc4851d9da99ebf0c11c8a99e1b97dc7ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef936c54bf126d59024eaf04e4a15aa3527c52a27e160d5f93185cf2e47db5e8\",\"dweb:/ipfs/QmQS5yZTHRPGXyJbj1RX9JajLueqN3MTQ6SSvAG9iJQ4cV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interfaces/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/IERC20.sol\":{\"keccak256\":\"0xa426add89e9b4785ddeeb07b4d9352b57de8b4cb314c8cb8f0d5898938bd8de9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09852a830ad29d33cfdf74e7035853c68e43e1a8c242b25db9d656a074a54e6d\",\"dweb:/ipfs/QmeRSfQwWr3vyP2uJxnjybtPYLMiD17E51d4eMhXQh93R1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interfaces/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/IERC20Permit.sol\":{\"keccak256\":\"0xc51a927b9d9ff62cf4c237f7f197827b90c460786c855c527007c02a94f23154\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d1107bf21355e8518d9fdcf1aa7052de7e5fc6d867d86d87b61b43667813cc1d\",\"dweb:/ipfs/QmZG3AQa61MLFWmovNyuzv3iCBPnFHGV7E7CimxLwpAwKt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interfaces/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/IERC165.sol\":{\"keccak256\":\"0x7d622aae953af8cc0c42b642ea6bfefc4851d9da99ebf0c11c8a99e1b97dc7ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef936c54bf126d59024eaf04e4a15aa3527c52a27e160d5f93185cf2e47db5e8\",\"dweb:/ipfs/QmQS5yZTHRPGXyJbj1RX9JajLueqN3MTQ6SSvAG9iJQ4cV\"]},\"interfaces/IERC721.sol\":{\"keccak256\":\"0x49d5ef5ec866b921e61b9fd74a17160dc7f7396e2a58c3812fa4936ae7655899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5675c27037dbd9a9d90cf650930c5ed95ee6c62bb8dfcacdc3872eab62ecf50d\",\"dweb:/ipfs/QmYmdBCaUZNiQjc4qnx4avKAWx7QXYiid1nwo76Zq7PdHn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interfaces/IERC721Enumerable.sol": {
				"IERC721Enumerable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"tokenByIndex(uint256)": {
								"details": "Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional enumeration extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional enumeration extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IERC721Enumerable.sol\":\"IERC721Enumerable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/IERC165.sol\":{\"keccak256\":\"0x7d622aae953af8cc0c42b642ea6bfefc4851d9da99ebf0c11c8a99e1b97dc7ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef936c54bf126d59024eaf04e4a15aa3527c52a27e160d5f93185cf2e47db5e8\",\"dweb:/ipfs/QmQS5yZTHRPGXyJbj1RX9JajLueqN3MTQ6SSvAG9iJQ4cV\"]},\"interfaces/IERC721.sol\":{\"keccak256\":\"0x49d5ef5ec866b921e61b9fd74a17160dc7f7396e2a58c3812fa4936ae7655899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5675c27037dbd9a9d90cf650930c5ed95ee6c62bb8dfcacdc3872eab62ecf50d\",\"dweb:/ipfs/QmYmdBCaUZNiQjc4qnx4avKAWx7QXYiid1nwo76Zq7PdHn\"]},\"interfaces/IERC721Enumerable.sol\":{\"keccak256\":\"0x2928336d6b9bbc64be3a0969fadfc1e4d4b319497651d54851dcb919c1c50590\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf5a9f178df915738ce28563818060b15c62249653fa417d9cfde1b04516c31b\",\"dweb:/ipfs/QmfLqHXScsK1t8D2NCAVZa4j7niAqXHjxEHuG77HDUrSdt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interfaces/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/IERC165.sol\":{\"keccak256\":\"0x7d622aae953af8cc0c42b642ea6bfefc4851d9da99ebf0c11c8a99e1b97dc7ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef936c54bf126d59024eaf04e4a15aa3527c52a27e160d5f93185cf2e47db5e8\",\"dweb:/ipfs/QmQS5yZTHRPGXyJbj1RX9JajLueqN3MTQ6SSvAG9iJQ4cV\"]},\"interfaces/IERC721.sol\":{\"keccak256\":\"0x49d5ef5ec866b921e61b9fd74a17160dc7f7396e2a58c3812fa4936ae7655899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5675c27037dbd9a9d90cf650930c5ed95ee6c62bb8dfcacdc3872eab62ecf50d\",\"dweb:/ipfs/QmYmdBCaUZNiQjc4qnx4avKAWx7QXYiid1nwo76Zq7PdHn\"]},\"interfaces/IERC721Metadata.sol\":{\"keccak256\":\"0xd32870e2a6e19ded14c88a471733a51504aaec5e51b61be8f57469cc67440f2b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe79f6298aa790c064e9aec4ded31cdb32d5de372b3fcda66035a9c6b3780331\",\"dweb:/ipfs/QmWvVNwdFao6264NR63yHgKH4LcYqYjJDq9SZ7GqKVRJFx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interfaces/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/IERC721Receiver.sol\":{\"keccak256\":\"0xd669818e4d77be24bc391f00146315479826edff54e6791b92508bf7f4147791\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ab4b52e2db524224473b3e62999634b2adf7d6e6fe00c34a6f57d562619a251\",\"dweb:/ipfs/QmaHFCwJtUDXoyLfV1KyDoFAAti1UgSqS8pQWZMFYZv2wu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interfaces/IError.sol": {
				"IError": {
					"abi": [
						{
							"inputs": [],
							"name": "AlreadyInjectToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NorSolder",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotBuyer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotEnoughAmount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInjectToken",
							"type": "error"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AlreadyInjectToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NorSolder\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotBuyer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotEnoughAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInjectToken\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IError.sol\":\"IError\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/IError.sol\":{\"keccak256\":\"0xeba0280837886bc9f46fea9c1a96b9a687e3f3e2d4646c5416a925d48d07b54c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de9649f76e3bbf2896049207657ad98a181962e0ee8ca6dcaeb9317a002d5420\",\"dweb:/ipfs/QmdAadR7iwRtUgATLc3a3bgsqefxDWdadm9zQD7eP7GiiQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interfaces/ITimeStruct.sol": {
				"ITimeStruct": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/ITimeStruct.sol\":\"ITimeStruct\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/ITimeStruct.sol\":{\"keccak256\":\"0x0afe849cb20e95bbad7d16aa2ea4d9b3b9cec028c3efeefa5fe8b34cc24f7e4b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf85a5b15f40309babd9526c684bf3c160716e1ed3a465da6c18dd57de883a07\",\"dweb:/ipfs/QmNYMhZPWaALPTvJbo21uyngnc2sP3JnfVRqLNCNXwGUAK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interfaces/IUniswapV3Factory.sol": {
				"IUniswapV3Factory": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickSpacing",
									"type": "int24"
								}
							],
							"name": "FeeAmountEnabled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnerChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tickSpacing",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "PoolCreated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								}
							],
							"name": "createPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"internalType": "int24",
									"name": "tickSpacing",
									"type": "int24"
								}
							],
							"name": "enableFeeAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								}
							],
							"name": "feeAmountTickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								}
							],
							"name": "getPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "setOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"FeeAmountEnabled(uint24,int24)": {
								"params": {
									"fee": "The enabled fee, denominated in hundredths of a bip",
									"tickSpacing": "The minimum number of ticks between initialized ticks for pools created with the given fee"
								}
							},
							"OwnerChanged(address,address)": {
								"params": {
									"newOwner": "The owner after the owner was changed",
									"oldOwner": "The owner before the owner was changed"
								}
							},
							"PoolCreated(address,address,uint24,int24,address)": {
								"params": {
									"fee": "The fee collected upon every swap in the pool, denominated in hundredths of a bip",
									"pool": "The address of the created pool",
									"tickSpacing": "The minimum number of ticks between initialized ticks",
									"token0": "The first token of the pool by address sort order",
									"token1": "The second token of the pool by address sort order"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"createPool(address,address,uint24)": {
								"details": "tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments are invalid.",
								"params": {
									"fee": "The desired fee for the pool",
									"tokenA": "One of the two tokens in the desired pool",
									"tokenB": "The other of the two tokens in the desired pool"
								},
								"returns": {
									"pool": "The address of the newly created pool"
								}
							},
							"enableFeeAmount(uint24,int24)": {
								"details": "Fee amounts may never be removed once enabled",
								"params": {
									"fee": "The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)",
									"tickSpacing": "The spacing between ticks to be enforced for all pools created with the given fee amount"
								}
							},
							"feeAmountTickSpacing(uint24)": {
								"details": "A fee amount can never be removed, so this value should be hard coded or cached in the calling context",
								"params": {
									"fee": "The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee"
								},
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"getPool(address,address,uint24)": {
								"details": "tokenA and tokenB may be passed in either token0/token1 or token1/token0 order",
								"params": {
									"fee": "The fee collected upon every swap in the pool, denominated in hundredths of a bip",
									"tokenA": "The contract address of either token0 or token1",
									"tokenB": "The contract address of the other token"
								},
								"returns": {
									"pool": "The pool address"
								}
							},
							"owner()": {
								"details": "Can be changed by the current owner via setOwner",
								"returns": {
									"_0": "The address of the factory owner"
								}
							},
							"setOwner(address)": {
								"details": "Must be called by the current owner",
								"params": {
									"_owner": "The new owner of the factory"
								}
							}
						},
						"title": "The interface for the Uniswap V3 Factory",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"createPool(address,address,uint24)": "a1671295",
							"enableFeeAmount(uint24,int24)": "8a7c195f",
							"feeAmountTickSpacing(uint24)": "22afcccb",
							"getPool(address,address,uint24)": "1698ee82",
							"owner()": "8da5cb5b",
							"setOwner(address)": "13af4035"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"FeeAmountEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"enableFeeAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"feeAmountTickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"FeeAmountEnabled(uint24,int24)\":{\"params\":{\"fee\":\"The enabled fee, denominated in hundredths of a bip\",\"tickSpacing\":\"The minimum number of ticks between initialized ticks for pools created with the given fee\"}},\"OwnerChanged(address,address)\":{\"params\":{\"newOwner\":\"The owner after the owner was changed\",\"oldOwner\":\"The owner before the owner was changed\"}},\"PoolCreated(address,address,uint24,int24,address)\":{\"params\":{\"fee\":\"The fee collected upon every swap in the pool, denominated in hundredths of a bip\",\"pool\":\"The address of the created pool\",\"tickSpacing\":\"The minimum number of ticks between initialized ticks\",\"token0\":\"The first token of the pool by address sort order\",\"token1\":\"The second token of the pool by address sort order\"}}},\"kind\":\"dev\",\"methods\":{\"createPool(address,address,uint24)\":{\"details\":\"tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments are invalid.\",\"params\":{\"fee\":\"The desired fee for the pool\",\"tokenA\":\"One of the two tokens in the desired pool\",\"tokenB\":\"The other of the two tokens in the desired pool\"},\"returns\":{\"pool\":\"The address of the newly created pool\"}},\"enableFeeAmount(uint24,int24)\":{\"details\":\"Fee amounts may never be removed once enabled\",\"params\":{\"fee\":\"The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\",\"tickSpacing\":\"The spacing between ticks to be enforced for all pools created with the given fee amount\"}},\"feeAmountTickSpacing(uint24)\":{\"details\":\"A fee amount can never be removed, so this value should be hard coded or cached in the calling context\",\"params\":{\"fee\":\"The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\"},\"returns\":{\"_0\":\"The tick spacing\"}},\"getPool(address,address,uint24)\":{\"details\":\"tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\",\"params\":{\"fee\":\"The fee collected upon every swap in the pool, denominated in hundredths of a bip\",\"tokenA\":\"The contract address of either token0 or token1\",\"tokenB\":\"The contract address of the other token\"},\"returns\":{\"pool\":\"The pool address\"}},\"owner()\":{\"details\":\"Can be changed by the current owner via setOwner\",\"returns\":{\"_0\":\"The address of the factory owner\"}},\"setOwner(address)\":{\"details\":\"Must be called by the current owner\",\"params\":{\"_owner\":\"The new owner of the factory\"}}},\"title\":\"The interface for the Uniswap V3 Factory\",\"version\":1},\"userdoc\":{\"events\":{\"FeeAmountEnabled(uint24,int24)\":{\"notice\":\"Emitted when a new fee amount is enabled for pool creation via the factory\"},\"OwnerChanged(address,address)\":{\"notice\":\"Emitted when the owner of the factory is changed\"},\"PoolCreated(address,address,uint24,int24,address)\":{\"notice\":\"Emitted when a pool is created\"}},\"kind\":\"user\",\"methods\":{\"createPool(address,address,uint24)\":{\"notice\":\"Creates a pool for the given two tokens and fee\"},\"enableFeeAmount(uint24,int24)\":{\"notice\":\"Enables a fee amount with the given tickSpacing\"},\"feeAmountTickSpacing(uint24)\":{\"notice\":\"Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\"},\"getPool(address,address,uint24)\":{\"notice\":\"Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\"},\"owner()\":{\"notice\":\"Returns the current owner of the factory\"},\"setOwner(address)\":{\"notice\":\"Updates the owner of the factory\"}},\"notice\":\"The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IUniswapV3Factory.sol\":\"IUniswapV3Factory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/IUniswapV3Factory.sol\":{\"keccak256\":\"0x84f35bef9c458c47c57378010c38d79459a5310971ffe8b21fa8083310ed610c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://66cfe71f9676baa349f4e8908eaab79b407b4976a4c3cdf766bf8d42217ef58b\",\"dweb:/ipfs/QmXaScgxoHZ7WorzMwRSV84dpC63ykUY2GB7Z2miZ2Tk5L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"FeeAmountEnabled(uint24,int24)": {
								"notice": "Emitted when a new fee amount is enabled for pool creation via the factory"
							},
							"OwnerChanged(address,address)": {
								"notice": "Emitted when the owner of the factory is changed"
							},
							"PoolCreated(address,address,uint24,int24,address)": {
								"notice": "Emitted when a pool is created"
							}
						},
						"kind": "user",
						"methods": {
							"createPool(address,address,uint24)": {
								"notice": "Creates a pool for the given two tokens and fee"
							},
							"enableFeeAmount(uint24,int24)": {
								"notice": "Enables a fee amount with the given tickSpacing"
							},
							"feeAmountTickSpacing(uint24)": {
								"notice": "Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled"
							},
							"getPool(address,address,uint24)": {
								"notice": "Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist"
							},
							"owner()": {
								"notice": "Returns the current owner of the factory"
							},
							"setOwner(address)": {
								"notice": "Updates the owner of the factory"
							}
						},
						"notice": "The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees",
						"version": 1
					}
				}
			},
			"interfaces/UniswapV2/IUniswapV2Factory.sol": {
				"IUniswapV2Factory": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "pair",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "PairCreated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "allPairs",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "allPairsLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "createPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeTo",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeToSetter",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "getPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "setFeeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "setFeeToSetter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allPairs(uint256)": "1e3dd18b",
							"allPairsLength()": "574f2ba3",
							"createPair(address,address)": "c9c65396",
							"feeTo()": "017e7e58",
							"feeToSetter()": "094b7415",
							"getPair(address,address)": "e6a43905",
							"setFeeTo(address)": "f46901ed",
							"setFeeToSetter(address)": "a2e74af6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allPairsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeToSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeToSetter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/UniswapV2/IUniswapV2Factory.sol\":\"IUniswapV2Factory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/UniswapV2/IUniswapV2Factory.sol\":{\"keccak256\":\"0x61f1cc54a91282797f67c735ff560661382c2a8e86688cae96e5db0e340b2b4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d66f7e874512ae213ccb90b480469edcd7bdc28fc4eaa020bfbe6bccf02919d7\",\"dweb:/ipfs/QmSxtbqbai56fzzMncVCiMTiGhmB1N7Dtz9YDRoncmWffe\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interfaces/UniswapV2/IUniswapV2Router01.sol": {
				"IUniswapV2Router01": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountIn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveB",
									"type": "uint256"
								}
							],
							"name": "quote",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapETHForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"getAmountIn(uint256,uint256,uint256)": "85f8c259",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getAmountsIn(uint256,address[])": "1f00ca74",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"quote(uint256,uint256,uint256)": "ad615dec",
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
							"removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "02751cec",
							"removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "ded9382a",
							"removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "2195995c",
							"swapETHForExactTokens(uint256,address[],address,uint256)": "fb3bdb41",
							"swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5",
							"swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
							"swapTokensForExactETH(uint256,uint256,address[],address,uint256)": "4a25d94a",
							"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": "8803dbee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/UniswapV2/IUniswapV2Router01.sol\":\"IUniswapV2Router01\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/UniswapV2/IUniswapV2Router01.sol\":{\"keccak256\":\"0x33c98829a06d45fecef665ca70540717cb4224dc4ec8725283058d823a4d8daf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c32ec8c56dd4b468eaf93c73174fbf65e10e1acdc647cf357931e97c0c6fea55\",\"dweb:/ipfs/QmWAMX1BUgYUWKtkv1nKtkcpQHWwiQHi5ksErHghFdQcUt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interfaces/UniswapV2/IUniswapV2Router02.sol": {
				"IUniswapV2Router02": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountIn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveB",
									"type": "uint256"
								}
							],
							"name": "quote",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETHSupportingFeeOnTransferTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapETHForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"getAmountIn(uint256,uint256,uint256)": "85f8c259",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getAmountsIn(uint256,address[])": "1f00ca74",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"quote(uint256,uint256,uint256)": "ad615dec",
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
							"removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "02751cec",
							"removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)": "af2979eb",
							"removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "ded9382a",
							"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "5b0d5984",
							"removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "2195995c",
							"swapETHForExactTokens(uint256,address[],address,uint256)": "fb3bdb41",
							"swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5",
							"swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)": "b6f9de95",
							"swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5",
							"swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "791ac947",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
							"swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "5c11d795",
							"swapTokensForExactETH(uint256,uint256,address[],address,uint256)": "4a25d94a",
							"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": "8803dbee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETHSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETHSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/UniswapV2/IUniswapV2Router02.sol\":\"IUniswapV2Router02\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/UniswapV2/IUniswapV2Router01.sol\":{\"keccak256\":\"0x33c98829a06d45fecef665ca70540717cb4224dc4ec8725283058d823a4d8daf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c32ec8c56dd4b468eaf93c73174fbf65e10e1acdc647cf357931e97c0c6fea55\",\"dweb:/ipfs/QmWAMX1BUgYUWKtkv1nKtkcpQHWwiQHi5ksErHghFdQcUt\"]},\"interfaces/UniswapV2/IUniswapV2Router02.sol\":{\"keccak256\":\"0x8acf0c416c19299ac189484e354a27e77493633b55cecbece1fe2aa13a68a3e2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f33f7d0915ced95d7bc0a645b6434857f1a75169f8d9fd36aa037d886caf259\",\"dweb:/ipfs/QmSQ7WjyV9CfGw4cgxv1gCFk3zgtARHh1BpE2d169NW8HA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interfaces/UniswapV3/IERC721Permit.sol": {
				"IERC721Permit": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"returns": {
									"_0": "The domain seperator used in encoding of permit signature"
								}
							},
							"PERMIT_TYPEHASH()": {
								"returns": {
									"_0": "The typehash for the permit"
								}
							},
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"permit(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"params": {
									"deadline": "The deadline timestamp by which the call must be mined for the approve to work",
									"r": "Must produce valid secp256k1 signature from the holder along with `v` and `s`",
									"s": "Must produce valid secp256k1 signature from the holder along with `r` and `v`",
									"spender": "The account that is being approved",
									"tokenId": "The ID of the token that is being approved for spending",
									"v": "Must produce valid secp256k1 signature from the holder along with `r` and `s`"
								}
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC721 with permit",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"PERMIT_TYPEHASH()": "30adf81f",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"permit(address,uint256,uint256,uint8,bytes32,bytes32)": "7ac2ff7b",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"returns\":{\"_0\":\"The domain seperator used in encoding of permit signature\"}},\"PERMIT_TYPEHASH()\":{\"returns\":{\"_0\":\"The typehash for the permit\"}},\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"permit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"deadline\":\"The deadline timestamp by which the call must be mined for the approve to work\",\"r\":\"Must produce valid secp256k1 signature from the holder along with `v` and `s`\",\"s\":\"Must produce valid secp256k1 signature from the holder along with `r` and `v`\",\"spender\":\"The account that is being approved\",\"tokenId\":\"The ID of the token that is being approved for spending\",\"v\":\"Must produce valid secp256k1 signature from the holder along with `r` and `s`\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC721 with permit\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"notice\":\"The domain separator used in the permit signature\"},\"PERMIT_TYPEHASH()\":{\"notice\":\"The permit typehash used in the permit signature\"},\"permit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Approve of a specific token ID for spending by spender via signature\"}},\"notice\":\"Extension to ERC721 that includes a permit function for signature based approvals\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/UniswapV3/IERC721Permit.sol\":\"IERC721Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/IERC165.sol\":{\"keccak256\":\"0x7d622aae953af8cc0c42b642ea6bfefc4851d9da99ebf0c11c8a99e1b97dc7ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef936c54bf126d59024eaf04e4a15aa3527c52a27e160d5f93185cf2e47db5e8\",\"dweb:/ipfs/QmQS5yZTHRPGXyJbj1RX9JajLueqN3MTQ6SSvAG9iJQ4cV\"]},\"interfaces/IERC721.sol\":{\"keccak256\":\"0x49d5ef5ec866b921e61b9fd74a17160dc7f7396e2a58c3812fa4936ae7655899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5675c27037dbd9a9d90cf650930c5ed95ee6c62bb8dfcacdc3872eab62ecf50d\",\"dweb:/ipfs/QmYmdBCaUZNiQjc4qnx4avKAWx7QXYiid1nwo76Zq7PdHn\"]},\"interfaces/UniswapV3/IERC721Permit.sol\":{\"keccak256\":\"0xf64ceb2b37307fe3b391256ee5745ca4877adc339b56fe71ae9531d7f19be9aa\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f2ab4e22a3cc4a36cf359f0eb37543a66849d864fa27eabc602f32aeae34667a\",\"dweb:/ipfs/QmU9xKeEre66suCJYxchbivZkGbGygw3jKP9daHKUaYMuN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"notice": "The domain separator used in the permit signature"
							},
							"PERMIT_TYPEHASH()": {
								"notice": "The permit typehash used in the permit signature"
							},
							"permit(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"notice": "Approve of a specific token ID for spending by spender via signature"
							}
						},
						"notice": "Extension to ERC721 that includes a permit function for signature based approvals",
						"version": 1
					}
				}
			},
			"interfaces/UniswapV3/INonfungiblePositionManager.sol": {
				"INonfungiblePositionManager": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "DecreaseLiquidity",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "IncreaseLiquidity",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WETH9",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint128",
											"name": "amount0Max",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "amount1Max",
											"type": "uint128"
										}
									],
									"internalType": "struct INonfungiblePositionManager.CollectParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "createAndInitializePoolIfNecessary",
							"outputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint128",
											"name": "liquidity",
											"type": "uint128"
										},
										{
											"internalType": "uint256",
											"name": "amount0Min",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount1Min",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										}
									],
									"internalType": "struct INonfungiblePositionManager.DecreaseLiquidityParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "decreaseLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount0Desired",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount1Desired",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount0Min",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount1Min",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										}
									],
									"internalType": "struct INonfungiblePositionManager.IncreaseLiquidityParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "increaseLiquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "token0",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "token1",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "int24",
											"name": "tickLower",
											"type": "int24"
										},
										{
											"internalType": "int24",
											"name": "tickUpper",
											"type": "int24"
										},
										{
											"internalType": "uint256",
											"name": "amount0Desired",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount1Desired",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount0Min",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount1Min",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										}
									],
									"internalType": "struct INonfungiblePositionManager.MintParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint96",
									"name": "nonce",
									"type": "uint96"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "refundETH",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountMinimum",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "sweepToken",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountMinimum",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "unwrapWETH9",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Collect(uint256,address,uint256,uint256)": {
								"details": "The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior",
								"params": {
									"amount0": "The amount of token0 owed to the position that was collected",
									"amount1": "The amount of token1 owed to the position that was collected",
									"recipient": "The address of the account that received the collected tokens",
									"tokenId": "The ID of the token for which underlying tokens were collected"
								}
							},
							"DecreaseLiquidity(uint256,uint128,uint256,uint256)": {
								"params": {
									"amount0": "The amount of token0 that was accounted for the decrease in liquidity",
									"amount1": "The amount of token1 that was accounted for the decrease in liquidity",
									"liquidity": "The amount by which liquidity for the NFT position was decreased",
									"tokenId": "The ID of the token for which liquidity was decreased"
								}
							},
							"IncreaseLiquidity(uint256,uint128,uint256,uint256)": {
								"details": "Also emitted when a token is minted",
								"params": {
									"amount0": "The amount of token0 that was paid for the increase in liquidity",
									"amount1": "The amount of token1 that was paid for the increase in liquidity",
									"liquidity": "The amount by which liquidity for the NFT position was increased",
									"tokenId": "The ID of the token for which liquidity was increased"
								}
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"returns": {
									"_0": "The domain seperator used in encoding of permit signature"
								}
							},
							"PERMIT_TYPEHASH()": {
								"returns": {
									"_0": "The typehash for the permit"
								}
							},
							"WETH9()": {
								"returns": {
									"_0": "Returns the address of WETH9"
								}
							},
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"burn(uint256)": {
								"params": {
									"tokenId": "The ID of the token that is being burned"
								}
							},
							"collect((uint256,address,uint128,uint128))": {
								"params": {
									"params": "tokenId The ID of the NFT for which tokens are being collected, recipient The account that should receive the tokens, amount0Max The maximum amount of token0 to collect, amount1Max The maximum amount of token1 to collect"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"createAndInitializePoolIfNecessary(address,address,uint24,uint160)": {
								"details": "This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool",
								"params": {
									"fee": "The fee amount of the v3 pool for the specified token pair",
									"sqrtPriceX96": "The initial square root price of the pool as a Q64.96 value",
									"token0": "The contract address of token0 of the pool",
									"token1": "The contract address of token1 of the pool"
								},
								"returns": {
									"pool": "Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary"
								}
							},
							"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))": {
								"params": {
									"params": "tokenId The ID of the token for which liquidity is being decreased, amount The amount by which liquidity will be decreased, amount0Min The minimum amount of token0 that should be accounted for the burned liquidity, amount1Min The minimum amount of token1 that should be accounted for the burned liquidity, deadline The time by which the transaction must be included to effect the change"
								},
								"returns": {
									"amount0": "The amount of token0 accounted to the position's tokens owed",
									"amount1": "The amount of token1 accounted to the position's tokens owed"
								}
							},
							"factory()": {
								"returns": {
									"_0": "Returns the address of the Uniswap V3 factory"
								}
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))": {
								"params": {
									"params": "tokenId The ID of the token for which liquidity is being increased, amount0Desired The desired amount of token0 to be spent, amount1Desired The desired amount of token1 to be spent, amount0Min The minimum amount of token0 to spend, which serves as a slippage check, amount1Min The minimum amount of token1 to spend, which serves as a slippage check, deadline The time by which the transaction must be included to effect the change"
								},
								"returns": {
									"amount0": "The amount of token0 to acheive resulting liquidity",
									"amount1": "The amount of token1 to acheive resulting liquidity",
									"liquidity": "The new liquidity amount as a result of the increase"
								}
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))": {
								"details": "Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized a method does not exist, i.e. the pool is assumed to be initialized.",
								"params": {
									"params": "The params necessary to mint a position, encoded as `MintParams` in calldata"
								},
								"returns": {
									"amount0": "The amount of token0",
									"amount1": "The amount of token1",
									"liquidity": "The amount of liquidity for this position",
									"tokenId": "The ID of the token that represents the minted position"
								}
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"permit(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"params": {
									"deadline": "The deadline timestamp by which the call must be mined for the approve to work",
									"r": "Must produce valid secp256k1 signature from the holder along with `v` and `s`",
									"s": "Must produce valid secp256k1 signature from the holder along with `r` and `v`",
									"spender": "The account that is being approved",
									"tokenId": "The ID of the token that is being approved for spending",
									"v": "Must produce valid secp256k1 signature from the holder along with `r` and `s`"
								}
							},
							"positions(uint256)": {
								"details": "Throws if the token ID is not valid.",
								"params": {
									"tokenId": "The ID of the token that represents the position"
								},
								"returns": {
									"fee": "The fee associated with the pool",
									"feeGrowthInside0LastX128": "The fee growth of token0 as of the last action on the individual position",
									"feeGrowthInside1LastX128": "The fee growth of token1 as of the last action on the individual position",
									"liquidity": "The liquidity of the position",
									"nonce": "The nonce for permits",
									"operator": "The address that is approved for spending",
									"tickLower": "The lower end of the tick range for the position",
									"tickUpper": "The higher end of the tick range for the position",
									"token0": "The address of the token0 for a specific pool",
									"token1": "The address of the token1 for a specific pool",
									"tokensOwed0": "The uncollected amount of token0 owed to the position as of the last computation",
									"tokensOwed1": "The uncollected amount of token1 owed to the position as of the last computation"
								}
							},
							"refundETH()": {
								"details": "Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount"
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"sweepToken(address,uint256,address)": {
								"details": "The amountMinimum parameter prevents malicious contracts from stealing the token from users",
								"params": {
									"amountMinimum": "The minimum amount of token required for a transfer",
									"recipient": "The destination address of the token",
									"token": "The contract address of the token which will be transferred to `recipient`"
								}
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenByIndex(uint256)": {
								"details": "Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							},
							"unwrapWETH9(uint256,address)": {
								"details": "The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.",
								"params": {
									"amountMinimum": "The minimum amount of WETH9 to unwrap",
									"recipient": "The address receiving ETH"
								}
							}
						},
						"title": "Non-fungible token for positions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"PERMIT_TYPEHASH()": "30adf81f",
							"WETH9()": "4aa4a4fc",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"collect((uint256,address,uint128,uint128))": "fc6f7865",
							"createAndInitializePoolIfNecessary(address,address,uint24,uint160)": "13ead562",
							"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))": "0c49ccbe",
							"factory()": "c45a0155",
							"getApproved(uint256)": "081812fc",
							"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))": "219f5d17",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))": "88316456",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"permit(address,uint256,uint256,uint8,bytes32,bytes32)": "7ac2ff7b",
							"positions(uint256)": "99fbab88",
							"refundETH()": "12210e8a",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"sweepToken(address,uint256,address)": "df2ab5bb",
							"symbol()": "95d89b41",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"unwrapWETH9(uint256,address)": "49404b7c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"DecreaseLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"IncreaseLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Max\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Max\",\"type\":\"uint128\"}],\"internalType\":\"struct INonfungiblePositionManager.CollectParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"createAndInitializePoolIfNecessary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct INonfungiblePositionManager.DecreaseLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"decreaseLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct INonfungiblePositionManager.IncreaseLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"increaseLiquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint256\",\"name\":\"amount0Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct INonfungiblePositionManager.MintParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"nonce\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"refundETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"sweepToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"unwrapWETH9\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Collect(uint256,address,uint256,uint256)\":{\"details\":\"The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior\",\"params\":{\"amount0\":\"The amount of token0 owed to the position that was collected\",\"amount1\":\"The amount of token1 owed to the position that was collected\",\"recipient\":\"The address of the account that received the collected tokens\",\"tokenId\":\"The ID of the token for which underlying tokens were collected\"}},\"DecreaseLiquidity(uint256,uint128,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was accounted for the decrease in liquidity\",\"amount1\":\"The amount of token1 that was accounted for the decrease in liquidity\",\"liquidity\":\"The amount by which liquidity for the NFT position was decreased\",\"tokenId\":\"The ID of the token for which liquidity was decreased\"}},\"IncreaseLiquidity(uint256,uint128,uint256,uint256)\":{\"details\":\"Also emitted when a token is minted\",\"params\":{\"amount0\":\"The amount of token0 that was paid for the increase in liquidity\",\"amount1\":\"The amount of token1 that was paid for the increase in liquidity\",\"liquidity\":\"The amount by which liquidity for the NFT position was increased\",\"tokenId\":\"The ID of the token for which liquidity was increased\"}},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"returns\":{\"_0\":\"The domain seperator used in encoding of permit signature\"}},\"PERMIT_TYPEHASH()\":{\"returns\":{\"_0\":\"The typehash for the permit\"}},\"WETH9()\":{\"returns\":{\"_0\":\"Returns the address of WETH9\"}},\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"burn(uint256)\":{\"params\":{\"tokenId\":\"The ID of the token that is being burned\"}},\"collect((uint256,address,uint128,uint128))\":{\"params\":{\"params\":\"tokenId The ID of the NFT for which tokens are being collected, recipient The account that should receive the tokens, amount0Max The maximum amount of token0 to collect, amount1Max The maximum amount of token1 to collect\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"createAndInitializePoolIfNecessary(address,address,uint24,uint160)\":{\"details\":\"This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool\",\"params\":{\"fee\":\"The fee amount of the v3 pool for the specified token pair\",\"sqrtPriceX96\":\"The initial square root price of the pool as a Q64.96 value\",\"token0\":\"The contract address of token0 of the pool\",\"token1\":\"The contract address of token1 of the pool\"},\"returns\":{\"pool\":\"Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary\"}},\"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))\":{\"params\":{\"params\":\"tokenId The ID of the token for which liquidity is being decreased, amount The amount by which liquidity will be decreased, amount0Min The minimum amount of token0 that should be accounted for the burned liquidity, amount1Min The minimum amount of token1 that should be accounted for the burned liquidity, deadline The time by which the transaction must be included to effect the change\"},\"returns\":{\"amount0\":\"The amount of token0 accounted to the position's tokens owed\",\"amount1\":\"The amount of token1 accounted to the position's tokens owed\"}},\"factory()\":{\"returns\":{\"_0\":\"Returns the address of the Uniswap V3 factory\"}},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))\":{\"params\":{\"params\":\"tokenId The ID of the token for which liquidity is being increased, amount0Desired The desired amount of token0 to be spent, amount1Desired The desired amount of token1 to be spent, amount0Min The minimum amount of token0 to spend, which serves as a slippage check, amount1Min The minimum amount of token1 to spend, which serves as a slippage check, deadline The time by which the transaction must be included to effect the change\"},\"returns\":{\"amount0\":\"The amount of token0 to acheive resulting liquidity\",\"amount1\":\"The amount of token1 to acheive resulting liquidity\",\"liquidity\":\"The new liquidity amount as a result of the increase\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))\":{\"details\":\"Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized a method does not exist, i.e. the pool is assumed to be initialized.\",\"params\":{\"params\":\"The params necessary to mint a position, encoded as `MintParams` in calldata\"},\"returns\":{\"amount0\":\"The amount of token0\",\"amount1\":\"The amount of token1\",\"liquidity\":\"The amount of liquidity for this position\",\"tokenId\":\"The ID of the token that represents the minted position\"}},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"permit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"deadline\":\"The deadline timestamp by which the call must be mined for the approve to work\",\"r\":\"Must produce valid secp256k1 signature from the holder along with `v` and `s`\",\"s\":\"Must produce valid secp256k1 signature from the holder along with `r` and `v`\",\"spender\":\"The account that is being approved\",\"tokenId\":\"The ID of the token that is being approved for spending\",\"v\":\"Must produce valid secp256k1 signature from the holder along with `r` and `s`\"}},\"positions(uint256)\":{\"details\":\"Throws if the token ID is not valid.\",\"params\":{\"tokenId\":\"The ID of the token that represents the position\"},\"returns\":{\"fee\":\"The fee associated with the pool\",\"feeGrowthInside0LastX128\":\"The fee growth of token0 as of the last action on the individual position\",\"feeGrowthInside1LastX128\":\"The fee growth of token1 as of the last action on the individual position\",\"liquidity\":\"The liquidity of the position\",\"nonce\":\"The nonce for permits\",\"operator\":\"The address that is approved for spending\",\"tickLower\":\"The lower end of the tick range for the position\",\"tickUpper\":\"The higher end of the tick range for the position\",\"token0\":\"The address of the token0 for a specific pool\",\"token1\":\"The address of the token1 for a specific pool\",\"tokensOwed0\":\"The uncollected amount of token0 owed to the position as of the last computation\",\"tokensOwed1\":\"The uncollected amount of token1 owed to the position as of the last computation\"}},\"refundETH()\":{\"details\":\"Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"sweepToken(address,uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing the token from users\",\"params\":{\"amountMinimum\":\"The minimum amount of token required for a transfer\",\"recipient\":\"The destination address of the token\",\"token\":\"The contract address of the token which will be transferred to `recipient`\"}},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"},\"unwrapWETH9(uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\",\"params\":{\"amountMinimum\":\"The minimum amount of WETH9 to unwrap\",\"recipient\":\"The address receiving ETH\"}}},\"title\":\"Non-fungible token for positions\",\"version\":1},\"userdoc\":{\"events\":{\"Collect(uint256,address,uint256,uint256)\":{\"notice\":\"Emitted when tokens are collected for a position NFT\"},\"DecreaseLiquidity(uint256,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is decreased for a position NFT\"},\"IncreaseLiquidity(uint256,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is increased for a position NFT\"}},\"kind\":\"user\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"notice\":\"The domain separator used in the permit signature\"},\"PERMIT_TYPEHASH()\":{\"notice\":\"The permit typehash used in the permit signature\"},\"burn(uint256)\":{\"notice\":\"Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens must be collected first.\"},\"collect((uint256,address,uint128,uint128))\":{\"notice\":\"Collects up to a maximum amount of fees owed to a specific position to the recipient\"},\"createAndInitializePoolIfNecessary(address,address,uint24,uint160)\":{\"notice\":\"Creates a new pool if it does not exist, then initializes if not initialized\"},\"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))\":{\"notice\":\"Decreases the amount of liquidity in a position and accounts it to the position\"},\"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`\"},\"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))\":{\"notice\":\"Creates a new position wrapped in a NFT\"},\"permit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Approve of a specific token ID for spending by spender via signature\"},\"positions(uint256)\":{\"notice\":\"Returns the position information associated with a given token ID.\"},\"refundETH()\":{\"notice\":\"Refunds any ETH balance held by this contract to the `msg.sender`\"},\"sweepToken(address,uint256,address)\":{\"notice\":\"Transfers the full amount of a token held by this contract to recipient\"},\"unwrapWETH9(uint256,address)\":{\"notice\":\"Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\"}},\"notice\":\"Wraps Uniswap V3 positions in a non-fungible token interface which allows for them to be transferred and authorized.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/UniswapV3/INonfungiblePositionManager.sol\":\"INonfungiblePositionManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/IERC165.sol\":{\"keccak256\":\"0x7d622aae953af8cc0c42b642ea6bfefc4851d9da99ebf0c11c8a99e1b97dc7ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef936c54bf126d59024eaf04e4a15aa3527c52a27e160d5f93185cf2e47db5e8\",\"dweb:/ipfs/QmQS5yZTHRPGXyJbj1RX9JajLueqN3MTQ6SSvAG9iJQ4cV\"]},\"interfaces/IERC721.sol\":{\"keccak256\":\"0x49d5ef5ec866b921e61b9fd74a17160dc7f7396e2a58c3812fa4936ae7655899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5675c27037dbd9a9d90cf650930c5ed95ee6c62bb8dfcacdc3872eab62ecf50d\",\"dweb:/ipfs/QmYmdBCaUZNiQjc4qnx4avKAWx7QXYiid1nwo76Zq7PdHn\"]},\"interfaces/IERC721Enumerable.sol\":{\"keccak256\":\"0x2928336d6b9bbc64be3a0969fadfc1e4d4b319497651d54851dcb919c1c50590\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf5a9f178df915738ce28563818060b15c62249653fa417d9cfde1b04516c31b\",\"dweb:/ipfs/QmfLqHXScsK1t8D2NCAVZa4j7niAqXHjxEHuG77HDUrSdt\"]},\"interfaces/IERC721Metadata.sol\":{\"keccak256\":\"0xd32870e2a6e19ded14c88a471733a51504aaec5e51b61be8f57469cc67440f2b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe79f6298aa790c064e9aec4ded31cdb32d5de372b3fcda66035a9c6b3780331\",\"dweb:/ipfs/QmWvVNwdFao6264NR63yHgKH4LcYqYjJDq9SZ7GqKVRJFx\"]},\"interfaces/UniswapV3/IERC721Permit.sol\":{\"keccak256\":\"0xf64ceb2b37307fe3b391256ee5745ca4877adc339b56fe71ae9531d7f19be9aa\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f2ab4e22a3cc4a36cf359f0eb37543a66849d864fa27eabc602f32aeae34667a\",\"dweb:/ipfs/QmU9xKeEre66suCJYxchbivZkGbGygw3jKP9daHKUaYMuN\"]},\"interfaces/UniswapV3/INonfungiblePositionManager.sol\":{\"keccak256\":\"0xf223d560260129efd7a8a794c2193ac1e645a49621ebbe3358a31b551aef8dea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9aa85f6c28aca3fc982b4b93a753865913f435e8aa9d1d04bd51a8a9e052c1d2\",\"dweb:/ipfs/QmWmyTdJUsHH6VxwL9gooFQAeEMkE396cNgmDG3s6HJYdB\"]},\"interfaces/UniswapV3/IPeripheryImmutableState.sol\":{\"keccak256\":\"0x9d4a239b1324e9cb7ffa202088a2784a3d7c56ea7b47d3a12febec032305e245\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://726ee46aabe0655e684d9b344dcf0844bef491879bdc35499c9ba4c1d9fb75b1\",\"dweb:/ipfs/QmV96KM5eoC73ZdsQkLjw2WjNHk3cqnLtNRSWxAsebKusX\"]},\"interfaces/UniswapV3/IPeripheryPayments.sol\":{\"keccak256\":\"0xedc15d14a5be9ed30744f3f8c0a3e53c3d5478464091330ba9c8acc1ddf9fcb4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b20d91bc3db69de801f8c8e6dd5b05aa42ebc73690fd9f13316e7bf71405641\",\"dweb:/ipfs/QmQX65rHNiJptDzxXX8bctavSHpYCYuPLoSriJaL2GYyDp\"]},\"interfaces/UniswapV3/IPoolInitializer.sol\":{\"keccak256\":\"0xa54fe96a33c55207b9cf3e4c4d727dc7e0212e645b2c767281b9a9026c2edaf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d082f8a8e48919d6c920d91351fddc3fd509d0446b1f45f541fdcfa0942a9196\",\"dweb:/ipfs/QmRVaquMHr4mbGBADKii6F9K9mLTtDx7omn7pPaEXJTLMw\"]},\"libraries/PoolAddress.sol\":{\"keccak256\":\"0xda7193f15e5262d61ba1995c1523dda0c00fa89b6b930dee4178849fa7ff8506\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://02924be40064529f8cd7ea8e7f40ffeb8fb1e074d82be0603cf9ec2896f9310e\",\"dweb:/ipfs/QmTj3DLXF3ePVr4DcqhnqYj9vAJ9Ng98Pf3EFkG9LzTFuK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Collect(uint256,address,uint256,uint256)": {
								"notice": "Emitted when tokens are collected for a position NFT"
							},
							"DecreaseLiquidity(uint256,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is decreased for a position NFT"
							},
							"IncreaseLiquidity(uint256,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is increased for a position NFT"
							}
						},
						"kind": "user",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"notice": "The domain separator used in the permit signature"
							},
							"PERMIT_TYPEHASH()": {
								"notice": "The permit typehash used in the permit signature"
							},
							"burn(uint256)": {
								"notice": "Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens must be collected first."
							},
							"collect((uint256,address,uint128,uint128))": {
								"notice": "Collects up to a maximum amount of fees owed to a specific position to the recipient"
							},
							"createAndInitializePoolIfNecessary(address,address,uint24,uint160)": {
								"notice": "Creates a new pool if it does not exist, then initializes if not initialized"
							},
							"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))": {
								"notice": "Decreases the amount of liquidity in a position and accounts it to the position"
							},
							"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))": {
								"notice": "Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`"
							},
							"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))": {
								"notice": "Creates a new position wrapped in a NFT"
							},
							"permit(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"notice": "Approve of a specific token ID for spending by spender via signature"
							},
							"positions(uint256)": {
								"notice": "Returns the position information associated with a given token ID."
							},
							"refundETH()": {
								"notice": "Refunds any ETH balance held by this contract to the `msg.sender`"
							},
							"sweepToken(address,uint256,address)": {
								"notice": "Transfers the full amount of a token held by this contract to recipient"
							},
							"unwrapWETH9(uint256,address)": {
								"notice": "Unwraps the contract's WETH9 balance and sends it to recipient as ETH."
							}
						},
						"notice": "Wraps Uniswap V3 positions in a non-fungible token interface which allows for them to be transferred and authorized.",
						"version": 1
					}
				}
			},
			"interfaces/UniswapV3/IPeripheryImmutableState.sol": {
				"IPeripheryImmutableState": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH9",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"WETH9()": {
								"returns": {
									"_0": "Returns the address of WETH9"
								}
							},
							"factory()": {
								"returns": {
									"_0": "Returns the address of the Uniswap V3 factory"
								}
							}
						},
						"title": "Immutable state",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH9()": "4aa4a4fc",
							"factory()": "c45a0155"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"WETH9()\":{\"returns\":{\"_0\":\"Returns the address of WETH9\"}},\"factory()\":{\"returns\":{\"_0\":\"Returns the address of the Uniswap V3 factory\"}}},\"title\":\"Immutable state\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Functions that return immutable state of the router\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/UniswapV3/IPeripheryImmutableState.sol\":\"IPeripheryImmutableState\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/UniswapV3/IPeripheryImmutableState.sol\":{\"keccak256\":\"0x9d4a239b1324e9cb7ffa202088a2784a3d7c56ea7b47d3a12febec032305e245\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://726ee46aabe0655e684d9b344dcf0844bef491879bdc35499c9ba4c1d9fb75b1\",\"dweb:/ipfs/QmV96KM5eoC73ZdsQkLjw2WjNHk3cqnLtNRSWxAsebKusX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Functions that return immutable state of the router",
						"version": 1
					}
				}
			},
			"interfaces/UniswapV3/IPeripheryPayments.sol": {
				"IPeripheryPayments": {
					"abi": [
						{
							"inputs": [],
							"name": "refundETH",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountMinimum",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "sweepToken",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountMinimum",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "unwrapWETH9",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"refundETH()": {
								"details": "Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount"
							},
							"sweepToken(address,uint256,address)": {
								"details": "The amountMinimum parameter prevents malicious contracts from stealing the token from users",
								"params": {
									"amountMinimum": "The minimum amount of token required for a transfer",
									"recipient": "The destination address of the token",
									"token": "The contract address of the token which will be transferred to `recipient`"
								}
							},
							"unwrapWETH9(uint256,address)": {
								"details": "The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.",
								"params": {
									"amountMinimum": "The minimum amount of WETH9 to unwrap",
									"recipient": "The address receiving ETH"
								}
							}
						},
						"title": "Periphery Payments",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"refundETH()": "12210e8a",
							"sweepToken(address,uint256,address)": "df2ab5bb",
							"unwrapWETH9(uint256,address)": "49404b7c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"refundETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"sweepToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"unwrapWETH9\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"refundETH()\":{\"details\":\"Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount\"},\"sweepToken(address,uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing the token from users\",\"params\":{\"amountMinimum\":\"The minimum amount of token required for a transfer\",\"recipient\":\"The destination address of the token\",\"token\":\"The contract address of the token which will be transferred to `recipient`\"}},\"unwrapWETH9(uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\",\"params\":{\"amountMinimum\":\"The minimum amount of WETH9 to unwrap\",\"recipient\":\"The address receiving ETH\"}}},\"title\":\"Periphery Payments\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"refundETH()\":{\"notice\":\"Refunds any ETH balance held by this contract to the `msg.sender`\"},\"sweepToken(address,uint256,address)\":{\"notice\":\"Transfers the full amount of a token held by this contract to recipient\"},\"unwrapWETH9(uint256,address)\":{\"notice\":\"Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\"}},\"notice\":\"Functions to ease deposits and withdrawals of ETH\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/UniswapV3/IPeripheryPayments.sol\":\"IPeripheryPayments\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/UniswapV3/IPeripheryPayments.sol\":{\"keccak256\":\"0xedc15d14a5be9ed30744f3f8c0a3e53c3d5478464091330ba9c8acc1ddf9fcb4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b20d91bc3db69de801f8c8e6dd5b05aa42ebc73690fd9f13316e7bf71405641\",\"dweb:/ipfs/QmQX65rHNiJptDzxXX8bctavSHpYCYuPLoSriJaL2GYyDp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"refundETH()": {
								"notice": "Refunds any ETH balance held by this contract to the `msg.sender`"
							},
							"sweepToken(address,uint256,address)": {
								"notice": "Transfers the full amount of a token held by this contract to recipient"
							},
							"unwrapWETH9(uint256,address)": {
								"notice": "Unwraps the contract's WETH9 balance and sends it to recipient as ETH."
							}
						},
						"notice": "Functions to ease deposits and withdrawals of ETH",
						"version": 1
					}
				}
			},
			"interfaces/UniswapV3/IPoolInitializer.sol": {
				"IPoolInitializer": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "createAndInitializePoolIfNecessary",
							"outputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"createAndInitializePoolIfNecessary(address,address,uint24,uint160)": {
								"details": "This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool",
								"params": {
									"fee": "The fee amount of the v3 pool for the specified token pair",
									"sqrtPriceX96": "The initial square root price of the pool as a Q64.96 value",
									"token0": "The contract address of token0 of the pool",
									"token1": "The contract address of token1 of the pool"
								},
								"returns": {
									"pool": "Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary"
								}
							}
						},
						"title": "Creates and initializes V3 Pools",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"createAndInitializePoolIfNecessary(address,address,uint24,uint160)": "13ead562"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"createAndInitializePoolIfNecessary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createAndInitializePoolIfNecessary(address,address,uint24,uint160)\":{\"details\":\"This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool\",\"params\":{\"fee\":\"The fee amount of the v3 pool for the specified token pair\",\"sqrtPriceX96\":\"The initial square root price of the pool as a Q64.96 value\",\"token0\":\"The contract address of token0 of the pool\",\"token1\":\"The contract address of token1 of the pool\"},\"returns\":{\"pool\":\"Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary\"}}},\"title\":\"Creates and initializes V3 Pools\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createAndInitializePoolIfNecessary(address,address,uint24,uint160)\":{\"notice\":\"Creates a new pool if it does not exist, then initializes if not initialized\"}},\"notice\":\"Provides a method for creating and initializing a pool, if necessary, for bundling with other methods that require the pool to exist.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/UniswapV3/IPoolInitializer.sol\":\"IPoolInitializer\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/UniswapV3/IPoolInitializer.sol\":{\"keccak256\":\"0xa54fe96a33c55207b9cf3e4c4d727dc7e0212e645b2c767281b9a9026c2edaf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d082f8a8e48919d6c920d91351fddc3fd509d0446b1f45f541fdcfa0942a9196\",\"dweb:/ipfs/QmRVaquMHr4mbGBADKii6F9K9mLTtDx7omn7pPaEXJTLMw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"createAndInitializePoolIfNecessary(address,address,uint24,uint160)": {
								"notice": "Creates a new pool if it does not exist, then initializes if not initialized"
							}
						},
						"notice": "Provides a method for creating and initializing a pool, if necessary, for bundling with other methods that require the pool to exist.",
						"version": 1
					}
				}
			},
			"libraries/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"libraries/Address.sol\":203:9607  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"libraries/Address.sol\":203:9607  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208aba8ab5b1d0934d275ed6c96d12d871cbed0cc8c01112f7677f382abfe17e0e64736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208aba8ab5b1d0934d275ed6c96d12d871cbed0cc8c01112f7677f382abfe17e0e64736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 0xBA DUP11 0xB5 0xB1 0xD0 SWAP4 0x4D 0x27 0x5E 0xD6 0xC9 PUSH14 0x12D871CBED0CC8C01112F7677F38 0x2A 0xBF 0xE1 PUSH31 0xE64736F6C6343000813003300000000000000000000000000000000000000 ",
							"sourceMap": "203:9404:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208aba8ab5b1d0934d275ed6c96d12d871cbed0cc8c01112f7677f382abfe17e0e64736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 0xBA DUP11 0xB5 0xB1 0xD0 SWAP4 0x4D 0x27 0x5E 0xD6 0xC9 PUSH14 0x12D871CBED0CC8C01112F7677F38 0x2A 0xBF 0xE1 PUSH31 0xE64736F6C6343000813003300000000000000000000000000000000000000 ",
							"sourceMap": "203:9404:19:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 9607,
									"name": "PUSH #[$]",
									"source": 19,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "PUSH [$]",
									"source": 19,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "PUSH",
									"source": 19,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "CODECOPY",
									"source": 19
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "BYTE",
									"source": 19
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "PUSH",
									"source": 19,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "EQ",
									"source": 19
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "PUSH",
									"source": 19,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "PUSH",
									"source": 19,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "PUSH",
									"source": 19,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "tag",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "ADDRESS",
									"source": 19
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "PUSH",
									"source": 19,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "MSTORE8",
									"source": 19
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 203,
									"end": 9607,
									"name": "RETURN",
									"source": 19
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208aba8ab5b1d0934d275ed6c96d12d871cbed0cc8c01112f7677f382abfe17e0e64736f6c63430008130033",
									".code": [
										{
											"begin": 203,
											"end": 9607,
											"name": "PUSHDEPLOYADDRESS",
											"source": 19
										},
										{
											"begin": 203,
											"end": 9607,
											"name": "ADDRESS",
											"source": 19
										},
										{
											"begin": 203,
											"end": 9607,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 203,
											"end": 9607,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 9607,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 9607,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 203,
											"end": 9607,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 9607,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 203,
											"end": 9607,
											"name": "REVERT",
											"source": 19
										}
									]
								}
							},
							"sourceList": [
								"contracts/TimeMarket.sol",
								"interfaces/IERC165.sol",
								"interfaces/IERC20.sol",
								"interfaces/IERC20Permit.sol",
								"interfaces/IERC721.sol",
								"interfaces/IERC721Enumerable.sol",
								"interfaces/IERC721Metadata.sol",
								"interfaces/IERC721Receiver.sol",
								"interfaces/IError.sol",
								"interfaces/ITimeStruct.sol",
								"interfaces/IUniswapV3Factory.sol",
								"interfaces/UniswapV2/IUniswapV2Factory.sol",
								"interfaces/UniswapV2/IUniswapV2Router01.sol",
								"interfaces/UniswapV2/IUniswapV2Router02.sol",
								"interfaces/UniswapV3/IERC721Permit.sol",
								"interfaces/UniswapV3/INonfungiblePositionManager.sol",
								"interfaces/UniswapV3/IPeripheryImmutableState.sol",
								"interfaces/UniswapV3/IPeripheryPayments.sol",
								"interfaces/UniswapV3/IPoolInitializer.sol",
								"libraries/Address.sol",
								"libraries/PoolAddress.sol",
								"libraries/SafeERC20.sol",
								"libraries/TimeFee.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"libraries/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"libraries/Address.sol\":{\"keccak256\":\"0x0f4169fea1817f1228f6a2db5e764e2a86f357a9f42f83de1f157449bca0f1ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://244a3f17ec48680bfaadacf724e5b12030636dc8b3e59f01de1cf206f0802ad7\",\"dweb:/ipfs/QmZXNxyUx2vm7LjcwtNhwYyKgqVxmbMAM3cG5bricBmL1K\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"libraries/PoolAddress.sol": {
				"PoolAddress": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "Provides functions for deriving a pool address from the factory, tokens, and the fee",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"libraries/PoolAddress.sol\":171:1863  library PoolAddress {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"libraries/PoolAddress.sol\":171:1863  library PoolAddress {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209e03e37564e324b6cfe327ef3d504cdfdcd917267a083cea54f400f770dc03e564736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209e03e37564e324b6cfe327ef3d504cdfdcd917267a083cea54f400f770dc03e564736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 SUB 0xE3 PUSH22 0x64E324B6CFE327EF3D504CDFDCD917267A083CEA54F4 STOP 0xF7 PUSH17 0xDC03E564736F6C63430008130033000000 ",
							"sourceMap": "171:1692:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209e03e37564e324b6cfe327ef3d504cdfdcd917267a083cea54f400f770dc03e564736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 SUB 0xE3 PUSH22 0x64E324B6CFE327EF3D504CDFDCD917267A083CEA54F4 STOP 0xF7 PUSH17 0xDC03E564736F6C63430008130033000000 ",
							"sourceMap": "171:1692:20:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"computeAddress(address,struct PoolAddress.PoolKey memory)": "infinite",
								"getPoolKey(address,address,uint24)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 171,
									"end": 1863,
									"name": "PUSH #[$]",
									"source": 20,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 171,
									"end": 1863,
									"name": "PUSH [$]",
									"source": 20,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 171,
									"end": 1863,
									"name": "PUSH",
									"source": 20,
									"value": "B"
								},
								{
									"begin": 171,
									"end": 1863,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 171,
									"end": 1863,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 171,
									"end": 1863,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 171,
									"end": 1863,
									"name": "CODECOPY",
									"source": 20
								},
								{
									"begin": 171,
									"end": 1863,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 171,
									"end": 1863,
									"name": "MLOAD",
									"source": 20
								},
								{
									"begin": 171,
									"end": 1863,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 171,
									"end": 1863,
									"name": "BYTE",
									"source": 20
								},
								{
									"begin": 171,
									"end": 1863,
									"name": "PUSH",
									"source": 20,
									"value": "73"
								},
								{
									"begin": 171,
									"end": 1863,
									"name": "EQ",
									"source": 20
								},
								{
									"begin": 171,
									"end": 1863,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 171,
									"end": 1863,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 171,
									"end": 1863,
									"name": "PUSH",
									"source": 20,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 171,
									"end": 1863,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 171,
									"end": 1863,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 171,
									"end": 1863,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 171,
									"end": 1863,
									"name": "PUSH",
									"source": 20,
									"value": "4"
								},
								{
									"begin": 171,
									"end": 1863,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 171,
									"end": 1863,
									"name": "PUSH",
									"source": 20,
									"value": "24"
								},
								{
									"begin": 171,
									"end": 1863,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 171,
									"end": 1863,
									"name": "REVERT",
									"source": 20
								},
								{
									"begin": 171,
									"end": 1863,
									"name": "tag",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 171,
									"end": 1863,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 171,
									"end": 1863,
									"name": "ADDRESS",
									"source": 20
								},
								{
									"begin": 171,
									"end": 1863,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 171,
									"end": 1863,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 171,
									"end": 1863,
									"name": "PUSH",
									"source": 20,
									"value": "73"
								},
								{
									"begin": 171,
									"end": 1863,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 171,
									"end": 1863,
									"name": "MSTORE8",
									"source": 20
								},
								{
									"begin": 171,
									"end": 1863,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 171,
									"end": 1863,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 171,
									"end": 1863,
									"name": "RETURN",
									"source": 20
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209e03e37564e324b6cfe327ef3d504cdfdcd917267a083cea54f400f770dc03e564736f6c63430008130033",
									".code": [
										{
											"begin": 171,
											"end": 1863,
											"name": "PUSHDEPLOYADDRESS",
											"source": 20
										},
										{
											"begin": 171,
											"end": 1863,
											"name": "ADDRESS",
											"source": 20
										},
										{
											"begin": 171,
											"end": 1863,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 171,
											"end": 1863,
											"name": "PUSH",
											"source": 20,
											"value": "80"
										},
										{
											"begin": 171,
											"end": 1863,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 171,
											"end": 1863,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 171,
											"end": 1863,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 171,
											"end": 1863,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 171,
											"end": 1863,
											"name": "REVERT",
											"source": 20
										}
									]
								}
							},
							"sourceList": [
								"contracts/TimeMarket.sol",
								"interfaces/IERC165.sol",
								"interfaces/IERC20.sol",
								"interfaces/IERC20Permit.sol",
								"interfaces/IERC721.sol",
								"interfaces/IERC721Enumerable.sol",
								"interfaces/IERC721Metadata.sol",
								"interfaces/IERC721Receiver.sol",
								"interfaces/IError.sol",
								"interfaces/ITimeStruct.sol",
								"interfaces/IUniswapV3Factory.sol",
								"interfaces/UniswapV2/IUniswapV2Factory.sol",
								"interfaces/UniswapV2/IUniswapV2Router01.sol",
								"interfaces/UniswapV2/IUniswapV2Router02.sol",
								"interfaces/UniswapV3/IERC721Permit.sol",
								"interfaces/UniswapV3/INonfungiblePositionManager.sol",
								"interfaces/UniswapV3/IPeripheryImmutableState.sol",
								"interfaces/UniswapV3/IPeripheryPayments.sol",
								"interfaces/UniswapV3/IPoolInitializer.sol",
								"libraries/Address.sol",
								"libraries/PoolAddress.sol",
								"libraries/SafeERC20.sol",
								"libraries/TimeFee.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Provides functions for deriving a pool address from the factory, tokens, and the fee\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"libraries/PoolAddress.sol\":\"PoolAddress\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"libraries/PoolAddress.sol\":{\"keccak256\":\"0xda7193f15e5262d61ba1995c1523dda0c00fa89b6b930dee4178849fa7ff8506\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://02924be40064529f8cd7ea8e7f40ffeb8fb1e074d82be0603cf9ec2896f9310e\",\"dweb:/ipfs/QmTj3DLXF3ePVr4DcqhnqYj9vAJ9Ng98Pf3EFkG9LzTFuK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"libraries/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"libraries/SafeERC20.sol\":778:7136  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"libraries/SafeERC20.sol\":778:7136  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220cfc1a177b08d92ef6e409df06efba5d08548ab6dea2783bf77aa4be603199f3364736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cfc1a177b08d92ef6e409df06efba5d08548ab6dea2783bf77aa4be603199f3364736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF 0xC1 LOG1 PUSH24 0xB08D92EF6E409DF06EFBA5D08548AB6DEA2783BF77AA4BE6 SUB NOT SWAP16 CALLER PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "778:6358:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cfc1a177b08d92ef6e409df06efba5d08548ab6dea2783bf77aa4be603199f3364736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF 0xC1 LOG1 PUSH24 0xB08D92EF6E409DF06EFBA5D08548AB6DEA2783BF77AA4BE6 SUB NOT SWAP16 CALLER PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "778:6358:21:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safePermit(contract IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 778,
									"end": 7136,
									"name": "PUSH #[$]",
									"source": 21,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 778,
									"end": 7136,
									"name": "PUSH [$]",
									"source": 21,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 778,
									"end": 7136,
									"name": "PUSH",
									"source": 21,
									"value": "B"
								},
								{
									"begin": 778,
									"end": 7136,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 778,
									"end": 7136,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 778,
									"end": 7136,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 778,
									"end": 7136,
									"name": "CODECOPY",
									"source": 21
								},
								{
									"begin": 778,
									"end": 7136,
									"name": "DUP1",
									"source": 21
								},
								{
									"begin": 778,
									"end": 7136,
									"name": "MLOAD",
									"source": 21
								},
								{
									"begin": 778,
									"end": 7136,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 778,
									"end": 7136,
									"name": "BYTE",
									"source": 21
								},
								{
									"begin": 778,
									"end": 7136,
									"name": "PUSH",
									"source": 21,
									"value": "73"
								},
								{
									"begin": 778,
									"end": 7136,
									"name": "EQ",
									"source": 21
								},
								{
									"begin": 778,
									"end": 7136,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "1"
								},
								{
									"begin": 778,
									"end": 7136,
									"name": "JUMPI",
									"source": 21
								},
								{
									"begin": 778,
									"end": 7136,
									"name": "PUSH",
									"source": 21,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 778,
									"end": 7136,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 778,
									"end": 7136,
									"name": "MSTORE",
									"source": 21
								},
								{
									"begin": 778,
									"end": 7136,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 778,
									"end": 7136,
									"name": "PUSH",
									"source": 21,
									"value": "4"
								},
								{
									"begin": 778,
									"end": 7136,
									"name": "MSTORE",
									"source": 21
								},
								{
									"begin": 778,
									"end": 7136,
									"name": "PUSH",
									"source": 21,
									"value": "24"
								},
								{
									"begin": 778,
									"end": 7136,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 778,
									"end": 7136,
									"name": "REVERT",
									"source": 21
								},
								{
									"begin": 778,
									"end": 7136,
									"name": "tag",
									"source": 21,
									"value": "1"
								},
								{
									"begin": 778,
									"end": 7136,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 778,
									"end": 7136,
									"name": "ADDRESS",
									"source": 21
								},
								{
									"begin": 778,
									"end": 7136,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 778,
									"end": 7136,
									"name": "MSTORE",
									"source": 21
								},
								{
									"begin": 778,
									"end": 7136,
									"name": "PUSH",
									"source": 21,
									"value": "73"
								},
								{
									"begin": 778,
									"end": 7136,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 778,
									"end": 7136,
									"name": "MSTORE8",
									"source": 21
								},
								{
									"begin": 778,
									"end": 7136,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 778,
									"end": 7136,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 778,
									"end": 7136,
									"name": "RETURN",
									"source": 21
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cfc1a177b08d92ef6e409df06efba5d08548ab6dea2783bf77aa4be603199f3364736f6c63430008130033",
									".code": [
										{
											"begin": 778,
											"end": 7136,
											"name": "PUSHDEPLOYADDRESS",
											"source": 21
										},
										{
											"begin": 778,
											"end": 7136,
											"name": "ADDRESS",
											"source": 21
										},
										{
											"begin": 778,
											"end": 7136,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 778,
											"end": 7136,
											"name": "PUSH",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 778,
											"end": 7136,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 778,
											"end": 7136,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 778,
											"end": 7136,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 778,
											"end": 7136,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 778,
											"end": 7136,
											"name": "REVERT",
											"source": 21
										}
									]
								}
							},
							"sourceList": [
								"contracts/TimeMarket.sol",
								"interfaces/IERC165.sol",
								"interfaces/IERC20.sol",
								"interfaces/IERC20Permit.sol",
								"interfaces/IERC721.sol",
								"interfaces/IERC721Enumerable.sol",
								"interfaces/IERC721Metadata.sol",
								"interfaces/IERC721Receiver.sol",
								"interfaces/IError.sol",
								"interfaces/ITimeStruct.sol",
								"interfaces/IUniswapV3Factory.sol",
								"interfaces/UniswapV2/IUniswapV2Factory.sol",
								"interfaces/UniswapV2/IUniswapV2Router01.sol",
								"interfaces/UniswapV2/IUniswapV2Router02.sol",
								"interfaces/UniswapV3/IERC721Permit.sol",
								"interfaces/UniswapV3/INonfungiblePositionManager.sol",
								"interfaces/UniswapV3/IPeripheryImmutableState.sol",
								"interfaces/UniswapV3/IPeripheryPayments.sol",
								"interfaces/UniswapV3/IPoolInitializer.sol",
								"libraries/Address.sol",
								"libraries/PoolAddress.sol",
								"libraries/SafeERC20.sol",
								"libraries/TimeFee.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"libraries/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/IERC20.sol\":{\"keccak256\":\"0xa426add89e9b4785ddeeb07b4d9352b57de8b4cb314c8cb8f0d5898938bd8de9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09852a830ad29d33cfdf74e7035853c68e43e1a8c242b25db9d656a074a54e6d\",\"dweb:/ipfs/QmeRSfQwWr3vyP2uJxnjybtPYLMiD17E51d4eMhXQh93R1\"]},\"interfaces/IERC20Permit.sol\":{\"keccak256\":\"0xc51a927b9d9ff62cf4c237f7f197827b90c460786c855c527007c02a94f23154\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d1107bf21355e8518d9fdcf1aa7052de7e5fc6d867d86d87b61b43667813cc1d\",\"dweb:/ipfs/QmZG3AQa61MLFWmovNyuzv3iCBPnFHGV7E7CimxLwpAwKt\"]},\"libraries/Address.sol\":{\"keccak256\":\"0x0f4169fea1817f1228f6a2db5e764e2a86f357a9f42f83de1f157449bca0f1ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://244a3f17ec48680bfaadacf724e5b12030636dc8b3e59f01de1cf206f0802ad7\",\"dweb:/ipfs/QmZXNxyUx2vm7LjcwtNhwYyKgqVxmbMAM3cG5bricBmL1K\"]},\"libraries/SafeERC20.sol\":{\"keccak256\":\"0xe74183ce288c892718941897cf193167013ef062470ea7fc7f0e74c23521cdd1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75be313f96388535ff46fc29a55ed358e24e887c5706ea595ef2ed95c1d58e03\",\"dweb:/ipfs/QmReMXbvdgk5wZtn3mrjsDGLKFzfbBxG6HJBELLsaAKXkS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"libraries/TimeFee.sol": {
				"TimeFee": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"libraries/TimeFee.sol\":59:683  library TimeFee{... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"libraries/TimeFee.sol\":59:683  library TimeFee{... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b643603d3f61444de72c4d2a3656381586395d096189df0b0226cf24510006f764736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b643603d3f61444de72c4d2a3656381586395d096189df0b0226cf24510006f764736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 NUMBER PUSH1 0x3D EXTCODEHASH PUSH2 0x444D 0xE7 0x2C 0x4D 0x2A CALLDATASIZE JUMP CODESIZE ISZERO DUP7 CODECOPY 0x5D MULMOD PUSH2 0x89DF SIGNEXTEND MUL 0x26 0xCF 0x24 MLOAD STOP MOD 0xF7 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "59:624:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b643603d3f61444de72c4d2a3656381586395d096189df0b0226cf24510006f764736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 NUMBER PUSH1 0x3D EXTCODEHASH PUSH2 0x444D 0xE7 0x2C 0x4D 0x2A CALLDATASIZE JUMP CODESIZE ISZERO DUP7 CODECOPY 0x5D MULMOD PUSH2 0x89DF SIGNEXTEND MUL 0x26 0xCF 0x24 MLOAD STOP MOD 0xF7 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "59:624:22:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"fee(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 59,
									"end": 683,
									"name": "PUSH #[$]",
									"source": 22,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 59,
									"end": 683,
									"name": "PUSH [$]",
									"source": 22,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 59,
									"end": 683,
									"name": "PUSH",
									"source": 22,
									"value": "B"
								},
								{
									"begin": 59,
									"end": 683,
									"name": "DUP3",
									"source": 22
								},
								{
									"begin": 59,
									"end": 683,
									"name": "DUP3",
									"source": 22
								},
								{
									"begin": 59,
									"end": 683,
									"name": "DUP3",
									"source": 22
								},
								{
									"begin": 59,
									"end": 683,
									"name": "CODECOPY",
									"source": 22
								},
								{
									"begin": 59,
									"end": 683,
									"name": "DUP1",
									"source": 22
								},
								{
									"begin": 59,
									"end": 683,
									"name": "MLOAD",
									"source": 22
								},
								{
									"begin": 59,
									"end": 683,
									"name": "PUSH",
									"source": 22,
									"value": "0"
								},
								{
									"begin": 59,
									"end": 683,
									"name": "BYTE",
									"source": 22
								},
								{
									"begin": 59,
									"end": 683,
									"name": "PUSH",
									"source": 22,
									"value": "73"
								},
								{
									"begin": 59,
									"end": 683,
									"name": "EQ",
									"source": 22
								},
								{
									"begin": 59,
									"end": 683,
									"name": "PUSH [tag]",
									"source": 22,
									"value": "1"
								},
								{
									"begin": 59,
									"end": 683,
									"name": "JUMPI",
									"source": 22
								},
								{
									"begin": 59,
									"end": 683,
									"name": "PUSH",
									"source": 22,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 59,
									"end": 683,
									"name": "PUSH",
									"source": 22,
									"value": "0"
								},
								{
									"begin": 59,
									"end": 683,
									"name": "MSTORE",
									"source": 22
								},
								{
									"begin": 59,
									"end": 683,
									"name": "PUSH",
									"source": 22,
									"value": "0"
								},
								{
									"begin": 59,
									"end": 683,
									"name": "PUSH",
									"source": 22,
									"value": "4"
								},
								{
									"begin": 59,
									"end": 683,
									"name": "MSTORE",
									"source": 22
								},
								{
									"begin": 59,
									"end": 683,
									"name": "PUSH",
									"source": 22,
									"value": "24"
								},
								{
									"begin": 59,
									"end": 683,
									"name": "PUSH",
									"source": 22,
									"value": "0"
								},
								{
									"begin": 59,
									"end": 683,
									"name": "REVERT",
									"source": 22
								},
								{
									"begin": 59,
									"end": 683,
									"name": "tag",
									"source": 22,
									"value": "1"
								},
								{
									"begin": 59,
									"end": 683,
									"name": "JUMPDEST",
									"source": 22
								},
								{
									"begin": 59,
									"end": 683,
									"name": "ADDRESS",
									"source": 22
								},
								{
									"begin": 59,
									"end": 683,
									"name": "PUSH",
									"source": 22,
									"value": "0"
								},
								{
									"begin": 59,
									"end": 683,
									"name": "MSTORE",
									"source": 22
								},
								{
									"begin": 59,
									"end": 683,
									"name": "PUSH",
									"source": 22,
									"value": "73"
								},
								{
									"begin": 59,
									"end": 683,
									"name": "DUP2",
									"source": 22
								},
								{
									"begin": 59,
									"end": 683,
									"name": "MSTORE8",
									"source": 22
								},
								{
									"begin": 59,
									"end": 683,
									"name": "DUP3",
									"source": 22
								},
								{
									"begin": 59,
									"end": 683,
									"name": "DUP2",
									"source": 22
								},
								{
									"begin": 59,
									"end": 683,
									"name": "RETURN",
									"source": 22
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b643603d3f61444de72c4d2a3656381586395d096189df0b0226cf24510006f764736f6c63430008130033",
									".code": [
										{
											"begin": 59,
											"end": 683,
											"name": "PUSHDEPLOYADDRESS",
											"source": 22
										},
										{
											"begin": 59,
											"end": 683,
											"name": "ADDRESS",
											"source": 22
										},
										{
											"begin": 59,
											"end": 683,
											"name": "EQ",
											"source": 22
										},
										{
											"begin": 59,
											"end": 683,
											"name": "PUSH",
											"source": 22,
											"value": "80"
										},
										{
											"begin": 59,
											"end": 683,
											"name": "PUSH",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 59,
											"end": 683,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 59,
											"end": 683,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 59,
											"end": 683,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 59,
											"end": 683,
											"name": "REVERT",
											"source": 22
										}
									]
								}
							},
							"sourceList": [
								"contracts/TimeMarket.sol",
								"interfaces/IERC165.sol",
								"interfaces/IERC20.sol",
								"interfaces/IERC20Permit.sol",
								"interfaces/IERC721.sol",
								"interfaces/IERC721Enumerable.sol",
								"interfaces/IERC721Metadata.sol",
								"interfaces/IERC721Receiver.sol",
								"interfaces/IError.sol",
								"interfaces/ITimeStruct.sol",
								"interfaces/IUniswapV3Factory.sol",
								"interfaces/UniswapV2/IUniswapV2Factory.sol",
								"interfaces/UniswapV2/IUniswapV2Router01.sol",
								"interfaces/UniswapV2/IUniswapV2Router02.sol",
								"interfaces/UniswapV3/IERC721Permit.sol",
								"interfaces/UniswapV3/INonfungiblePositionManager.sol",
								"interfaces/UniswapV3/IPeripheryImmutableState.sol",
								"interfaces/UniswapV3/IPeripheryPayments.sol",
								"interfaces/UniswapV3/IPoolInitializer.sol",
								"libraries/Address.sol",
								"libraries/PoolAddress.sol",
								"libraries/SafeERC20.sol",
								"libraries/TimeFee.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"libraries/TimeFee.sol\":\"TimeFee\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"libraries/TimeFee.sol\":{\"keccak256\":\"0x263efba43eaec339f5385a6c25158219d00edce75157d7cd759f3032725fcc79\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bcb2fee6d1fa020c5a58f9de9dace4b0c09339c784b1b7888ef78ffd52faa7c0\",\"dweb:/ipfs/QmVjYwXXg8QyvTh1dyTWp41qjyrajaqyXuATtMJqN4SRF7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/TimeMarket.sol": {
				"ast": {
					"absolutePath": "contracts/TimeMarket.sol",
					"exportedSymbols": {
						"Address": [
							2379
						],
						"IERC165": [
							872
						],
						"IERC20": [
							950
						],
						"IERC20Permit": [
							986
						],
						"IERC721": [
							1103
						],
						"IERC721Enumerable": [
							1134
						],
						"IERC721Metadata": [
							1161
						],
						"IERC721Permit": [
							1789
						],
						"IERC721Receiver": [
							1179
						],
						"IError": [
							1192
						],
						"INonfungiblePositionManager": [
							1988
						],
						"IPeripheryImmutableState": [
							2004
						],
						"IPeripheryPayments": [
							2030
						],
						"IPoolInitializer": [
							2049
						],
						"ITimeStruct": [
							1212
						],
						"IUniswapV2Factory": [
							1358
						],
						"IUniswapV2Router01": [
							1666
						],
						"IUniswapV2Router02": [
							1754
						],
						"IUniswapV3Factory": [
							1295
						],
						"PoolAddress": [
							2479
						],
						"SafeERC20": [
							2858
						],
						"TimeFee": [
							2907
						],
						"TimeMarket": [
							860
						]
					},
					"id": 861,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "31:23:0"
						},
						{
							"id": 2,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "56:19:0"
						},
						{
							"absolutePath": "libraries/SafeERC20.sol",
							"file": "../libraries/SafeERC20.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 861,
							"sourceUnit": 2859,
							"src": "77:36:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/ITimeStruct.sol",
							"file": "../interfaces/ITimeStruct.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 861,
							"sourceUnit": 1213,
							"src": "115:39:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/IError.sol",
							"file": "../interfaces/IError.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 861,
							"sourceUnit": 1193,
							"src": "156:34:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "libraries/TimeFee.sol",
							"file": "../libraries/TimeFee.sol",
							"id": 6,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 861,
							"sourceUnit": 2908,
							"src": "192:34:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/IERC721Receiver.sol",
							"file": "../interfaces/IERC721Receiver.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 861,
							"sourceUnit": 1180,
							"src": "244:43:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/IUniswapV3Factory.sol",
							"file": "../interfaces/IUniswapV3Factory.sol",
							"id": 8,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 861,
							"sourceUnit": 1296,
							"src": "289:45:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/UniswapV3/INonfungiblePositionManager.sol",
							"file": "../interfaces/UniswapV3/INonfungiblePositionManager.sol",
							"id": 9,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 861,
							"sourceUnit": 1989,
							"src": "336:65:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/UniswapV2/IUniswapV2Factory.sol",
							"file": "../interfaces/UniswapV2/IUniswapV2Factory.sol",
							"id": 10,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 861,
							"sourceUnit": 1359,
							"src": "419:55:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/UniswapV2/IUniswapV2Router02.sol",
							"file": "../interfaces/UniswapV2/IUniswapV2Router02.sol",
							"id": 11,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 861,
							"sourceUnit": 1755,
							"src": "476:56:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 12,
										"name": "ITimeStruct",
										"nameLocations": [
											"559:11:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1212,
										"src": "559:11:0"
									},
									"id": 13,
									"nodeType": "InheritanceSpecifier",
									"src": "559:11:0"
								},
								{
									"baseName": {
										"id": 14,
										"name": "IError",
										"nameLocations": [
											"572:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1192,
										"src": "572:6:0"
									},
									"id": 15,
									"nodeType": "InheritanceSpecifier",
									"src": "572:6:0"
								}
							],
							"canonicalName": "TimeMarket",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 860,
							"linearizedBaseContracts": [
								860,
								1192,
								1212
							],
							"name": "TimeMarket",
							"nameLocation": "545:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 19,
									"libraryName": {
										"id": 16,
										"name": "SafeERC20",
										"nameLocations": [
											"591:9:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2858,
										"src": "591:9:0"
									},
									"nodeType": "UsingForDirective",
									"src": "585:27:0",
									"typeName": {
										"id": 18,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 17,
											"name": "IERC20",
											"nameLocations": [
												"605:6:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 950,
											"src": "605:6:0"
										},
										"referencedDeclaration": 950,
										"src": "605:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$950",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"id": 21,
									"mutability": "mutable",
									"name": "clearingTime",
									"nameLocation": "633:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 860,
									"src": "618:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint56",
										"typeString": "uint56"
									},
									"typeName": {
										"id": 20,
										"name": "uint56",
										"nodeType": "ElementaryTypeName",
										"src": "618:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint56",
											"typeString": "uint56"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 23,
									"mutability": "mutable",
									"name": "id",
									"nameLocation": "659:2:0",
									"nodeType": "VariableDeclaration",
									"scope": 860,
									"src": "652:9:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 22,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "652:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 25,
									"mutability": "mutable",
									"name": "airdropToken",
									"nameLocation": "684:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 860,
									"src": "668:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 24,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "668:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 27,
									"mutability": "mutable",
									"name": "uniV2Factory",
									"nameLocation": "735:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 860,
									"src": "719:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 26,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "719:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 29,
									"mutability": "mutable",
									"name": "uniV2Router02",
									"nameLocation": "770:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 860,
									"src": "754:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 28,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "754:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 32,
									"mutability": "mutable",
									"name": "uniV3Factory",
									"nameLocation": "822:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 860,
									"src": "806:71:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 30,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "806:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307831463938343331633861443938353233363331414534613539663236373334366561333146393834",
										"id": 31,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "835:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x1F98431c8aD98523631AE4a59f267346ea31F984"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 35,
									"mutability": "mutable",
									"name": "NonfungiblePositionManager",
									"nameLocation": "900:26:0",
									"nodeType": "VariableDeclaration",
									"scope": 860,
									"src": "884:85:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 33,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "884:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307843333634343262346134353232453837313339394344373137614244443834374162313146453838",
										"id": 34,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "927:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xC36442b4a4522E871399CD717aBDD847Ab11FE88"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1031:90:0",
										"statements": [
											{
												"expression": {
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 42,
														"name": "airdropToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "1042:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 43,
														"name": "_airdropToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "1055:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1042:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 45,
												"nodeType": "ExpressionStatement",
												"src": "1042:26:0"
											},
											{
												"expression": {
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 46,
														"name": "clearingTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 21,
														"src": "1079:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint56",
															"typeString": "uint56"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 49,
																"name": "_clearingTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 39,
																"src": "1099:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1092:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint56_$",
																"typeString": "type(uint56)"
															},
															"typeName": {
																"id": 47,
																"name": "uint56",
																"nodeType": "ElementaryTypeName",
																"src": "1092:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 50,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1092:21:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint56",
															"typeString": "uint56"
														}
													},
													"src": "1079:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint56",
														"typeString": "uint56"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1079:34:0"
											}
										]
									},
									"id": 54,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "_airdropToken",
												"nameLocation": "998:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "990:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "990:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "_clearingTime",
												"nameLocation": "1017:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1012:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1012:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "989:42:0"
									},
									"returnParameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1031:0:0"
									},
									"scope": 860,
									"src": "978:143:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 59,
									"mutability": "mutable",
									"name": "_tradeMes",
									"nameLocation": "1162:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 860,
									"src": "1129:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_tradeMes_$1211_storage_$",
										"typeString": "mapping(uint64 => struct ITimeStruct.tradeMes)"
									},
									"typeName": {
										"id": 58,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 55,
											"name": "uint64",
											"nodeType": "ElementaryTypeName",
											"src": "1137:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											}
										},
										"nodeType": "Mapping",
										"src": "1129:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_tradeMes_$1211_storage_$",
											"typeString": "mapping(uint64 => struct ITimeStruct.tradeMes)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 57,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 56,
												"name": "tradeMes",
												"nameLocations": [
													"1145:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1211,
												"src": "1145:8:0"
											},
											"referencedDeclaration": 1211,
											"src": "1145:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_tradeMes_$1211_storage_ptr",
												"typeString": "struct ITimeStruct.tradeMes"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 65,
									"mutability": "mutable",
									"name": "ifInject",
									"nameLocation": "1308:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 860,
									"src": "1258:58:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(uint256 => bool))"
									},
									"typeName": {
										"id": 64,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 60,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1266:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1258:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(uint256 => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 63,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 61,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1285:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "1277:22:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
												"typeString": "mapping(uint256 => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 62,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1294:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "59de2f60",
									"id": 71,
									"mutability": "mutable",
									"name": "userIfWithdraw1",
									"nameLocation": "1431:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 860,
									"src": "1382:64:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(uint256 => bool))"
									},
									"typeName": {
										"id": 70,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 66,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1390:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1382:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(uint256 => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 69,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 67,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1409:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "1401:22:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
												"typeString": "mapping(uint256 => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 68,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1418:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "df0905c6",
									"id": 77,
									"mutability": "mutable",
									"name": "userIfWithdraw2",
									"nameLocation": "1555:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 860,
									"src": "1506:64:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(uint256 => bool))"
									},
									"typeName": {
										"id": 76,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 72,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1514:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1506:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(uint256 => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 75,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 73,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1533:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "1525:22:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
												"typeString": "mapping(uint256 => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 74,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1542:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b8d7f980",
									"id": 83,
									"mutability": "mutable",
									"name": "userIfWithdraw3",
									"nameLocation": "1679:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 860,
									"src": "1630:64:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(uint256 => bool))"
									},
									"typeName": {
										"id": 82,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 78,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1638:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1630:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(uint256 => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 81,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 79,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1657:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "1649:22:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
												"typeString": "mapping(uint256 => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 80,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1666:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fc993ea8",
									"id": 89,
									"mutability": "mutable",
									"name": "userIfWithdraw4",
									"nameLocation": "1790:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 860,
									"src": "1741:64:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(uint256 => bool))"
									},
									"typeName": {
										"id": 88,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 84,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1749:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1741:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(uint256 => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 87,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 85,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1768:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "1760:22:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
												"typeString": "mapping(uint256 => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 86,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1777:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 194,
										"nodeType": "Block",
										"src": "1923:1173:0",
										"statements": [
											{
												"assignments": [
													101
												],
												"declarations": [
													{
														"constant": false,
														"id": 101,
														"mutability": "mutable",
														"name": "total",
														"nameLocation": "1939:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 194,
														"src": "1934:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 100,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1934:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 105,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													},
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 102,
														"name": "_buyAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 95,
														"src": "1945:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 103,
														"name": "_buyPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "1956:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "1945:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1934:31:0"
											},
											{
												"assignments": [
													107
												],
												"declarations": [
													{
														"constant": false,
														"id": 107,
														"mutability": "mutable",
														"name": "thisPool",
														"nameLocation": "2060:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 194,
														"src": "2052:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 106,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2052:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 113,
												"initialValue": {
													"arguments": [
														{
															"id": 109,
															"name": "_tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 91,
															"src": "2084:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 110,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 93,
															"src": "2098:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "31303030",
															"id": 111,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2105:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															},
															"value": "1000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															}
														],
														"id": 108,
														"name": "getPoolAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 769,
														"src": "2069:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint24_$returns$_t_address_$",
															"typeString": "function (address,address,uint24) view returns (address)"
														}
													},
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2069:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2052:58:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 114,
														"name": "total",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2124:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "313030",
														"id": 115,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2130:9:0",
														"subdenomination": "ether",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100000000000000000000_by_1",
															"typeString": "int_const 100000000000000000000"
														},
														"value": "100"
													},
													"src": "2124:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 121,
												"nodeType": "IfStatement",
												"src": "2121:70:0",
												"trueBody": {
													"id": 120,
													"nodeType": "Block",
													"src": "2140:51:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 117,
																	"name": "NotEnoughAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1183,
																	"src": "2162:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 118,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2162:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 119,
															"nodeType": "RevertStatement",
															"src": "2155:24:0"
														}
													]
												}
											},
											{
												"assignments": [
													124
												],
												"declarations": [
													{
														"constant": false,
														"id": 124,
														"mutability": "mutable",
														"name": "newTradeMes",
														"nameLocation": "2217:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 194,
														"src": "2201:27:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_tradeMes_$1211_memory_ptr",
															"typeString": "struct ITimeStruct.tradeMes"
														},
														"typeName": {
															"id": 123,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 122,
																"name": "tradeMes",
																"nameLocations": [
																	"2201:8:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1211,
																"src": "2201:8:0"
															},
															"referencedDeclaration": 1211,
															"src": "2201:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_tradeMes_$1211_storage_ptr",
																"typeString": "struct ITimeStruct.tradeMes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 143,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2264:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														{
															"id": 127,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "2288:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 130,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "2320:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2326:9:0",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "2320:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 129,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2313:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint56_$",
																	"typeString": "type(uint56)"
																},
																"typeName": {
																	"id": 128,
																	"name": "uint56",
																	"nodeType": "ElementaryTypeName",
																	"src": "2313:6:0",
																	"typeDescriptions": {}
																}
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2313:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint56",
																"typeString": "uint56"
															}
														},
														{
															"id": 133,
															"name": "_buyAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "2366:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														{
															"id": 134,
															"name": "_buyPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 97,
															"src": "2400:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														{
															"id": 135,
															"name": "_tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 91,
															"src": "2437:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 136,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2478:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2482:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2478:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 140,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2525:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TimeMarket_$860",
																		"typeString": "contract TimeMarket"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TimeMarket_$860",
																		"typeString": "contract TimeMarket"
																	}
																],
																"id": 139,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2517:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 138,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2517:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2517:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															{
																"typeIdentifier": "t_uint56",
																"typeString": "uint56"
															},
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															},
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 125,
														"name": "tradeMes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1211,
														"src": "2229:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_tradeMes_$1211_storage_ptr_$",
															"typeString": "type(struct ITimeStruct.tradeMes storage pointer)"
														}
													},
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"2253:10:0",
														"2280:7:0",
														"2305:7:0",
														"2351:14:0",
														"2391:8:0",
														"2424:12:0",
														"2465:12:0",
														"2503:13:0"
													],
													"names": [
														"tradeState",
														"tradeId",
														"buyTime",
														"buyTotalAmount",
														"buyPrice",
														"tokenAddress",
														"buyerAddress",
														"solderAddress"
													],
													"nodeType": "FunctionCall",
													"src": "2229:313:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_tradeMes_$1211_memory_ptr",
														"typeString": "struct ITimeStruct.tradeMes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2201:341:0"
											},
											{
												"expression": {
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 144,
															"name": "_tradeMes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 59,
															"src": "2553:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_tradeMes_$1211_storage_$",
																"typeString": "mapping(uint64 => struct ITimeStruct.tradeMes storage ref)"
															}
														},
														"id": 146,
														"indexExpression": {
															"id": 145,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "2563:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2553:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_tradeMes_$1211_storage",
															"typeString": "struct ITimeStruct.tradeMes storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 147,
														"name": "newTradeMes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 124,
														"src": "2567:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_tradeMes_$1211_memory_ptr",
															"typeString": "struct ITimeStruct.tradeMes memory"
														}
													},
													"src": "2553:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_tradeMes_$1211_storage",
														"typeString": "struct ITimeStruct.tradeMes storage ref"
													}
												},
												"id": 149,
												"nodeType": "ExpressionStatement",
												"src": "2553:25:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 154,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2664:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 155,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2668:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2664:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 158,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2683:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TimeMarket_$860",
																		"typeString": "contract TimeMarket"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TimeMarket_$860",
																		"typeString": "contract TimeMarket"
																	}
																],
																"id": 157,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2675:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 156,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2675:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2675:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 160,
															"name": "total",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2689:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 151,
																	"name": "_tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 91,
																	"src": "2632:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 150,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 950,
																"src": "2625:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$950_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2625:21:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$950",
																"typeString": "contract IERC20"
															}
														},
														"id": 153,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2647:16:0",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2542,
														"src": "2625:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$950_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$950_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2625:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "2625:70:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 167,
															"name": "thisPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 107,
															"src": "2804:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 168,
															"name": "total",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2813:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 164,
																	"name": "_tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 91,
																	"src": "2777:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 163,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 950,
																"src": "2770:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$950_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2770:21:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$950",
																"typeString": "contract IERC20"
															}
														},
														"id": 166,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2792:11:0",
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2586,
														"src": "2770:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$950_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$950_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2770:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 170,
												"nodeType": "ExpressionStatement",
												"src": "2770:49:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 175,
															"name": "_tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 91,
															"src": "2891:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 176,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 93,
															"src": "2919:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 177,
															"name": "total",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2940:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 178,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2960:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "31303030",
															"id": 179,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2976:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															},
															"value": "1000"
														},
														{
															"hexValue": "30",
															"id": 180,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2995:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"arguments": [
																{
																	"id": 183,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3019:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TimeMarket_$860",
																		"typeString": "contract TimeMarket"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TimeMarket_$860",
																		"typeString": "contract TimeMarket"
																	}
																],
																"id": 182,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3011:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 181,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3011:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3011:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 188,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 185,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "3039:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 186,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3045:9:0",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "3039:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 187,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3055:7:0",
																"subdenomination": "hours",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3600_by_1",
																	"typeString": "int_const 3600"
																},
																"value": "1"
															},
															"src": "3039:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 172,
																	"name": "uniV2Router02",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 29,
																	"src": "2849:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 171,
																"name": "IUniswapV2Router02",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1754,
																"src": "2830:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUniswapV2Router02_$1754_$",
																	"typeString": "type(contract IUniswapV2Router02)"
																}
															},
															"id": 173,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2830:33:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Router02_$1754",
																"typeString": "contract IUniswapV2Router02"
															}
														},
														"id": 174,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2864:12:0",
														"memberName": "addLiquidity",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1395,
														"src": "2830:46:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "function (address,address,uint256,uint256,uint256,uint256,address,uint256) external returns (uint256,uint256,uint256)"
														}
													},
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2830:243:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256)"
													}
												},
												"id": 190,
												"nodeType": "ExpressionStatement",
												"src": "2830:243:0"
											},
											{
												"expression": {
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "3084:4:0",
													"subExpression": {
														"id": 191,
														"name": "id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "3084:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 193,
												"nodeType": "ExpressionStatement",
												"src": "3084:4:0"
											}
										]
									},
									"functionSelector": "0d45431d",
									"id": 195,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buy",
									"nameLocation": "1837:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nameLocation": "1849:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "1841:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 90,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1841:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "1871:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "1863:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1863:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "_buyAmount",
												"nameLocation": "1886:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "1878:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 94,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "_buyPrice",
												"nameLocation": "1905:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "1897:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 96,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1897:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1840:75:0"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1923:0:0"
									},
									"scope": 860,
									"src": "1828:1268:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 306,
										"nodeType": "Block",
										"src": "3175:1230:0",
										"statements": [
											{
												"assignments": [
													204
												],
												"declarations": [
													{
														"constant": false,
														"id": 204,
														"mutability": "mutable",
														"name": "maxTradeMes",
														"nameLocation": "3202:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 306,
														"src": "3186:27:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_tradeMes_$1211_memory_ptr",
															"typeString": "struct ITimeStruct.tradeMes"
														},
														"typeName": {
															"id": 203,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 202,
																"name": "tradeMes",
																"nameLocations": [
																	"3186:8:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1211,
																"src": "3186:8:0"
															},
															"referencedDeclaration": 1211,
															"src": "3186:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_tradeMes_$1211_storage_ptr",
																"typeString": "struct ITimeStruct.tradeMes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 208,
												"initialValue": {
													"baseExpression": {
														"id": 205,
														"name": "_tradeMes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 59,
														"src": "3214:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_tradeMes_$1211_storage_$",
															"typeString": "mapping(uint64 => struct ITimeStruct.tradeMes storage ref)"
														}
													},
													"id": 207,
													"indexExpression": {
														"id": 206,
														"name": "_id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 197,
														"src": "3224:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3214:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_tradeMes_$1211_storage",
														"typeString": "struct ITimeStruct.tradeMes storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3186:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 210,
																	"name": "maxTradeMes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 204,
																	"src": "3247:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_tradeMes_$1211_memory_ptr",
																		"typeString": "struct ITimeStruct.tradeMes memory"
																	}
																},
																"id": 211,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3259:10:0",
																"memberName": "tradeState",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1196,
																"src": "3247:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "31",
																"id": 212,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3271:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "3247:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 209,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3239:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3239:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "ExpressionStatement",
												"src": "3239:34:0"
											},
											{
												"assignments": [
													217
												],
												"declarations": [
													{
														"constant": false,
														"id": 217,
														"mutability": "mutable",
														"name": "promiseStableToken",
														"nameLocation": "3320:18:0",
														"nodeType": "VariableDeclaration",
														"scope": 306,
														"src": "3312:26:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 216,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3312:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 220,
												"initialValue": {
													"expression": {
														"id": 218,
														"name": "maxTradeMes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 204,
														"src": "3339:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_tradeMes_$1211_memory_ptr",
															"typeString": "struct ITimeStruct.tradeMes memory"
														}
													},
													"id": 219,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3351:12:0",
													"memberName": "tokenAddress",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1206,
													"src": "3339:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3312:51:0"
											},
											{
												"assignments": [
													222
												],
												"declarations": [
													{
														"constant": false,
														"id": 222,
														"mutability": "mutable",
														"name": "thisPool",
														"nameLocation": "3464:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 306,
														"src": "3456:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 221,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3456:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 228,
												"initialValue": {
													"arguments": [
														{
															"id": 224,
															"name": "promiseStableToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "3488:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 225,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "3507:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "31303030",
															"id": 226,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3514:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															},
															"value": "1000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															}
														],
														"id": 223,
														"name": "getPoolAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 769,
														"src": "3473:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint24_$returns$_t_address_$",
															"typeString": "function (address,address,uint24) view returns (address)"
														}
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3473:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3456:63:0"
											},
											{
												"assignments": [
													230
												],
												"declarations": [
													{
														"constant": false,
														"id": 230,
														"mutability": "mutable",
														"name": "penalAmount",
														"nameLocation": "3535:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 306,
														"src": "3530:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 229,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3530:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 237,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 232,
																"name": "maxTradeMes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 204,
																"src": "3556:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_tradeMes_$1211_memory_ptr",
																	"typeString": "struct ITimeStruct.tradeMes memory"
																}
															},
															"id": 233,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3568:8:0",
															"memberName": "buyPrice",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1204,
															"src": "3556:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														{
															"expression": {
																"id": 234,
																"name": "maxTradeMes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 204,
																"src": "3578:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_tradeMes_$1211_memory_ptr",
																	"typeString": "struct ITimeStruct.tradeMes memory"
																}
															},
															"id": 235,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3590:14:0",
															"memberName": "buyTotalAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1202,
															"src": "3578:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															},
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														],
														"id": 231,
														"name": "getPenal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 859,
														"src": "3547:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint128_$_t_uint128_$returns$_t_uint256_$",
															"typeString": "function (uint128,uint128) pure returns (uint256)"
														}
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3547:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3530:75:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 242,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3701:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3705:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3701:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 246,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3734:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TimeMarket_$860",
																		"typeString": "contract TimeMarket"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TimeMarket_$860",
																		"typeString": "contract TimeMarket"
																	}
																],
																"id": 245,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3726:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 244,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3726:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3726:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 248,
															"name": "penalAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "3754:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 239,
																	"name": "promiseStableToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 217,
																	"src": "3650:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 238,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 950,
																"src": "3643:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$950_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 240,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3643:26:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$950",
																"typeString": "contract IERC20"
															}
														},
														"id": 241,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3670:16:0",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2542,
														"src": "3643:43:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$950_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$950_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3643:133:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 250,
												"nodeType": "ExpressionStatement",
												"src": "3643:133:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 255,
															"name": "thisPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 222,
															"src": "3890:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 256,
															"name": "penalAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "3899:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 252,
																	"name": "promiseStableToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 217,
																	"src": "3858:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 251,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 950,
																"src": "3851:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$950_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3851:26:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$950",
																"typeString": "contract IERC20"
															}
														},
														"id": 254,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3878:11:0",
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2586,
														"src": "3851:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$950_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$950_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3851:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 258,
												"nodeType": "ExpressionStatement",
												"src": "3851:60:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 265,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3974:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TimeMarket_$860",
																		"typeString": "contract TimeMarket"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TimeMarket_$860",
																		"typeString": "contract TimeMarket"
																	}
																],
																"id": 264,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3966:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 263,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3966:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3966:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 267,
															"name": "thisPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 222,
															"src": "3980:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 268,
															"name": "penalAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "3989:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 260,
																	"name": "promiseStableToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 217,
																	"src": "3929:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 259,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 950,
																"src": "3922:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$950_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3922:26:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$950",
																"typeString": "contract IERC20"
															}
														},
														"id": 262,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3949:16:0",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2542,
														"src": "3922:43:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$950_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$950_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3922:79:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 270,
												"nodeType": "ExpressionStatement",
												"src": "3922:79:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 275,
															"name": "promiseStableToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "4073:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 276,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "4106:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 277,
															"name": "penalAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "4127:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 278,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4153:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "31303030",
															"id": 279,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4169:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															},
															"value": "1000"
														},
														{
															"hexValue": "30",
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4188:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"arguments": [
																{
																	"id": 283,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4212:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TimeMarket_$860",
																		"typeString": "contract TimeMarket"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TimeMarket_$860",
																		"typeString": "contract TimeMarket"
																	}
																],
																"id": 282,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4204:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 281,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4204:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 284,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4204:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 285,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "4232:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4238:9:0",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "4232:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4248:7:0",
																"subdenomination": "hours",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3600_by_1",
																	"typeString": "int_const 3600"
																},
																"value": "1"
															},
															"src": "4232:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 272,
																	"name": "uniV2Router02",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 29,
																	"src": "4031:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 271,
																"name": "IUniswapV2Router02",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1754,
																"src": "4012:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUniswapV2Router02_$1754_$",
																	"typeString": "type(contract IUniswapV2Router02)"
																}
															},
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4012:33:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Router02_$1754",
																"typeString": "contract IUniswapV2Router02"
															}
														},
														"id": 274,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4046:12:0",
														"memberName": "addLiquidity",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1395,
														"src": "4012:46:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "function (address,address,uint256,uint256,uint256,uint256,address,uint256) external returns (uint256,uint256,uint256)"
														}
													},
													"id": 289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4012:254:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256)"
													}
												},
												"id": 290,
												"nodeType": "ExpressionStatement",
												"src": "4012:254:0"
											},
											{
												"expression": {
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 291,
																"name": "_tradeMes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 59,
																"src": "4277:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_tradeMes_$1211_storage_$",
																	"typeString": "mapping(uint64 => struct ITimeStruct.tradeMes storage ref)"
																}
															},
															"id": 293,
															"indexExpression": {
																"id": 292,
																"name": "_id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 197,
																"src": "4287:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4277:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_tradeMes_$1211_storage",
																"typeString": "struct ITimeStruct.tradeMes storage ref"
															}
														},
														"id": 294,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4292:13:0",
														"memberName": "solderAddress",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1210,
														"src": "4277:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 295,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "4306:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 296,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4310:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "4306:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4277:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4277:39:0"
											},
											{
												"expression": {
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 299,
																"name": "_tradeMes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 59,
																"src": "4370:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_tradeMes_$1211_storage_$",
																	"typeString": "mapping(uint64 => struct ITimeStruct.tradeMes storage ref)"
																}
															},
															"id": 301,
															"indexExpression": {
																"id": 300,
																"name": "_id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 197,
																"src": "4380:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4370:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_tradeMes_$1211_storage",
																"typeString": "struct ITimeStruct.tradeMes storage ref"
															}
														},
														"id": 302,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4385:10:0",
														"memberName": "tradeState",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1196,
														"src": "4370:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "32",
														"id": 303,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4396:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "4370:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 305,
												"nodeType": "ExpressionStatement",
												"src": "4370:27:0"
											}
										]
									},
									"functionSelector": "d91af492",
									"id": 307,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Sale",
									"nameLocation": "3134:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "3146:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "3139:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 196,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3139:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "3158:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "3150:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3150:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3138:27:0"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3175:0:0"
									},
									"scope": 860,
									"src": "3125:1280:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 372,
										"nodeType": "Block",
										"src": "4580:561:0",
										"statements": [
											{
												"condition": {
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 312,
																"name": "ifInject",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "4648:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(uint256 => bool))"
																}
															},
															"id": 315,
															"indexExpression": {
																"expression": {
																	"id": 313,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4657:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 314,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4661:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4657:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4648:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 317,
														"indexExpression": {
															"id": 316,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4669:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4648:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 318,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4674:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "4648:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 324,
												"nodeType": "IfStatement",
												"src": "4645:65:0",
												"trueBody": {
													"id": 323,
													"nodeType": "Block",
													"src": "4680:30:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 320,
																	"name": "AlreadyInjectToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1185,
																	"src": "4688:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4688:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 322,
															"nodeType": "RevertStatement",
															"src": "4681:27:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 326,
																"name": "_id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "4812:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															],
															"id": 325,
															"name": "getSolder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "4802:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint64_$returns$_t_address_$",
																"typeString": "function (uint64) view returns (address)"
															}
														},
														"id": 327,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4802:14:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 328,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "4818:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 329,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4822:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "4818:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4802:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 335,
												"nodeType": "IfStatement",
												"src": "4799:51:0",
												"trueBody": {
													"id": 334,
													"nodeType": "Block",
													"src": "4829:21:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 331,
																	"name": "NorSolder",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1191,
																	"src": "4837:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 332,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4837:11:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 333,
															"nodeType": "RevertStatement",
															"src": "4830:18:0"
														}
													]
												}
											},
											{
												"assignments": [
													337
												],
												"declarations": [
													{
														"constant": false,
														"id": 337,
														"mutability": "mutable",
														"name": "thisAirdropAmount",
														"nameLocation": "4915:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 372,
														"src": "4907:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 336,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4907:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 342,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 338,
															"name": "_tradeMes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 59,
															"src": "4933:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_tradeMes_$1211_storage_$",
																"typeString": "mapping(uint64 => struct ITimeStruct.tradeMes storage ref)"
															}
														},
														"id": 340,
														"indexExpression": {
															"id": 339,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4943:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4933:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_tradeMes_$1211_storage",
															"typeString": "struct ITimeStruct.tradeMes storage ref"
														}
													},
													"id": 341,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4948:14:0",
													"memberName": "buyTotalAmount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1202,
													"src": "4933:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4907:55:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 347,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5011:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 348,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5015:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5011:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 351,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5030:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TimeMarket_$860",
																		"typeString": "contract TimeMarket"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TimeMarket_$860",
																		"typeString": "contract TimeMarket"
																	}
																],
																"id": 350,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5022:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 349,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5022:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5022:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 353,
															"name": "thisAirdropAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5036:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 344,
																	"name": "airdropToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 25,
																	"src": "4980:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 343,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 950,
																"src": "4973:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$950_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4973:20:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$950",
																"typeString": "contract IERC20"
															}
														},
														"id": 346,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4994:16:0",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2542,
														"src": "4973:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$950_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$950_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4973:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 355,
												"nodeType": "ExpressionStatement",
												"src": "4973:81:0"
											},
											{
												"expression": {
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 356,
																"name": "ifInject",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "5065:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(uint256 => bool))"
																}
															},
															"id": 360,
															"indexExpression": {
																"expression": {
																	"id": 357,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5074:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 358,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5078:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5074:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5065:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 361,
														"indexExpression": {
															"id": 359,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "5086:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5065:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 362,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5091:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "5065:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 364,
												"nodeType": "ExpressionStatement",
												"src": "5065:30:0"
											},
											{
												"expression": {
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 365,
																"name": "_tradeMes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 59,
																"src": "5106:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_tradeMes_$1211_storage_$",
																	"typeString": "mapping(uint64 => struct ITimeStruct.tradeMes storage ref)"
																}
															},
															"id": 367,
															"indexExpression": {
																"id": 366,
																"name": "_id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "5116:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5106:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_tradeMes_$1211_storage",
																"typeString": "struct ITimeStruct.tradeMes storage ref"
															}
														},
														"id": 368,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5121:10:0",
														"memberName": "tradeState",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1196,
														"src": "5106:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "33",
														"id": 369,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5132:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "5106:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 371,
												"nodeType": "ExpressionStatement",
												"src": "5106:27:0"
											}
										]
									},
									"functionSelector": "25ac3a73",
									"id": 373,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "injectFutureToken",
									"nameLocation": "4543:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "4568:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "4561:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 308,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "4561:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4560:12:0"
									},
									"returnParameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4580:0:0"
									},
									"scope": 860,
									"src": "4534:607:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 455,
										"nodeType": "Block",
										"src": "5198:711:0",
										"statements": [
											{
												"assignments": [
													379
												],
												"declarations": [
													{
														"constant": false,
														"id": 379,
														"mutability": "mutable",
														"name": "buyer",
														"nameLocation": "5217:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 455,
														"src": "5209:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 378,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5209:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 383,
												"initialValue": {
													"arguments": [
														{
															"id": 381,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "5232:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 380,
														"name": "getBuyer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 782,
														"src": "5223:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint64_$returns$_t_address_$",
															"typeString": "function (uint64) view returns (address)"
														}
													},
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5223:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5209:27:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 384,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "5283:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 385,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5287:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "5283:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 386,
														"name": "buyer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 379,
														"src": "5295:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5283:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 392,
												"nodeType": "IfStatement",
												"src": "5280:41:0",
												"trueBody": {
													"id": 391,
													"nodeType": "Block",
													"src": "5301:20:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 388,
																	"name": "NotBuyer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1189,
																	"src": "5309:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 389,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5309:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 390,
															"nodeType": "RevertStatement",
															"src": "5302:17:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 393,
																"name": "_tradeMes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 59,
																"src": "5397:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_tradeMes_$1211_storage_$",
																	"typeString": "mapping(uint64 => struct ITimeStruct.tradeMes storage ref)"
																}
															},
															"id": 395,
															"indexExpression": {
																"id": 394,
																"name": "_id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 375,
																"src": "5407:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5397:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_tradeMes_$1211_storage",
																"typeString": "struct ITimeStruct.tradeMes storage ref"
															}
														},
														"id": 396,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5412:10:0",
														"memberName": "tradeState",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1196,
														"src": "5397:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "33",
														"id": 397,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5424:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "5397:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 403,
												"nodeType": "IfStatement",
												"src": "5394:58:0",
												"trueBody": {
													"id": 402,
													"nodeType": "Block",
													"src": "5426:26:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 399,
																	"name": "NotInjectToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1187,
																	"src": "5434:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 400,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5434:16:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 401,
															"nodeType": "RevertStatement",
															"src": "5427:23:0"
														}
													]
												}
											},
											{
												"assignments": [
													405
												],
												"declarations": [
													{
														"constant": false,
														"id": 405,
														"mutability": "mutable",
														"name": "buyAmount",
														"nameLocation": "5471:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 455,
														"src": "5463:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														},
														"typeName": {
															"id": 404,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "5463:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 410,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 406,
															"name": "_tradeMes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 59,
															"src": "5481:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_tradeMes_$1211_storage_$",
																"typeString": "mapping(uint64 => struct ITimeStruct.tradeMes storage ref)"
															}
														},
														"id": 408,
														"indexExpression": {
															"id": 407,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "5491:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5481:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_tradeMes_$1211_storage",
															"typeString": "struct ITimeStruct.tradeMes storage ref"
														}
													},
													"id": 409,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5496:14:0",
													"memberName": "buyTotalAmount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1202,
													"src": "5481:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5463:47:0"
											},
											{
												"assignments": [
													412
												],
												"declarations": [
													{
														"constant": false,
														"id": 412,
														"mutability": "mutable",
														"name": "buyerPrice",
														"nameLocation": "5529:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 455,
														"src": "5521:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														},
														"typeName": {
															"id": 411,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "5521:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 417,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 413,
															"name": "_tradeMes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 59,
															"src": "5540:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_tradeMes_$1211_storage_$",
																"typeString": "mapping(uint64 => struct ITimeStruct.tradeMes storage ref)"
															}
														},
														"id": 415,
														"indexExpression": {
															"id": 414,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "5550:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5540:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_tradeMes_$1211_storage",
															"typeString": "struct ITimeStruct.tradeMes storage ref"
														}
													},
													"id": 416,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5555:8:0",
													"memberName": "buyPrice",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1204,
													"src": "5540:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5521:42:0"
											},
											{
												"assignments": [
													419
												],
												"declarations": [
													{
														"constant": false,
														"id": 419,
														"mutability": "mutable",
														"name": "fee",
														"nameLocation": "5626:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 455,
														"src": "5618:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 418,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5618:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 426,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															},
															"id": 424,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 422,
																"name": "buyAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 405,
																"src": "5642:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 423,
																"name": "buyerPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 412,
																"src": "5652:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "5642:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														],
														"expression": {
															"id": 420,
															"name": "TimeFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2907,
															"src": "5630:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TimeFee_$2907_$",
																"typeString": "type(library TimeFee)"
															}
														},
														"id": 421,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5638:3:0",
														"memberName": "fee",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2906,
														"src": "5630:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256)"
														}
													},
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5630:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5618:45:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 433,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5758:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TimeMarket_$860",
																		"typeString": "contract TimeMarket"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TimeMarket_$860",
																		"typeString": "contract TimeMarket"
																	}
																],
																"id": 432,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5750:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 431,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5750:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5750:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 435,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 419,
															"src": "5764:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 428,
																	"name": "airdropToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 25,
																	"src": "5723:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 427,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 950,
																"src": "5716:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$950_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5716:20:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$950",
																"typeString": "contract IERC20"
															}
														},
														"id": 430,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5737:12:0",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2515,
														"src": "5716:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$950_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$950_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5716:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 437,
												"nodeType": "ExpressionStatement",
												"src": "5716:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "buyer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "5843:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 443,
																"name": "buyAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 405,
																"src": "5849:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 444,
																"name": "fee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 419,
																"src": "5859:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5849:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 439,
																	"name": "airdropToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 25,
																	"src": "5816:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 438,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 950,
																"src": "5809:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$950_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5809:20:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$950",
																"typeString": "contract IERC20"
															}
														},
														"id": 441,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5830:12:0",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2515,
														"src": "5809:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$950_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$950_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5809:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 447,
												"nodeType": "ExpressionStatement",
												"src": "5809:54:0"
											},
											{
												"expression": {
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 448,
																"name": "_tradeMes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 59,
																"src": "5874:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_tradeMes_$1211_storage_$",
																	"typeString": "mapping(uint64 => struct ITimeStruct.tradeMes storage ref)"
																}
															},
															"id": 450,
															"indexExpression": {
																"id": 449,
																"name": "_id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 375,
																"src": "5884:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5874:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_tradeMes_$1211_storage",
																"typeString": "struct ITimeStruct.tradeMes storage ref"
															}
														},
														"id": 451,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5889:10:0",
														"memberName": "tradeState",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1196,
														"src": "5874:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "34",
														"id": 452,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5900:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4_by_1",
															"typeString": "int_const 4"
														},
														"value": "4"
													},
													"src": "5874:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 454,
												"nodeType": "ExpressionStatement",
												"src": "5874:27:0"
											}
										]
									},
									"functionSelector": "c0102de4",
									"id": 456,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buyerWithdrawAirdorp",
									"nameLocation": "5158:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "5186:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "5179:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 374,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "5179:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5178:12:0"
									},
									"returnParameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5198:0:0"
									},
									"scope": 860,
									"src": "5149:760:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 570,
										"nodeType": "Block",
										"src": "6011:1088:0",
										"statements": [
											{
												"assignments": [
													462
												],
												"declarations": [
													{
														"constant": false,
														"id": 462,
														"mutability": "mutable",
														"name": "solder",
														"nameLocation": "6030:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 570,
														"src": "6022:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 461,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6022:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [
														{
															"id": 464,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "6047:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 463,
														"name": "getSolder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 795,
														"src": "6037:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint64_$returns$_t_address_$",
															"typeString": "function (uint64) view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6037:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6022:29:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 471,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 468,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "6103:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6107:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "6103:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 470,
																"name": "solder",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 462,
																"src": "6115:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6103:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 467,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6095:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6095:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 473,
												"nodeType": "ExpressionStatement",
												"src": "6095:27:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"baseExpression": {
																	"id": 475,
																	"name": "ifInject",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "6204:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
																		"typeString": "mapping(address => mapping(uint256 => bool))"
																	}
																},
																"id": 477,
																"indexExpression": {
																	"id": 476,
																	"name": "solder",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 462,
																	"src": "6213:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6204:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																	"typeString": "mapping(uint256 => bool)"
																}
															},
															"id": 479,
															"indexExpression": {
																"id": 478,
																"name": "_id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 458,
																"src": "6221:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6204:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 474,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6196:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6196:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 481,
												"nodeType": "ExpressionStatement",
												"src": "6196:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 483,
																		"name": "userIfWithdraw2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 77,
																		"src": "6278:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
																			"typeString": "mapping(address => mapping(uint256 => bool))"
																		}
																	},
																	"id": 486,
																	"indexExpression": {
																		"expression": {
																			"id": 484,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "6294:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 485,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6298:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "6294:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6278:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																		"typeString": "mapping(uint256 => bool)"
																	}
																},
																"id": 488,
																"indexExpression": {
																	"id": 487,
																	"name": "_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 458,
																	"src": "6306:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6278:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "66616c7365",
																"id": 489,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6312:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "6278:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 482,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6270:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6270:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 492,
												"nodeType": "ExpressionStatement",
												"src": "6270:48:0"
											},
											{
												"assignments": [
													494
												],
												"declarations": [
													{
														"constant": false,
														"id": 494,
														"mutability": "mutable",
														"name": "promiseStableToken",
														"nameLocation": "6337:18:0",
														"nodeType": "VariableDeclaration",
														"scope": 570,
														"src": "6329:26:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 493,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6329:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 499,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 495,
															"name": "_tradeMes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 59,
															"src": "6356:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_tradeMes_$1211_storage_$",
																"typeString": "mapping(uint64 => struct ITimeStruct.tradeMes storage ref)"
															}
														},
														"id": 497,
														"indexExpression": {
															"id": 496,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "6366:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6356:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_tradeMes_$1211_storage",
															"typeString": "struct ITimeStruct.tradeMes storage ref"
														}
													},
													"id": 498,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6371:12:0",
													"memberName": "tokenAddress",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1206,
													"src": "6356:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6329:54:0"
											},
											{
												"assignments": [
													501
												],
												"declarations": [
													{
														"constant": false,
														"id": 501,
														"mutability": "mutable",
														"name": "total",
														"nameLocation": "6402:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 570,
														"src": "6394:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 500,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6394:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 511,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 502,
																"name": "_tradeMes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 59,
																"src": "6408:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_tradeMes_$1211_storage_$",
																	"typeString": "mapping(uint64 => struct ITimeStruct.tradeMes storage ref)"
																}
															},
															"id": 504,
															"indexExpression": {
																"id": 503,
																"name": "_id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 458,
																"src": "6418:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6408:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_tradeMes_$1211_storage",
																"typeString": "struct ITimeStruct.tradeMes storage ref"
															}
														},
														"id": 505,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6423:8:0",
														"memberName": "buyPrice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1204,
														"src": "6408:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"expression": {
															"baseExpression": {
																"id": 506,
																"name": "_tradeMes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 59,
																"src": "6432:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_tradeMes_$1211_storage_$",
																	"typeString": "mapping(uint64 => struct ITimeStruct.tradeMes storage ref)"
																}
															},
															"id": 508,
															"indexExpression": {
																"id": 507,
																"name": "_id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 458,
																"src": "6442:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6432:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_tradeMes_$1211_storage",
																"typeString": "struct ITimeStruct.tradeMes storage ref"
															}
														},
														"id": 509,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6447:14:0",
														"memberName": "buyTotalAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1202,
														"src": "6432:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "6408:53:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6394:67:0"
											},
											{
												"assignments": [
													513
												],
												"declarations": [
													{
														"constant": false,
														"id": 513,
														"mutability": "mutable",
														"name": "penalSumAmount",
														"nameLocation": "6480:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 570,
														"src": "6472:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 512,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6472:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 524,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 515,
																	"name": "_tradeMes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 59,
																	"src": "6504:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_tradeMes_$1211_storage_$",
																		"typeString": "mapping(uint64 => struct ITimeStruct.tradeMes storage ref)"
																	}
																},
																"id": 517,
																"indexExpression": {
																	"id": 516,
																	"name": "_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 458,
																	"src": "6514:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6504:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_tradeMes_$1211_storage",
																	"typeString": "struct ITimeStruct.tradeMes storage ref"
																}
															},
															"id": 518,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6519:8:0",
															"memberName": "buyPrice",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1204,
															"src": "6504:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 519,
																	"name": "_tradeMes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 59,
																	"src": "6528:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_tradeMes_$1211_storage_$",
																		"typeString": "mapping(uint64 => struct ITimeStruct.tradeMes storage ref)"
																	}
																},
																"id": 521,
																"indexExpression": {
																	"id": 520,
																	"name": "_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 458,
																	"src": "6538:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6528:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_tradeMes_$1211_storage",
																	"typeString": "struct ITimeStruct.tradeMes storage ref"
																}
															},
															"id": 522,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6543:14:0",
															"memberName": "buyTotalAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1202,
															"src": "6528:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															},
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														],
														"id": 514,
														"name": "getPenal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 859,
														"src": "6495:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint128_$_t_uint128_$returns$_t_uint256_$",
															"typeString": "function (uint128,uint128) pure returns (uint256)"
														}
													},
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6495:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6472:86:0"
											},
											{
												"assignments": [
													526
												],
												"declarations": [
													{
														"constant": false,
														"id": 526,
														"mutability": "mutable",
														"name": "fee",
														"nameLocation": "6577:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 570,
														"src": "6569:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 525,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6569:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 531,
												"initialValue": {
													"arguments": [
														{
															"id": 529,
															"name": "total",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 501,
															"src": "6593:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 527,
															"name": "TimeFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2907,
															"src": "6581:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TimeFee_$2907_$",
																"typeString": "type(library TimeFee)"
															}
														},
														"id": 528,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6589:3:0",
														"memberName": "fee",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2906,
														"src": "6581:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256)"
														}
													},
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6581:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6569:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 538,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6700:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TimeMarket_$860",
																		"typeString": "contract TimeMarket"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TimeMarket_$860",
																		"typeString": "contract TimeMarket"
																	}
																],
																"id": 537,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6692:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 536,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6692:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6692:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 540,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "6706:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 533,
																	"name": "promiseStableToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 494,
																	"src": "6659:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 532,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 950,
																"src": "6652:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$950_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6652:26:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$950",
																"typeString": "contract IERC20"
															}
														},
														"id": 535,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6679:12:0",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2515,
														"src": "6652:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$950_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$950_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6652:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 542,
												"nodeType": "ExpressionStatement",
												"src": "6652:58:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 547,
															"name": "solder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "6805:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 548,
																"name": "total",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 501,
																"src": "6826:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 549,
																"name": "fee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 526,
																"src": "6832:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6826:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 544,
																	"name": "promiseStableToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 494,
																	"src": "6758:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 543,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 950,
																"src": "6751:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$950_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6751:26:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$950",
																"typeString": "contract IERC20"
															}
														},
														"id": 546,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6778:12:0",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2515,
														"src": "6751:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$950_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$950_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6751:95:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 552,
												"nodeType": "ExpressionStatement",
												"src": "6751:95:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 557,
															"name": "solder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "6959:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 558,
															"name": "penalSumAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "6980:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 554,
																	"name": "promiseStableToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 494,
																	"src": "6912:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 553,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 950,
																"src": "6905:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$950_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6905:26:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$950",
																"typeString": "contract IERC20"
															}
														},
														"id": 556,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6932:12:0",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2515,
														"src": "6905:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$950_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$950_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6905:100:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 560,
												"nodeType": "ExpressionStatement",
												"src": "6905:100:0"
											},
											{
												"expression": {
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 561,
																"name": "userIfWithdraw2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "7053:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(uint256 => bool))"
																}
															},
															"id": 565,
															"indexExpression": {
																"expression": {
																	"id": 562,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "7069:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 563,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7073:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "7069:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7053:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 566,
														"indexExpression": {
															"id": 564,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "7081:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7053:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 567,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7086:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "7053:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 569,
												"nodeType": "ExpressionStatement",
												"src": "7053:37:0"
											}
										]
									},
									"functionSelector": "77bcd8a6",
									"id": 571,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "solderWithdrawStable",
									"nameLocation": "5971:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "5999:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "5992:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 457,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "5992:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5991:12:0"
									},
									"returnParameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6011:0:0"
									},
									"scope": 860,
									"src": "5962:1137:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 737,
										"nodeType": "Block",
										"src": "7234:1385:0",
										"statements": [
											{
												"assignments": [
													577
												],
												"declarations": [
													{
														"constant": false,
														"id": 577,
														"mutability": "mutable",
														"name": "buyer",
														"nameLocation": "7253:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 737,
														"src": "7245:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 576,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7245:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 581,
												"initialValue": {
													"arguments": [
														{
															"id": 579,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 573,
															"src": "7268:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 578,
														"name": "getBuyer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 782,
														"src": "7259:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint64_$returns$_t_address_$",
															"typeString": "function (uint64) view returns (address)"
														}
													},
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7259:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7245:27:0"
											},
											{
												"assignments": [
													583
												],
												"declarations": [
													{
														"constant": false,
														"id": 583,
														"mutability": "mutable",
														"name": "solder",
														"nameLocation": "7291:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 737,
														"src": "7283:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 582,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7283:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 587,
												"initialValue": {
													"arguments": [
														{
															"id": 585,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 573,
															"src": "7308:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 584,
														"name": "getSolder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 795,
														"src": "7298:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint64_$returns$_t_address_$",
															"typeString": "function (uint64) view returns (address)"
														}
													},
													"id": 586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7298:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7283:29:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 592,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 589,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "7364:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 590,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7368:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "7364:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 591,
																"name": "buyer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 577,
																"src": "7376:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7364:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 588,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7356:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7356:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 594,
												"nodeType": "ExpressionStatement",
												"src": "7356:26:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 602,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 596,
																		"name": "ifInject",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 65,
																		"src": "7464:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
																			"typeString": "mapping(address => mapping(uint256 => bool))"
																		}
																	},
																	"id": 598,
																	"indexExpression": {
																		"id": 597,
																		"name": "solder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 583,
																		"src": "7473:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7464:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																		"typeString": "mapping(uint256 => bool)"
																	}
																},
																"id": 600,
																"indexExpression": {
																	"id": 599,
																	"name": "_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 573,
																	"src": "7481:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7464:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "66616c7365",
																"id": 601,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7487:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "7464:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 595,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7456:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7456:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "ExpressionStatement",
												"src": "7456:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 613,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 606,
																		"name": "userIfWithdraw3",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 83,
																		"src": "7512:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
																			"typeString": "mapping(address => mapping(uint256 => bool))"
																		}
																	},
																	"id": 609,
																	"indexExpression": {
																		"expression": {
																			"id": 607,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "7528:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 608,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7532:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "7528:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7512:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																		"typeString": "mapping(uint256 => bool)"
																	}
																},
																"id": 611,
																"indexExpression": {
																	"id": 610,
																	"name": "_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 573,
																	"src": "7540:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7512:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "66616c7365",
																"id": 612,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7546:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "7512:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 605,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7504:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7504:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 615,
												"nodeType": "ExpressionStatement",
												"src": "7504:48:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 620,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 617,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "7604:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 618,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7608:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "7604:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 619,
																"name": "buyer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 577,
																"src": "7616:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7604:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 616,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7596:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7596:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 622,
												"nodeType": "ExpressionStatement",
												"src": "7596:26:0"
											},
											{
												"assignments": [
													624
												],
												"declarations": [
													{
														"constant": false,
														"id": 624,
														"mutability": "mutable",
														"name": "promiseStableToken",
														"nameLocation": "7643:18:0",
														"nodeType": "VariableDeclaration",
														"scope": 737,
														"src": "7635:26:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 623,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7635:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 629,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 625,
															"name": "_tradeMes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 59,
															"src": "7662:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_tradeMes_$1211_storage_$",
																"typeString": "mapping(uint64 => struct ITimeStruct.tradeMes storage ref)"
															}
														},
														"id": 627,
														"indexExpression": {
															"id": 626,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 573,
															"src": "7672:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7662:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_tradeMes_$1211_storage",
															"typeString": "struct ITimeStruct.tradeMes storage ref"
														}
													},
													"id": 628,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7677:12:0",
													"memberName": "tokenAddress",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1206,
													"src": "7662:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7635:54:0"
											},
											{
												"assignments": [
													631
												],
												"declarations": [
													{
														"constant": false,
														"id": 631,
														"mutability": "mutable",
														"name": "penalSumAmount",
														"nameLocation": "7708:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 737,
														"src": "7700:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 630,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7700:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 642,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 633,
																	"name": "_tradeMes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 59,
																	"src": "7732:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_tradeMes_$1211_storage_$",
																		"typeString": "mapping(uint64 => struct ITimeStruct.tradeMes storage ref)"
																	}
																},
																"id": 635,
																"indexExpression": {
																	"id": 634,
																	"name": "_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 573,
																	"src": "7742:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7732:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_tradeMes_$1211_storage",
																	"typeString": "struct ITimeStruct.tradeMes storage ref"
																}
															},
															"id": 636,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7747:8:0",
															"memberName": "buyPrice",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1204,
															"src": "7732:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 637,
																	"name": "_tradeMes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 59,
																	"src": "7756:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_tradeMes_$1211_storage_$",
																		"typeString": "mapping(uint64 => struct ITimeStruct.tradeMes storage ref)"
																	}
																},
																"id": 639,
																"indexExpression": {
																	"id": 638,
																	"name": "_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 573,
																	"src": "7766:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7756:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_tradeMes_$1211_storage",
																	"typeString": "struct ITimeStruct.tradeMes storage ref"
																}
															},
															"id": 640,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7771:14:0",
															"memberName": "buyTotalAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1202,
															"src": "7756:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															},
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														],
														"id": 632,
														"name": "getPenal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 859,
														"src": "7723:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint128_$_t_uint128_$returns$_t_uint256_$",
															"typeString": "function (uint128,uint128) pure returns (uint256)"
														}
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7723:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7700:86:0"
											},
											{
												"assignments": [
													644
												],
												"declarations": [
													{
														"constant": false,
														"id": 644,
														"mutability": "mutable",
														"name": "fee",
														"nameLocation": "7805:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 737,
														"src": "7797:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 643,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7797:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 649,
												"initialValue": {
													"arguments": [
														{
															"id": 647,
															"name": "penalSumAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 631,
															"src": "7821:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 645,
															"name": "TimeFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2907,
															"src": "7809:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TimeFee_$2907_$",
																"typeString": "type(library TimeFee)"
															}
														},
														"id": 646,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7817:3:0",
														"memberName": "fee",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2906,
														"src": "7809:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256)"
														}
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7809:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7797:39:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 656,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "7927:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TimeMarket_$860",
																		"typeString": "contract TimeMarket"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TimeMarket_$860",
																		"typeString": "contract TimeMarket"
																	}
																],
																"id": 655,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7919:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 654,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7919:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 657,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7919:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 658,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "7947:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 651,
																	"name": "promiseStableToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 624,
																	"src": "7872:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 650,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 950,
																"src": "7865:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$950_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7865:26:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$950",
																"typeString": "contract IERC20"
															}
														},
														"id": 653,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7892:12:0",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2515,
														"src": "7865:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$950_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$950_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7865:96:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 660,
												"nodeType": "ExpressionStatement",
												"src": "7865:96:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 665,
															"name": "buyer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 577,
															"src": "8071:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 668,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 666,
																"name": "penalSumAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 631,
																"src": "8091:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 667,
																"name": "fee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 644,
																"src": "8106:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8091:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 662,
																	"name": "promiseStableToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 624,
																	"src": "8024:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 661,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 950,
																"src": "8017:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$950_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 663,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8017:26:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$950",
																"typeString": "contract IERC20"
															}
														},
														"id": 664,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8044:12:0",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2515,
														"src": "8017:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$950_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$950_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8017:103:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8017:103:0"
											},
											{
												"expression": {
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 671,
																"name": "userIfWithdraw3",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "8131:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(uint256 => bool))"
																}
															},
															"id": 675,
															"indexExpression": {
																"expression": {
																	"id": 672,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "8147:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 673,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8151:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "8147:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8131:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 676,
														"indexExpression": {
															"id": 674,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 573,
															"src": "8159:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8131:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 677,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8164:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "8131:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 679,
												"nodeType": "ExpressionStatement",
												"src": "8131:37:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 680,
																"name": "_tradeMes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 59,
																"src": "8184:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_tradeMes_$1211_storage_$",
																	"typeString": "mapping(uint64 => struct ITimeStruct.tradeMes storage ref)"
																}
															},
															"id": 682,
															"indexExpression": {
																"id": 681,
																"name": "_id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 573,
																"src": "8194:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8184:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_tradeMes_$1211_storage",
																"typeString": "struct ITimeStruct.tradeMes storage ref"
															}
														},
														"id": 683,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8199:10:0",
														"memberName": "tradeState",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1196,
														"src": "8184:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 684,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8211:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "8184:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 729,
												"nodeType": "IfStatement",
												"src": "8181:393:0",
												"trueBody": {
													"id": 728,
													"nodeType": "Block",
													"src": "8213:361:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 694,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 687,
																					"name": "userIfWithdraw4",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 89,
																					"src": "8236:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
																						"typeString": "mapping(address => mapping(uint256 => bool))"
																					}
																				},
																				"id": 690,
																				"indexExpression": {
																					"expression": {
																						"id": 688,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "8252:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 689,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "8256:6:0",
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "8252:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "8236:27:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																					"typeString": "mapping(uint256 => bool)"
																				}
																			},
																			"id": 692,
																			"indexExpression": {
																				"id": 691,
																				"name": "_id",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 573,
																				"src": "8264:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint64",
																					"typeString": "uint64"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8236:32:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "66616c7365",
																			"id": 693,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8270:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "false"
																		},
																		"src": "8236:39:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 686,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "8228:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																		"typeString": "function (bool) pure"
																	}
																},
																"id": 695,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8228:48:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 696,
															"nodeType": "ExpressionStatement",
															"src": "8228:48:0"
														},
														{
															"assignments": [
																698
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 698,
																	"mutability": "mutable",
																	"name": "total",
																	"nameLocation": "8299:5:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 728,
																	"src": "8291:13:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 697,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "8291:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 708,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																},
																"id": 707,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 699,
																			"name": "_tradeMes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 59,
																			"src": "8305:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_tradeMes_$1211_storage_$",
																				"typeString": "mapping(uint64 => struct ITimeStruct.tradeMes storage ref)"
																			}
																		},
																		"id": 701,
																		"indexExpression": {
																			"id": 700,
																			"name": "_id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 573,
																			"src": "8315:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint64",
																				"typeString": "uint64"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8305:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_tradeMes_$1211_storage",
																			"typeString": "struct ITimeStruct.tradeMes storage ref"
																		}
																	},
																	"id": 702,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8320:8:0",
																	"memberName": "buyPrice",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1204,
																	"src": "8305:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 703,
																			"name": "_tradeMes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 59,
																			"src": "8329:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_tradeMes_$1211_storage_$",
																				"typeString": "mapping(uint64 => struct ITimeStruct.tradeMes storage ref)"
																			}
																		},
																		"id": 705,
																		"indexExpression": {
																			"id": 704,
																			"name": "_id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 573,
																			"src": "8339:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint64",
																				"typeString": "uint64"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8329:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_tradeMes_$1211_storage",
																			"typeString": "struct ITimeStruct.tradeMes storage ref"
																		}
																	},
																	"id": 706,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8344:14:0",
																	"memberName": "buyTotalAmount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1202,
																	"src": "8329:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"src": "8305:53:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "8291:67:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 714,
																				"name": "_id",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 573,
																				"src": "8467:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint64",
																					"typeString": "uint64"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint64",
																					"typeString": "uint64"
																				}
																			],
																			"id": 713,
																			"name": "getBuyer",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 782,
																			"src": "8458:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint64_$returns$_t_address_$",
																				"typeString": "function (uint64) view returns (address)"
																			}
																		},
																		"id": 715,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8458:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 716,
																		"name": "total",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 698,
																		"src": "8490:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 710,
																				"name": "promiseStableToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 624,
																				"src": "8407:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 709,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 950,
																			"src": "8400:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$950_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 711,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8400:26:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$950",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 712,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8427:12:0",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2515,
																	"src": "8400:39:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$950_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$950_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 717,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8400:110:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 718,
															"nodeType": "ExpressionStatement",
															"src": "8400:110:0"
														},
														{
															"expression": {
																"id": 726,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 719,
																			"name": "userIfWithdraw4",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 89,
																			"src": "8525:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
																				"typeString": "mapping(address => mapping(uint256 => bool))"
																			}
																		},
																		"id": 723,
																		"indexExpression": {
																			"expression": {
																				"id": 720,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "8541:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 721,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "8545:6:0",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "8541:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8525:27:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																			"typeString": "mapping(uint256 => bool)"
																		}
																	},
																	"id": 724,
																	"indexExpression": {
																		"id": 722,
																		"name": "_id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 573,
																		"src": "8553:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8525:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 725,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8558:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "8525:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 727,
															"nodeType": "ExpressionStatement",
															"src": "8525:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 730,
																"name": "_tradeMes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 59,
																"src": "8584:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_tradeMes_$1211_storage_$",
																	"typeString": "mapping(uint64 => struct ITimeStruct.tradeMes storage ref)"
																}
															},
															"id": 732,
															"indexExpression": {
																"id": 731,
																"name": "_id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 573,
																"src": "8594:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8584:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_tradeMes_$1211_storage",
																"typeString": "struct ITimeStruct.tradeMes storage ref"
															}
														},
														"id": 733,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8599:10:0",
														"memberName": "tradeState",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1196,
														"src": "8584:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "35",
														"id": 734,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8610:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"src": "8584:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 736,
												"nodeType": "ExpressionStatement",
												"src": "8584:27:0"
											}
										]
									},
									"functionSelector": "2895cb7b",
									"id": 738,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buyerWithdrawRefund",
									"nameLocation": "7195:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "7222:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 738,
												"src": "7215:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 572,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "7215:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7214:12:0"
									},
									"returnParameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7234:0:0"
									},
									"scope": 860,
									"src": "7186:1433:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 743,
										"nodeType": "Block",
										"src": "8721:10:0",
										"statements": []
									},
									"functionSelector": "c3cf1aa6",
									"id": 744,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "profileEarn",
									"nameLocation": "8691:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "8710:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "8703:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 739,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8703:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8702:12:0"
									},
									"returnParameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8721:0:0"
									},
									"scope": 860,
									"src": "8682:49:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 768,
										"nodeType": "Block",
										"src": "8909:167:0",
										"statements": [
											{
												"expression": {
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 755,
														"name": "thisPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 753,
														"src": "8920:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 760,
																"name": "token0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 746,
																"src": "8985:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 761,
																"name": "token1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 748,
																"src": "9006:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 762,
																"name": "_fee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 750,
																"src": "9027:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 757,
																		"name": "uniV3Factory",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 32,
																		"src": "8949:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 756,
																	"name": "IUniswapV3Factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1295,
																	"src": "8931:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IUniswapV3Factory_$1295_$",
																		"typeString": "type(contract IUniswapV3Factory)"
																	}
																},
																"id": 758,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8931:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV3Factory_$1295",
																	"typeString": "contract IUniswapV3Factory"
																}
															},
															"id": 759,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8963:7:0",
															"memberName": "getPool",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1268,
															"src": "8931:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint24_$returns$_t_address_$",
																"typeString": "function (address,address,uint24) view external returns (address)"
															}
														},
														"id": 763,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8931:111:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8920:122:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 765,
												"nodeType": "ExpressionStatement",
												"src": "8920:122:0"
											},
											{
												"expression": {
													"id": 766,
													"name": "thisPool",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 753,
													"src": "9060:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 754,
												"id": 767,
												"nodeType": "Return",
												"src": "9053:15:0"
											}
										]
									},
									"functionSelector": "696d6283",
									"id": 769,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolAddress",
									"nameLocation": "8815:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "8838:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "8830:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 745,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8830:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "8853:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "8845:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 747,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8845:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "_fee",
												"nameLocation": "8867:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "8860:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 749,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "8860:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8829:43:0"
									},
									"returnParameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "thisPool",
												"nameLocation": "8900:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "8892:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8891:18:0"
									},
									"scope": 860,
									"src": "8806:270:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 781,
										"nodeType": "Block",
										"src": "9186:53:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 776,
															"name": "_tradeMes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 59,
															"src": "9204:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_tradeMes_$1211_storage_$",
																"typeString": "mapping(uint64 => struct ITimeStruct.tradeMes storage ref)"
															}
														},
														"id": 778,
														"indexExpression": {
															"id": 777,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 771,
															"src": "9214:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9204:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_tradeMes_$1211_storage",
															"typeString": "struct ITimeStruct.tradeMes storage ref"
														}
													},
													"id": 779,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "9219:12:0",
													"memberName": "buyerAddress",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1208,
													"src": "9204:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 775,
												"id": 780,
												"nodeType": "Return",
												"src": "9197:34:0"
											}
										]
									},
									"id": 782,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBuyer",
									"nameLocation": "9136:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "9152:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "9145:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 770,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "9145:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9144:12:0"
									},
									"returnParameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "9178:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 773,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9178:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9177:9:0"
									},
									"scope": 860,
									"src": "9127:112:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 794,
										"nodeType": "Block",
										"src": "9347:54:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 789,
															"name": "_tradeMes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 59,
															"src": "9365:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_tradeMes_$1211_storage_$",
																"typeString": "mapping(uint64 => struct ITimeStruct.tradeMes storage ref)"
															}
														},
														"id": 791,
														"indexExpression": {
															"id": 790,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 784,
															"src": "9375:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9365:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_tradeMes_$1211_storage",
															"typeString": "struct ITimeStruct.tradeMes storage ref"
														}
													},
													"id": 792,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "9380:13:0",
													"memberName": "solderAddress",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1210,
													"src": "9365:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 788,
												"id": 793,
												"nodeType": "Return",
												"src": "9358:35:0"
											}
										]
									},
									"id": 795,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSolder",
									"nameLocation": "9296:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "9313:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "9306:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 783,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "9306:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9305:12:0"
									},
									"returnParameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "9339:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 786,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9339:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9338:9:0"
									},
									"scope": 860,
									"src": "9287:114:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 858,
										"nodeType": "Block",
										"src": "9554:456:0",
										"statements": [
											{
												"assignments": [
													805
												],
												"declarations": [
													{
														"constant": false,
														"id": 805,
														"mutability": "mutable",
														"name": "thisAmount",
														"nameLocation": "9573:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 858,
														"src": "9565:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 804,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9565:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 809,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 806,
														"name": "_soldPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 797,
														"src": "9586:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 807,
														"name": "_soldAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "9597:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "9586:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9565:43:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 812,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 810,
															"name": "thisAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "9623:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"hexValue": "313030",
															"id": 811,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9637:9:0",
															"subdenomination": "ether",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100000000000000000000_by_1",
																"typeString": "int_const 100000000000000000000"
															},
															"value": "100"
														},
														"src": "9623:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 815,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 813,
															"name": "thisAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "9650:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "31303030",
															"id": 814,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9663:10:0",
															"subdenomination": "ether",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000"
															},
															"value": "1000"
														},
														"src": "9650:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9623:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 831,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 827,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 825,
																"name": "thisAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 805,
																"src": "9742:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "31303030",
																"id": 826,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9756:10:0",
																"subdenomination": "ether",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000000"
																},
																"value": "1000"
															},
															"src": "9742:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 830,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 828,
																"name": "thisAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 805,
																"src": "9770:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"hexValue": "3130303030",
																"id": 829,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9783:11:0",
																"subdenomination": "ether",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000_by_1",
																	"typeString": "int_const 10000000000000000000000"
																},
																"value": "10000"
															},
															"src": "9770:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "9742:52:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 842,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 840,
																"name": "thisAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 805,
																"src": "9863:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "3130303030",
																"id": 841,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9876:11:0",
																"subdenomination": "ether",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000_by_1",
																	"typeString": "int_const 10000000000000000000000"
																},
																"value": "10000"
															},
															"src": "9863:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 854,
															"nodeType": "Block",
															"src": "9952:51:0",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 851,
																			"name": "NotEnoughAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1183,
																			"src": "9974:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 852,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9974:17:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 853,
																	"nodeType": "RevertStatement",
																	"src": "9967:24:0"
																}
															]
														},
														"id": 855,
														"nodeType": "IfStatement",
														"src": "9859:144:0",
														"trueBody": {
															"id": 850,
															"nodeType": "Block",
															"src": "9889:57:0",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 848,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 845,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 843,
																						"name": "thisAmount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 805,
																						"src": "9912:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"hexValue": "3235",
																						"id": 844,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9925:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_25_by_1",
																							"typeString": "int_const 25"
																						},
																						"value": "25"
																					},
																					"src": "9912:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 846,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "9911:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"hexValue": "313030",
																			"id": 847,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9931:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"value": "100"
																		},
																		"src": "9911:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 803,
																	"id": 849,
																	"nodeType": "Return",
																	"src": "9904:30:0"
																}
															]
														}
													},
													"id": 856,
													"nodeType": "IfStatement",
													"src": "9738:265:0",
													"trueBody": {
														"id": 839,
														"nodeType": "Block",
														"src": "9796:57:0",
														"statements": [
															{
																"expression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 834,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 832,
																					"name": "thisAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 805,
																					"src": "9819:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "3430",
																					"id": 833,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "9832:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_40_by_1",
																						"typeString": "int_const 40"
																					},
																					"value": "40"
																				},
																				"src": "9819:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 835,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "9818:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "313030",
																		"id": 836,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9838:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	},
																	"src": "9818:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 803,
																"id": 838,
																"nodeType": "Return",
																"src": "9811:30:0"
															}
														]
													}
												},
												"id": 857,
												"nodeType": "IfStatement",
												"src": "9619:384:0",
												"trueBody": {
													"id": 824,
													"nodeType": "Block",
													"src": "9675:57:0",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 822,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 819,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 817,
																				"name": "thisAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 805,
																				"src": "9698:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"hexValue": "3530",
																				"id": 818,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9711:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_50_by_1",
																					"typeString": "int_const 50"
																				},
																				"value": "50"
																			},
																			"src": "9698:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 820,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9697:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 821,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9717:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "9697:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 803,
															"id": 823,
															"nodeType": "Return",
															"src": "9690:30:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "98c50fdd",
									"id": 859,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPenal",
									"nameLocation": "9476:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "_soldPrice",
												"nameLocation": "9493:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "9485:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 796,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "9485:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "_soldAmount",
												"nameLocation": "9513:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "9505:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 798,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "9505:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9484:41:0"
									},
									"returnParameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "9546:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 801,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9546:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9545:9:0"
									},
									"scope": 860,
									"src": "9467:543:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 861,
							"src": "536:9479:0",
							"usedErrors": [
								1183,
								1185,
								1187,
								1189,
								1191
							]
						}
					],
					"src": "31:9984:0"
				},
				"id": 0
			},
			"interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							872
						]
					},
					"id": 873,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 862,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "118:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 863,
								"nodeType": "StructuredDocumentation",
								"src": "146:287:1",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 872,
							"linearizedBaseContracts": [
								872
							],
							"name": "IERC165",
							"nameLocation": "445:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 864,
										"nodeType": "StructuredDocumentation",
										"src": "460:347:1",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 871,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "822:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "847:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "840:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 865,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "840:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "839:20:1"
									},
									"returnParameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "883:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 868,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "883:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "882:6:1"
									},
									"scope": 872,
									"src": "813:76:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 873,
							"src": "435:457:1",
							"usedErrors": []
						}
					],
					"src": "118:776:1"
				},
				"id": 1
			},
			"interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							950
						]
					},
					"id": 951,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 874,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 875,
								"nodeType": "StructuredDocumentation",
								"src": "136:72:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 950,
							"linearizedBaseContracts": [
								950
							],
							"name": "IERC20",
							"nameLocation": "220:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 876,
										"nodeType": "StructuredDocumentation",
										"src": "234:163:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 884,
									"name": "Transfer",
									"nameLocation": "409:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "434:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "418:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 877,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "418:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 880,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "456:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "440:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 879,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "440:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 882,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "468:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "460:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 881,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "417:57:2"
									},
									"src": "403:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "483:151:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 893,
									"name": "Approval",
									"nameLocation": "646:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 887,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "671:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "655:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 886,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 889,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "694:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "678:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 888,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "678:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 891,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "711:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "703:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "703:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:63:2"
									},
									"src": "640:78:2"
								},
								{
									"documentation": {
										"id": 894,
										"nodeType": "StructuredDocumentation",
										"src": "726:68:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 899,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "809:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "820:2:2"
									},
									"returnParameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "846:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "846:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "845:9:2"
									},
									"scope": 950,
									"src": "800:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 900,
										"nodeType": "StructuredDocumentation",
										"src": "863:74:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 907,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "952:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "970:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "962:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "962:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "961:17:2"
									},
									"returnParameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "1002:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1001:9:2"
									},
									"scope": 950,
									"src": "943:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 908,
										"nodeType": "StructuredDocumentation",
										"src": "1019:208:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 917,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1242:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1259:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 917,
												"src": "1251:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 909,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1251:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1271:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 917,
												"src": "1263:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 911,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1250:28:2"
									},
									"returnParameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 917,
												"src": "1297:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 914,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1297:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1296:6:2"
									},
									"scope": 950,
									"src": "1233:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 918,
										"nodeType": "StructuredDocumentation",
										"src": "1311:270:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 927,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1596:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1614:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "1606:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 919,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1606:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1629:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "1621:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 921,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1605:32:2"
									},
									"returnParameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "1661:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1661:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1660:9:2"
									},
									"scope": 950,
									"src": "1587:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 928,
										"nodeType": "StructuredDocumentation",
										"src": "1678:655:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 937,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2348:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2364:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "2356:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 929,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2356:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2381:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "2373:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 931,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2373:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2355:33:2"
									},
									"returnParameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "2407:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 934,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2407:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2406:6:2"
									},
									"scope": 950,
									"src": "2339:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 938,
										"nodeType": "StructuredDocumentation",
										"src": "2421:295:2",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 949,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2731:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2752:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "2744:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 939,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2744:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2766:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "2758:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 941,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2758:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2778:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "2770:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2770:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2743:42:2"
									},
									"returnParameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "2804:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 946,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2804:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2803:6:2"
									},
									"scope": 950,
									"src": "2722:88:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 951,
							"src": "210:2603:2",
							"usedErrors": []
						}
					],
					"src": "109:2706:2"
				},
				"id": 2
			},
			"interfaces/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "interfaces/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							986
						]
					},
					"id": 987,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 952,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "126:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 953,
								"nodeType": "StructuredDocumentation",
								"src": "154:1998:3",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 986,
							"linearizedBaseContracts": [
								986
							],
							"name": "IERC20Permit",
							"nameLocation": "2164:12:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 954,
										"nodeType": "StructuredDocumentation",
										"src": "2184:872:3",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 971,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3071:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3096:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "3088:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 955,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3088:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3120:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "3112:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 957,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3112:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3146:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "3138:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 959,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3138:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3170:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "3162:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 961,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3162:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3195:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "3189:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 963,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3189:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3215:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "3207:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 965,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3207:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3235:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "3227:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 967,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3227:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3077:166:3"
									},
									"returnParameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3252:0:3"
									},
									"scope": 986,
									"src": "3062:191:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 972,
										"nodeType": "StructuredDocumentation",
										"src": "3261:300:3",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 979,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3576:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3591:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "3583:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 973,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3583:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3582:15:3"
									},
									"returnParameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "3621:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 976,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3621:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3620:9:3"
									},
									"scope": 986,
									"src": "3567:63:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 980,
										"nodeType": "StructuredDocumentation",
										"src": "3638:130:3",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 985,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3837:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3853:2:3"
									},
									"returnParameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "3879:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 982,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3879:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3878:9:3"
									},
									"scope": 986,
									"src": "3828:60:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 987,
							"src": "2154:1737:3",
							"usedErrors": []
						}
					],
					"src": "126:3767:3"
				},
				"id": 3
			},
			"interfaces/IERC721.sol": {
				"ast": {
					"absolutePath": "interfaces/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							872
						],
						"IERC721": [
							1103
						]
					},
					"id": 1104,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 988,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "111:24:4"
						},
						{
							"absolutePath": "interfaces/IERC165.sol",
							"file": "../interfaces/IERC165.sol",
							"id": 990,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1104,
							"sourceUnit": 873,
							"src": "139:50:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 989,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 872,
										"src": "147:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 992,
										"name": "IERC165",
										"nameLocations": [
											"285:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 872,
										"src": "285:7:4"
									},
									"id": 993,
									"nodeType": "InheritanceSpecifier",
									"src": "285:7:4"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 991,
								"nodeType": "StructuredDocumentation",
								"src": "193:69:4",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1103,
							"linearizedBaseContracts": [
								1103,
								872
							],
							"name": "IERC721",
							"nameLocation": "274:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 994,
										"nodeType": "StructuredDocumentation",
										"src": "300:90:4",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1002,
									"name": "Transfer",
									"nameLocation": "402:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 996,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "427:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "411:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 995,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "411:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 998,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "449:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "433:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 997,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "433:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1000,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "469:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "453:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 999,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "453:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "410:67:4"
									},
									"src": "396:82:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1003,
										"nodeType": "StructuredDocumentation",
										"src": "486:96:4",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1011,
									"name": "Approval",
									"nameLocation": "594:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "619:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "603:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1004,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1007,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "642:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "626:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1006,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "626:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1009,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "668:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "652:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1008,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "602:74:4"
									},
									"src": "588:89:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1012,
										"nodeType": "StructuredDocumentation",
										"src": "685:119:4",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1020,
									"name": "ApprovalForAll",
									"nameLocation": "816:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1014,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "847:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "831:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1013,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1016,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "870:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "854:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1015,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "854:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1018,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "885:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "880:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1017,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "880:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "830:64:4"
									},
									"src": "810:85:4"
								},
								{
									"documentation": {
										"id": 1021,
										"nodeType": "StructuredDocumentation",
										"src": "903:78:4",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1028,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "996:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1014:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "1006:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1022,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1006:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1005:15:4"
									},
									"returnParameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1052:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "1044:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1025,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1044:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1043:17:4"
									},
									"scope": 1103,
									"src": "987:74:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1029,
										"nodeType": "StructuredDocumentation",
										"src": "1069:137:4",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1036,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1221:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1237:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "1229:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1030,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1229:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1228:17:4"
									},
									"returnParameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1277:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "1269:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1033,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1269:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1268:15:4"
									},
									"scope": 1103,
									"src": "1212:72:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1037,
										"nodeType": "StructuredDocumentation",
										"src": "1292:578:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1048,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1885:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1910:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1048,
												"src": "1902:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1038,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1902:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1924:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1048,
												"src": "1916:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1040,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1916:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1936:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1048,
												"src": "1928:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1042,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1928:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1960:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1048,
												"src": "1945:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1044,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1945:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1901:64:4"
									},
									"returnParameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1974:0:4"
									},
									"scope": 1103,
									"src": "1876:99:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1049,
										"nodeType": "StructuredDocumentation",
										"src": "1983:720:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1058,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2718:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2743:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "2735:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1050,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2735:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2757:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "2749:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1052,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2749:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2769:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "2761:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1054,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2761:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2734:43:4"
									},
									"returnParameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2786:0:4"
									},
									"scope": 1103,
									"src": "2709:78:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1059,
										"nodeType": "StructuredDocumentation",
										"src": "2795:747:4",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1068,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3557:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3578:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "3570:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1060,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3592:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "3584:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1062,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3584:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3604:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "3596:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1064,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3596:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:43:4"
									},
									"returnParameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3621:0:4"
									},
									"scope": 1103,
									"src": "3548:74:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1069,
										"nodeType": "StructuredDocumentation",
										"src": "3630:464:4",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1076,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4109:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4125:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "4117:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1070,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4117:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4137:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "4129:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4129:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4116:29:4"
									},
									"returnParameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4154:0:4"
									},
									"scope": 1103,
									"src": "4100:55:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1077,
										"nodeType": "StructuredDocumentation",
										"src": "4163:324:4",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1084,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4502:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4528:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "4520:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1078,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4520:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4543:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "4538:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1080,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4538:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4519:33:4"
									},
									"returnParameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4561:0:4"
									},
									"scope": 1103,
									"src": "4493:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1085,
										"nodeType": "StructuredDocumentation",
										"src": "4570:145:4",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1092,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4730:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4750:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "4742:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1086,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4742:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4741:17:4"
									},
									"returnParameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4790:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "4782:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1089,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4782:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4781:18:4"
									},
									"scope": 1103,
									"src": "4721:79:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1093,
										"nodeType": "StructuredDocumentation",
										"src": "4808:142:4",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1102,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4965:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4990:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "4982:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1094,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4982:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5005:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "4997:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1096,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4997:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4981:33:4"
									},
									"returnParameters": {
										"id": 1101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "5038:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1099,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5038:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5037:6:4"
									},
									"scope": 1103,
									"src": "4956:88:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1104,
							"src": "264:4783:4",
							"usedErrors": []
						}
					],
					"src": "111:4938:4"
				},
				"id": 4
			},
			"interfaces/IERC721Enumerable.sol": {
				"ast": {
					"absolutePath": "interfaces/IERC721Enumerable.sol",
					"exportedSymbols": {
						"IERC165": [
							872
						],
						"IERC721": [
							1103
						],
						"IERC721Enumerable": [
							1134
						]
					},
					"id": 1135,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1105,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:24:5"
						},
						{
							"absolutePath": "interfaces/IERC721.sol",
							"file": "../interfaces/IERC721.sol",
							"id": 1106,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1135,
							"sourceUnit": 1104,
							"src": "63:35:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1108,
										"name": "IERC721",
										"nameLocations": [
											"274:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1103,
										"src": "274:7:5"
									},
									"id": 1109,
									"nodeType": "InheritanceSpecifier",
									"src": "274:7:5"
								}
							],
							"canonicalName": "IERC721Enumerable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1107,
								"nodeType": "StructuredDocumentation",
								"src": "102:139:5",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1134,
							"linearizedBaseContracts": [
								1134,
								1103,
								872
							],
							"name": "IERC721Enumerable",
							"nameLocation": "253:17:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1110,
										"nodeType": "StructuredDocumentation",
										"src": "291:84:5",
										"text": " @dev Returns the total amount of tokens stored by the contract."
									},
									"functionSelector": "18160ddd",
									"id": 1115,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "390:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "401:2:5"
									},
									"returnParameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "427:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "426:9:5"
									},
									"scope": 1134,
									"src": "381:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1116,
										"nodeType": "StructuredDocumentation",
										"src": "444:174:5",
										"text": " @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
									},
									"functionSelector": "2f745c59",
									"id": 1125,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenOfOwnerByIndex",
									"nameLocation": "633:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1118,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "661:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "653:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "676:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "668:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "652:30:5"
									},
									"returnParameters": {
										"id": 1124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "714:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "706:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "706:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "705:17:5"
									},
									"scope": 1134,
									"src": "624:99:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1126,
										"nodeType": "StructuredDocumentation",
										"src": "731:167:5",
										"text": " @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n Use along with {totalSupply} to enumerate all tokens."
									},
									"functionSelector": "4f6ccce7",
									"id": 1133,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenByIndex",
									"nameLocation": "913:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "934:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "926:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:15:5"
									},
									"returnParameters": {
										"id": 1132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "964:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "964:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:9:5"
									},
									"scope": 1134,
									"src": "904:69:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1135,
							"src": "243:733:5",
							"usedErrors": []
						}
					],
					"src": "35:943:5"
				},
				"id": 5
			},
			"interfaces/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "interfaces/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC165": [
							872
						],
						"IERC721": [
							1103
						],
						"IERC721Metadata": [
							1161
						]
					},
					"id": 1162,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1136,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:6"
						},
						{
							"absolutePath": "interfaces/IERC721.sol",
							"file": "../interfaces/IERC721.sol",
							"id": 1137,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1162,
							"sourceUnit": 1104,
							"src": "143:35:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1139,
										"name": "IERC721",
										"nameLocations": [
											"349:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1103,
										"src": "349:7:6"
									},
									"id": 1140,
									"nodeType": "InheritanceSpecifier",
									"src": "349:7:6"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1138,
								"nodeType": "StructuredDocumentation",
								"src": "182:136:6",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1161,
							"linearizedBaseContracts": [
								1161,
								1103,
								872
							],
							"name": "IERC721Metadata",
							"nameLocation": "330:15:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1141,
										"nodeType": "StructuredDocumentation",
										"src": "364:60:6",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1146,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "439:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "443:2:6"
									},
									"returnParameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "469:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1143,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "469:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "468:15:6"
									},
									"scope": 1161,
									"src": "430:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1147,
										"nodeType": "StructuredDocumentation",
										"src": "492:62:6",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1152,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "569:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "575:2:6"
									},
									"returnParameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "601:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1149,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "601:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:15:6"
									},
									"scope": 1161,
									"src": "560:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1153,
										"nodeType": "StructuredDocumentation",
										"src": "624:92:6",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1160,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "731:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "748:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "740:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "740:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "739:17:6"
									},
									"returnParameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "780:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1157,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "780:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "779:15:6"
									},
									"scope": 1161,
									"src": "722:73:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1162,
							"src": "320:478:6",
							"usedErrors": []
						}
					],
					"src": "115:683:6"
				},
				"id": 6
			},
			"interfaces/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "interfaces/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1179
						]
					},
					"id": 1180,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1163,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "119:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1164,
								"nodeType": "StructuredDocumentation",
								"src": "147:156:7",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1179,
							"linearizedBaseContracts": [
								1179
							],
							"name": "IERC721Receiver",
							"nameLocation": "315:15:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1165,
										"nodeType": "StructuredDocumentation",
										"src": "338:501:7",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1178,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "854:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "889:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "881:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "881:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "916:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "908:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "908:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "939:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "931:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "972:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "957:19:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1172,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "957:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "870:113:7"
									},
									"returnParameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1176,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "1002:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1175,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1002:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1001:8:7"
									},
									"scope": 1179,
									"src": "845:165:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1180,
							"src": "305:708:7",
							"usedErrors": []
						}
					],
					"src": "119:894:7"
				},
				"id": 7
			},
			"interfaces/IError.sol": {
				"ast": {
					"absolutePath": "interfaces/IError.sol",
					"exportedSymbols": {
						"IError": [
							1192
						]
					},
					"id": 1193,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1181,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "31:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IError",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": true,
							"id": 1192,
							"linearizedBaseContracts": [
								1192
							],
							"name": "IError",
							"nameLocation": "69:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "e008b5f9",
									"id": 1183,
									"name": "NotEnoughAmount",
									"nameLocation": "112:15:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "127:2:8"
									},
									"src": "106:24:8"
								},
								{
									"errorSelector": "42327169",
									"id": 1185,
									"name": "AlreadyInjectToken",
									"nameLocation": "189:18:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "207:2:8"
									},
									"src": "183:27:8"
								},
								{
									"errorSelector": "de4461cd",
									"id": 1187,
									"name": "NotInjectToken",
									"nameLocation": "269:14:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "283:2:8"
									},
									"src": "263:23:8"
								},
								{
									"errorSelector": "472e017e",
									"id": 1189,
									"name": "NotBuyer",
									"nameLocation": "321:8:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "329:2:8"
									},
									"src": "315:17:8"
								},
								{
									"errorSelector": "d7c498bf",
									"id": 1191,
									"name": "NorSolder",
									"nameLocation": "367:9:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "376:2:8"
									},
									"src": "361:18:8"
								}
							],
							"scope": 1193,
							"src": "59:323:8",
							"usedErrors": [
								1183,
								1185,
								1187,
								1189,
								1191
							]
						}
					],
					"src": "31:351:8"
				},
				"id": 8
			},
			"interfaces/ITimeStruct.sol": {
				"ast": {
					"absolutePath": "interfaces/ITimeStruct.sol",
					"exportedSymbols": {
						"ITimeStruct": [
							1212
						]
					},
					"id": 1213,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1194,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "31:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ITimeStruct",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": true,
							"id": 1212,
							"linearizedBaseContracts": [
								1212
							],
							"name": "ITimeStruct",
							"nameLocation": "69:11:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ITimeStruct.tradeMes",
									"id": 1211,
									"members": [
										{
											"constant": false,
											"id": 1196,
											"mutability": "mutable",
											"name": "tradeState",
											"nameLocation": "119:10:9",
											"nodeType": "VariableDeclaration",
											"scope": 1211,
											"src": "113:16:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1195,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "113:5:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1198,
											"mutability": "mutable",
											"name": "tradeId",
											"nameLocation": "148:7:9",
											"nodeType": "VariableDeclaration",
											"scope": 1211,
											"src": "141:14:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 1197,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "141:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1200,
											"mutability": "mutable",
											"name": "buyTime",
											"nameLocation": "173:7:9",
											"nodeType": "VariableDeclaration",
											"scope": 1211,
											"src": "166:14:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint56",
												"typeString": "uint56"
											},
											"typeName": {
												"id": 1199,
												"name": "uint56",
												"nodeType": "ElementaryTypeName",
												"src": "166:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint56",
													"typeString": "uint56"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1202,
											"mutability": "mutable",
											"name": "buyTotalAmount",
											"nameLocation": "199:14:9",
											"nodeType": "VariableDeclaration",
											"scope": 1211,
											"src": "191:22:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 1201,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "191:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1204,
											"mutability": "mutable",
											"name": "buyPrice",
											"nameLocation": "259:8:9",
											"nodeType": "VariableDeclaration",
											"scope": 1211,
											"src": "251:16:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 1203,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "251:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1206,
											"mutability": "mutable",
											"name": "tokenAddress",
											"nameLocation": "321:12:9",
											"nodeType": "VariableDeclaration",
											"scope": 1211,
											"src": "313:20:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1205,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "313:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1208,
											"mutability": "mutable",
											"name": "buyerAddress",
											"nameLocation": "352:12:9",
											"nodeType": "VariableDeclaration",
											"scope": 1211,
											"src": "344:20:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1207,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "344:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1210,
											"mutability": "mutable",
											"name": "solderAddress",
											"nameLocation": "383:13:9",
											"nodeType": "VariableDeclaration",
											"scope": 1211,
											"src": "375:21:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1209,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "375:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "tradeMes",
									"nameLocation": "94:8:9",
									"nodeType": "StructDefinition",
									"scope": 1212,
									"src": "87:317:9",
									"visibility": "public"
								}
							],
							"scope": 1213,
							"src": "59:348:9",
							"usedErrors": []
						}
					],
					"src": "31:376:9"
				},
				"id": 9
			},
			"interfaces/IUniswapV3Factory.sol": {
				"ast": {
					"absolutePath": "interfaces/IUniswapV3Factory.sol",
					"exportedSymbols": {
						"IUniswapV3Factory": [
							1295
						]
					},
					"id": 1296,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1214,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3Factory",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1215,
								"nodeType": "StructuredDocumentation",
								"src": "74:165:10",
								"text": "@title The interface for the Uniswap V3 Factory\n @notice The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees"
							},
							"fullyImplemented": false,
							"id": 1295,
							"linearizedBaseContracts": [
								1295
							],
							"name": "IUniswapV3Factory",
							"nameLocation": "249:17:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1216,
										"nodeType": "StructuredDocumentation",
										"src": "274:187:10",
										"text": "@notice Emitted when the owner of the factory is changed\n @param oldOwner The owner before the owner was changed\n @param newOwner The owner after the owner was changed"
									},
									"eventSelector": "b532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c",
									"id": 1222,
									"name": "OwnerChanged",
									"nameLocation": "473:12:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1218,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldOwner",
												"nameLocation": "502:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "486:24:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "486:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1220,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "528:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "512:24:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "512:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "485:52:10"
									},
									"src": "467:71:10"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1223,
										"nodeType": "StructuredDocumentation",
										"src": "546:426:10",
										"text": "@notice Emitted when a pool is created\n @param token0 The first token of the pool by address sort order\n @param token1 The second token of the pool by address sort order\n @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n @param tickSpacing The minimum number of ticks between initialized ticks\n @param pool The address of the created pool"
									},
									"eventSelector": "783cca1c0412dd0d695e784568c96da2e9c22ff989357a2e8b1d9b2b4e6b7118",
									"id": 1235,
									"name": "PoolCreated",
									"nameLocation": "984:11:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1225,
												"indexed": true,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "1022:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "1006:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1006:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1227,
												"indexed": true,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "1055:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "1039:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1039:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1229,
												"indexed": true,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "1087:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "1072:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1228,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "1072:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1231,
												"indexed": false,
												"mutability": "mutable",
												"name": "tickSpacing",
												"nameLocation": "1107:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "1101:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1230,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1101:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1233,
												"indexed": false,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "1137:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "1129:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1129:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "995:153:10"
									},
									"src": "978:171:10"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1236,
										"nodeType": "StructuredDocumentation",
										"src": "1157:277:10",
										"text": "@notice Emitted when a new fee amount is enabled for pool creation via the factory\n @param fee The enabled fee, denominated in hundredths of a bip\n @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee"
									},
									"eventSelector": "c66a3fdf07232cdd185febcc6579d408c241b47ae2f9907d84be655141eeaecc",
									"id": 1242,
									"name": "FeeAmountEnabled",
									"nameLocation": "1446:16:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"indexed": true,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "1478:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "1463:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1237,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "1463:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1240,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickSpacing",
												"nameLocation": "1497:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "1483:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1239,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1483:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1462:47:10"
									},
									"src": "1440:70:10"
								},
								{
									"documentation": {
										"id": 1243,
										"nodeType": "StructuredDocumentation",
										"src": "1518:165:10",
										"text": "@notice Returns the current owner of the factory\n @dev Can be changed by the current owner via setOwner\n @return The address of the factory owner"
									},
									"functionSelector": "8da5cb5b",
									"id": 1248,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1698:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1703:2:10"
									},
									"returnParameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "1729:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:9:10"
									},
									"scope": 1295,
									"src": "1689:49:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1249,
										"nodeType": "StructuredDocumentation",
										"src": "1746:351:10",
										"text": "@notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\n @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\n @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\n @return The tick spacing"
									},
									"functionSelector": "22afcccb",
									"id": 1256,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeAmountTickSpacing",
									"nameLocation": "2112:20:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "2140:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "2133:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1250,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "2133:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2132:12:10"
									},
									"returnParameters": {
										"id": 1255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "2168:5:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1253,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2168:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2167:7:10"
									},
									"scope": 1295,
									"src": "2103:72:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1257,
										"nodeType": "StructuredDocumentation",
										"src": "2183:476:10",
										"text": "@notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\n @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\n @param tokenA The contract address of either token0 or token1\n @param tokenB The contract address of the other token\n @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n @return pool The pool address"
									},
									"functionSelector": "1698ee82",
									"id": 1268,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPool",
									"nameLocation": "2674:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "2700:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "2692:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2692:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "2725:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "2717:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2717:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "2749:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "2742:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1262,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "2742:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2681:78:10"
									},
									"returnParameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "2791:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "2783:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2783:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2782:14:10"
									},
									"scope": 1295,
									"src": "2665:132:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1269,
										"nodeType": "StructuredDocumentation",
										"src": "2805:561:10",
										"text": "@notice Creates a pool for the given two tokens and fee\n @param tokenA One of the two tokens in the desired pool\n @param tokenB The other of the two tokens in the desired pool\n @param fee The desired fee for the pool\n @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\n from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\n are invalid.\n @return pool The address of the newly created pool"
									},
									"functionSelector": "a1671295",
									"id": 1280,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createPool",
									"nameLocation": "3381:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "3410:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "3402:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3402:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "3435:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "3427:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3427:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "3459:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "3452:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1274,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "3452:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3391:78:10"
									},
									"returnParameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "3496:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "3488:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1277,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:14:10"
									},
									"scope": 1295,
									"src": "3372:130:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1281,
										"nodeType": "StructuredDocumentation",
										"src": "3510:146:10",
										"text": "@notice Updates the owner of the factory\n @dev Must be called by the current owner\n @param _owner The new owner of the factory"
									},
									"functionSelector": "13af4035",
									"id": 1286,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setOwner",
									"nameLocation": "3671:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "3688:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "3680:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3680:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3679:16:10"
									},
									"returnParameters": {
										"id": 1285,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3704:0:10"
									},
									"scope": 1295,
									"src": "3662:43:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1287,
										"nodeType": "StructuredDocumentation",
										"src": "3713:329:10",
										"text": "@notice Enables a fee amount with the given tickSpacing\n @dev Fee amounts may never be removed once enabled\n @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\n @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount"
									},
									"functionSelector": "8a7c195f",
									"id": 1294,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "enableFeeAmount",
									"nameLocation": "4057:15:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "4080:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1294,
												"src": "4073:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1288,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "4073:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "tickSpacing",
												"nameLocation": "4091:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1294,
												"src": "4085:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1290,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "4085:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4072:31:10"
									},
									"returnParameters": {
										"id": 1293,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4112:0:10"
									},
									"scope": 1295,
									"src": "4048:65:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1296,
							"src": "239:3877:10",
							"usedErrors": []
						}
					],
					"src": "46:4070:10"
				},
				"id": 10
			},
			"interfaces/UniswapV2/IUniswapV2Factory.sol": {
				"ast": {
					"absolutePath": "interfaces/UniswapV2/IUniswapV2Factory.sol",
					"exportedSymbols": {
						"IUniswapV2Factory": [
							1358
						]
					},
					"id": 1359,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1297,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "31:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV2Factory",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1358,
							"linearizedBaseContracts": [
								1358
							],
							"name": "IUniswapV2Factory",
							"nameLocation": "69:17:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9",
									"id": 1307,
									"name": "PairCreated",
									"nameLocation": "100:11:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1299,
												"indexed": true,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "128:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "112:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "112:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1301,
												"indexed": true,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "152:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "136:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "136:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1303,
												"indexed": false,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "168:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "160:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "160:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1305,
												"indexed": false,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "174:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1304,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "174:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "111:68:11"
									},
									"src": "94:86:11"
								},
								{
									"functionSelector": "017e7e58",
									"id": 1312,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeTo",
									"nameLocation": "197:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "202:2:11"
									},
									"returnParameters": {
										"id": 1311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "228:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "228:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "227:9:11"
									},
									"scope": 1358,
									"src": "188:49:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "094b7415",
									"id": 1317,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeToSetter",
									"nameLocation": "252:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "263:2:11"
									},
									"returnParameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1315,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "289:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1314,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "289:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "288:9:11"
									},
									"scope": 1358,
									"src": "243:55:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e6a43905",
									"id": 1326,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPair",
									"nameLocation": "315:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "331:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "323:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "323:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1321,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "347:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "339:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "339:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "322:32:11"
									},
									"returnParameters": {
										"id": 1325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "386:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "378:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "378:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "377:14:11"
									},
									"scope": 1358,
									"src": "306:86:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1e3dd18b",
									"id": 1333,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allPairs",
									"nameLocation": "407:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "416:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1327,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "416:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:6:11"
									},
									"returnParameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "453:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "445:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "444:14:11"
									},
									"scope": 1358,
									"src": "398:61:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "574f2ba3",
									"id": 1338,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allPairsLength",
									"nameLocation": "474:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1334,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "488:2:11"
									},
									"returnParameters": {
										"id": 1337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1336,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "514:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1335,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "514:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "513:6:11"
									},
									"scope": 1358,
									"src": "465:55:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c9c65396",
									"id": 1347,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createPair",
									"nameLocation": "537:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "556:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "548:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "548:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "572:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "564:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "564:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "547:32:11"
									},
									"returnParameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "606:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "598:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "598:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "597:14:11"
									},
									"scope": 1358,
									"src": "528:84:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f46901ed",
									"id": 1352,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeTo",
									"nameLocation": "629:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1352,
												"src": "638:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "638:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "637:9:11"
									},
									"returnParameters": {
										"id": 1351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "655:0:11"
									},
									"scope": 1358,
									"src": "620:36:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a2e74af6",
									"id": 1357,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeToSetter",
									"nameLocation": "671:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1357,
												"src": "686:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "686:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "685:9:11"
									},
									"returnParameters": {
										"id": 1356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "703:0:11"
									},
									"scope": 1358,
									"src": "662:42:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1359,
							"src": "59:648:11",
							"usedErrors": []
						}
					],
					"src": "31:678:11"
				},
				"id": 11
			},
			"interfaces/UniswapV2/IUniswapV2Router01.sol": {
				"ast": {
					"absolutePath": "interfaces/UniswapV2/IUniswapV2Router01.sol",
					"exportedSymbols": {
						"IUniswapV2Router01": [
							1666
						]
					},
					"id": 1667,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1360,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "31:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV2Router01",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1666,
							"linearizedBaseContracts": [
								1666
							],
							"name": "IUniswapV2Router01",
							"nameLocation": "69:18:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c45a0155",
									"id": 1365,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "104:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "111:2:12"
									},
									"returnParameters": {
										"id": 1364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "137:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "137:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "136:9:12"
									},
									"scope": 1666,
									"src": "95:51:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad5c4648",
									"id": 1370,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH",
									"nameLocation": "161:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "165:2:12"
									},
									"returnParameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "191:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "191:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "190:9:12"
									},
									"scope": 1666,
									"src": "152:48:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e8e33700",
									"id": 1395,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nameLocation": "217:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1372,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "248:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "240:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "240:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "273:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "265:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "265:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1376,
												"mutability": "mutable",
												"name": "amountADesired",
												"nameLocation": "295:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "290:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1375,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "290:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "amountBDesired",
												"nameLocation": "325:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "320:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1377,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "320:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "355:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "350:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1379,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "350:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "381:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "376:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1381,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "376:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "410:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "402:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "402:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1386,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "428:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "423:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1385,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "423:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "229:214:12"
									},
									"returnParameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "467:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "462:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1388,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "462:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "481:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "476:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1390,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "476:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "495:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "490:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1392,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "490:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "461:44:12"
									},
									"scope": 1666,
									"src": "208:298:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f305d719",
									"id": 1416,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidityETH",
									"nameLocation": "521:15:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "555:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "547:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "547:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1399,
												"mutability": "mutable",
												"name": "amountTokenDesired",
												"nameLocation": "576:18:12",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "571:23:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1398,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "571:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1401,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "610:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "605:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1400,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "605:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1403,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "640:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "635:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1402,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "635:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "671:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "663:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "663:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "689:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "684:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1406,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "684:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "536:168:12"
									},
									"returnParameters": {
										"id": 1415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "736:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "731:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1409,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "731:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "754:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "749:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1411,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "749:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1414,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "770:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "765:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1413,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "765:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "730:50:12"
									},
									"scope": 1666,
									"src": "512:269:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "baa2abde",
									"id": 1437,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidity",
									"nameLocation": "796:15:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "830:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "822:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "855:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "847:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "847:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "877:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "872:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1421,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "872:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "902:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "897:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1423,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "897:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "928:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "923:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1425,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "923:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1428,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "957:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "949:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "949:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "975:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "970:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1429,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "970:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "811:179:12"
									},
									"returnParameters": {
										"id": 1436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1433,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "1014:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "1009:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1432,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1009:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1435,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "1028:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "1023:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1434,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1023:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1008:28:12"
									},
									"scope": 1666,
									"src": "787:250:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "02751cec",
									"id": 1456,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETH",
									"nameLocation": "1052:18:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1089:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "1081:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1081:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1110:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "1105:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1440,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1105:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "1135:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "1130:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1442,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1130:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1445,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "1165:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "1160:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1444,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1160:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1447,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1196:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "1188:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1446,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1188:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1449,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1214:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "1209:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1448,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1209:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1070:159:12"
									},
									"returnParameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "1253:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "1248:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1451,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1248:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "1271:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "1266:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1453,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1247:34:12"
									},
									"scope": 1666,
									"src": "1043:239:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2195995c",
									"id": 1485,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityWithPermit",
									"nameLocation": "1297:25:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1458,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "1341:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "1333:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1333:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1460,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "1366:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "1358:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1358:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1462,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1388:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "1383:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1461,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1383:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1464,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "1413:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "1408:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1463,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1408:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "1439:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "1434:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1465,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1434:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1468:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "1460:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1460:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1486:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "1481:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1469,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1481:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "approveMax",
												"nameLocation": "1510:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "1505:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1471,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1505:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1528:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "1522:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1473,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1522:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1539:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "1531:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1475,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1531:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1478,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1550:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "1542:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1477,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1542:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1322:236:12"
									},
									"returnParameters": {
										"id": 1484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "1582:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "1577:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1480,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1577:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1483,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "1596:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "1591:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1482,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1591:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1576:28:12"
									},
									"scope": 1666,
									"src": "1288:317:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ded9382a",
									"id": 1512,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHWithPermit",
									"nameLocation": "1620:28:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1487,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1667:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "1659:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1659:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1489,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1688:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "1683:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1488,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1683:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "1713:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "1708:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1490,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1708:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1493,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "1743:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "1738:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1492,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1738:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1495,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1774:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "1766:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1766:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1792:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "1787:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1496,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1787:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1499,
												"mutability": "mutable",
												"name": "approveMax",
												"nameLocation": "1816:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "1811:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1498,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1811:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1501,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1834:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "1828:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1500,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1828:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1503,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1845:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "1837:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1502,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1837:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1505,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1856:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "1848:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1504,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1848:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1648:216:12"
									},
									"returnParameters": {
										"id": 1511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1508,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "1888:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "1883:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1507,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1883:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1510,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "1906:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "1901:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1509,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1901:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1882:34:12"
									},
									"scope": 1666,
									"src": "1611:306:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "38ed1739",
									"id": 1529,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokens",
									"nameLocation": "1932:24:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1514,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1972:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1529,
												"src": "1967:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1513,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1967:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1516,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "1996:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1529,
												"src": "1991:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1515,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1991:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1519,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2038:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1529,
												"src": "2019:23:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1517,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2019:7:12",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1518,
													"nodeType": "ArrayTypeName",
													"src": "2019:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1521,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2061:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 1529,
												"src": "2053:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2053:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1523,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2079:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1529,
												"src": "2074:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1522,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2074:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1956:138:12"
									},
									"returnParameters": {
										"id": 1528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1527,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2127:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1529,
												"src": "2113:21:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1525,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2113:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1526,
													"nodeType": "ArrayTypeName",
													"src": "2113:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2112:23:12"
									},
									"scope": 1666,
									"src": "1923:213:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8803dbee",
									"id": 1546,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForExactTokens",
									"nameLocation": "2151:24:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1531,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2191:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "2186:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1530,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2186:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1533,
												"mutability": "mutable",
												"name": "amountInMax",
												"nameLocation": "2216:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "2211:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1532,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2211:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1536,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2257:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "2238:23:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1534,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2238:7:12",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1535,
													"nodeType": "ArrayTypeName",
													"src": "2238:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1538,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2280:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "2272:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1537,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2272:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1540,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2298:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "2293:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1539,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2293:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2175:138:12"
									},
									"returnParameters": {
										"id": 1545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1544,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2346:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "2332:21:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1542,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2332:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1543,
													"nodeType": "ArrayTypeName",
													"src": "2332:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2331:23:12"
									},
									"scope": 1666,
									"src": "2142:213:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7ff36ab5",
									"id": 1561,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokens",
									"nameLocation": "2370:21:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1548,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "2397:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1561,
												"src": "2392:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1547,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2392:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1551,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2430:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1561,
												"src": "2411:23:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1549,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2411:7:12",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1550,
													"nodeType": "ArrayTypeName",
													"src": "2411:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1553,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2444:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 1561,
												"src": "2436:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1552,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2436:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1555,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2453:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1561,
												"src": "2448:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1554,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2448:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2391:71:12"
									},
									"returnParameters": {
										"id": 1560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1559,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2530:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1561,
												"src": "2516:21:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1557,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2516:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1558,
													"nodeType": "ArrayTypeName",
													"src": "2516:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2515:23:12"
									},
									"scope": 1666,
									"src": "2361:178:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4a25d94a",
									"id": 1578,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForExactETH",
									"nameLocation": "2554:21:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1563,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2581:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1578,
												"src": "2576:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1562,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2576:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1565,
												"mutability": "mutable",
												"name": "amountInMax",
												"nameLocation": "2597:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1578,
												"src": "2592:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1564,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2592:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1568,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2629:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1578,
												"src": "2610:23:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1566,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2610:7:12",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1567,
													"nodeType": "ArrayTypeName",
													"src": "2610:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1570,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2643:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 1578,
												"src": "2635:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2635:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1572,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2652:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1578,
												"src": "2647:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1571,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2647:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2575:86:12"
									},
									"returnParameters": {
										"id": 1577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1576,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2712:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1578,
												"src": "2698:21:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1574,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2698:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1575,
													"nodeType": "ArrayTypeName",
													"src": "2698:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2697:23:12"
									},
									"scope": 1666,
									"src": "2545:176:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18cbafe5",
									"id": 1595,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETH",
									"nameLocation": "2736:21:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1580,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2763:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1595,
												"src": "2758:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1579,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1582,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "2778:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1595,
												"src": "2773:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1581,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2773:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1585,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2811:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1595,
												"src": "2792:23:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1583,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2792:7:12",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1584,
													"nodeType": "ArrayTypeName",
													"src": "2792:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1587,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2825:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 1595,
												"src": "2817:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2817:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1589,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2834:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1595,
												"src": "2829:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1588,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2829:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:86:12"
									},
									"returnParameters": {
										"id": 1594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1593,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2894:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1595,
												"src": "2880:21:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1591,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2880:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1592,
													"nodeType": "ArrayTypeName",
													"src": "2880:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2879:23:12"
									},
									"scope": 1666,
									"src": "2727:176:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fb3bdb41",
									"id": 1610,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapETHForExactTokens",
									"nameLocation": "2918:21:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1597,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2945:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "2940:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1596,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2940:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1600,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2975:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "2956:23:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1598,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2956:7:12",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1599,
													"nodeType": "ArrayTypeName",
													"src": "2956:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1602,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2989:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "2981:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2981:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1604,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2998:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "2993:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1603,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2993:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:68:12"
									},
									"returnParameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "3075:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "3061:21:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1606,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "3061:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1607,
													"nodeType": "ArrayTypeName",
													"src": "3061:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3060:23:12"
									},
									"scope": 1666,
									"src": "2909:175:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad615dec",
									"id": 1621,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quote",
									"nameLocation": "3101:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "3112:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1621,
												"src": "3107:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1611,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3107:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1614,
												"mutability": "mutable",
												"name": "reserveA",
												"nameLocation": "3126:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1621,
												"src": "3121:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1613,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3121:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1616,
												"mutability": "mutable",
												"name": "reserveB",
												"nameLocation": "3141:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1621,
												"src": "3136:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1615,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3136:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3106:44:12"
									},
									"returnParameters": {
										"id": 1620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1619,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "3179:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1621,
												"src": "3174:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1618,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3174:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3173:14:12"
									},
									"scope": 1666,
									"src": "3092:96:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "054d50d4",
									"id": 1632,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOut",
									"nameLocation": "3203:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1623,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3221:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1632,
												"src": "3216:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1622,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3216:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1625,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "3236:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1632,
												"src": "3231:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1624,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3231:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1627,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "3252:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1632,
												"src": "3247:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1626,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3247:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3215:48:12"
									},
									"returnParameters": {
										"id": 1631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1630,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3292:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1632,
												"src": "3287:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1629,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3287:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3286:16:12"
									},
									"scope": 1666,
									"src": "3194:109:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "85f8c259",
									"id": 1643,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountIn",
									"nameLocation": "3318:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1634,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3335:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1643,
												"src": "3330:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1633,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3330:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1636,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "3351:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1643,
												"src": "3346:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1635,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3346:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1638,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "3367:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1643,
												"src": "3362:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1637,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3362:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3329:49:12"
									},
									"returnParameters": {
										"id": 1642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1641,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3407:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1643,
												"src": "3402:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1640,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3402:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3401:15:12"
									},
									"scope": 1666,
									"src": "3309:108:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d06ca61f",
									"id": 1654,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsOut",
									"nameLocation": "3432:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1645,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3451:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "3446:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1644,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3446:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1648,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "3480:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "3461:23:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1646,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3461:7:12",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1647,
													"nodeType": "ArrayTypeName",
													"src": "3461:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3445:40:12"
									},
									"returnParameters": {
										"id": 1653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1652,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "3523:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "3509:21:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1650,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "3509:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1651,
													"nodeType": "ArrayTypeName",
													"src": "3509:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3508:23:12"
									},
									"scope": 1666,
									"src": "3423:109:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1f00ca74",
									"id": 1665,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsIn",
									"nameLocation": "3547:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1656,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3565:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1665,
												"src": "3560:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1655,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3560:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1659,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "3595:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1665,
												"src": "3576:23:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1657,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3576:7:12",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1658,
													"nodeType": "ArrayTypeName",
													"src": "3576:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3559:41:12"
									},
									"returnParameters": {
										"id": 1664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1663,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "3638:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1665,
												"src": "3624:21:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1661,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "3624:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1662,
													"nodeType": "ArrayTypeName",
													"src": "3624:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3623:23:12"
									},
									"scope": 1666,
									"src": "3538:109:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1667,
							"src": "59:3591:12",
							"usedErrors": []
						}
					],
					"src": "31:3621:12"
				},
				"id": 12
			},
			"interfaces/UniswapV2/IUniswapV2Router02.sol": {
				"ast": {
					"absolutePath": "interfaces/UniswapV2/IUniswapV2Router02.sol",
					"exportedSymbols": {
						"IUniswapV2Router01": [
							1666
						],
						"IUniswapV2Router02": [
							1754
						]
					},
					"id": 1755,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1668,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "31:24:13"
						},
						{
							"absolutePath": "interfaces/UniswapV2/IUniswapV2Router01.sol",
							"file": "./IUniswapV2Router01.sol",
							"id": 1669,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1755,
							"sourceUnit": 1667,
							"src": "59:34:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1670,
										"name": "IUniswapV2Router01",
										"nameLocations": [
											"129:18:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1666,
										"src": "129:18:13"
									},
									"id": 1671,
									"nodeType": "InheritanceSpecifier",
									"src": "129:18:13"
								}
							],
							"canonicalName": "IUniswapV2Router02",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1754,
							"linearizedBaseContracts": [
								1754,
								1666
							],
							"name": "IUniswapV2Router02",
							"nameLocation": "107:18:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "af2979eb",
									"id": 1688,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHSupportingFeeOnTransferTokens",
									"nameLocation": "164:47:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1673,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "230:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1688,
												"src": "222:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1672,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "222:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1675,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "251:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 1688,
												"src": "246:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1674,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "246:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1677,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "276:14:13",
												"nodeType": "VariableDeclaration",
												"scope": 1688,
												"src": "271:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1676,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "271:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1679,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "306:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 1688,
												"src": "301:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1678,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "301:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1681,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "337:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 1688,
												"src": "329:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "329:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1683,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "355:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 1688,
												"src": "350:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1682,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "350:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "211:159:13"
									},
									"returnParameters": {
										"id": 1687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1686,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "394:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 1688,
												"src": "389:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1685,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "389:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "388:16:13"
									},
									"scope": 1754,
									"src": "155:250:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5b0d5984",
									"id": 1713,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
									"nameLocation": "420:57:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1690,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "496:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "488:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1689,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "488:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1692,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "517:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "512:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1691,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "512:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1694,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "542:14:13",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "537:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1693,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "537:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1696,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "572:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "567:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1695,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "567:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1698,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "603:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "595:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1697,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "595:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1700,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "621:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "616:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1699,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "616:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1702,
												"mutability": "mutable",
												"name": "approveMax",
												"nameLocation": "645:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "640:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1701,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "640:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1704,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "663:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "657:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1703,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "657:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1706,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "674:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "666:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1705,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "666:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1708,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "685:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "677:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1707,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "677:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "477:216:13"
									},
									"returnParameters": {
										"id": 1712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1711,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "717:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "712:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1710,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "712:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "711:16:13"
									},
									"scope": 1754,
									"src": "411:317:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5c11d795",
									"id": 1727,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
									"nameLocation": "745:53:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1715,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "814:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 1727,
												"src": "809:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1714,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "809:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1717,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "838:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 1727,
												"src": "833:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1716,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "833:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1720,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "880:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1727,
												"src": "861:23:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1718,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "861:7:13",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1719,
													"nodeType": "ArrayTypeName",
													"src": "861:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1722,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "903:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 1727,
												"src": "895:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1721,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "895:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1724,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "921:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 1727,
												"src": "916:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1723,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "916:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "798:138:13"
									},
									"returnParameters": {
										"id": 1726,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "945:0:13"
									},
									"scope": 1754,
									"src": "736:210:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b6f9de95",
									"id": 1739,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
									"nameLocation": "961:50:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1729,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "1027:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 1739,
												"src": "1022:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1728,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1022:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1732,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1069:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1739,
												"src": "1050:23:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1730,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1050:7:13",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1731,
													"nodeType": "ArrayTypeName",
													"src": "1050:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1734,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1092:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 1739,
												"src": "1084:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1733,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1084:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1736,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1110:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 1739,
												"src": "1105:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1735,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1105:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1011:114:13"
									},
									"returnParameters": {
										"id": 1738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1142:0:13"
									},
									"scope": 1754,
									"src": "952:191:13",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "791ac947",
									"id": 1753,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
									"nameLocation": "1158:50:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1741,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1224:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 1753,
												"src": "1219:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1740,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1219:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1743,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "1248:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 1753,
												"src": "1243:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1742,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1243:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1746,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1290:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1753,
												"src": "1271:23:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1744,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1271:7:13",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1745,
													"nodeType": "ArrayTypeName",
													"src": "1271:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1748,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1313:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 1753,
												"src": "1305:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1747,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1305:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1750,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1331:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 1753,
												"src": "1326:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1749,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1326:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1208:138:13"
									},
									"returnParameters": {
										"id": 1752,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1355:0:13"
									},
									"scope": 1754,
									"src": "1149:207:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1755,
							"src": "97:1262:13",
							"usedErrors": []
						}
					],
					"src": "31:1330:13"
				},
				"id": 13
			},
			"interfaces/UniswapV3/IERC721Permit.sol": {
				"ast": {
					"absolutePath": "interfaces/UniswapV3/IERC721Permit.sol",
					"exportedSymbols": {
						"IERC165": [
							872
						],
						"IERC721": [
							1103
						],
						"IERC721Permit": [
							1789
						]
					},
					"id": 1790,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1756,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46:24:14"
						},
						{
							"absolutePath": "interfaces/IERC721.sol",
							"file": "../../interfaces/IERC721.sol",
							"id": 1757,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1790,
							"sourceUnit": 1104,
							"src": "74:38:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1759,
										"name": "IERC721",
										"nameLocations": [
											"269:7:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1103,
										"src": "269:7:14"
									},
									"id": 1760,
									"nodeType": "InheritanceSpecifier",
									"src": "269:7:14"
								}
							],
							"canonicalName": "IERC721Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1758,
								"nodeType": "StructuredDocumentation",
								"src": "116:126:14",
								"text": "@title ERC721 with permit\n @notice Extension to ERC721 that includes a permit function for signature based approvals"
							},
							"fullyImplemented": false,
							"id": 1789,
							"linearizedBaseContracts": [
								1789,
								1103,
								872
							],
							"name": "IERC721Permit",
							"nameLocation": "252:13:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1761,
										"nodeType": "StructuredDocumentation",
										"src": "284:105:14",
										"text": "@notice The permit typehash used in the permit signature\n @return The typehash for the permit"
									},
									"functionSelector": "30adf81f",
									"id": 1766,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "PERMIT_TYPEHASH",
									"nameLocation": "404:15:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1762,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "419:2:14"
									},
									"returnParameters": {
										"id": 1765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1764,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1766,
												"src": "445:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1763,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "444:9:14"
									},
									"scope": 1789,
									"src": "395:59:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1767,
										"nodeType": "StructuredDocumentation",
										"src": "462:136:14",
										"text": "@notice The domain separator used in the permit signature\n @return The domain seperator used in encoding of permit signature"
									},
									"functionSelector": "3644e515",
									"id": 1772,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "613:16:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "629:2:14"
									},
									"returnParameters": {
										"id": 1771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1772,
												"src": "655:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1769,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:9:14"
									},
									"scope": 1789,
									"src": "604:60:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1773,
										"nodeType": "StructuredDocumentation",
										"src": "672:611:14",
										"text": "@notice Approve of a specific token ID for spending by spender via signature\n @param spender The account that is being approved\n @param tokenId The ID of the token that is being approved for spending\n @param deadline The deadline timestamp by which the call must be mined for the approve to work\n @param v Must produce valid secp256k1 signature from the holder along with `r` and `s`\n @param r Must produce valid secp256k1 signature from the holder along with `v` and `s`\n @param s Must produce valid secp256k1 signature from the holder along with `r` and `v`"
									},
									"functionSelector": "7ac2ff7b",
									"id": 1788,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "1298:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1775,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1323:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1788,
												"src": "1315:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1774,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1315:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1777,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1349:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1788,
												"src": "1341:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1776,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1341:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1779,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1375:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 1788,
												"src": "1367:16:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1367:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1781,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1400:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1788,
												"src": "1394:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1780,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1394:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1783,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1420:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1788,
												"src": "1412:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1782,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1412:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1785,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1440:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1788,
												"src": "1432:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1784,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1432:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1304:144:14"
									},
									"returnParameters": {
										"id": 1787,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1465:0:14"
									},
									"scope": 1789,
									"src": "1289:177:14",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1790,
							"src": "242:1227:14",
							"usedErrors": []
						}
					],
					"src": "46:1423:14"
				},
				"id": 14
			},
			"interfaces/UniswapV3/INonfungiblePositionManager.sol": {
				"ast": {
					"absolutePath": "interfaces/UniswapV3/INonfungiblePositionManager.sol",
					"exportedSymbols": {
						"IERC165": [
							872
						],
						"IERC721": [
							1103
						],
						"IERC721Enumerable": [
							1134
						],
						"IERC721Metadata": [
							1161
						],
						"IERC721Permit": [
							1789
						],
						"INonfungiblePositionManager": [
							1988
						],
						"IPeripheryImmutableState": [
							2004
						],
						"IPeripheryPayments": [
							2030
						],
						"IPoolInitializer": [
							2049
						],
						"PoolAddress": [
							2479
						]
					},
					"id": 1989,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1791,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "31:24:15"
						},
						{
							"id": 1792,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "57:19:15"
						},
						{
							"absolutePath": "interfaces/IERC721Metadata.sol",
							"file": "../../interfaces/IERC721Metadata.sol",
							"id": 1793,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1989,
							"sourceUnit": 1162,
							"src": "80:46:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/IERC721Enumerable.sol",
							"file": "../../interfaces/IERC721Enumerable.sol",
							"id": 1794,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1989,
							"sourceUnit": 1135,
							"src": "128:48:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/UniswapV3/IPoolInitializer.sol",
							"file": "../../interfaces/UniswapV3/IPoolInitializer.sol",
							"id": 1795,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1989,
							"sourceUnit": 2050,
							"src": "180:57:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/UniswapV3/IERC721Permit.sol",
							"file": "../../interfaces/UniswapV3/IERC721Permit.sol",
							"id": 1796,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1989,
							"sourceUnit": 1790,
							"src": "239:54:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/UniswapV3/IPeripheryPayments.sol",
							"file": "../../interfaces/UniswapV3/IPeripheryPayments.sol",
							"id": 1797,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1989,
							"sourceUnit": 2031,
							"src": "295:59:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/UniswapV3/IPeripheryImmutableState.sol",
							"file": "../../interfaces/UniswapV3/IPeripheryImmutableState.sol",
							"id": 1798,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1989,
							"sourceUnit": 2005,
							"src": "356:65:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "libraries/PoolAddress.sol",
							"file": "../../libraries/PoolAddress.sol",
							"id": 1799,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1989,
							"sourceUnit": 2480,
							"src": "423:41:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1801,
										"name": "IPoolInitializer",
										"nameLocations": [
											"694:16:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2049,
										"src": "694:16:15"
									},
									"id": 1802,
									"nodeType": "InheritanceSpecifier",
									"src": "694:16:15"
								},
								{
									"baseName": {
										"id": 1803,
										"name": "IPeripheryPayments",
										"nameLocations": [
											"717:18:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2030,
										"src": "717:18:15"
									},
									"id": 1804,
									"nodeType": "InheritanceSpecifier",
									"src": "717:18:15"
								},
								{
									"baseName": {
										"id": 1805,
										"name": "IPeripheryImmutableState",
										"nameLocations": [
											"742:24:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2004,
										"src": "742:24:15"
									},
									"id": 1806,
									"nodeType": "InheritanceSpecifier",
									"src": "742:24:15"
								},
								{
									"baseName": {
										"id": 1807,
										"name": "IERC721Metadata",
										"nameLocations": [
											"773:15:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1161,
										"src": "773:15:15"
									},
									"id": 1808,
									"nodeType": "InheritanceSpecifier",
									"src": "773:15:15"
								},
								{
									"baseName": {
										"id": 1809,
										"name": "IERC721Enumerable",
										"nameLocations": [
											"795:17:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1134,
										"src": "795:17:15"
									},
									"id": 1810,
									"nodeType": "InheritanceSpecifier",
									"src": "795:17:15"
								},
								{
									"baseName": {
										"id": 1811,
										"name": "IERC721Permit",
										"nameLocations": [
											"819:13:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1789,
										"src": "819:13:15"
									},
									"id": 1812,
									"nodeType": "InheritanceSpecifier",
									"src": "819:13:15"
								}
							],
							"canonicalName": "INonfungiblePositionManager",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1800,
								"nodeType": "StructuredDocumentation",
								"src": "468:180:15",
								"text": "@title Non-fungible token for positions\n @notice Wraps Uniswap V3 positions in a non-fungible token interface which allows for them to be transferred\n and authorized."
							},
							"fullyImplemented": false,
							"id": 1988,
							"linearizedBaseContracts": [
								1988,
								1789,
								1134,
								1161,
								1103,
								872,
								2004,
								2030,
								2049
							],
							"name": "INonfungiblePositionManager",
							"nameLocation": "658:27:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1813,
										"nodeType": "StructuredDocumentation",
										"src": "841:463:15",
										"text": "@notice Emitted when liquidity is increased for a position NFT\n @dev Also emitted when a token is minted\n @param tokenId The ID of the token for which liquidity was increased\n @param liquidity The amount by which liquidity for the NFT position was increased\n @param amount0 The amount of token0 that was paid for the increase in liquidity\n @param amount1 The amount of token1 that was paid for the increase in liquidity"
									},
									"eventSelector": "3067048beee31b25b2f1681f88dac838c8bba36af25bfb2b7cf7473a5847e35f",
									"id": 1823,
									"name": "IncreaseLiquidity",
									"nameLocation": "1316:17:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1815,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1350:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 1823,
												"src": "1334:23:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1814,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1334:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1817,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1367:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 1823,
												"src": "1359:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1816,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1359:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1819,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1386:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 1823,
												"src": "1378:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1818,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1378:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1821,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1403:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 1823,
												"src": "1395:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1395:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1333:78:15"
									},
									"src": "1310:102:15"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1824,
										"nodeType": "StructuredDocumentation",
										"src": "1418:423:15",
										"text": "@notice Emitted when liquidity is decreased for a position NFT\n @param tokenId The ID of the token for which liquidity was decreased\n @param liquidity The amount by which liquidity for the NFT position was decreased\n @param amount0 The amount of token0 that was accounted for the decrease in liquidity\n @param amount1 The amount of token1 that was accounted for the decrease in liquidity"
									},
									"eventSelector": "26f6a048ee9138f2c0ce266f322cb99228e8d619ae2bff30c67f8dcf9d2377b4",
									"id": 1834,
									"name": "DecreaseLiquidity",
									"nameLocation": "1853:17:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1826,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1887:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 1834,
												"src": "1871:23:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1825,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1871:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1828,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1904:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 1834,
												"src": "1896:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1827,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1896:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1830,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1923:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 1834,
												"src": "1915:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1829,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1915:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1832,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1940:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 1834,
												"src": "1932:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1932:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1870:78:15"
									},
									"src": "1847:102:15"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1835,
										"nodeType": "StructuredDocumentation",
										"src": "1955:527:15",
										"text": "@notice Emitted when tokens are collected for a position NFT\n @dev The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior\n @param tokenId The ID of the token for which underlying tokens were collected\n @param recipient The address of the account that received the collected tokens\n @param amount0 The amount of token0 owed to the position that was collected\n @param amount1 The amount of token1 owed to the position that was collected"
									},
									"eventSelector": "40d0efd1a53d60ecbf40971b9daf7dc90178c3aadc7aab1765632738fa8b8f01",
									"id": 1845,
									"name": "Collect",
									"nameLocation": "2494:7:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1837,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2518:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 1845,
												"src": "2502:23:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1836,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2502:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1839,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2535:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 1845,
												"src": "2527:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1838,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2527:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1841,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2554:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 1845,
												"src": "2546:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1840,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2546:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1843,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2571:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 1845,
												"src": "2563:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1842,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2563:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2501:78:15"
									},
									"src": "2488:92:15"
								},
								{
									"documentation": {
										"id": 1846,
										"nodeType": "StructuredDocumentation",
										"src": "2588:1171:15",
										"text": "@notice Returns the position information associated with a given token ID.\n @dev Throws if the token ID is not valid.\n @param tokenId The ID of the token that represents the position\n @return nonce The nonce for permits\n @return operator The address that is approved for spending\n @return token0 The address of the token0 for a specific pool\n @return token1 The address of the token1 for a specific pool\n @return fee The fee associated with the pool\n @return tickLower The lower end of the tick range for the position\n @return tickUpper The higher end of the tick range for the position\n @return liquidity The liquidity of the position\n @return feeGrowthInside0LastX128 The fee growth of token0 as of the last action on the individual position\n @return feeGrowthInside1LastX128 The fee growth of token1 as of the last action on the individual position\n @return tokensOwed0 The uncollected amount of token0 owed to the position as of the last computation\n @return tokensOwed1 The uncollected amount of token1 owed to the position as of the last computation"
									},
									"functionSelector": "99fbab88",
									"id": 1875,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "positions",
									"nameLocation": "3774:9:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1848,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3792:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 1875,
												"src": "3784:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1847,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3784:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3783:17:15"
									},
									"returnParameters": {
										"id": 1874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1851,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "3872:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 1875,
												"src": "3865:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1850,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "3865:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1853,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3900:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 1875,
												"src": "3892:16:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1852,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1855,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "3931:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 1875,
												"src": "3923:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1854,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3923:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1857,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "3960:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 1875,
												"src": "3952:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3952:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1859,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "3988:3:15",
												"nodeType": "VariableDeclaration",
												"scope": 1875,
												"src": "3981:10:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1858,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "3981:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1861,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "4012:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 1875,
												"src": "4006:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1860,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "4006:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1863,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "4042:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 1875,
												"src": "4036:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1862,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "4036:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1865,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "4074:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 1875,
												"src": "4066:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1864,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4066:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1867,
												"mutability": "mutable",
												"name": "feeGrowthInside0LastX128",
												"nameLocation": "4106:24:15",
												"nodeType": "VariableDeclaration",
												"scope": 1875,
												"src": "4098:32:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1866,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4098:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1869,
												"mutability": "mutable",
												"name": "feeGrowthInside1LastX128",
												"nameLocation": "4153:24:15",
												"nodeType": "VariableDeclaration",
												"scope": 1875,
												"src": "4145:32:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1868,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4145:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1871,
												"mutability": "mutable",
												"name": "tokensOwed0",
												"nameLocation": "4200:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 1875,
												"src": "4192:19:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1870,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4192:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1873,
												"mutability": "mutable",
												"name": "tokensOwed1",
												"nameLocation": "4234:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 1875,
												"src": "4226:19:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1872,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4226:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3850:406:15"
									},
									"scope": 1988,
									"src": "3765:492:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "INonfungiblePositionManager.MintParams",
									"id": 1898,
									"members": [
										{
											"constant": false,
											"id": 1877,
											"mutability": "mutable",
											"name": "token0",
											"nameLocation": "4302:6:15",
											"nodeType": "VariableDeclaration",
											"scope": 1898,
											"src": "4294:14:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1876,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4294:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1879,
											"mutability": "mutable",
											"name": "token1",
											"nameLocation": "4327:6:15",
											"nodeType": "VariableDeclaration",
											"scope": 1898,
											"src": "4319:14:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1878,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4319:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1881,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "4351:3:15",
											"nodeType": "VariableDeclaration",
											"scope": 1898,
											"src": "4344:10:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 1880,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "4344:6:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1883,
											"mutability": "mutable",
											"name": "tickLower",
											"nameLocation": "4371:9:15",
											"nodeType": "VariableDeclaration",
											"scope": 1898,
											"src": "4365:15:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											},
											"typeName": {
												"id": 1882,
												"name": "int24",
												"nodeType": "ElementaryTypeName",
												"src": "4365:5:15",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1885,
											"mutability": "mutable",
											"name": "tickUpper",
											"nameLocation": "4397:9:15",
											"nodeType": "VariableDeclaration",
											"scope": 1898,
											"src": "4391:15:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											},
											"typeName": {
												"id": 1884,
												"name": "int24",
												"nodeType": "ElementaryTypeName",
												"src": "4391:5:15",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1887,
											"mutability": "mutable",
											"name": "amount0Desired",
											"nameLocation": "4425:14:15",
											"nodeType": "VariableDeclaration",
											"scope": 1898,
											"src": "4417:22:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1886,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4417:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1889,
											"mutability": "mutable",
											"name": "amount1Desired",
											"nameLocation": "4458:14:15",
											"nodeType": "VariableDeclaration",
											"scope": 1898,
											"src": "4450:22:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1888,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4450:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1891,
											"mutability": "mutable",
											"name": "amount0Min",
											"nameLocation": "4491:10:15",
											"nodeType": "VariableDeclaration",
											"scope": 1898,
											"src": "4483:18:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1890,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4483:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1893,
											"mutability": "mutable",
											"name": "amount1Min",
											"nameLocation": "4520:10:15",
											"nodeType": "VariableDeclaration",
											"scope": 1898,
											"src": "4512:18:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1892,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4512:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1895,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "4549:9:15",
											"nodeType": "VariableDeclaration",
											"scope": 1898,
											"src": "4541:17:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1894,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4541:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1897,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "4577:8:15",
											"nodeType": "VariableDeclaration",
											"scope": 1898,
											"src": "4569:16:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1896,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4569:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "MintParams",
									"nameLocation": "4272:10:15",
									"nodeType": "StructDefinition",
									"scope": 1988,
									"src": "4265:328:15",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1899,
										"nodeType": "StructuredDocumentation",
										"src": "4601:593:15",
										"text": "@notice Creates a new position wrapped in a NFT\n @dev Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized\n a method does not exist, i.e. the pool is assumed to be initialized.\n @param params The params necessary to mint a position, encoded as `MintParams` in calldata\n @return tokenId The ID of the token that represents the minted position\n @return liquidity The amount of liquidity for this position\n @return amount0 The amount of token0\n @return amount1 The amount of token1"
									},
									"functionSelector": "88316456",
									"id": 1913,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "5209:4:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1902,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "5234:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 1913,
												"src": "5214:26:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_MintParams_$1898_calldata_ptr",
													"typeString": "struct INonfungiblePositionManager.MintParams"
												},
												"typeName": {
													"id": 1901,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1900,
														"name": "MintParams",
														"nameLocations": [
															"5214:10:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1898,
														"src": "5214:10:15"
													},
													"referencedDeclaration": 1898,
													"src": "5214:10:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MintParams_$1898_storage_ptr",
														"typeString": "struct INonfungiblePositionManager.MintParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5213:28:15"
									},
									"returnParameters": {
										"id": 1912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1905,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5317:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 1913,
												"src": "5309:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5309:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1907,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "5347:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 1913,
												"src": "5339:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1906,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5339:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1909,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5379:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 1913,
												"src": "5371:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1908,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5371:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1911,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5409:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 1913,
												"src": "5401:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1910,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5401:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5294:133:15"
									},
									"scope": 1988,
									"src": "5200:228:15",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "INonfungiblePositionManager.IncreaseLiquidityParams",
									"id": 1926,
									"members": [
										{
											"constant": false,
											"id": 1915,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "5486:7:15",
											"nodeType": "VariableDeclaration",
											"scope": 1926,
											"src": "5478:15:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1914,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5478:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1917,
											"mutability": "mutable",
											"name": "amount0Desired",
											"nameLocation": "5512:14:15",
											"nodeType": "VariableDeclaration",
											"scope": 1926,
											"src": "5504:22:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1916,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5504:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1919,
											"mutability": "mutable",
											"name": "amount1Desired",
											"nameLocation": "5545:14:15",
											"nodeType": "VariableDeclaration",
											"scope": 1926,
											"src": "5537:22:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1918,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5537:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1921,
											"mutability": "mutable",
											"name": "amount0Min",
											"nameLocation": "5578:10:15",
											"nodeType": "VariableDeclaration",
											"scope": 1926,
											"src": "5570:18:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1920,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5570:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1923,
											"mutability": "mutable",
											"name": "amount1Min",
											"nameLocation": "5607:10:15",
											"nodeType": "VariableDeclaration",
											"scope": 1926,
											"src": "5599:18:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1922,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5599:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1925,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "5636:8:15",
											"nodeType": "VariableDeclaration",
											"scope": 1926,
											"src": "5628:16:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1924,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5628:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "IncreaseLiquidityParams",
									"nameLocation": "5443:23:15",
									"nodeType": "StructDefinition",
									"scope": 1988,
									"src": "5436:216:15",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1927,
										"nodeType": "StructuredDocumentation",
										"src": "5660:830:15",
										"text": "@notice Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`\n @param params tokenId The ID of the token for which liquidity is being increased,\n amount0Desired The desired amount of token0 to be spent,\n amount1Desired The desired amount of token1 to be spent,\n amount0Min The minimum amount of token0 to spend, which serves as a slippage check,\n amount1Min The minimum amount of token1 to spend, which serves as a slippage check,\n deadline The time by which the transaction must be included to effect the change\n @return liquidity The new liquidity amount as a result of the increase\n @return amount0 The amount of token0 to acheive resulting liquidity\n @return amount1 The amount of token1 to acheive resulting liquidity"
									},
									"functionSelector": "219f5d17",
									"id": 1939,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "increaseLiquidity",
									"nameLocation": "6505:17:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1930,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "6556:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 1939,
												"src": "6523:39:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_IncreaseLiquidityParams_$1926_calldata_ptr",
													"typeString": "struct INonfungiblePositionManager.IncreaseLiquidityParams"
												},
												"typeName": {
													"id": 1929,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1928,
														"name": "IncreaseLiquidityParams",
														"nameLocations": [
															"6523:23:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1926,
														"src": "6523:23:15"
													},
													"referencedDeclaration": 1926,
													"src": "6523:23:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_IncreaseLiquidityParams_$1926_storage_ptr",
														"typeString": "struct INonfungiblePositionManager.IncreaseLiquidityParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6522:41:15"
									},
									"returnParameters": {
										"id": 1938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1933,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "6639:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 1939,
												"src": "6631:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1932,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "6631:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1935,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "6671:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 1939,
												"src": "6663:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1934,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6663:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1937,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "6701:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 1939,
												"src": "6693:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1936,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6693:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6616:103:15"
									},
									"scope": 1988,
									"src": "6496:224:15",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "INonfungiblePositionManager.DecreaseLiquidityParams",
									"id": 1950,
									"members": [
										{
											"constant": false,
											"id": 1941,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "6778:7:15",
											"nodeType": "VariableDeclaration",
											"scope": 1950,
											"src": "6770:15:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1940,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6770:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1943,
											"mutability": "mutable",
											"name": "liquidity",
											"nameLocation": "6804:9:15",
											"nodeType": "VariableDeclaration",
											"scope": 1950,
											"src": "6796:17:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 1942,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "6796:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1945,
											"mutability": "mutable",
											"name": "amount0Min",
											"nameLocation": "6832:10:15",
											"nodeType": "VariableDeclaration",
											"scope": 1950,
											"src": "6824:18:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1944,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6824:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1947,
											"mutability": "mutable",
											"name": "amount1Min",
											"nameLocation": "6861:10:15",
											"nodeType": "VariableDeclaration",
											"scope": 1950,
											"src": "6853:18:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1946,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6853:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1949,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "6890:8:15",
											"nodeType": "VariableDeclaration",
											"scope": 1950,
											"src": "6882:16:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1948,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6882:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "DecreaseLiquidityParams",
									"nameLocation": "6735:23:15",
									"nodeType": "StructDefinition",
									"scope": 1988,
									"src": "6728:178:15",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1951,
										"nodeType": "StructuredDocumentation",
										"src": "6914:709:15",
										"text": "@notice Decreases the amount of liquidity in a position and accounts it to the position\n @param params tokenId The ID of the token for which liquidity is being decreased,\n amount The amount by which liquidity will be decreased,\n amount0Min The minimum amount of token0 that should be accounted for the burned liquidity,\n amount1Min The minimum amount of token1 that should be accounted for the burned liquidity,\n deadline The time by which the transaction must be included to effect the change\n @return amount0 The amount of token0 accounted to the position's tokens owed\n @return amount1 The amount of token1 accounted to the position's tokens owed"
									},
									"functionSelector": "0c49ccbe",
									"id": 1961,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseLiquidity",
									"nameLocation": "7638:17:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1954,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "7689:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 1961,
												"src": "7656:39:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_DecreaseLiquidityParams_$1950_calldata_ptr",
													"typeString": "struct INonfungiblePositionManager.DecreaseLiquidityParams"
												},
												"typeName": {
													"id": 1953,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1952,
														"name": "DecreaseLiquidityParams",
														"nameLocations": [
															"7656:23:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1950,
														"src": "7656:23:15"
													},
													"referencedDeclaration": 1950,
													"src": "7656:23:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DecreaseLiquidityParams_$1950_storage_ptr",
														"typeString": "struct INonfungiblePositionManager.DecreaseLiquidityParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7655:41:15"
									},
									"returnParameters": {
										"id": 1960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1957,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "7758:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 1961,
												"src": "7750:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1956,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7750:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1959,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "7775:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 1961,
												"src": "7767:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1958,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7767:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7749:34:15"
									},
									"scope": 1988,
									"src": "7629:155:15",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "INonfungiblePositionManager.CollectParams",
									"id": 1970,
									"members": [
										{
											"constant": false,
											"id": 1963,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "7832:7:15",
											"nodeType": "VariableDeclaration",
											"scope": 1970,
											"src": "7824:15:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1962,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "7824:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1965,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "7858:9:15",
											"nodeType": "VariableDeclaration",
											"scope": 1970,
											"src": "7850:17:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1964,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "7850:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1967,
											"mutability": "mutable",
											"name": "amount0Max",
											"nameLocation": "7886:10:15",
											"nodeType": "VariableDeclaration",
											"scope": 1970,
											"src": "7878:18:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 1966,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "7878:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1969,
											"mutability": "mutable",
											"name": "amount1Max",
											"nameLocation": "7915:10:15",
											"nodeType": "VariableDeclaration",
											"scope": 1970,
											"src": "7907:18:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 1968,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "7907:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "CollectParams",
									"nameLocation": "7799:13:15",
									"nodeType": "StructDefinition",
									"scope": 1988,
									"src": "7792:141:15",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1971,
										"nodeType": "StructuredDocumentation",
										"src": "7941:495:15",
										"text": "@notice Collects up to a maximum amount of fees owed to a specific position to the recipient\n @param params tokenId The ID of the NFT for which tokens are being collected,\n recipient The account that should receive the tokens,\n amount0Max The maximum amount of token0 to collect,\n amount1Max The maximum amount of token1 to collect\n @return amount0 The amount of fees collected in token0\n @return amount1 The amount of fees collected in token1"
									},
									"functionSelector": "fc6f7865",
									"id": 1981,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collect",
									"nameLocation": "8451:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1974,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "8482:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 1981,
												"src": "8459:29:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_CollectParams_$1970_calldata_ptr",
													"typeString": "struct INonfungiblePositionManager.CollectParams"
												},
												"typeName": {
													"id": 1973,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1972,
														"name": "CollectParams",
														"nameLocations": [
															"8459:13:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1970,
														"src": "8459:13:15"
													},
													"referencedDeclaration": 1970,
													"src": "8459:13:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_CollectParams_$1970_storage_ptr",
														"typeString": "struct INonfungiblePositionManager.CollectParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8458:31:15"
									},
									"returnParameters": {
										"id": 1980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1977,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "8524:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 1981,
												"src": "8516:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1976,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8516:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1979,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "8541:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 1981,
												"src": "8533:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1978,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8533:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8515:34:15"
									},
									"scope": 1988,
									"src": "8442:108:15",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1982,
										"nodeType": "StructuredDocumentation",
										"src": "8558:215:15",
										"text": "@notice Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens\n must be collected first.\n @param tokenId The ID of the token that is being burned"
									},
									"functionSelector": "42966c68",
									"id": 1987,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "8788:4:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1984,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8801:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 1987,
												"src": "8793:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8793:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8792:17:15"
									},
									"returnParameters": {
										"id": 1986,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8826:0:15"
									},
									"scope": 1988,
									"src": "8779:48:15",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1989,
							"src": "648:8182:15",
							"usedErrors": []
						}
					],
					"src": "31:8799:15"
				},
				"id": 15
			},
			"interfaces/UniswapV3/IPeripheryImmutableState.sol": {
				"ast": {
					"absolutePath": "interfaces/UniswapV3/IPeripheryImmutableState.sol",
					"exportedSymbols": {
						"IPeripheryImmutableState": [
							2004
						]
					},
					"id": 2005,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1990,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "31:24:16"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPeripheryImmutableState",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1991,
								"nodeType": "StructuredDocumentation",
								"src": "59:93:16",
								"text": "@title Immutable state\n @notice Functions that return immutable state of the router"
							},
							"fullyImplemented": false,
							"id": 2004,
							"linearizedBaseContracts": [
								2004
							],
							"name": "IPeripheryImmutableState",
							"nameLocation": "162:24:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1992,
										"nodeType": "StructuredDocumentation",
										"src": "194:57:16",
										"text": "@return Returns the address of the Uniswap V3 factory"
									},
									"functionSelector": "c45a0155",
									"id": 1997,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "266:7:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1993,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "273:2:16"
									},
									"returnParameters": {
										"id": 1996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1995,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1997,
												"src": "299:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1994,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "299:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "298:9:16"
									},
									"scope": 2004,
									"src": "257:51:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1998,
										"nodeType": "StructuredDocumentation",
										"src": "316:40:16",
										"text": "@return Returns the address of WETH9"
									},
									"functionSelector": "4aa4a4fc",
									"id": 2003,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH9",
									"nameLocation": "371:5:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1999,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "376:2:16"
									},
									"returnParameters": {
										"id": 2002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2001,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2003,
												"src": "402:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2000,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "402:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "401:9:16"
									},
									"scope": 2004,
									"src": "362:49:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2005,
							"src": "152:262:16",
							"usedErrors": []
						}
					],
					"src": "31:383:16"
				},
				"id": 16
			},
			"interfaces/UniswapV3/IPeripheryPayments.sol": {
				"ast": {
					"absolutePath": "interfaces/UniswapV3/IPeripheryPayments.sol",
					"exportedSymbols": {
						"IPeripheryPayments": [
							2030
						]
					},
					"id": 2031,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2006,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "31:24:17"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPeripheryPayments",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2007,
								"nodeType": "StructuredDocumentation",
								"src": "59:94:17",
								"text": "@title Periphery Payments\n @notice Functions to ease deposits and withdrawals of ETH"
							},
							"fullyImplemented": false,
							"id": 2030,
							"linearizedBaseContracts": [
								2030
							],
							"name": "IPeripheryPayments",
							"nameLocation": "163:18:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2008,
										"nodeType": "StructuredDocumentation",
										"src": "189:305:17",
										"text": "@notice Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\n @dev The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\n @param amountMinimum The minimum amount of WETH9 to unwrap\n @param recipient The address receiving ETH"
									},
									"functionSelector": "49404b7c",
									"id": 2015,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "unwrapWETH9",
									"nameLocation": "509:11:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2010,
												"mutability": "mutable",
												"name": "amountMinimum",
												"nameLocation": "529:13:17",
												"nodeType": "VariableDeclaration",
												"scope": 2015,
												"src": "521:21:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "521:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2012,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "552:9:17",
												"nodeType": "VariableDeclaration",
												"scope": 2015,
												"src": "544:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2011,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "544:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "520:42:17"
									},
									"returnParameters": {
										"id": 2014,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "579:0:17"
									},
									"scope": 2030,
									"src": "500:80:17",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2016,
										"nodeType": "StructuredDocumentation",
										"src": "588:227:17",
										"text": "@notice Refunds any ETH balance held by this contract to the `msg.sender`\n @dev Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps\n that use ether for the input amount"
									},
									"functionSelector": "12210e8a",
									"id": 2019,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "refundETH",
									"nameLocation": "830:9:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2017,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "839:2:17"
									},
									"returnParameters": {
										"id": 2018,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "858:0:17"
									},
									"scope": 2030,
									"src": "821:38:17",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2020,
										"nodeType": "StructuredDocumentation",
										"src": "867:431:17",
										"text": "@notice Transfers the full amount of a token held by this contract to recipient\n @dev The amountMinimum parameter prevents malicious contracts from stealing the token from users\n @param token The contract address of the token which will be transferred to `recipient`\n @param amountMinimum The minimum amount of token required for a transfer\n @param recipient The destination address of the token"
									},
									"functionSelector": "df2ab5bb",
									"id": 2029,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sweepToken",
									"nameLocation": "1313:10:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2022,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1342:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 2029,
												"src": "1334:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1334:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2024,
												"mutability": "mutable",
												"name": "amountMinimum",
												"nameLocation": "1366:13:17",
												"nodeType": "VariableDeclaration",
												"scope": 2029,
												"src": "1358:21:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1358:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2026,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1398:9:17",
												"nodeType": "VariableDeclaration",
												"scope": 2029,
												"src": "1390:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2025,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1390:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1323:91:17"
									},
									"returnParameters": {
										"id": 2028,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1431:0:17"
									},
									"scope": 2030,
									"src": "1304:128:17",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2031,
							"src": "153:1282:17",
							"usedErrors": []
						}
					],
					"src": "31:1404:17"
				},
				"id": 17
			},
			"interfaces/UniswapV3/IPoolInitializer.sol": {
				"ast": {
					"absolutePath": "interfaces/UniswapV3/IPoolInitializer.sol",
					"exportedSymbols": {
						"IPoolInitializer": [
							2049
						]
					},
					"id": 2050,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2032,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "31:24:18"
						},
						{
							"id": 2033,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "57:19:18"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPoolInitializer",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2034,
								"nodeType": "StructuredDocumentation",
								"src": "80:197:18",
								"text": "@title Creates and initializes V3 Pools\n @notice Provides a method for creating and initializing a pool, if necessary, for bundling with other methods that\n require the pool to exist."
							},
							"fullyImplemented": false,
							"id": 2049,
							"linearizedBaseContracts": [
								2049
							],
							"name": "IPoolInitializer",
							"nameLocation": "287:16:18",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2035,
										"nodeType": "StructuredDocumentation",
										"src": "311:654:18",
										"text": "@notice Creates a new pool if it does not exist, then initializes if not initialized\n @dev This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool\n @param token0 The contract address of token0 of the pool\n @param token1 The contract address of token1 of the pool\n @param fee The fee amount of the v3 pool for the specified token pair\n @param sqrtPriceX96 The initial square root price of the pool as a Q64.96 value\n @return pool Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary"
									},
									"functionSelector": "13ead562",
									"id": 2048,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createAndInitializePoolIfNecessary",
									"nameLocation": "980:34:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2037,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "1033:6:18",
												"nodeType": "VariableDeclaration",
												"scope": 2048,
												"src": "1025:14:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2036,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1025:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2039,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "1058:6:18",
												"nodeType": "VariableDeclaration",
												"scope": 2048,
												"src": "1050:14:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2038,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1050:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2041,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "1082:3:18",
												"nodeType": "VariableDeclaration",
												"scope": 2048,
												"src": "1075:10:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 2040,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "1075:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2043,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "1104:12:18",
												"nodeType": "VariableDeclaration",
												"scope": 2048,
												"src": "1096:20:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2042,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1096:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1014:109:18"
									},
									"returnParameters": {
										"id": 2047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2046,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "1158:4:18",
												"nodeType": "VariableDeclaration",
												"scope": 2048,
												"src": "1150:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2045,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1150:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1149:14:18"
									},
									"scope": 2049,
									"src": "971:193:18",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2050,
							"src": "277:890:18",
							"usedErrors": []
						}
					],
					"src": "31:1136:18"
				},
				"id": 18
			},
			"libraries/Address.sol": {
				"ast": {
					"absolutePath": "libraries/Address.sol",
					"exportedSymbols": {
						"Address": [
							2379
						]
					},
					"id": 2380,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2051,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "104:24:19"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2052,
								"nodeType": "StructuredDocumentation",
								"src": "132:69:19",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 2379,
							"linearizedBaseContracts": [
								2379
							],
							"name": "Address",
							"nameLocation": "211:7:19",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2066,
										"nodeType": "Block",
										"src": "1518:260:19",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 2060,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2055,
																"src": "1747:7:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2061,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1755:4:19",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1747:12:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2062,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1760:6:19",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1747:19:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2063,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1769:1:19",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1747:23:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2059,
												"id": 2065,
												"nodeType": "Return",
												"src": "1740:30:19"
											}
										]
									},
									"documentation": {
										"id": 2053,
										"nodeType": "StructuredDocumentation",
										"src": "226:1220:19",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 2067,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1461:10:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2055,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1480:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 2067,
												"src": "1472:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2054,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1472:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1471:17:19"
									},
									"returnParameters": {
										"id": 2059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2058,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2067,
												"src": "1512:4:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2057,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1512:4:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1511:6:19"
									},
									"scope": 2379,
									"src": "1452:326:19",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2100,
										"nodeType": "Block",
										"src": "2782:246:19",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2082,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 2078,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2809:4:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$2379",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$2379",
																				"typeString": "library Address"
																			}
																		],
																		"id": 2077,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2801:7:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2076,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2801:7:19",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2079,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2801:13:19",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 2080,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2815:7:19",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2801:21:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2081,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2072,
																"src": "2826:6:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2801:31:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 2083,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2834:31:19",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 2075,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2793:7:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2793:73:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2085,
												"nodeType": "ExpressionStatement",
												"src": "2793:73:19"
											},
											{
												"assignments": [
													2087,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 2087,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2885:7:19",
														"nodeType": "VariableDeclaration",
														"scope": 2100,
														"src": "2880:12:19",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2086,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2880:4:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 2094,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 2092,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2928:2:19",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 2088,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2070,
																"src": "2898:9:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 2089,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2908:4:19",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2898:14:19",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2091,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2090,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2072,
																"src": "2920:6:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2898:29:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2898:33:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2879:52:19"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2096,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2087,
															"src": "2950:7:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 2097,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2959:60:19",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 2095,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2942:7:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2942:78:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2099,
												"nodeType": "ExpressionStatement",
												"src": "2942:78:19"
											}
										]
									},
									"documentation": {
										"id": 2068,
										"nodeType": "StructuredDocumentation",
										"src": "1786:919:19",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 2101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2720:9:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2070,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2746:9:19",
												"nodeType": "VariableDeclaration",
												"scope": 2101,
												"src": "2730:25:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2069,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2730:15:19",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2072,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2765:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 2101,
												"src": "2757:14:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2071,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2757:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2729:43:19"
									},
									"returnParameters": {
										"id": 2074,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2782:0:19"
									},
									"scope": 2379,
									"src": "2711:317:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2118,
										"nodeType": "Block",
										"src": "3879:98:19",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2112,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2104,
															"src": "3919:6:19",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2113,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2106,
															"src": "3927:4:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 2114,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3933:1:19",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 2115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3936:32:19",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 2111,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2159,
															2203
														],
														"referencedDeclaration": 2203,
														"src": "3897:21:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 2116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3897:72:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2110,
												"id": 2117,
												"nodeType": "Return",
												"src": "3890:79:19"
											}
										]
									},
									"documentation": {
										"id": 2102,
										"nodeType": "StructuredDocumentation",
										"src": "3036:748:19",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 2119,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3799:12:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2104,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3820:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 2119,
												"src": "3812:14:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3812:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2106,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3841:4:19",
												"nodeType": "VariableDeclaration",
												"scope": 2119,
												"src": "3828:17:19",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2105,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3828:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3811:35:19"
									},
									"returnParameters": {
										"id": 2110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2109,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2119,
												"src": "3865:12:19",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2108,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3865:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:14:19"
									},
									"scope": 2379,
									"src": "3790:187:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2138,
										"nodeType": "Block",
										"src": "4358:78:19",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2132,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2122,
															"src": "4398:6:19",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2133,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2124,
															"src": "4406:4:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 2134,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4412:1:19",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 2135,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2126,
															"src": "4415:12:19",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2131,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2159,
															2203
														],
														"referencedDeclaration": 2203,
														"src": "4376:21:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 2136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4376:52:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2130,
												"id": 2137,
												"nodeType": "Return",
												"src": "4369:59:19"
											}
										]
									},
									"documentation": {
										"id": 2120,
										"nodeType": "StructuredDocumentation",
										"src": "3985:216:19",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 2139,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "4216:12:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2122,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4247:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 2139,
												"src": "4239:14:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4239:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2124,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4277:4:19",
												"nodeType": "VariableDeclaration",
												"scope": 2139,
												"src": "4264:17:19",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2123,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4264:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2126,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4306:12:19",
												"nodeType": "VariableDeclaration",
												"scope": 2139,
												"src": "4292:26:19",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2125,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4292:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4228:97:19"
									},
									"returnParameters": {
										"id": 2130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2129,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2139,
												"src": "4344:12:19",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2128,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4344:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4343:14:19"
									},
									"scope": 2379,
									"src": "4207:229:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2158,
										"nodeType": "Block",
										"src": "4924:113:19",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2152,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2142,
															"src": "4964:6:19",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2153,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2144,
															"src": "4972:4:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2154,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2146,
															"src": "4978:5:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 2155,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4985:43:19",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 2151,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2159,
															2203
														],
														"referencedDeclaration": 2203,
														"src": "4942:21:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 2156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4942:87:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2150,
												"id": 2157,
												"nodeType": "Return",
												"src": "4935:94:19"
											}
										]
									},
									"documentation": {
										"id": 2140,
										"nodeType": "StructuredDocumentation",
										"src": "4444:361:19",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 2159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4820:21:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2142,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4850:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 2159,
												"src": "4842:14:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4842:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2144,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4871:4:19",
												"nodeType": "VariableDeclaration",
												"scope": 2159,
												"src": "4858:17:19",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2143,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4858:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2146,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4885:5:19",
												"nodeType": "VariableDeclaration",
												"scope": 2159,
												"src": "4877:13:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4877:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4841:50:19"
									},
									"returnParameters": {
										"id": 2150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2149,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2159,
												"src": "4910:12:19",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2148,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4910:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4909:14:19"
									},
									"scope": 2379,
									"src": "4811:226:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2202,
										"nodeType": "Block",
										"src": "5477:271:19",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 2176,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5504:4:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$2379",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$2379",
																				"typeString": "library Address"
																			}
																		],
																		"id": 2175,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5496:7:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2174,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5496:7:19",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2177,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5496:13:19",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 2178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5510:7:19",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5496:21:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2179,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2166,
																"src": "5521:5:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5496:30:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 2181,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5528:40:19",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 2173,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5488:7:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5488:81:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2183,
												"nodeType": "ExpressionStatement",
												"src": "5488:81:19"
											},
											{
												"assignments": [
													2185,
													2187
												],
												"declarations": [
													{
														"constant": false,
														"id": 2185,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5586:7:19",
														"nodeType": "VariableDeclaration",
														"scope": 2202,
														"src": "5581:12:19",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2184,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5581:4:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2187,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5608:10:19",
														"nodeType": "VariableDeclaration",
														"scope": 2202,
														"src": "5595:23:19",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2186,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5595:5:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2194,
												"initialValue": {
													"arguments": [
														{
															"id": 2192,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2164,
															"src": "5648:4:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 2188,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2162,
																"src": "5622:6:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5629:4:19",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5622:11:19",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2191,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2190,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2166,
																"src": "5641:5:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5622:25:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5622:31:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5580:73:19"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2196,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2162,
															"src": "5698:6:19",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2197,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2185,
															"src": "5706:7:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2198,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2187,
															"src": "5715:10:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2199,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2168,
															"src": "5727:12:19",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2195,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2334,
														"src": "5671:26:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 2200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5671:69:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2172,
												"id": 2201,
												"nodeType": "Return",
												"src": "5664:76:19"
											}
										]
									},
									"documentation": {
										"id": 2160,
										"nodeType": "StructuredDocumentation",
										"src": "5045:242:19",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 2203,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5302:21:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2162,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5342:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 2203,
												"src": "5334:14:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5334:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2164,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5372:4:19",
												"nodeType": "VariableDeclaration",
												"scope": 2203,
												"src": "5359:17:19",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2163,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5359:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2166,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5395:5:19",
												"nodeType": "VariableDeclaration",
												"scope": 2203,
												"src": "5387:13:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5387:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2168,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5425:12:19",
												"nodeType": "VariableDeclaration",
												"scope": 2203,
												"src": "5411:26:19",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2167,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5411:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5323:121:19"
									},
									"returnParameters": {
										"id": 2172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2203,
												"src": "5463:12:19",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2170,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5463:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5462:14:19"
									},
									"scope": 2379,
									"src": "5293:455:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2219,
										"nodeType": "Block",
										"src": "6033:99:19",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2214,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2206,
															"src": "6070:6:19",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2215,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2208,
															"src": "6078:4:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 2216,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6084:39:19",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 2213,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2220,
															2249
														],
														"referencedDeclaration": 2249,
														"src": "6051:18:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 2217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6051:73:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2212,
												"id": 2218,
												"nodeType": "Return",
												"src": "6044:80:19"
											}
										]
									},
									"documentation": {
										"id": 2204,
										"nodeType": "StructuredDocumentation",
										"src": "5756:171:19",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 2220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5942:18:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2206,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5969:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 2220,
												"src": "5961:14:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5961:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2208,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5990:4:19",
												"nodeType": "VariableDeclaration",
												"scope": 2220,
												"src": "5977:17:19",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2207,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5977:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5960:35:19"
									},
									"returnParameters": {
										"id": 2212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2211,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2220,
												"src": "6019:12:19",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2210,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6019:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6018:14:19"
									},
									"scope": 2379,
									"src": "5933:199:19",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2248,
										"nodeType": "Block",
										"src": "6486:171:19",
										"statements": [
											{
												"assignments": [
													2233,
													2235
												],
												"declarations": [
													{
														"constant": false,
														"id": 2233,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6503:7:19",
														"nodeType": "VariableDeclaration",
														"scope": 2248,
														"src": "6498:12:19",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2232,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6498:4:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2235,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6525:10:19",
														"nodeType": "VariableDeclaration",
														"scope": 2248,
														"src": "6512:23:19",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2234,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6512:5:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2240,
												"initialValue": {
													"arguments": [
														{
															"id": 2238,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2225,
															"src": "6557:4:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2236,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2223,
															"src": "6539:6:19",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2237,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6546:10:19",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6539:17:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 2239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6539:23:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6497:65:19"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2242,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2223,
															"src": "6607:6:19",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2243,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2233,
															"src": "6615:7:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2244,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2235,
															"src": "6624:10:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2245,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2227,
															"src": "6636:12:19",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2241,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2334,
														"src": "6580:26:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 2246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6580:69:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2231,
												"id": 2247,
												"nodeType": "Return",
												"src": "6573:76:19"
											}
										]
									},
									"documentation": {
										"id": 2221,
										"nodeType": "StructuredDocumentation",
										"src": "6140:178:19",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 2249,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6333:18:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2223,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6370:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 2249,
												"src": "6362:14:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6362:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2225,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6400:4:19",
												"nodeType": "VariableDeclaration",
												"scope": 2249,
												"src": "6387:17:19",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2224,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6387:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2227,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6429:12:19",
												"nodeType": "VariableDeclaration",
												"scope": 2249,
												"src": "6415:26:19",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2226,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6415:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6351:97:19"
									},
									"returnParameters": {
										"id": 2231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2249,
												"src": "6472:12:19",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2229,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6472:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6471:14:19"
									},
									"scope": 2379,
									"src": "6324:333:19",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2265,
										"nodeType": "Block",
										"src": "6941:103:19",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2260,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2252,
															"src": "6980:6:19",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2261,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2254,
															"src": "6988:4:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 2262,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6994:41:19",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 2259,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2266,
															2295
														],
														"referencedDeclaration": 2295,
														"src": "6959:20:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 2263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6959:77:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2258,
												"id": 2264,
												"nodeType": "Return",
												"src": "6952:84:19"
											}
										]
									},
									"documentation": {
										"id": 2250,
										"nodeType": "StructuredDocumentation",
										"src": "6665:173:19",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 2266,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6853:20:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2252,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6882:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 2266,
												"src": "6874:14:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6874:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2254,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6903:4:19",
												"nodeType": "VariableDeclaration",
												"scope": 2266,
												"src": "6890:17:19",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2253,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6890:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6873:35:19"
									},
									"returnParameters": {
										"id": 2258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2257,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2266,
												"src": "6927:12:19",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2256,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6927:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6926:14:19"
									},
									"scope": 2379,
									"src": "6844:200:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2294,
										"nodeType": "Block",
										"src": "7397:173:19",
										"statements": [
											{
												"assignments": [
													2279,
													2281
												],
												"declarations": [
													{
														"constant": false,
														"id": 2279,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7414:7:19",
														"nodeType": "VariableDeclaration",
														"scope": 2294,
														"src": "7409:12:19",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2278,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7409:4:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2281,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7436:10:19",
														"nodeType": "VariableDeclaration",
														"scope": 2294,
														"src": "7423:23:19",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2280,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7423:5:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2286,
												"initialValue": {
													"arguments": [
														{
															"id": 2284,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2271,
															"src": "7470:4:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2282,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2269,
															"src": "7450:6:19",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2283,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7457:12:19",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7450:19:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 2285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7450:25:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7408:67:19"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2288,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2269,
															"src": "7520:6:19",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2289,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2279,
															"src": "7528:7:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2290,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2281,
															"src": "7537:10:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2291,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2273,
															"src": "7549:12:19",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2287,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2334,
														"src": "7493:26:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 2292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7493:69:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2277,
												"id": 2293,
												"nodeType": "Return",
												"src": "7486:76:19"
											}
										]
									},
									"documentation": {
										"id": 2267,
										"nodeType": "StructuredDocumentation",
										"src": "7052:180:19",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 2295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7247:20:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2269,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7286:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 2295,
												"src": "7278:14:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7278:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2271,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7316:4:19",
												"nodeType": "VariableDeclaration",
												"scope": 2295,
												"src": "7303:17:19",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2270,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7303:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2273,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7345:12:19",
												"nodeType": "VariableDeclaration",
												"scope": 2295,
												"src": "7331:26:19",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2272,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7331:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7267:97:19"
									},
									"returnParameters": {
										"id": 2277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2295,
												"src": "7383:12:19",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2275,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7383:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7382:14:19"
									},
									"scope": 2379,
									"src": "7238:332:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2333,
										"nodeType": "Block",
										"src": "8065:445:19",
										"statements": [
											{
												"condition": {
													"id": 2309,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2300,
													"src": "8080:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2331,
													"nodeType": "Block",
													"src": "8443:60:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2327,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2302,
																		"src": "8466:10:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 2328,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2304,
																		"src": "8478:12:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2326,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2378,
																	"src": "8458:7:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 2329,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8458:33:19",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2330,
															"nodeType": "ExpressionStatement",
															"src": "8458:33:19"
														}
													]
												},
												"id": 2332,
												"nodeType": "IfStatement",
												"src": "8076:427:19",
												"trueBody": {
													"id": 2325,
													"nodeType": "Block",
													"src": "8089:348:19",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2313,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2310,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2302,
																		"src": "8108:10:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2311,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8119:6:19",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "8108:17:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8129:1:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8108:22:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2322,
															"nodeType": "IfStatement",
															"src": "8104:290:19",
															"trueBody": {
																"id": 2321,
																"nodeType": "Block",
																"src": "8132:262:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 2316,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2298,
																							"src": "8337:6:19",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 2315,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2067,
																						"src": "8326:10:19",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 2317,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8326:18:19",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 2318,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8346:31:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 2314,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8318:7:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 2319,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8318:60:19",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2320,
																		"nodeType": "ExpressionStatement",
																		"src": "8318:60:19"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 2323,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2302,
																"src": "8415:10:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2308,
															"id": 2324,
															"nodeType": "Return",
															"src": "8408:17:19"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2296,
										"nodeType": "StructuredDocumentation",
										"src": "7578:282:19",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 2334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7875:26:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2298,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7920:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 2334,
												"src": "7912:14:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7912:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2300,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7942:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 2334,
												"src": "7937:12:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2299,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7937:4:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2302,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7973:10:19",
												"nodeType": "VariableDeclaration",
												"scope": 2334,
												"src": "7960:23:19",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2301,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7960:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2304,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8008:12:19",
												"nodeType": "VariableDeclaration",
												"scope": 2334,
												"src": "7994:26:19",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2303,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7994:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7901:126:19"
									},
									"returnParameters": {
										"id": 2308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2307,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2334,
												"src": "8051:12:19",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2306,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8051:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8050:14:19"
									},
									"scope": 2379,
									"src": "7866:644:19",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2357,
										"nodeType": "Block",
										"src": "8903:141:19",
										"statements": [
											{
												"condition": {
													"id": 2346,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2337,
													"src": "8918:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2355,
													"nodeType": "Block",
													"src": "8977:60:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2351,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2339,
																		"src": "9000:10:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 2352,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2341,
																		"src": "9012:12:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2350,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2378,
																	"src": "8992:7:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 2353,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8992:33:19",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2354,
															"nodeType": "ExpressionStatement",
															"src": "8992:33:19"
														}
													]
												},
												"id": 2356,
												"nodeType": "IfStatement",
												"src": "8914:123:19",
												"trueBody": {
													"id": 2349,
													"nodeType": "Block",
													"src": "8927:44:19",
													"statements": [
														{
															"expression": {
																"id": 2347,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2339,
																"src": "8949:10:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2345,
															"id": 2348,
															"nodeType": "Return",
															"src": "8942:17:19"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2335,
										"nodeType": "StructuredDocumentation",
										"src": "8518:215:19",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 2358,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8748:16:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2337,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8780:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 2358,
												"src": "8775:12:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2336,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8775:4:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2339,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8811:10:19",
												"nodeType": "VariableDeclaration",
												"scope": 2358,
												"src": "8798:23:19",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2338,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8798:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2341,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8846:12:19",
												"nodeType": "VariableDeclaration",
												"scope": 2358,
												"src": "8832:26:19",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2340,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8832:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8764:101:19"
									},
									"returnParameters": {
										"id": 2345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2358,
												"src": "8889:12:19",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2343,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8889:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8888:14:19"
									},
									"scope": 2379,
									"src": "8739:305:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2377,
										"nodeType": "Block",
										"src": "9135:469:19",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2365,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2360,
															"src": "9213:10:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2366,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9224:6:19",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "9213:17:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2367,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9233:1:19",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9213:21:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2375,
													"nodeType": "Block",
													"src": "9550:47:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2372,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2362,
																		"src": "9572:12:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2371,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9565:6:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 2373,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9565:20:19",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2374,
															"nodeType": "ExpressionStatement",
															"src": "9565:20:19"
														}
													]
												},
												"id": 2376,
												"nodeType": "IfStatement",
												"src": "9209:388:19",
												"trueBody": {
													"id": 2370,
													"nodeType": "Block",
													"src": "9236:308:19",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "9397:136:19",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9416:40:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9445:10:19"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "9439:5:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9439:17:19"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "9420:15:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9485:2:19",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9489:10:19"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9481:3:19"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9481:19:19"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9502:15:19"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9474:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9474:44:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9474:44:19"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "paris",
															"externalReferences": [
																{
																	"declaration": 2360,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9445:10:19",
																	"valueSize": 1
																},
																{
																	"declaration": 2360,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9489:10:19",
																	"valueSize": 1
																}
															],
															"id": 2369,
															"nodeType": "InlineAssembly",
															"src": "9388:145:19"
														}
													]
												}
											}
										]
									},
									"id": 2378,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "9061:7:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2360,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "9082:10:19",
												"nodeType": "VariableDeclaration",
												"scope": 2378,
												"src": "9069:23:19",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2359,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9069:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2362,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "9108:12:19",
												"nodeType": "VariableDeclaration",
												"scope": 2378,
												"src": "9094:26:19",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2361,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9094:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9068:53:19"
									},
									"returnParameters": {
										"id": 2364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9135:0:19"
									},
									"scope": 2379,
									"src": "9052:552:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2380,
							"src": "203:9404:19",
							"usedErrors": []
						}
					],
					"src": "104:9505:19"
				},
				"id": 19
			},
			"libraries/PoolAddress.sol": {
				"ast": {
					"absolutePath": "libraries/PoolAddress.sol",
					"exportedSymbols": {
						"PoolAddress": [
							2479
						]
					},
					"id": 2480,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2381,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46:24:20"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "PoolAddress",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2382,
								"nodeType": "StructuredDocumentation",
								"src": "74:97:20",
								"text": "@title Provides functions for deriving a pool address from the factory, tokens, and the fee"
							},
							"fullyImplemented": true,
							"id": 2479,
							"linearizedBaseContracts": [
								2479
							],
							"name": "PoolAddress",
							"nameLocation": "179:11:20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 2385,
									"mutability": "constant",
									"name": "POOL_INIT_CODE_HASH",
									"nameLocation": "224:19:20",
									"nodeType": "VariableDeclaration",
									"scope": 2479,
									"src": "198:114:20",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2383,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "198:7:20",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307865333466313939623139623262346634376636383434323631396435353535323764323434663738613332393765613839333235663834336638376238623534",
										"id": 2384,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "246:66:20",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_102814774271675688723325049954498779091328469440286648861889194717372678376276_by_1",
											"typeString": "int_const 1028...(70 digits omitted)...6276"
										},
										"value": "0xe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b54"
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "PoolAddress.PoolKey",
									"id": 2392,
									"members": [
										{
											"constant": false,
											"id": 2387,
											"mutability": "mutable",
											"name": "token0",
											"nameLocation": "404:6:20",
											"nodeType": "VariableDeclaration",
											"scope": 2392,
											"src": "396:14:20",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2386,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "396:7:20",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2389,
											"mutability": "mutable",
											"name": "token1",
											"nameLocation": "429:6:20",
											"nodeType": "VariableDeclaration",
											"scope": 2392,
											"src": "421:14:20",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2388,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "421:7:20",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2391,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "453:3:20",
											"nodeType": "VariableDeclaration",
											"scope": 2392,
											"src": "446:10:20",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 2390,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "446:6:20",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PoolKey",
									"nameLocation": "377:7:20",
									"nodeType": "StructDefinition",
									"scope": 2479,
									"src": "370:94:20",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2423,
										"nodeType": "Block",
										"src": "940:144:20",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2405,
														"name": "tokenA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2395,
														"src": "955:6:20",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 2406,
														"name": "tokenB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2397,
														"src": "964:6:20",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "955:15:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2416,
												"nodeType": "IfStatement",
												"src": "951:56:20",
												"trueBody": {
													"expression": {
														"id": 2414,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"components": [
																{
																	"id": 2408,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2395,
																	"src": "973:6:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2409,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2397,
																	"src": "981:6:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"id": 2410,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"nodeType": "TupleExpression",
															"src": "972:16:20",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_address_$",
																"typeString": "tuple(address,address)"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"components": [
																{
																	"id": 2411,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2397,
																	"src": "992:6:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2412,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2395,
																	"src": "1000:6:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"id": 2413,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "991:16:20",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_address_$",
																"typeString": "tuple(address,address)"
															}
														},
														"src": "972:35:20",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2415,
													"nodeType": "ExpressionStatement",
													"src": "972:35:20"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2418,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2395,
															"src": "1042:6:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2419,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2397,
															"src": "1058:6:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2420,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2399,
															"src": "1071:3:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														],
														"id": 2417,
														"name": "PoolKey",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2392,
														"src": "1025:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_PoolKey_$2392_storage_ptr_$",
															"typeString": "type(struct PoolAddress.PoolKey storage pointer)"
														}
													},
													"id": 2421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"1034:6:20",
														"1050:6:20",
														"1066:3:20"
													],
													"names": [
														"token0",
														"token1",
														"fee"
													],
													"nodeType": "FunctionCall",
													"src": "1025:51:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$2392_memory_ptr",
														"typeString": "struct PoolAddress.PoolKey memory"
													}
												},
												"functionReturnParameters": 2404,
												"id": 2422,
												"nodeType": "Return",
												"src": "1018:58:20"
											}
										]
									},
									"documentation": {
										"id": 2393,
										"nodeType": "StructuredDocumentation",
										"src": "472:325:20",
										"text": "@notice Returns PoolKey: the ordered tokens with the matched fee levels\n @param tokenA The first token of a pool, unsorted\n @param tokenB The second token of a pool, unsorted\n @param fee The fee level of the pool\n @return Poolkey The pool details with ordered token0 and token1 assignments"
									},
									"id": 2424,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolKey",
									"nameLocation": "812:10:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2395,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "841:6:20",
												"nodeType": "VariableDeclaration",
												"scope": 2424,
												"src": "833:14:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2397,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "866:6:20",
												"nodeType": "VariableDeclaration",
												"scope": 2424,
												"src": "858:14:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2399,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "890:3:20",
												"nodeType": "VariableDeclaration",
												"scope": 2424,
												"src": "883:10:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 2398,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "883:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:78:20"
									},
									"returnParameters": {
										"id": 2404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2424,
												"src": "924:14:20",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolKey_$2392_memory_ptr",
													"typeString": "struct PoolAddress.PoolKey"
												},
												"typeName": {
													"id": 2402,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2401,
														"name": "PoolKey",
														"nameLocations": [
															"924:7:20"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2392,
														"src": "924:7:20"
													},
													"referencedDeclaration": 2392,
													"src": "924:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$2392_storage_ptr",
														"typeString": "struct PoolAddress.PoolKey"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:16:20"
									},
									"scope": 2479,
									"src": "803:281:20",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2477,
										"nodeType": "Block",
										"src": "1435:425:20",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2436,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2430,
																	"src": "1454:3:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolKey_$2392_memory_ptr",
																		"typeString": "struct PoolAddress.PoolKey memory"
																	}
																},
																"id": 2437,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1458:6:20",
																"memberName": "token0",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2387,
																"src": "1454:10:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 2438,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2430,
																	"src": "1467:3:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolKey_$2392_memory_ptr",
																		"typeString": "struct PoolAddress.PoolKey memory"
																	}
																},
																"id": 2439,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1471:6:20",
																"memberName": "token1",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2389,
																"src": "1467:10:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1454:23:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2435,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1446:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1446:32:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2442,
												"nodeType": "ExpressionStatement",
												"src": "1446:32:20"
											},
											{
												"expression": {
													"id": 2475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2443,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2433,
														"src": "1489:4:20",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"hexValue": "30786666",
																										"id": 2455,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "1617:4:20",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_255_by_1",
																											"typeString": "int_const 255"
																										},
																										"value": "0xff"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_rational_255_by_1",
																											"typeString": "int_const 255"
																										}
																									],
																									"id": 2454,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "1610:6:20",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_bytes1_$",
																										"typeString": "type(bytes1)"
																									},
																									"typeName": {
																										"id": 2453,
																										"name": "bytes1",
																										"nodeType": "ElementaryTypeName",
																										"src": "1610:6:20",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 2456,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "1610:12:20",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes1",
																									"typeString": "bytes1"
																								}
																							},
																							{
																								"id": 2457,
																								"name": "factory",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2427,
																								"src": "1649:7:20",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"expression": {
																													"id": 2461,
																													"name": "key",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 2430,
																													"src": "1704:3:20",
																													"typeDescriptions": {
																														"typeIdentifier": "t_struct$_PoolKey_$2392_memory_ptr",
																														"typeString": "struct PoolAddress.PoolKey memory"
																													}
																												},
																												"id": 2462,
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": false,
																												"memberLocation": "1708:6:20",
																												"memberName": "token0",
																												"nodeType": "MemberAccess",
																												"referencedDeclaration": 2387,
																												"src": "1704:10:20",
																												"typeDescriptions": {
																													"typeIdentifier": "t_address",
																													"typeString": "address"
																												}
																											},
																											{
																												"expression": {
																													"id": 2463,
																													"name": "key",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 2430,
																													"src": "1716:3:20",
																													"typeDescriptions": {
																														"typeIdentifier": "t_struct$_PoolKey_$2392_memory_ptr",
																														"typeString": "struct PoolAddress.PoolKey memory"
																													}
																												},
																												"id": 2464,
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": false,
																												"memberLocation": "1720:6:20",
																												"memberName": "token1",
																												"nodeType": "MemberAccess",
																												"referencedDeclaration": 2389,
																												"src": "1716:10:20",
																												"typeDescriptions": {
																													"typeIdentifier": "t_address",
																													"typeString": "address"
																												}
																											},
																											{
																												"expression": {
																													"id": 2465,
																													"name": "key",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 2430,
																													"src": "1728:3:20",
																													"typeDescriptions": {
																														"typeIdentifier": "t_struct$_PoolKey_$2392_memory_ptr",
																														"typeString": "struct PoolAddress.PoolKey memory"
																													}
																												},
																												"id": 2466,
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": false,
																												"memberLocation": "1732:3:20",
																												"memberName": "fee",
																												"nodeType": "MemberAccess",
																												"referencedDeclaration": 2391,
																												"src": "1728:7:20",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint24",
																													"typeString": "uint24"
																												}
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_address",
																													"typeString": "address"
																												},
																												{
																													"typeIdentifier": "t_address",
																													"typeString": "address"
																												},
																												{
																													"typeIdentifier": "t_uint24",
																													"typeString": "uint24"
																												}
																											],
																											"expression": {
																												"id": 2459,
																												"name": "abi",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 4294967295,
																												"src": "1693:3:20",
																												"typeDescriptions": {
																													"typeIdentifier": "t_magic_abi",
																													"typeString": "abi"
																												}
																											},
																											"id": 2460,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"lValueRequested": false,
																											"memberLocation": "1697:6:20",
																											"memberName": "encode",
																											"nodeType": "MemberAccess",
																											"src": "1693:10:20",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																												"typeString": "function () pure returns (bytes memory)"
																											}
																										},
																										"id": 2467,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"nameLocations": [],
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "1693:43:20",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes_memory_ptr",
																											"typeString": "bytes memory"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_bytes_memory_ptr",
																											"typeString": "bytes memory"
																										}
																									],
																									"id": 2458,
																									"name": "keccak256",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967288,
																									"src": "1683:9:20",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																										"typeString": "function (bytes memory) pure returns (bytes32)"
																									}
																								},
																								"id": 2468,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "1683:54:20",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							{
																								"id": 2469,
																								"name": "POOL_INIT_CODE_HASH",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2385,
																								"src": "1764:19:20",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bytes1",
																									"typeString": "bytes1"
																								},
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								},
																								{
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							],
																							"expression": {
																								"id": 2451,
																								"name": "abi",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967295,
																								"src": "1567:3:20",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_abi",
																									"typeString": "abi"
																								}
																							},
																							"id": 2452,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "1571:12:20",
																							"memberName": "encodePacked",
																							"nodeType": "MemberAccess",
																							"src": "1567:16:20",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																								"typeString": "function () pure returns (bytes memory)"
																							}
																						},
																						"id": 2470,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "1567:239:20",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					],
																					"id": 2450,
																					"name": "keccak256",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967288,
																					"src": "1535:9:20",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																						"typeString": "function (bytes memory) pure returns (bytes32)"
																					}
																				},
																				"id": 2471,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1535:290:20",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			],
																			"id": 2449,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1512:4:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 2448,
																				"name": "uint",
																				"nodeType": "ElementaryTypeName",
																				"src": "1512:4:20",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2472,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1512:328:20",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2447,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1504:7:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 2446,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "1504:7:20",
																		"typeDescriptions": {}
																	}
																},
																"id": 2473,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1504:347:20",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 2445,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1496:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2444,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1496:7:20",
																"typeDescriptions": {}
															}
														},
														"id": 2474,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1496:356:20",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1489:363:20",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2476,
												"nodeType": "ExpressionStatement",
												"src": "1489:363:20"
											}
										]
									},
									"documentation": {
										"id": 2425,
										"nodeType": "StructuredDocumentation",
										"src": "1092:239:20",
										"text": "@notice Deterministically computes the pool address given the factory and PoolKey\n @param factory The Uniswap V3 factory contract address\n @param key The PoolKey\n @return pool The contract address of the V3 pool"
									},
									"id": 2478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "computeAddress",
									"nameLocation": "1346:14:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2427,
												"mutability": "mutable",
												"name": "factory",
												"nameLocation": "1369:7:20",
												"nodeType": "VariableDeclaration",
												"scope": 2478,
												"src": "1361:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1361:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2430,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "1393:3:20",
												"nodeType": "VariableDeclaration",
												"scope": 2478,
												"src": "1378:18:20",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolKey_$2392_memory_ptr",
													"typeString": "struct PoolAddress.PoolKey"
												},
												"typeName": {
													"id": 2429,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2428,
														"name": "PoolKey",
														"nameLocations": [
															"1378:7:20"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2392,
														"src": "1378:7:20"
													},
													"referencedDeclaration": 2392,
													"src": "1378:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$2392_storage_ptr",
														"typeString": "struct PoolAddress.PoolKey"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1360:37:20"
									},
									"returnParameters": {
										"id": 2434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2433,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "1429:4:20",
												"nodeType": "VariableDeclaration",
												"scope": 2478,
												"src": "1421:12:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1421:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1420:14:20"
									},
									"scope": 2479,
									"src": "1337:523:20",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2480,
							"src": "171:1692:20",
							"usedErrors": []
						}
					],
					"src": "46:1817:20"
				},
				"id": 20
			},
			"libraries/SafeERC20.sol": {
				"ast": {
					"absolutePath": "libraries/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							2379
						],
						"IERC20": [
							950
						],
						"IERC20Permit": [
							986
						],
						"SafeERC20": [
							2858
						]
					},
					"id": 2859,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2481,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "118:24:21"
						},
						{
							"absolutePath": "interfaces/IERC20.sol",
							"file": "../interfaces/IERC20.sol",
							"id": 2483,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2859,
							"sourceUnit": 951,
							"src": "146:48:21",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2482,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 950,
										"src": "154:6:21",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/IERC20Permit.sol",
							"file": "../interfaces/IERC20Permit.sol",
							"id": 2485,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2859,
							"sourceUnit": 987,
							"src": "196:60:21",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2484,
										"name": "IERC20Permit",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 986,
										"src": "204:12:21",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "libraries/Address.sol",
							"file": "../libraries/Address.sol",
							"id": 2487,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2859,
							"sourceUnit": 2380,
							"src": "258:49:21",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2486,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2379,
										"src": "266:7:21",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2488,
								"nodeType": "StructuredDocumentation",
								"src": "311:465:21",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 2858,
							"linearizedBaseContracts": [
								2858
							],
							"name": "SafeERC20",
							"nameLocation": "786:9:21",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2491,
									"libraryName": {
										"id": 2489,
										"name": "Address",
										"nameLocations": [
											"809:7:21"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2379,
										"src": "809:7:21"
									},
									"nodeType": "UsingForDirective",
									"src": "803:26:21",
									"typeName": {
										"id": 2490,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "821:7:21",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 2514,
										"nodeType": "Block",
										"src": "1097:105:21",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2503,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2495,
															"src": "1128:5:21",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$950",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 2506,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2495,
																			"src": "1158:5:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$950",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 2507,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1164:8:21",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 917,
																		"src": "1158:14:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 2508,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1173:8:21",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1158:23:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 2509,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2497,
																	"src": "1183:2:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2510,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2499,
																	"src": "1187:5:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2504,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1135:3:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2505,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1139:18:21",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1135:22:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2511,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1135:58:21",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$950",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2502,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2809,
														"src": "1108:19:21",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$950_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 2512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1108:86:21",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2513,
												"nodeType": "ExpressionStatement",
												"src": "1108:86:21"
											}
										]
									},
									"documentation": {
										"id": 2492,
										"nodeType": "StructuredDocumentation",
										"src": "837:182:21",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 2515,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1034:12:21",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2495,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1054:5:21",
												"nodeType": "VariableDeclaration",
												"scope": 2515,
												"src": "1047:12:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$950",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2494,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2493,
														"name": "IERC20",
														"nameLocations": [
															"1047:6:21"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 950,
														"src": "1047:6:21"
													},
													"referencedDeclaration": 950,
													"src": "1047:6:21",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$950",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2497,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1069:2:21",
												"nodeType": "VariableDeclaration",
												"scope": 2515,
												"src": "1061:10:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1061:7:21",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2499,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1081:5:21",
												"nodeType": "VariableDeclaration",
												"scope": 2515,
												"src": "1073:13:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1046:41:21"
									},
									"returnParameters": {
										"id": 2501,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1097:0:21"
									},
									"scope": 2858,
									"src": "1025:177:21",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2541,
										"nodeType": "Block",
										"src": "1537:115:21",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2529,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2519,
															"src": "1568:5:21",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$950",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 2532,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2519,
																			"src": "1598:5:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$950",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 2533,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1604:12:21",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 949,
																		"src": "1598:18:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 2534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1617:8:21",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1598:27:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 2535,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2521,
																	"src": "1627:4:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2536,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2523,
																	"src": "1633:2:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2537,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2525,
																	"src": "1637:5:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2530,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1575:3:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2531,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1579:18:21",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1575:22:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2538,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1575:68:21",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$950",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2528,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2809,
														"src": "1548:19:21",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$950_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 2539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1548:96:21",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2540,
												"nodeType": "ExpressionStatement",
												"src": "1548:96:21"
											}
										]
									},
									"documentation": {
										"id": 2516,
										"nodeType": "StructuredDocumentation",
										"src": "1210:231:21",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 2542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1456:16:21",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2519,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1480:5:21",
												"nodeType": "VariableDeclaration",
												"scope": 2542,
												"src": "1473:12:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$950",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2518,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2517,
														"name": "IERC20",
														"nameLocations": [
															"1473:6:21"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 950,
														"src": "1473:6:21"
													},
													"referencedDeclaration": 950,
													"src": "1473:6:21",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$950",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2521,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1495:4:21",
												"nodeType": "VariableDeclaration",
												"scope": 2542,
												"src": "1487:12:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1487:7:21",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2523,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1509:2:21",
												"nodeType": "VariableDeclaration",
												"scope": 2542,
												"src": "1501:10:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1501:7:21",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2525,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1521:5:21",
												"nodeType": "VariableDeclaration",
												"scope": 2542,
												"src": "1513:13:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1513:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1472:55:21"
									},
									"returnParameters": {
										"id": 2527,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1537:0:21"
									},
									"scope": 2858,
									"src": "1447:205:21",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2585,
										"nodeType": "Block",
										"src": "1997:506:21",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2556,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2554,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2550,
																			"src": "2251:5:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2555,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2260:1:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "2251:10:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 2557,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2250:12:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 2562,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "2291:4:21",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$2858",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$2858",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 2561,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "2283:7:21",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 2560,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "2283:7:21",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2563,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2283:13:21",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2564,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2548,
																					"src": "2298:7:21",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 2558,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2546,
																					"src": "2267:5:21",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$950",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 2559,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2273:9:21",
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 927,
																				"src": "2267:15:21",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 2565,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2267:39:21",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2566,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2310:1:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "2267:44:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 2568,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2266:46:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2250:62:21",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 2570,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2327:56:21",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 2553,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2228:7:21",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2228:166:21",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2572,
												"nodeType": "ExpressionStatement",
												"src": "2228:166:21"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2574,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2546,
															"src": "2425:5:21",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$950",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 2577,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2546,
																			"src": "2455:5:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$950",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 2578,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2461:7:21",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 937,
																		"src": "2455:13:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 2579,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2469:8:21",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2455:22:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 2580,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2548,
																	"src": "2479:7:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2581,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2550,
																	"src": "2488:5:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2575,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2432:3:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2576,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2436:18:21",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2432:22:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2582,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2432:62:21",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$950",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2573,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2809,
														"src": "2405:19:21",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$950_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 2583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2405:90:21",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2584,
												"nodeType": "ExpressionStatement",
												"src": "2405:90:21"
											}
										]
									},
									"documentation": {
										"id": 2543,
										"nodeType": "StructuredDocumentation",
										"src": "1660:255:21",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 2586,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1930:11:21",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2546,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1949:5:21",
												"nodeType": "VariableDeclaration",
												"scope": 2586,
												"src": "1942:12:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$950",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2545,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2544,
														"name": "IERC20",
														"nameLocations": [
															"1942:6:21"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 950,
														"src": "1942:6:21"
													},
													"referencedDeclaration": 950,
													"src": "1942:6:21",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$950",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2548,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1964:7:21",
												"nodeType": "VariableDeclaration",
												"scope": 2586,
												"src": "1956:15:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1956:7:21",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2550,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1981:5:21",
												"nodeType": "VariableDeclaration",
												"scope": 2586,
												"src": "1973:13:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1973:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1941:46:21"
									},
									"returnParameters": {
										"id": 2552,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1997:0:21"
									},
									"scope": 2858,
									"src": "1921:582:21",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2622,
										"nodeType": "Block",
										"src": "2786:197:21",
										"statements": [
											{
												"assignments": [
													2598
												],
												"declarations": [
													{
														"constant": false,
														"id": 2598,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2805:12:21",
														"nodeType": "VariableDeclaration",
														"scope": 2622,
														"src": "2797:20:21",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2597,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2797:7:21",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2607,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2603,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2844:4:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$2858",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$2858",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 2602,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2836:7:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2601,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2836:7:21",
																	"typeDescriptions": {}
																}
															},
															"id": 2604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2836:13:21",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2605,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2592,
															"src": "2851:7:21",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2599,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2590,
															"src": "2820:5:21",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$950",
																"typeString": "contract IERC20"
															}
														},
														"id": 2600,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2826:9:21",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 927,
														"src": "2820:15:21",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 2606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2820:39:21",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2797:62:21"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2609,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2590,
															"src": "2890:5:21",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$950",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 2612,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2590,
																			"src": "2920:5:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$950",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 2613,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2926:7:21",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 937,
																		"src": "2920:13:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 2614,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2934:8:21",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2920:22:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 2615,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2592,
																	"src": "2944:7:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2618,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2616,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2598,
																		"src": "2953:12:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 2617,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2594,
																		"src": "2968:5:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2953:20:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2610,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2897:3:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2611,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2901:18:21",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2897:22:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2619,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2897:77:21",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$950",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2608,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2809,
														"src": "2870:19:21",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$950_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 2620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2870:105:21",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2621,
												"nodeType": "ExpressionStatement",
												"src": "2870:105:21"
											}
										]
									},
									"documentation": {
										"id": 2587,
										"nodeType": "StructuredDocumentation",
										"src": "2511:183:21",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 2623,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2709:21:21",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2590,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2738:5:21",
												"nodeType": "VariableDeclaration",
												"scope": 2623,
												"src": "2731:12:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$950",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2589,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2588,
														"name": "IERC20",
														"nameLocations": [
															"2731:6:21"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 950,
														"src": "2731:6:21"
													},
													"referencedDeclaration": 950,
													"src": "2731:6:21",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$950",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2592,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2753:7:21",
												"nodeType": "VariableDeclaration",
												"scope": 2623,
												"src": "2745:15:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2745:7:21",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2594,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2770:5:21",
												"nodeType": "VariableDeclaration",
												"scope": 2623,
												"src": "2762:13:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2762:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2730:46:21"
									},
									"returnParameters": {
										"id": 2596,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2786:0:21"
									},
									"scope": 2858,
									"src": "2700:283:21",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2667,
										"nodeType": "Block",
										"src": "3266:327:21",
										"statements": [
											{
												"id": 2666,
												"nodeType": "UncheckedBlock",
												"src": "3277:309:21",
												"statements": [
													{
														"assignments": [
															2635
														],
														"declarations": [
															{
																"constant": false,
																"id": 2635,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "3310:12:21",
																"nodeType": "VariableDeclaration",
																"scope": 2666,
																"src": "3302:20:21",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2634,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3302:7:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2644,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2640,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3349:4:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$2858",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$2858",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 2639,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3341:7:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2638,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3341:7:21",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2641,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3341:13:21",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2642,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2629,
																	"src": "3356:7:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 2636,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2627,
																	"src": "3325:5:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$950",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 2637,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3331:9:21",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 927,
																"src": "3325:15:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 2643,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3325:39:21",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3302:62:21"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2648,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2646,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2635,
																		"src": "3387:12:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 2647,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2631,
																		"src": "3403:5:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3387:21:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 2649,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3410:43:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 2645,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "3379:7:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 2650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3379:75:21",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2651,
														"nodeType": "ExpressionStatement",
														"src": "3379:75:21"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2653,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2627,
																	"src": "3489:5:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$950",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 2656,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2627,
																					"src": "3519:5:21",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$950",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 2657,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3525:7:21",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 937,
																				"src": "3519:13:21",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 2658,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3533:8:21",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "3519:22:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 2659,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2629,
																			"src": "3543:7:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2662,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2660,
																				"name": "oldAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2635,
																				"src": "3552:12:21",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 2661,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2631,
																				"src": "3567:5:21",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3552:20:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 2654,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "3496:3:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 2655,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "3500:18:21",
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "3496:22:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 2663,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3496:77:21",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$950",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2652,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2809,
																"src": "3469:19:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$950_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 2664,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3469:105:21",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2665,
														"nodeType": "ExpressionStatement",
														"src": "3469:105:21"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2624,
										"nodeType": "StructuredDocumentation",
										"src": "2991:183:21",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 2668,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "3189:21:21",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2627,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3218:5:21",
												"nodeType": "VariableDeclaration",
												"scope": 2668,
												"src": "3211:12:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$950",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2626,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2625,
														"name": "IERC20",
														"nameLocations": [
															"3211:6:21"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 950,
														"src": "3211:6:21"
													},
													"referencedDeclaration": 950,
													"src": "3211:6:21",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$950",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2629,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3233:7:21",
												"nodeType": "VariableDeclaration",
												"scope": 2668,
												"src": "3225:15:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2628,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3225:7:21",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2631,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3250:5:21",
												"nodeType": "VariableDeclaration",
												"scope": 2668,
												"src": "3242:13:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2630,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3242:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:46:21"
									},
									"returnParameters": {
										"id": 2633,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3266:0:21"
									},
									"scope": 2858,
									"src": "3180:413:21",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2714,
										"nodeType": "Block",
										"src": "3996:340:21",
										"statements": [
											{
												"assignments": [
													2680
												],
												"declarations": [
													{
														"constant": false,
														"id": 2680,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "4020:12:21",
														"nodeType": "VariableDeclaration",
														"scope": 2714,
														"src": "4007:25:21",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2679,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4007:5:21",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2689,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"expression": {
																	"id": 2683,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2672,
																	"src": "4058:5:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$950",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 2684,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4064:7:21",
																"memberName": "approve",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 937,
																"src": "4058:13:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 2685,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4072:8:21",
															"memberName": "selector",
															"nodeType": "MemberAccess",
															"src": "4058:22:21",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														{
															"id": 2686,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2674,
															"src": "4082:7:21",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2687,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2676,
															"src": "4091:5:21",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2681,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "4035:3:21",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 2682,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4039:18:21",
														"memberName": "encodeWithSelector",
														"nodeType": "MemberAccess",
														"src": "4035:22:21",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes4) pure returns (bytes memory)"
														}
													},
													"id": 2688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4035:62:21",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4007:90:21"
											},
											{
												"condition": {
													"id": 2694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4114:45:21",
													"subExpression": {
														"arguments": [
															{
																"id": 2691,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2672,
																"src": "4139:5:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$950",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 2692,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2680,
																"src": "4146:12:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$950",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 2690,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2857,
															"src": "4115:23:21",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$950_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 2693,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4115:44:21",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2713,
												"nodeType": "IfStatement",
												"src": "4110:219:21",
												"trueBody": {
													"id": 2712,
													"nodeType": "Block",
													"src": "4161:168:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2696,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2672,
																		"src": "4196:5:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$950",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"expression": {
																						"id": 2699,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2672,
																						"src": "4226:5:21",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$950",
																							"typeString": "contract IERC20"
																						}
																					},
																					"id": 2700,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "4232:7:21",
																					"memberName": "approve",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 937,
																					"src": "4226:13:21",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																						"typeString": "function (address,uint256) external returns (bool)"
																					}
																				},
																				"id": 2701,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4240:8:21",
																				"memberName": "selector",
																				"nodeType": "MemberAccess",
																				"src": "4226:22:21",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			},
																			{
																				"id": 2702,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2674,
																				"src": "4250:7:21",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"hexValue": "30",
																				"id": 2703,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4259:1:21",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"expression": {
																				"id": 2697,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4203:3:21",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 2698,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4207:18:21",
																			"memberName": "encodeWithSelector",
																			"nodeType": "MemberAccess",
																			"src": "4203:22:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function (bytes4) pure returns (bytes memory)"
																			}
																		},
																		"id": 2704,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4203:58:21",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$950",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 2695,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2809,
																	"src": "4176:19:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$950_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 2705,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4176:86:21",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2706,
															"nodeType": "ExpressionStatement",
															"src": "4176:86:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2708,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2672,
																		"src": "4297:5:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$950",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 2709,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2680,
																		"src": "4304:12:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$950",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 2707,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2809,
																	"src": "4277:19:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$950_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 2710,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4277:40:21",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2711,
															"nodeType": "ExpressionStatement",
															"src": "4277:40:21"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2669,
										"nodeType": "StructuredDocumentation",
										"src": "3601:312:21",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 2715,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3928:12:21",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2672,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3948:5:21",
												"nodeType": "VariableDeclaration",
												"scope": 2715,
												"src": "3941:12:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$950",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2671,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2670,
														"name": "IERC20",
														"nameLocations": [
															"3941:6:21"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 950,
														"src": "3941:6:21"
													},
													"referencedDeclaration": 950,
													"src": "3941:6:21",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$950",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2674,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3963:7:21",
												"nodeType": "VariableDeclaration",
												"scope": 2715,
												"src": "3955:15:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3955:7:21",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2676,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3980:5:21",
												"nodeType": "VariableDeclaration",
												"scope": 2715,
												"src": "3972:13:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3972:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3940:46:21"
									},
									"returnParameters": {
										"id": 2678,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3996:0:21"
									},
									"scope": 2858,
									"src": "3919:417:21",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2771,
										"nodeType": "Block",
										"src": "4718:262:21",
										"statements": [
											{
												"assignments": [
													2737
												],
												"declarations": [
													{
														"constant": false,
														"id": 2737,
														"mutability": "mutable",
														"name": "nonceBefore",
														"nameLocation": "4737:11:21",
														"nodeType": "VariableDeclaration",
														"scope": 2771,
														"src": "4729:19:21",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2736,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4729:7:21",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2742,
												"initialValue": {
													"arguments": [
														{
															"id": 2740,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2721,
															"src": "4764:5:21",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2738,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2719,
															"src": "4751:5:21",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$986",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 2739,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4757:6:21",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 979,
														"src": "4751:12:21",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 2741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4751:19:21",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4729:41:21"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2746,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2721,
															"src": "4794:5:21",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2747,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2723,
															"src": "4801:7:21",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2748,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2725,
															"src": "4810:5:21",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2749,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2727,
															"src": "4817:8:21",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2750,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2729,
															"src": "4827:1:21",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 2751,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2731,
															"src": "4830:1:21",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2752,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2733,
															"src": "4833:1:21",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 2743,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2719,
															"src": "4781:5:21",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$986",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 2745,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4787:6:21",
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 971,
														"src": "4781:12:21",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 2753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4781:54:21",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2754,
												"nodeType": "ExpressionStatement",
												"src": "4781:54:21"
											},
											{
												"assignments": [
													2756
												],
												"declarations": [
													{
														"constant": false,
														"id": 2756,
														"mutability": "mutable",
														"name": "nonceAfter",
														"nameLocation": "4854:10:21",
														"nodeType": "VariableDeclaration",
														"scope": 2771,
														"src": "4846:18:21",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2755,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4846:7:21",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2761,
												"initialValue": {
													"arguments": [
														{
															"id": 2759,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2721,
															"src": "4880:5:21",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2757,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2719,
															"src": "4867:5:21",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$986",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 2758,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4873:6:21",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 979,
														"src": "4867:12:21",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 2760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4867:19:21",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4846:40:21"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2767,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2763,
																"name": "nonceAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2756,
																"src": "4905:10:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2766,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2764,
																	"name": "nonceBefore",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2737,
																	"src": "4919:11:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2765,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4933:1:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "4919:15:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4905:29:21",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a207065726d697420646964206e6f742073756363656564",
															"id": 2768,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4936:35:21",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															},
															"value": "SafeERC20: permit did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															}
														],
														"id": 2762,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4897:7:21",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:75:21",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2770,
												"nodeType": "ExpressionStatement",
												"src": "4897:75:21"
											}
										]
									},
									"documentation": {
										"id": 2716,
										"nodeType": "StructuredDocumentation",
										"src": "4344:144:21",
										"text": " @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n Revert on invalid signature."
									},
									"id": 2772,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safePermit",
									"nameLocation": "4503:10:21",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2719,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4537:5:21",
												"nodeType": "VariableDeclaration",
												"scope": 2772,
												"src": "4524:18:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Permit_$986",
													"typeString": "contract IERC20Permit"
												},
												"typeName": {
													"id": 2718,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2717,
														"name": "IERC20Permit",
														"nameLocations": [
															"4524:12:21"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 986,
														"src": "4524:12:21"
													},
													"referencedDeclaration": 986,
													"src": "4524:12:21",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Permit_$986",
														"typeString": "contract IERC20Permit"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2721,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4561:5:21",
												"nodeType": "VariableDeclaration",
												"scope": 2772,
												"src": "4553:13:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4553:7:21",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2723,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4585:7:21",
												"nodeType": "VariableDeclaration",
												"scope": 2772,
												"src": "4577:15:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2722,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4577:7:21",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2725,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4611:5:21",
												"nodeType": "VariableDeclaration",
												"scope": 2772,
												"src": "4603:13:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4603:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2727,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "4635:8:21",
												"nodeType": "VariableDeclaration",
												"scope": 2772,
												"src": "4627:16:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4627:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2729,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "4660:1:21",
												"nodeType": "VariableDeclaration",
												"scope": 2772,
												"src": "4654:7:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2728,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4654:5:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2731,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4680:1:21",
												"nodeType": "VariableDeclaration",
												"scope": 2772,
												"src": "4672:9:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2730,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4672:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2733,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "4700:1:21",
												"nodeType": "VariableDeclaration",
												"scope": 2772,
												"src": "4692:9:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2732,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4692:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4513:195:21"
									},
									"returnParameters": {
										"id": 2735,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4718:0:21"
									},
									"scope": 2858,
									"src": "4494:486:21",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2808,
										"nodeType": "Block",
										"src": "5441:579:21",
										"statements": [
											{
												"assignments": [
													2782
												],
												"declarations": [
													{
														"constant": false,
														"id": 2782,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5808:10:21",
														"nodeType": "VariableDeclaration",
														"scope": 2808,
														"src": "5795:23:21",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2781,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5795:5:21",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2791,
												"initialValue": {
													"arguments": [
														{
															"id": 2788,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2778,
															"src": "5849:4:21",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 2789,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5855:34:21",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2785,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2776,
																	"src": "5829:5:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$950",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$950",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 2784,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5821:7:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2783,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5821:7:21",
																	"typeDescriptions": {}
																}
															},
															"id": 2786,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5821:14:21",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2787,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5836:12:21",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2139,
														"src": "5821:27:21",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 2790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5821:69:21",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5795:95:21"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2804,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2796,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2793,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2782,
																		"src": "5909:10:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2794,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5920:6:21",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "5909:17:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2795,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5930:1:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5909:22:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 2799,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2782,
																		"src": "5946:10:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"components": [
																			{
																				"id": 2801,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5959:4:21",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				},
																				"typeName": {
																					"id": 2800,
																					"name": "bool",
																					"nodeType": "ElementaryTypeName",
																					"src": "5959:4:21",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"id": 2802,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5958:6:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bool_$",
																			"typeString": "type(bool)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_type$_t_bool_$",
																			"typeString": "type(bool)"
																		}
																	],
																	"expression": {
																		"id": 2797,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "5935:3:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 2798,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "5939:6:21",
																	"memberName": "decode",
																	"nodeType": "MemberAccess",
																	"src": "5935:10:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2803,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5935:30:21",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5909:56:21",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
															"id": 2805,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5967:44:21",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
															},
															"value": "SafeERC20: ERC20 operation did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
															}
														],
														"id": 2792,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5901:7:21",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5901:111:21",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2807,
												"nodeType": "ExpressionStatement",
												"src": "5901:111:21"
											}
										]
									},
									"documentation": {
										"id": 2773,
										"nodeType": "StructuredDocumentation",
										"src": "4988:377:21",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 2809,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "5380:19:21",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2776,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5407:5:21",
												"nodeType": "VariableDeclaration",
												"scope": 2809,
												"src": "5400:12:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$950",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2775,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2774,
														"name": "IERC20",
														"nameLocations": [
															"5400:6:21"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 950,
														"src": "5400:6:21"
													},
													"referencedDeclaration": 950,
													"src": "5400:6:21",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$950",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2778,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5427:4:21",
												"nodeType": "VariableDeclaration",
												"scope": 2809,
												"src": "5414:17:21",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2777,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5414:5:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5399:33:21"
									},
									"returnParameters": {
										"id": 2780,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5441:0:21"
									},
									"scope": 2858,
									"src": "5371:649:21",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2856,
										"nodeType": "Block",
										"src": "6620:513:21",
										"statements": [
											{
												"assignments": [
													2821,
													2823
												],
												"declarations": [
													{
														"constant": false,
														"id": 2821,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6926:7:21",
														"nodeType": "VariableDeclaration",
														"scope": 2856,
														"src": "6921:12:21",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2820,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6921:4:21",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2823,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6948:10:21",
														"nodeType": "VariableDeclaration",
														"scope": 2856,
														"src": "6935:23:21",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2822,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6935:5:21",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2831,
												"initialValue": {
													"arguments": [
														{
															"id": 2829,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2815,
															"src": "6982:4:21",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2826,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2813,
																	"src": "6970:5:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$950",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$950",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 2825,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6962:7:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2824,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6962:7:21",
																	"typeDescriptions": {}
																}
															},
															"id": 2827,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6962:14:21",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2828,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6977:4:21",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "6962:19:21",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6962:25:21",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6920:67:21"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 2846,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2832,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2821,
															"src": "7018:7:21",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 2844,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2836,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 2833,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2823,
																				"src": "7030:10:21",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 2834,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "7041:6:21",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "7030:17:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2835,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7051:1:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "7030:22:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 2839,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2823,
																				"src": "7067:10:21",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 2841,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "7080:4:21",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 2840,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "7080:4:21",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 2842,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "7079:6:21",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 2837,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "7056:3:21",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 2838,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "7060:6:21",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "7056:10:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2843,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7056:30:21",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "7030:56:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 2845,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "7029:58:21",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "7018:69:21",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2851,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2813,
																		"src": "7118:5:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$950",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$950",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 2850,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7110:7:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2849,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7110:7:21",
																		"typeDescriptions": {}
																	}
																},
																"id": 2852,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7110:14:21",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 2847,
																"name": "Address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2379,
																"src": "7091:7:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Address_$2379_$",
																	"typeString": "type(library Address)"
																}
															},
															"id": 2848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7099:10:21",
															"memberName": "isContract",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2067,
															"src": "7091:18:21",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																"typeString": "function (address) view returns (bool)"
															}
														},
														"id": 2853,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7091:34:21",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "7018:107:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2819,
												"id": 2855,
												"nodeType": "Return",
												"src": "6998:127:21"
											}
										]
									},
									"documentation": {
										"id": 2810,
										"nodeType": "StructuredDocumentation",
										"src": "6028:497:21",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 2857,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "6540:23:21",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2813,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6571:5:21",
												"nodeType": "VariableDeclaration",
												"scope": 2857,
												"src": "6564:12:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$950",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2812,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2811,
														"name": "IERC20",
														"nameLocations": [
															"6564:6:21"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 950,
														"src": "6564:6:21"
													},
													"referencedDeclaration": 950,
													"src": "6564:6:21",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$950",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2815,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6591:4:21",
												"nodeType": "VariableDeclaration",
												"scope": 2857,
												"src": "6578:17:21",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2814,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6578:5:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6563:33:21"
									},
									"returnParameters": {
										"id": 2819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2818,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2857,
												"src": "6614:4:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2817,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6614:4:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6613:6:21"
									},
									"scope": 2858,
									"src": "6531:602:21",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2859,
							"src": "778:6358:21",
							"usedErrors": []
						}
					],
					"src": "118:7020:21"
				},
				"id": 21
			},
			"libraries/TimeFee.sol": {
				"ast": {
					"absolutePath": "libraries/TimeFee.sol",
					"exportedSymbols": {
						"TimeFee": [
							2907
						]
					},
					"id": 2908,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2860,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "31:24:22"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TimeFee",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 2907,
							"linearizedBaseContracts": [
								2907
							],
							"name": "TimeFee",
							"nameLocation": "67:7:22",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2905,
										"nodeType": "Block",
										"src": "324:356:22",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2869,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2867,
															"name": "stableAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2862,
															"src": "338:12:22",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"hexValue": "313030",
															"id": 2868,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "352:9:22",
															"subdenomination": "ether",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100000000000000000000_by_1",
																"typeString": "int_const 100000000000000000000"
															},
															"value": "100"
														},
														"src": "338:23:22",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2872,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2870,
															"name": "stableAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2862,
															"src": "365:12:22",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "31303030",
															"id": 2871,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "378:10:22",
															"subdenomination": "ether",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000"
															},
															"value": "1000"
														},
														"src": "365:23:22",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "338:50:22",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 2885,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2881,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2879,
																"name": "stableAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2862,
																"src": "447:12:22",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "31303030",
																"id": 2880,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "461:10:22",
																"subdenomination": "ether",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000000"
																},
																"value": "1000"
															},
															"src": "447:24:22",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2884,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2882,
																"name": "stableAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2862,
																"src": "475:12:22",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"hexValue": "3130303030",
																"id": 2883,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "488:11:22",
																"subdenomination": "ether",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000_by_1",
																	"typeString": "int_const 10000000000000000000000"
																},
																"value": "10000"
															},
															"src": "475:24:22",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "447:52:22",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2893,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2891,
																"name": "stableAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2862,
																"src": "558:12:22",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "3130303030",
																"id": 2892,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "572:11:22",
																"subdenomination": "ether",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000_by_1",
																	"typeString": "int_const 10000000000000000000000"
																},
																"value": "10000"
															},
															"src": "558:25:22",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 2901,
															"nodeType": "Block",
															"src": "638:35:22",
															"statements": [
																{
																	"expression": {
																		"hexValue": "30",
																		"id": 2899,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "660:1:22",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"functionReturnParameters": 2866,
																	"id": 2900,
																	"nodeType": "Return",
																	"src": "653:8:22"
																}
															]
														},
														"id": 2902,
														"nodeType": "IfStatement",
														"src": "555:118:22",
														"trueBody": {
															"id": 2898,
															"nodeType": "Block",
															"src": "584:50:22",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2896,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2894,
																			"name": "stableAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2862,
																			"src": "606:12:22",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"hexValue": "343030",
																			"id": 2895,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "619:3:22",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_400_by_1",
																				"typeString": "int_const 400"
																			},
																			"value": "400"
																		},
																		"src": "606:16:22",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2866,
																	"id": 2897,
																	"nodeType": "Return",
																	"src": "599:23:22"
																}
															]
														}
													},
													"id": 2903,
													"nodeType": "IfStatement",
													"src": "444:229:22",
													"trueBody": {
														"id": 2890,
														"nodeType": "Block",
														"src": "500:50:22",
														"statements": [
															{
																"expression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2888,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2886,
																		"name": "stableAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2862,
																		"src": "522:12:22",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "323030",
																		"id": 2887,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "535:3:22",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		"value": "200"
																	},
																	"src": "522:16:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 2866,
																"id": 2889,
																"nodeType": "Return",
																"src": "515:23:22"
															}
														]
													}
												},
												"id": 2904,
												"nodeType": "IfStatement",
												"src": "335:338:22",
												"trueBody": {
													"id": 2878,
													"nodeType": "Block",
													"src": "389:50:22",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2876,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2874,
																	"name": "stableAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2862,
																	"src": "411:12:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 2875,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "424:3:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "411:16:22",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2866,
															"id": 2877,
															"nodeType": "Return",
															"src": "404:23:22"
														}
													]
												}
											}
										]
									},
									"id": 2906,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fee",
									"nameLocation": "259:3:22",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2862,
												"mutability": "mutable",
												"name": "stableAmount",
												"nameLocation": "271:12:22",
												"nodeType": "VariableDeclaration",
												"scope": 2906,
												"src": "263:20:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2861,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "263:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "262:22:22"
									},
									"returnParameters": {
										"id": 2866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2865,
												"mutability": "mutable",
												"name": "stableFee",
												"nameLocation": "314:9:22",
												"nodeType": "VariableDeclaration",
												"scope": 2906,
												"src": "306:17:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2864,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "306:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "305:19:22"
									},
									"scope": 2907,
									"src": "250:430:22",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2908,
							"src": "59:624:22",
							"usedErrors": []
						}
					],
					"src": "31:652:22"
				},
				"id": 22
			}
		}
	}
}